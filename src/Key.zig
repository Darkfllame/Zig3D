const c = @cImport({
    @cDefine("__gl_h_", "");
    @cInclude("GLFW/glfw3.h");
});

pub const Key = enum(u32) {
    pub const Action = enum(u32) {
        Pressed = @bitCast(c.GLFW_PRESS),
        Released = @bitCast(c.GLFW_RELEASE),
        Repeat = @bitCast(c.GLFW_REPEAT),
    };
    pub const Mods = packed struct {
        Shift: bool = false,
        Control: bool = false,
        Alt: bool = false,
        Super: bool = false,
        CapsLock: bool = false,
        NumLock: bool = false,
    };

    Unknown = @bitCast(c.GLFW_KEY_UNKNOWN),
    Space = @bitCast(c.GLFW_KEY_SPACE),
    Apostrophe = @bitCast(c.GLFW_KEY_APOSTROPHE),
    Comma = @bitCast(c.GLFW_KEY_COMMA),
    Minus = @bitCast(c.GLFW_KEY_MINUS),
    Period = @bitCast(c.GLFW_KEY_PERIOD),
    Slash = @bitCast(c.GLFW_KEY_SLASH),
    @"0" = @bitCast(c.GLFW_KEY_0),
    @"1" = @bitCast(c.GLFW_KEY_1),
    @"2" = @bitCast(c.GLFW_KEY_2),
    @"3" = @bitCast(c.GLFW_KEY_3),
    @"4" = @bitCast(c.GLFW_KEY_4),
    @"5" = @bitCast(c.GLFW_KEY_5),
    @"6" = @bitCast(c.GLFW_KEY_6),
    @"7" = @bitCast(c.GLFW_KEY_7),
    @"8" = @bitCast(c.GLFW_KEY_8),
    @"9" = @bitCast(c.GLFW_KEY_9),
    Semicolon = @bitCast(c.GLFW_KEY_SEMICOLON),
    Equal = @bitCast(c.GLFW_KEY_EQUAL),
    A = @bitCast(c.GLFW_KEY_A),
    B = @bitCast(c.GLFW_KEY_B),
    C = @bitCast(c.GLFW_KEY_C),
    D = @bitCast(c.GLFW_KEY_D),
    E = @bitCast(c.GLFW_KEY_E),
    F = @bitCast(c.GLFW_KEY_F),
    G = @bitCast(c.GLFW_KEY_G),
    H = @bitCast(c.GLFW_KEY_H),
    I = @bitCast(c.GLFW_KEY_I),
    J = @bitCast(c.GLFW_KEY_J),
    K = @bitCast(c.GLFW_KEY_K),
    L = @bitCast(c.GLFW_KEY_L),
    M = @bitCast(c.GLFW_KEY_M),
    N = @bitCast(c.GLFW_KEY_N),
    O = @bitCast(c.GLFW_KEY_O),
    P = @bitCast(c.GLFW_KEY_P),
    Q = @bitCast(c.GLFW_KEY_Q),
    R = @bitCast(c.GLFW_KEY_R),
    S = @bitCast(c.GLFW_KEY_S),
    T = @bitCast(c.GLFW_KEY_T),
    U = @bitCast(c.GLFW_KEY_U),
    V = @bitCast(c.GLFW_KEY_V),
    W = @bitCast(c.GLFW_KEY_W),
    X = @bitCast(c.GLFW_KEY_X),
    Y = @bitCast(c.GLFW_KEY_Y),
    Z = @bitCast(c.GLFW_KEY_Z),
    LeftBracket = @bitCast(c.GLFW_KEY_LEFT_BRACKET),
    Backslash = @bitCast(c.GLFW_KEY_BACKSLASH),
    RightBracket = @bitCast(c.GLFW_KEY_RIGHT_BRACKET),
    GraveAccent = @bitCast(c.GLFW_KEY_GRAVE_ACCENT),
    World1 = @bitCast(c.GLFW_KEY_WORLD_1),
    World2 = @bitCast(c.GLFW_KEY_WORLD_2),
    Escape = @bitCast(c.GLFW_KEY_ESCAPE),
    Enter = @bitCast(c.GLFW_KEY_ENTER),
    Tab = @bitCast(c.GLFW_KEY_TAB),
    Backspace = @bitCast(c.GLFW_KEY_BACKSPACE),
    Insert = @bitCast(c.GLFW_KEY_INSERT),
    Delete = @bitCast(c.GLFW_KEY_DELETE),
    Right = @bitCast(c.GLFW_KEY_RIGHT),
    Left = @bitCast(c.GLFW_KEY_LEFT),
    Down = @bitCast(c.GLFW_KEY_DOWN),
    Up = @bitCast(c.GLFW_KEY_UP),
    PageUp = @bitCast(c.GLFW_KEY_PAGE_UP),
    PageDown = @bitCast(c.GLFW_KEY_PAGE_DOWN),
    Home = @bitCast(c.GLFW_KEY_HOME),
    End = @bitCast(c.GLFW_KEY_END),
    CapsLock = @bitCast(c.GLFW_KEY_CAPS_LOCK),
    ScrollLock = @bitCast(c.GLFW_KEY_SCROLL_LOCK),
    NumLock = @bitCast(c.GLFW_KEY_NUM_LOCK),
    PrintScreen = @bitCast(c.GLFW_KEY_PRINT_SCREEN),
    Pause = @bitCast(c.GLFW_KEY_PAUSE),
    F1 = @bitCast(c.GLFW_KEY_F1),
    F2 = @bitCast(c.GLFW_KEY_F2),
    F3 = @bitCast(c.GLFW_KEY_F3),
    F4 = @bitCast(c.GLFW_KEY_F4),
    F5 = @bitCast(c.GLFW_KEY_F5),
    F6 = @bitCast(c.GLFW_KEY_F6),
    F7 = @bitCast(c.GLFW_KEY_F7),
    F8 = @bitCast(c.GLFW_KEY_F8),
    F9 = @bitCast(c.GLFW_KEY_F9),
    F10 = @bitCast(c.GLFW_KEY_F10),
    F11 = @bitCast(c.GLFW_KEY_F11),
    F12 = @bitCast(c.GLFW_KEY_F12),
    F13 = @bitCast(c.GLFW_KEY_F13),
    F14 = @bitCast(c.GLFW_KEY_F14),
    F15 = @bitCast(c.GLFW_KEY_F15),
    F16 = @bitCast(c.GLFW_KEY_F16),
    F17 = @bitCast(c.GLFW_KEY_F17),
    F18 = @bitCast(c.GLFW_KEY_F18),
    F19 = @bitCast(c.GLFW_KEY_F19),
    F20 = @bitCast(c.GLFW_KEY_F20),
    F21 = @bitCast(c.GLFW_KEY_F21),
    F22 = @bitCast(c.GLFW_KEY_F22),
    F23 = @bitCast(c.GLFW_KEY_F23),
    F24 = @bitCast(c.GLFW_KEY_F24),
    F25 = @bitCast(c.GLFW_KEY_F25),
    Kp0 = @bitCast(c.GLFW_KEY_KP_0),
    Kp1 = @bitCast(c.GLFW_KEY_KP_1),
    Kp2 = @bitCast(c.GLFW_KEY_KP_2),
    Kp3 = @bitCast(c.GLFW_KEY_KP_3),
    Kp4 = @bitCast(c.GLFW_KEY_KP_4),
    Kp5 = @bitCast(c.GLFW_KEY_KP_5),
    Kp6 = @bitCast(c.GLFW_KEY_KP_6),
    Kp7 = @bitCast(c.GLFW_KEY_KP_7),
    Kp8 = @bitCast(c.GLFW_KEY_KP_8),
    Kp9 = @bitCast(c.GLFW_KEY_KP_9),
    KpDecimal = @bitCast(c.GLFW_KEY_KP_DECIMAL),
    KpDivide = @bitCast(c.GLFW_KEY_KP_DIVIDE),
    KpMultiply = @bitCast(c.GLFW_KEY_KP_MULTIPLY),
    KpSubtract = @bitCast(c.GLFW_KEY_KP_SUBTRACT),
    KpAdd = @bitCast(c.GLFW_KEY_KP_ADD),
    KpEnter = @bitCast(c.GLFW_KEY_KP_ENTER),
    KpEqual = @bitCast(c.GLFW_KEY_KP_EQUAL),
    LeftShift = @bitCast(c.GLFW_KEY_LEFT_SHIFT),
    LeftControl = @bitCast(c.GLFW_KEY_LEFT_CONTROL),
    LeftAlt = @bitCast(c.GLFW_KEY_LEFT_ALT),
    LeftSuper = @bitCast(c.GLFW_KEY_LEFT_SUPER),
    RightShift = @bitCast(c.GLFW_KEY_RIGHT_SHIFT),
    RightControl = @bitCast(c.GLFW_KEY_RIGHT_CONTROL),
    RightAlt = @bitCast(c.GLFW_KEY_RIGHT_ALT),
    RightSuper = @bitCast(c.GLFW_KEY_RIGHT_SUPER),
    Menu = @bitCast(c.GLFW_KEY_MENU),
};
