//! The freetype api is going everywhere when touching FT_Face, so i'm kinda lazy.
//! So I only give you some help with error handling, giving the 'errFromC' function.
//! You can use it by doing: try ft.errFromC(ft.`some_freetype_function`()).
const c = @cImport({
    @cInclude("freetype/freetype.h");
    @cInclude("ft2build.h");
});

pub usingnamespace if (@import("build_options").exposeC) struct {
    pub const capi = c;
} else struct {
    comptime {
        @compileError("must set exposeC build argument to use freetype");
    }
};

pub const Error = error{
    Ok,
    Cannot_Open_Resource,
    Unknown_File_Format,
    Invalid_File_Format,
    Invalid_Version,
    Lower_Module_Version,
    Invalid_Argument,
    Unimplemented_Feature,
    Invalid_Table,
    Invalid_Offset,
    Array_Too_Large,
    Missing_Module,
    Missing_Property,
    Invalid_Glyph_Index,
    Invalid_Character_Code,
    Invalid_Glyph_Format,
    Cannot_Render_Glyph,
    Invalid_Outline,
    Invalid_Composite,
    Too_Many_Hints,
    Invalid_Pixel_Size,
    Invalid_SVG_Document,
    Invalid_Handle,
    Invalid_Library_Handle,
    Invalid_Driver_Handle,
    Invalid_Face_Handle,
    Invalid_Size_Handle,
    Invalid_Slot_Handle,
    Invalid_CharMap_Handle,
    Invalid_Cache_Handle,
    Invalid_Stream_Handle,
    Too_Many_Drivers,
    Too_Many_Extensions,
    Out_Of_Memory,
    Unlisted_Object,
    Cannot_Open_Stream,
    Invalid_Stream_Seek,
    Invalid_Stream_Skip,
    Invalid_Stream_Read,
    Invalid_Stream_Operation,
    Invalid_Frame_Operation,
    Nested_Frame_Access,
    Invalid_Frame_Read,
    Raster_Uninitialized,
    Raster_Corrupted,
    Raster_Overflow,
    Raster_Negative_Height,
    Too_Many_Caches,
    Invalid_Opcode,
    Too_Few_Arguments,
    Stack_Overflow,
    Code_Overflow,
    Bad_Argument,
    Divide_By_Zero,
    Invalid_Reference,
    Debug_OpCode,
    ENDF_In_Exec_Stream,
    Nested_DEFS,
    Invalid_CodeRange,
    Execution_Too_Long,
    Too_Many_Function_Defs,
    Too_Many_Instruction_Defs,
    Table_Missing,
    Horiz_Header_Missing,
    Locations_Missing,
    Name_Table_Missing,
    CMap_Table_Missing,
    Hmtx_Table_Missing,
    Post_Table_Missing,
    Invalid_Horiz_Metrics,
    Invalid_CharMap_Format,
    Invalid_PPem,
    Invalid_Vert_Metrics,
    Could_Not_Find_Context,
    Invalid_Post_Table_Format,
    Invalid_Post_Table,
    DEF_In_Glyf_Bytecode,
    Missing_Bitmap,
    Missing_SVG_Hooks,
    Syntax_Error,
    Stack_Underflow,
    Ignore,
    No_Unicode_Glyph_Name,
    Glyph_Too_Big,
    Missing_Startfont_Field,
    Missing_Font_Field,
    Missing_Size_Field,
    Missing_Fontboundingbox_Field,
    Missing_Chars_Field,
    Missing_Startchar_Field,
    Missing_Encoding_Field,
    Missing_Bbx_Field,
    Bbx_Too_Big,
    Corrupted_Font_Header,
    Corrupted_Font_Glyphs,
};

pub fn errFromC(err: c.FT_Error) Error!void {
    return switch (err) {
        //c.FT_Err_Ok => Error.Ok,
        c.FT_Err_Cannot_Open_Resource => Error.Cannot_Open_Resource,
        c.FT_Err_Unknown_File_Format => Error.Unknown_File_Format,
        c.FT_Err_Invalid_File_Format => Error.Invalid_File_Format,
        c.FT_Err_Invalid_Version => Error.Invalid_Version,
        c.FT_Err_Lower_Module_Version => Error.Lower_Module_Version,
        c.FT_Err_Invalid_Argument => Error.Invalid_Argument,
        c.FT_Err_Unimplemented_Feature => Error.Unimplemented_Feature,
        c.FT_Err_Invalid_Table => Error.Invalid_Table,
        c.FT_Err_Invalid_Offset => Error.Invalid_Offset,
        c.FT_Err_Array_Too_Large => Error.Array_Too_Large,
        c.FT_Err_Missing_Module => Error.Missing_Module,
        c.FT_Err_Missing_Property => Error.Missing_Property,
        c.FT_Err_Invalid_Glyph_Index => Error.Invalid_Glyph_Index,
        c.FT_Err_Invalid_Character_Code => Error.Invalid_Character_Code,
        c.FT_Err_Invalid_Glyph_Format => Error.Invalid_Glyph_Format,
        c.FT_Err_Cannot_Render_Glyph => Error.Cannot_Render_Glyph,
        c.FT_Err_Invalid_Outline => Error.Invalid_Outline,
        c.FT_Err_Invalid_Composite => Error.Invalid_Composite,
        c.FT_Err_Too_Many_Hints => Error.Too_Many_Hints,
        c.FT_Err_Invalid_Pixel_Size => Error.Invalid_Pixel_Size,
        c.FT_Err_Invalid_SVG_Document => Error.Invalid_SVG_Document,
        c.FT_Err_Invalid_Handle => Error.Invalid_Handle,
        c.FT_Err_Invalid_Library_Handle => Error.Invalid_Library_Handle,
        c.FT_Err_Invalid_Driver_Handle => Error.Invalid_Driver_Handle,
        c.FT_Err_Invalid_Face_Handle => Error.Invalid_Face_Handle,
        c.FT_Err_Invalid_Size_Handle => Error.Invalid_Size_Handle,
        c.FT_Err_Invalid_Slot_Handle => Error.Invalid_Slot_Handle,
        c.FT_Err_Invalid_CharMap_Handle => Error.Invalid_CharMap_Handle,
        c.FT_Err_Invalid_Cache_Handle => Error.Invalid_Cache_Handle,
        c.FT_Err_Invalid_Stream_Handle => Error.Invalid_Stream_Handle,
        c.FT_Err_Too_Many_Drivers => Error.Too_Many_Drivers,
        c.FT_Err_Too_Many_Extensions => Error.Too_Many_Extensions,
        c.FT_Err_Out_Of_Memory => Error.Out_Of_Memory,
        c.FT_Err_Unlisted_Object => Error.Unlisted_Object,
        c.FT_Err_Cannot_Open_Stream => Error.Cannot_Open_Stream,
        c.FT_Err_Invalid_Stream_Seek => Error.Invalid_Stream_Seek,
        c.FT_Err_Invalid_Stream_Skip => Error.Invalid_Stream_Skip,
        c.FT_Err_Invalid_Stream_Read => Error.Invalid_Stream_Read,
        c.FT_Err_Invalid_Stream_Operation => Error.Invalid_Stream_Operation,
        c.FT_Err_Invalid_Frame_Operation => Error.Invalid_Frame_Operation,
        c.FT_Err_Nested_Frame_Access => Error.Nested_Frame_Access,
        c.FT_Err_Invalid_Frame_Read => Error.Invalid_Frame_Read,
        c.FT_Err_Raster_Uninitialized => Error.Raster_Uninitialized,
        c.FT_Err_Raster_Corrupted => Error.Raster_Corrupted,
        c.FT_Err_Raster_Overflow => Error.Raster_Overflow,
        c.FT_Err_Raster_Negative_Height => Error.Raster_Negative_Height,
        c.FT_Err_Too_Many_Caches => Error.Too_Many_Caches,
        c.FT_Err_Invalid_Opcode => Error.Invalid_Opcode,
        c.FT_Err_Too_Few_Arguments => Error.Too_Few_Arguments,
        c.FT_Err_Stack_Overflow => Error.Stack_Overflow,
        c.FT_Err_Code_Overflow => Error.Code_Overflow,
        c.FT_Err_Bad_Argument => Error.Bad_Argument,
        c.FT_Err_Divide_By_Zero => Error.Divide_By_Zero,
        c.FT_Err_Invalid_Reference => Error.Invalid_Reference,
        c.FT_Err_Debug_OpCode => Error.Debug_OpCode,
        c.FT_Err_ENDF_In_Exec_Stream => Error.ENDF_In_Exec_Stream,
        c.FT_Err_Nested_DEFS => Error.Nested_DEFS,
        c.FT_Err_Invalid_CodeRange => Error.Invalid_CodeRange,
        c.FT_Err_Execution_Too_Long => Error.Execution_Too_Long,
        c.FT_Err_Too_Many_Function_Defs => Error.Too_Many_Function_Defs,
        c.FT_Err_Too_Many_Instruction_Defs => Error.Too_Many_Instruction_Defs,
        c.FT_Err_Table_Missing => Error.Table_Missing,
        c.FT_Err_Horiz_Header_Missing => Error.Horiz_Header_Missing,
        c.FT_Err_Locations_Missing => Error.Locations_Missing,
        c.FT_Err_Name_Table_Missing => Error.Name_Table_Missing,
        c.FT_Err_CMap_Table_Missing => Error.CMap_Table_Missing,
        c.FT_Err_Hmtx_Table_Missing => Error.Hmtx_Table_Missing,
        c.FT_Err_Post_Table_Missing => Error.Post_Table_Missing,
        c.FT_Err_Invalid_Horiz_Metrics => Error.Invalid_Horiz_Metrics,
        c.FT_Err_Invalid_CharMap_Format => Error.Invalid_CharMap_Format,
        c.FT_Err_Invalid_PPem => Error.Invalid_PPem,
        c.FT_Err_Invalid_Vert_Metrics => Error.Invalid_Vert_Metrics,
        c.FT_Err_Could_Not_Find_Context => Error.Could_Not_Find_Context,
        c.FT_Err_Invalid_Post_Table_Format => Error.Invalid_Post_Table_Format,
        c.FT_Err_Invalid_Post_Table => Error.Invalid_Post_Table,
        c.FT_Err_DEF_In_Glyf_Bytecode => Error.DEF_In_Glyf_Bytecode,
        c.FT_Err_Missing_Bitmap => Error.Missing_Bitmap,
        c.FT_Err_Missing_SVG_Hooks => Error.Missing_SVG_Hooks,
        c.FT_Err_Syntax_Error => Error.Syntax_Error,
        c.FT_Err_Stack_Underflow => Error.Stack_Underflow,
        c.FT_Err_Ignore => Error.Ignore,
        c.FT_Err_No_Unicode_Glyph_Name => Error.No_Unicode_Glyph_Name,
        c.FT_Err_Glyph_Too_Big => Error.Glyph_Too_Big,
        c.FT_Err_Missing_Startfont_Field => Error.Missing_Startfont_Field,
        c.FT_Err_Missing_Font_Field => Error.Missing_Font_Field,
        c.FT_Err_Missing_Size_Field => Error.Missing_Size_Field,
        c.FT_Err_Missing_Fontboundingbox_Field => Error.Missing_Fontboundingbox_Field,
        c.FT_Err_Missing_Chars_Field => Error.Missing_Chars_Field,
        c.FT_Err_Missing_Startchar_Field => Error.Missing_Startchar_Field,
        c.FT_Err_Missing_Encoding_Field => Error.Missing_Encoding_Field,
        c.FT_Err_Missing_Bbx_Field => Error.Missing_Bbx_Field,
        c.FT_Err_Bbx_Too_Big => Error.Bbx_Too_Big,
        c.FT_Err_Corrupted_Font_Header => Error.Corrupted_Font_Header,
        c.FT_Err_Corrupted_Font_Glyphs => Error.Corrupted_Font_Glyphs,
        else => {},
    };
}
