pub const gladGLversionStruct = extern struct {
    major: c_int = @import("std").mem.zeroes(c_int),
    minor: c_int = @import("std").mem.zeroes(c_int),
};
pub const GLADloadproc = ?*const fn ([*c]const u8) callconv(.C) ?*anyopaque;
pub extern var GLVersion: gladGLversionStruct;
pub extern fn gladLoadGL() c_int;
pub extern fn gladLoadGLLoader(loader: GLADloadproc) c_int;
pub extern fn gladLoadGLES1Loader(loader: GLADloadproc) c_int;
pub extern fn gladLoadGLES2Loader(loader: GLADloadproc) c_int;
pub extern fn gladLoadGLSC2Loader(loader: GLADloadproc) c_int;
pub const GLenum = c_uint;
pub const GLboolean = u8;
pub const GLbitfield = c_uint;
pub const GLvoid = anyopaque;
pub const GLbyte = i8;
pub const GLubyte = u8;
pub const GLshort = i16;
pub const GLushort = u16;
pub const GLint = c_int;
pub const GLuint = c_uint;
pub const GLclampx = i32;
pub const GLsizei = c_int;
pub const GLfloat = f32;
pub const GLclampf = f32;
pub const GLdouble = f64;
pub const GLclampd = f64;
pub const GLeglClientBufferEXT = ?*anyopaque;
pub const GLeglImageOES = ?*anyopaque;
pub const GLchar = u8;
pub const GLcharARB = u8;
pub const GLhandleARB = c_uint;
pub const GLhalf = u16;
pub const GLhalfARB = u16;
pub const GLfixed = i32;
pub const GLintptr = isize;
pub const GLintptrARB = isize;
pub const GLsizeiptr = c_longlong;
pub const GLsizeiptrARB = c_longlong;
pub const GLint64 = i64;
pub const GLint64EXT = i64;
pub const GLuint64 = u64;
pub const GLuint64EXT = u64;
pub const GLsync = ?*opaque {};
pub const _cl_context = opaque {};
pub const _cl_event = opaque {};
pub const GLDEBUGPROC = ?*const fn (source: GLenum, @"type": GLenum, id: GLuint, severity: GLenum, length: GLsizei, message: [*c]const GLchar, userParam: ?*const anyopaque) callconv(.C) void;
pub const GLDEBUGPROCARB = ?*const fn (source: GLenum, @"type": GLenum, id: GLuint, severity: GLenum, length: GLsizei, message: [*c]const GLchar, userParam: ?*const anyopaque) callconv(.C) void;
pub const GLDEBUGPROCKHR = ?*const fn (source: GLenum, @"type": GLenum, id: GLuint, severity: GLenum, length: GLsizei, message: [*c]const GLchar, userParam: ?*const anyopaque) callconv(.C) void;
pub const GLDEBUGPROCAMD = ?*const fn (id: GLuint, category: GLenum, severity: GLenum, length: GLsizei, message: [*c]const GLchar, userParam: ?*anyopaque) callconv(.C) void;
pub const GLhalfNV = c_ushort;
pub const GLvdpauSurfaceNV = GLintptr;
pub const GLVULKANPROCNV = ?*const fn () callconv(.C) void;
pub extern var GLAD_GL_VERSION_1_0: c_int;
pub extern var glad_glCullFace: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glFrontFace: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glHint: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var glad_glLineWidth: ?*const fn (GLfloat) callconv(.C) void;
pub extern var glad_glPointSize: ?*const fn (GLfloat) callconv(.C) void;
pub extern var glad_glPolygonMode: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var glad_glScissor: ?*const fn (GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glTexParameterf: ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glTexParameterfv: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glTexParameteri: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var glad_glTexParameteriv: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glTexImage1D: ?*const fn (GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glTexImage2D: ?*const fn (GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glDrawBuffer: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glClear: ?*const fn (GLbitfield) callconv(.C) void;
pub extern var glad_glClearColor: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glClearStencil: ?*const fn (GLint) callconv(.C) void;
pub extern var glad_glClearDepth: ?*const fn (GLdouble) callconv(.C) void;
pub extern var glad_glStencilMask: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glColorMask: ?*const fn (GLboolean, GLboolean, GLboolean, GLboolean) callconv(.C) void;
pub extern var glad_glDepthMask: ?*const fn (GLboolean) callconv(.C) void;
pub extern var glad_glDisable: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glEnable: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glFinish: ?*const fn () callconv(.C) void;
pub extern var glad_glFlush: ?*const fn () callconv(.C) void;
pub extern var glad_glBlendFunc: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var glad_glLogicOp: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glStencilFunc: ?*const fn (GLenum, GLint, GLuint) callconv(.C) void;
pub extern var glad_glStencilOp: ?*const fn (GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var glad_glDepthFunc: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glPixelStoref: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glPixelStorei: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var glad_glReadBuffer: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glReadPixels: ?*const fn (GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetBooleanv: ?*const fn (GLenum, [*c]GLboolean) callconv(.C) void;
pub extern var glad_glGetDoublev: ?*const fn (GLenum, [*c]GLdouble) callconv(.C) void;
pub extern var glad_glGetError: ?*const fn () callconv(.C) GLenum;
pub extern var glad_glGetFloatv: ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetIntegerv: ?*const fn (GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetString: ?*const fn (GLenum) callconv(.C) [*c]const GLubyte;
pub extern var glad_glGetTexImage: ?*const fn (GLenum, GLint, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetTexParameterfv: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetTexParameteriv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetTexLevelParameterfv: ?*const fn (GLenum, GLint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetTexLevelParameteriv: ?*const fn (GLenum, GLint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glIsEnabled: ?*const fn (GLenum) callconv(.C) GLboolean;
pub extern var glad_glDepthRange: ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glViewport: ?*const fn (GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glNewList: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var glad_glEndList: ?*const fn () callconv(.C) void;
pub extern var glad_glCallList: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glCallLists: ?*const fn (GLsizei, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glDeleteLists: ?*const fn (GLuint, GLsizei) callconv(.C) void;
pub extern var glad_glGenLists: ?*const fn (GLsizei) callconv(.C) GLuint;
pub extern var glad_glListBase: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glBegin: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glBitmap: ?*const fn (GLsizei, GLsizei, GLfloat, GLfloat, GLfloat, GLfloat, [*c]const GLubyte) callconv(.C) void;
pub extern var glad_glColor3b: ?*const fn (GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var glad_glColor3bv: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var glad_glColor3d: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glColor3dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glColor3f: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glColor3fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glColor3i: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glColor3iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var glad_glColor3s: ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glColor3sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var glad_glColor3ub: ?*const fn (GLubyte, GLubyte, GLubyte) callconv(.C) void;
pub extern var glad_glColor3ubv: ?*const fn ([*c]const GLubyte) callconv(.C) void;
pub extern var glad_glColor3ui: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glColor3uiv: ?*const fn ([*c]const GLuint) callconv(.C) void;
pub extern var glad_glColor3us: ?*const fn (GLushort, GLushort, GLushort) callconv(.C) void;
pub extern var glad_glColor3usv: ?*const fn ([*c]const GLushort) callconv(.C) void;
pub extern var glad_glColor4b: ?*const fn (GLbyte, GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var glad_glColor4bv: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var glad_glColor4d: ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glColor4dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glColor4f: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glColor4fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glColor4i: ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glColor4iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var glad_glColor4s: ?*const fn (GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glColor4sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var glad_glColor4ub: ?*const fn (GLubyte, GLubyte, GLubyte, GLubyte) callconv(.C) void;
pub extern var glad_glColor4ubv: ?*const fn ([*c]const GLubyte) callconv(.C) void;
pub extern var glad_glColor4ui: ?*const fn (GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glColor4uiv: ?*const fn ([*c]const GLuint) callconv(.C) void;
pub extern var glad_glColor4us: ?*const fn (GLushort, GLushort, GLushort, GLushort) callconv(.C) void;
pub extern var glad_glColor4usv: ?*const fn ([*c]const GLushort) callconv(.C) void;
pub extern var glad_glEdgeFlag: ?*const fn (GLboolean) callconv(.C) void;
pub extern var glad_glEdgeFlagv: ?*const fn ([*c]const GLboolean) callconv(.C) void;
pub extern var glad_glEnd: ?*const fn () callconv(.C) void;
pub extern var glad_glIndexd: ?*const fn (GLdouble) callconv(.C) void;
pub extern var glad_glIndexdv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glIndexf: ?*const fn (GLfloat) callconv(.C) void;
pub extern var glad_glIndexfv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glIndexi: ?*const fn (GLint) callconv(.C) void;
pub extern var glad_glIndexiv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var glad_glIndexs: ?*const fn (GLshort) callconv(.C) void;
pub extern var glad_glIndexsv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var glad_glNormal3b: ?*const fn (GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var glad_glNormal3bv: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var glad_glNormal3d: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glNormal3dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glNormal3f: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glNormal3fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glNormal3i: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glNormal3iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var glad_glNormal3s: ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glNormal3sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var glad_glRasterPos2d: ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glRasterPos2dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glRasterPos2f: ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glRasterPos2fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glRasterPos2i: ?*const fn (GLint, GLint) callconv(.C) void;
pub extern var glad_glRasterPos2iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var glad_glRasterPos2s: ?*const fn (GLshort, GLshort) callconv(.C) void;
pub extern var glad_glRasterPos2sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var glad_glRasterPos3d: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glRasterPos3dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glRasterPos3f: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glRasterPos3fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glRasterPos3i: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glRasterPos3iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var glad_glRasterPos3s: ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glRasterPos3sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var glad_glRasterPos4d: ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glRasterPos4dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glRasterPos4f: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glRasterPos4fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glRasterPos4i: ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glRasterPos4iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var glad_glRasterPos4s: ?*const fn (GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glRasterPos4sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var glad_glRectd: ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glRectdv: ?*const fn ([*c]const GLdouble, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glRectf: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glRectfv: ?*const fn ([*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glRecti: ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glRectiv: ?*const fn ([*c]const GLint, [*c]const GLint) callconv(.C) void;
pub extern var glad_glRects: ?*const fn (GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glRectsv: ?*const fn ([*c]const GLshort, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glTexCoord1d: ?*const fn (GLdouble) callconv(.C) void;
pub extern var glad_glTexCoord1dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glTexCoord1f: ?*const fn (GLfloat) callconv(.C) void;
pub extern var glad_glTexCoord1fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glTexCoord1i: ?*const fn (GLint) callconv(.C) void;
pub extern var glad_glTexCoord1iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var glad_glTexCoord1s: ?*const fn (GLshort) callconv(.C) void;
pub extern var glad_glTexCoord1sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var glad_glTexCoord2d: ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glTexCoord2dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glTexCoord2f: ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glTexCoord2fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glTexCoord2i: ?*const fn (GLint, GLint) callconv(.C) void;
pub extern var glad_glTexCoord2iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var glad_glTexCoord2s: ?*const fn (GLshort, GLshort) callconv(.C) void;
pub extern var glad_glTexCoord2sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var glad_glTexCoord3d: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glTexCoord3dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glTexCoord3f: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glTexCoord3fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glTexCoord3i: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glTexCoord3iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var glad_glTexCoord3s: ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glTexCoord3sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var glad_glTexCoord4d: ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glTexCoord4dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glTexCoord4f: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glTexCoord4fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glTexCoord4i: ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glTexCoord4iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var glad_glTexCoord4s: ?*const fn (GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glTexCoord4sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertex2d: ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glVertex2dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertex2f: ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glVertex2fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glVertex2i: ?*const fn (GLint, GLint) callconv(.C) void;
pub extern var glad_glVertex2iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var glad_glVertex2s: ?*const fn (GLshort, GLshort) callconv(.C) void;
pub extern var glad_glVertex2sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertex3d: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glVertex3dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertex3f: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glVertex3fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glVertex3i: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glVertex3iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var glad_glVertex3s: ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glVertex3sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertex4d: ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glVertex4dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertex4f: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glVertex4fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glVertex4i: ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glVertex4iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var glad_glVertex4s: ?*const fn (GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glVertex4sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var glad_glClipPlane: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glColorMaterial: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var glad_glFogf: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glFogfv: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glFogi: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var glad_glFogiv: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glLightf: ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glLightfv: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glLighti: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var glad_glLightiv: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glLightModelf: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glLightModelfv: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glLightModeli: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var glad_glLightModeliv: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glLineStipple: ?*const fn (GLint, GLushort) callconv(.C) void;
pub extern var glad_glMaterialf: ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glMaterialfv: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMateriali: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var glad_glMaterialiv: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glPolygonStipple: ?*const fn ([*c]const GLubyte) callconv(.C) void;
pub extern var glad_glShadeModel: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glTexEnvf: ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glTexEnvfv: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glTexEnvi: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var glad_glTexEnviv: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glTexGend: ?*const fn (GLenum, GLenum, GLdouble) callconv(.C) void;
pub extern var glad_glTexGendv: ?*const fn (GLenum, GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glTexGenf: ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glTexGenfv: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glTexGeni: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var glad_glTexGeniv: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glFeedbackBuffer: ?*const fn (GLsizei, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glSelectBuffer: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glRenderMode: ?*const fn (GLenum) callconv(.C) GLint;
pub extern var glad_glInitNames: ?*const fn () callconv(.C) void;
pub extern var glad_glLoadName: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glPassThrough: ?*const fn (GLfloat) callconv(.C) void;
pub extern var glad_glPopName: ?*const fn () callconv(.C) void;
pub extern var glad_glPushName: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glClearAccum: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glClearIndex: ?*const fn (GLfloat) callconv(.C) void;
pub extern var glad_glIndexMask: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glAccum: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glPopAttrib: ?*const fn () callconv(.C) void;
pub extern var glad_glPushAttrib: ?*const fn (GLbitfield) callconv(.C) void;
pub extern var glad_glMap1d: ?*const fn (GLenum, GLdouble, GLdouble, GLint, GLint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glMap1f: ?*const fn (GLenum, GLfloat, GLfloat, GLint, GLint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMap2d: ?*const fn (GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glMap2f: ?*const fn (GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMapGrid1d: ?*const fn (GLint, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glMapGrid1f: ?*const fn (GLint, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glMapGrid2d: ?*const fn (GLint, GLdouble, GLdouble, GLint, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glMapGrid2f: ?*const fn (GLint, GLfloat, GLfloat, GLint, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glEvalCoord1d: ?*const fn (GLdouble) callconv(.C) void;
pub extern var glad_glEvalCoord1dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glEvalCoord1f: ?*const fn (GLfloat) callconv(.C) void;
pub extern var glad_glEvalCoord1fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glEvalCoord2d: ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glEvalCoord2dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glEvalCoord2f: ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glEvalCoord2fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glEvalMesh1: ?*const fn (GLenum, GLint, GLint) callconv(.C) void;
pub extern var glad_glEvalPoint1: ?*const fn (GLint) callconv(.C) void;
pub extern var glad_glEvalMesh2: ?*const fn (GLenum, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glEvalPoint2: ?*const fn (GLint, GLint) callconv(.C) void;
pub extern var glad_glAlphaFunc: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glPixelZoom: ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glPixelTransferf: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glPixelTransferi: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var glad_glPixelMapfv: ?*const fn (GLenum, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glPixelMapuiv: ?*const fn (GLenum, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glPixelMapusv: ?*const fn (GLenum, GLsizei, [*c]const GLushort) callconv(.C) void;
pub extern var glad_glCopyPixels: ?*const fn (GLint, GLint, GLsizei, GLsizei, GLenum) callconv(.C) void;
pub extern var glad_glDrawPixels: ?*const fn (GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glGetClipPlane: ?*const fn (GLenum, [*c]GLdouble) callconv(.C) void;
pub extern var glad_glGetLightfv: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetLightiv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetMapdv: ?*const fn (GLenum, GLenum, [*c]GLdouble) callconv(.C) void;
pub extern var glad_glGetMapfv: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetMapiv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetMaterialfv: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetMaterialiv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetPixelMapfv: ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetPixelMapuiv: ?*const fn (GLenum, [*c]GLuint) callconv(.C) void;
pub extern var glad_glGetPixelMapusv: ?*const fn (GLenum, [*c]GLushort) callconv(.C) void;
pub extern var glad_glGetPolygonStipple: ?*const fn ([*c]GLubyte) callconv(.C) void;
pub extern var glad_glGetTexEnvfv: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetTexEnviv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetTexGendv: ?*const fn (GLenum, GLenum, [*c]GLdouble) callconv(.C) void;
pub extern var glad_glGetTexGenfv: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetTexGeniv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glIsList: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glFrustum: ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glLoadIdentity: ?*const fn () callconv(.C) void;
pub extern var glad_glLoadMatrixf: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glLoadMatrixd: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glMatrixMode: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glMultMatrixf: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMultMatrixd: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glOrtho: ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glPopMatrix: ?*const fn () callconv(.C) void;
pub extern var glad_glPushMatrix: ?*const fn () callconv(.C) void;
pub extern var glad_glRotated: ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glRotatef: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glScaled: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glScalef: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glTranslated: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glTranslatef: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var GLAD_GL_VERSION_1_1: c_int;
pub extern var glad_glDrawArrays: ?*const fn (GLenum, GLint, GLsizei) callconv(.C) void;
pub extern var glad_glDrawElements: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glGetPointerv: ?*const fn (GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var glad_glPolygonOffset: ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glCopyTexImage1D: ?*const fn (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) callconv(.C) void;
pub extern var glad_glCopyTexImage2D: ?*const fn (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) callconv(.C) void;
pub extern var glad_glCopyTexSubImage1D: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei) callconv(.C) void;
pub extern var glad_glCopyTexSubImage2D: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glTexSubImage1D: ?*const fn (GLenum, GLint, GLint, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glTexSubImage2D: ?*const fn (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glBindTexture: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glDeleteTextures: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGenTextures: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glIsTexture: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glArrayElement: ?*const fn (GLint) callconv(.C) void;
pub extern var glad_glColorPointer: ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glDisableClientState: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glEdgeFlagPointer: ?*const fn (GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glEnableClientState: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glIndexPointer: ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glInterleavedArrays: ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glNormalPointer: ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glTexCoordPointer: ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glVertexPointer: ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glAreTexturesResident: ?*const fn (GLsizei, [*c]const GLuint, [*c]GLboolean) callconv(.C) GLboolean;
pub extern var glad_glPrioritizeTextures: ?*const fn (GLsizei, [*c]const GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glIndexub: ?*const fn (GLubyte) callconv(.C) void;
pub extern var glad_glIndexubv: ?*const fn ([*c]const GLubyte) callconv(.C) void;
pub extern var glad_glPopClientAttrib: ?*const fn () callconv(.C) void;
pub extern var glad_glPushClientAttrib: ?*const fn (GLbitfield) callconv(.C) void;
pub extern var GLAD_GL_VERSION_1_2: c_int;
pub extern var glad_glDrawRangeElements: ?*const fn (GLenum, GLuint, GLuint, GLsizei, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glTexImage3D: ?*const fn (GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glTexSubImage3D: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCopyTexSubImage3D: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_VERSION_1_3: c_int;
pub extern var glad_glActiveTexture: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glSampleCoverage: ?*const fn (GLfloat, GLboolean) callconv(.C) void;
pub extern var glad_glCompressedTexImage3D: ?*const fn (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCompressedTexImage2D: ?*const fn (GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCompressedTexImage1D: ?*const fn (GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCompressedTexSubImage3D: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCompressedTexSubImage2D: ?*const fn (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCompressedTexSubImage1D: ?*const fn (GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glGetCompressedTexImage: ?*const fn (GLenum, GLint, ?*anyopaque) callconv(.C) void;
pub extern var glad_glClientActiveTexture: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glMultiTexCoord1d: ?*const fn (GLenum, GLdouble) callconv(.C) void;
pub extern var glad_glMultiTexCoord1dv: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glMultiTexCoord1f: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glMultiTexCoord1fv: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMultiTexCoord1i: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var glad_glMultiTexCoord1iv: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glMultiTexCoord1s: ?*const fn (GLenum, GLshort) callconv(.C) void;
pub extern var glad_glMultiTexCoord1sv: ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glMultiTexCoord2d: ?*const fn (GLenum, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glMultiTexCoord2dv: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glMultiTexCoord2f: ?*const fn (GLenum, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glMultiTexCoord2fv: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMultiTexCoord2i: ?*const fn (GLenum, GLint, GLint) callconv(.C) void;
pub extern var glad_glMultiTexCoord2iv: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glMultiTexCoord2s: ?*const fn (GLenum, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glMultiTexCoord2sv: ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glMultiTexCoord3d: ?*const fn (GLenum, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glMultiTexCoord3dv: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glMultiTexCoord3f: ?*const fn (GLenum, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glMultiTexCoord3fv: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMultiTexCoord3i: ?*const fn (GLenum, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glMultiTexCoord3iv: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glMultiTexCoord3s: ?*const fn (GLenum, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glMultiTexCoord3sv: ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glMultiTexCoord4d: ?*const fn (GLenum, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glMultiTexCoord4dv: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glMultiTexCoord4f: ?*const fn (GLenum, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glMultiTexCoord4fv: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMultiTexCoord4i: ?*const fn (GLenum, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glMultiTexCoord4iv: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glMultiTexCoord4s: ?*const fn (GLenum, GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glMultiTexCoord4sv: ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glLoadTransposeMatrixf: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glLoadTransposeMatrixd: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glMultTransposeMatrixf: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMultTransposeMatrixd: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var GLAD_GL_VERSION_1_4: c_int;
pub extern var glad_glBlendFuncSeparate: ?*const fn (GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var glad_glMultiDrawArrays: ?*const fn (GLenum, [*c]const GLint, [*c]const GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glMultiDrawElements: ?*const fn (GLenum, [*c]const GLsizei, GLenum, [*c]const ?*const anyopaque, GLsizei) callconv(.C) void;
pub extern var glad_glPointParameterf: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glPointParameterfv: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glPointParameteri: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var glad_glPointParameteriv: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glFogCoordf: ?*const fn (GLfloat) callconv(.C) void;
pub extern var glad_glFogCoordfv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glFogCoordd: ?*const fn (GLdouble) callconv(.C) void;
pub extern var glad_glFogCoorddv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glFogCoordPointer: ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glSecondaryColor3b: ?*const fn (GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var glad_glSecondaryColor3bv: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var glad_glSecondaryColor3d: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glSecondaryColor3dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glSecondaryColor3f: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glSecondaryColor3fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glSecondaryColor3i: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glSecondaryColor3iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var glad_glSecondaryColor3s: ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glSecondaryColor3sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var glad_glSecondaryColor3ub: ?*const fn (GLubyte, GLubyte, GLubyte) callconv(.C) void;
pub extern var glad_glSecondaryColor3ubv: ?*const fn ([*c]const GLubyte) callconv(.C) void;
pub extern var glad_glSecondaryColor3ui: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glSecondaryColor3uiv: ?*const fn ([*c]const GLuint) callconv(.C) void;
pub extern var glad_glSecondaryColor3us: ?*const fn (GLushort, GLushort, GLushort) callconv(.C) void;
pub extern var glad_glSecondaryColor3usv: ?*const fn ([*c]const GLushort) callconv(.C) void;
pub extern var glad_glSecondaryColorPointer: ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glWindowPos2d: ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glWindowPos2dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glWindowPos2f: ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glWindowPos2fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glWindowPos2i: ?*const fn (GLint, GLint) callconv(.C) void;
pub extern var glad_glWindowPos2iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var glad_glWindowPos2s: ?*const fn (GLshort, GLshort) callconv(.C) void;
pub extern var glad_glWindowPos2sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var glad_glWindowPos3d: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glWindowPos3dv: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glWindowPos3f: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glWindowPos3fv: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glWindowPos3i: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glWindowPos3iv: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var glad_glWindowPos3s: ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glWindowPos3sv: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var glad_glBlendColor: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glBlendEquation: ?*const fn (GLenum) callconv(.C) void;
pub extern var GLAD_GL_VERSION_1_5: c_int;
pub extern var glad_glGenQueries: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glDeleteQueries: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glIsQuery: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glBeginQuery: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glEndQuery: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glGetQueryiv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetQueryObjectiv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetQueryObjectuiv: ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var glad_glBindBuffer: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glDeleteBuffers: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGenBuffers: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glIsBuffer: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glBufferData: ?*const fn (GLenum, GLsizeiptr, ?*const anyopaque, GLenum) callconv(.C) void;
pub extern var glad_glBufferSubData: ?*const fn (GLenum, GLintptr, GLsizeiptr, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glGetBufferSubData: ?*const fn (GLenum, GLintptr, GLsizeiptr, ?*anyopaque) callconv(.C) void;
pub extern var glad_glMapBuffer: ?*const fn (GLenum, GLenum) callconv(.C) ?*anyopaque;
pub extern var glad_glUnmapBuffer: ?*const fn (GLenum) callconv(.C) GLboolean;
pub extern var glad_glGetBufferParameteriv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetBufferPointerv: ?*const fn (GLenum, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var GLAD_GL_VERSION_2_0: c_int;
pub extern var glad_glBlendEquationSeparate: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var glad_glDrawBuffers: ?*const fn (GLsizei, [*c]const GLenum) callconv(.C) void;
pub extern var glad_glStencilOpSeparate: ?*const fn (GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var glad_glStencilFuncSeparate: ?*const fn (GLenum, GLenum, GLint, GLuint) callconv(.C) void;
pub extern var glad_glStencilMaskSeparate: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glAttachShader: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var glad_glBindAttribLocation: ?*const fn (GLuint, GLuint, [*c]const GLchar) callconv(.C) void;
pub extern var glad_glCompileShader: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glCreateProgram: ?*const fn () callconv(.C) GLuint;
pub extern var glad_glCreateShader: ?*const fn (GLenum) callconv(.C) GLuint;
pub extern var glad_glDeleteProgram: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glDeleteShader: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glDetachShader: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var glad_glDisableVertexAttribArray: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glEnableVertexAttribArray: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glGetActiveAttrib: ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLint, [*c]GLenum, [*c]GLchar) callconv(.C) void;
pub extern var glad_glGetActiveUniform: ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLint, [*c]GLenum, [*c]GLchar) callconv(.C) void;
pub extern var glad_glGetAttachedShaders: ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glGetAttribLocation: ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLint;
pub extern var glad_glGetProgramiv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetProgramInfoLog: ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var glad_glGetShaderiv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetShaderInfoLog: ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var glad_glGetShaderSource: ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var glad_glGetUniformLocation: ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLint;
pub extern var glad_glGetUniformfv: ?*const fn (GLuint, GLint, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetUniformiv: ?*const fn (GLuint, GLint, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetVertexAttribdv: ?*const fn (GLuint, GLenum, [*c]GLdouble) callconv(.C) void;
pub extern var glad_glGetVertexAttribfv: ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetVertexAttribiv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetVertexAttribPointerv: ?*const fn (GLuint, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var glad_glIsProgram: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glIsShader: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glLinkProgram: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glShaderSource: ?*const fn (GLuint, GLsizei, [*c]const [*c]const GLchar, [*c]const GLint) callconv(.C) void;
pub extern var glad_glUseProgram: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glUniform1f: ?*const fn (GLint, GLfloat) callconv(.C) void;
pub extern var glad_glUniform2f: ?*const fn (GLint, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glUniform3f: ?*const fn (GLint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glUniform4f: ?*const fn (GLint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glUniform1i: ?*const fn (GLint, GLint) callconv(.C) void;
pub extern var glad_glUniform2i: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glUniform3i: ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glUniform4i: ?*const fn (GLint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glUniform1fv: ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glUniform2fv: ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glUniform3fv: ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glUniform4fv: ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glUniform1iv: ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glUniform2iv: ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glUniform3iv: ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glUniform4iv: ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glUniformMatrix2fv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glUniformMatrix3fv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glUniformMatrix4fv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glValidateProgram: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glVertexAttrib1d: ?*const fn (GLuint, GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttrib1dv: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttrib1f: ?*const fn (GLuint, GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttrib1fv: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttrib1s: ?*const fn (GLuint, GLshort) callconv(.C) void;
pub extern var glad_glVertexAttrib1sv: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertexAttrib2d: ?*const fn (GLuint, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttrib2dv: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttrib2f: ?*const fn (GLuint, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttrib2fv: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttrib2s: ?*const fn (GLuint, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glVertexAttrib2sv: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertexAttrib3d: ?*const fn (GLuint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttrib3dv: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttrib3f: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttrib3fv: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttrib3s: ?*const fn (GLuint, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glVertexAttrib3sv: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertexAttrib4Nbv: ?*const fn (GLuint, [*c]const GLbyte) callconv(.C) void;
pub extern var glad_glVertexAttrib4Niv: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var glad_glVertexAttrib4Nsv: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertexAttrib4Nub: ?*const fn (GLuint, GLubyte, GLubyte, GLubyte, GLubyte) callconv(.C) void;
pub extern var glad_glVertexAttrib4Nubv: ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
pub extern var glad_glVertexAttrib4Nuiv: ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glVertexAttrib4Nusv: ?*const fn (GLuint, [*c]const GLushort) callconv(.C) void;
pub extern var glad_glVertexAttrib4bv: ?*const fn (GLuint, [*c]const GLbyte) callconv(.C) void;
pub extern var glad_glVertexAttrib4d: ?*const fn (GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttrib4dv: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttrib4f: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttrib4fv: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttrib4iv: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var glad_glVertexAttrib4s: ?*const fn (GLuint, GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glVertexAttrib4sv: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertexAttrib4ubv: ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
pub extern var glad_glVertexAttrib4uiv: ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glVertexAttrib4usv: ?*const fn (GLuint, [*c]const GLushort) callconv(.C) void;
pub extern var glad_glVertexAttribPointer: ?*const fn (GLuint, GLint, GLenum, GLboolean, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var GLAD_GL_VERSION_2_1: c_int;
pub extern var glad_glUniformMatrix2x3fv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glUniformMatrix3x2fv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glUniformMatrix2x4fv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glUniformMatrix4x2fv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glUniformMatrix3x4fv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glUniformMatrix4x3fv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var GLAD_GL_VERSION_3_0: c_int;
pub extern var glad_glColorMaski: ?*const fn (GLuint, GLboolean, GLboolean, GLboolean, GLboolean) callconv(.C) void;
pub extern var glad_glGetBooleani_v: ?*const fn (GLenum, GLuint, [*c]GLboolean) callconv(.C) void;
pub extern var glad_glGetIntegeri_v: ?*const fn (GLenum, GLuint, [*c]GLint) callconv(.C) void;
pub extern var glad_glEnablei: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glDisablei: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glIsEnabledi: ?*const fn (GLenum, GLuint) callconv(.C) GLboolean;
pub extern var glad_glBeginTransformFeedback: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glEndTransformFeedback: ?*const fn () callconv(.C) void;
pub extern var glad_glBindBufferRange: ?*const fn (GLenum, GLuint, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var glad_glBindBufferBase: ?*const fn (GLenum, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glTransformFeedbackVaryings: ?*const fn (GLuint, GLsizei, [*c]const [*c]const GLchar, GLenum) callconv(.C) void;
pub extern var glad_glGetTransformFeedbackVarying: ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLsizei, [*c]GLenum, [*c]GLchar) callconv(.C) void;
pub extern var glad_glClampColor: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var glad_glBeginConditionalRender: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var glad_glEndConditionalRender: ?*const fn () callconv(.C) void;
pub extern var glad_glVertexAttribIPointer: ?*const fn (GLuint, GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glGetVertexAttribIiv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetVertexAttribIuiv: ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribI1i: ?*const fn (GLuint, GLint) callconv(.C) void;
pub extern var glad_glVertexAttribI2i: ?*const fn (GLuint, GLint, GLint) callconv(.C) void;
pub extern var glad_glVertexAttribI3i: ?*const fn (GLuint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glVertexAttribI4i: ?*const fn (GLuint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glVertexAttribI1ui: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribI2ui: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribI3ui: ?*const fn (GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribI4ui: ?*const fn (GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribI1iv: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var glad_glVertexAttribI2iv: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var glad_glVertexAttribI3iv: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var glad_glVertexAttribI4iv: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var glad_glVertexAttribI1uiv: ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribI2uiv: ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribI3uiv: ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribI4uiv: ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribI4bv: ?*const fn (GLuint, [*c]const GLbyte) callconv(.C) void;
pub extern var glad_glVertexAttribI4sv: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertexAttribI4ubv: ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
pub extern var glad_glVertexAttribI4usv: ?*const fn (GLuint, [*c]const GLushort) callconv(.C) void;
pub extern var glad_glGetUniformuiv: ?*const fn (GLuint, GLint, [*c]GLuint) callconv(.C) void;
pub extern var glad_glBindFragDataLocation: ?*const fn (GLuint, GLuint, [*c]const GLchar) callconv(.C) void;
pub extern var glad_glGetFragDataLocation: ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLint;
pub extern var glad_glUniform1ui: ?*const fn (GLint, GLuint) callconv(.C) void;
pub extern var glad_glUniform2ui: ?*const fn (GLint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glUniform3ui: ?*const fn (GLint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glUniform4ui: ?*const fn (GLint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glUniform1uiv: ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glUniform2uiv: ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glUniform3uiv: ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glUniform4uiv: ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glTexParameterIiv: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glTexParameterIuiv: ?*const fn (GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGetTexParameterIiv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetTexParameterIuiv: ?*const fn (GLenum, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var glad_glClearBufferiv: ?*const fn (GLenum, GLint, [*c]const GLint) callconv(.C) void;
pub extern var glad_glClearBufferuiv: ?*const fn (GLenum, GLint, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glClearBufferfv: ?*const fn (GLenum, GLint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glClearBufferfi: ?*const fn (GLenum, GLint, GLfloat, GLint) callconv(.C) void;
pub extern var glad_glGetStringi: ?*const fn (GLenum, GLuint) callconv(.C) [*c]const GLubyte;
pub extern var glad_glIsRenderbuffer: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glBindRenderbuffer: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glDeleteRenderbuffers: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGenRenderbuffers: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glRenderbufferStorage: ?*const fn (GLenum, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glGetRenderbufferParameteriv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glIsFramebuffer: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glBindFramebuffer: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glDeleteFramebuffers: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGenFramebuffers: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glCheckFramebufferStatus: ?*const fn (GLenum) callconv(.C) GLenum;
pub extern var glad_glFramebufferTexture1D: ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub extern var glad_glFramebufferTexture2D: ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub extern var glad_glFramebufferTexture3D: ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub extern var glad_glFramebufferRenderbuffer: ?*const fn (GLenum, GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var glad_glGetFramebufferAttachmentParameteriv: ?*const fn (GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGenerateMipmap: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glBlitFramebuffer: ?*const fn (GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) callconv(.C) void;
pub extern var glad_glRenderbufferStorageMultisample: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glFramebufferTextureLayer: ?*const fn (GLenum, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub extern var glad_glMapBufferRange: ?*const fn (GLenum, GLintptr, GLsizeiptr, GLbitfield) callconv(.C) ?*anyopaque;
pub extern var glad_glFlushMappedBufferRange: ?*const fn (GLenum, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var glad_glBindVertexArray: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glDeleteVertexArrays: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGenVertexArrays: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glIsVertexArray: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var GLAD_GL_VERSION_3_1: c_int;
pub extern var glad_glDrawArraysInstanced: ?*const fn (GLenum, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glDrawElementsInstanced: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei) callconv(.C) void;
pub extern var glad_glTexBuffer: ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var glad_glPrimitiveRestartIndex: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glCopyBufferSubData: ?*const fn (GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var glad_glGetUniformIndices: ?*const fn (GLuint, GLsizei, [*c]const [*c]const GLchar, [*c]GLuint) callconv(.C) void;
pub extern var glad_glGetActiveUniformsiv: ?*const fn (GLuint, GLsizei, [*c]const GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetActiveUniformName: ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var glad_glGetUniformBlockIndex: ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLuint;
pub extern var glad_glGetActiveUniformBlockiv: ?*const fn (GLuint, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetActiveUniformBlockName: ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var glad_glUniformBlockBinding: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var GLAD_GL_VERSION_3_2: c_int;
pub extern var glad_glDrawElementsBaseVertex: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLint) callconv(.C) void;
pub extern var glad_glDrawRangeElementsBaseVertex: ?*const fn (GLenum, GLuint, GLuint, GLsizei, GLenum, ?*const anyopaque, GLint) callconv(.C) void;
pub extern var glad_glDrawElementsInstancedBaseVertex: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei, GLint) callconv(.C) void;
pub extern var glad_glMultiDrawElementsBaseVertex: ?*const fn (GLenum, [*c]const GLsizei, GLenum, [*c]const ?*const anyopaque, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glProvokingVertex: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glFenceSync: ?*const fn (GLenum, GLbitfield) callconv(.C) GLsync;
pub extern var glad_glIsSync: ?*const fn (GLsync) callconv(.C) GLboolean;
pub extern var glad_glDeleteSync: ?*const fn (GLsync) callconv(.C) void;
pub extern var glad_glClientWaitSync: ?*const fn (GLsync, GLbitfield, GLuint64) callconv(.C) GLenum;
pub extern var glad_glWaitSync: ?*const fn (GLsync, GLbitfield, GLuint64) callconv(.C) void;
pub extern var glad_glGetInteger64v: ?*const fn (GLenum, [*c]GLint64) callconv(.C) void;
pub extern var glad_glGetSynciv: ?*const fn (GLsync, GLenum, GLsizei, [*c]GLsizei, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetInteger64i_v: ?*const fn (GLenum, GLuint, [*c]GLint64) callconv(.C) void;
pub extern var glad_glGetBufferParameteri64v: ?*const fn (GLenum, GLenum, [*c]GLint64) callconv(.C) void;
pub extern var glad_glFramebufferTexture: ?*const fn (GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub extern var glad_glTexImage2DMultisample: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var glad_glTexImage3DMultisample: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var glad_glGetMultisamplefv: ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glSampleMaski: ?*const fn (GLuint, GLbitfield) callconv(.C) void;
pub extern var GLAD_GL_VERSION_3_3: c_int;
pub extern var glad_glBindFragDataLocationIndexed: ?*const fn (GLuint, GLuint, GLuint, [*c]const GLchar) callconv(.C) void;
pub extern var glad_glGetFragDataIndex: ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLint;
pub extern var glad_glGenSamplers: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glDeleteSamplers: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glIsSampler: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glBindSampler: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var glad_glSamplerParameteri: ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub extern var glad_glSamplerParameteriv: ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glSamplerParameterf: ?*const fn (GLuint, GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glSamplerParameterfv: ?*const fn (GLuint, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glSamplerParameterIiv: ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glSamplerParameterIuiv: ?*const fn (GLuint, GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGetSamplerParameteriv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetSamplerParameterIiv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetSamplerParameterfv: ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetSamplerParameterIuiv: ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var glad_glQueryCounter: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var glad_glGetQueryObjecti64v: ?*const fn (GLuint, GLenum, [*c]GLint64) callconv(.C) void;
pub extern var glad_glGetQueryObjectui64v: ?*const fn (GLuint, GLenum, [*c]GLuint64) callconv(.C) void;
pub extern var glad_glVertexAttribDivisor: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribP1ui: ?*const fn (GLuint, GLenum, GLboolean, GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribP1uiv: ?*const fn (GLuint, GLenum, GLboolean, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribP2ui: ?*const fn (GLuint, GLenum, GLboolean, GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribP2uiv: ?*const fn (GLuint, GLenum, GLboolean, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribP3ui: ?*const fn (GLuint, GLenum, GLboolean, GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribP3uiv: ?*const fn (GLuint, GLenum, GLboolean, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribP4ui: ?*const fn (GLuint, GLenum, GLboolean, GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribP4uiv: ?*const fn (GLuint, GLenum, GLboolean, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glVertexP2ui: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glVertexP2uiv: ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glVertexP3ui: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glVertexP3uiv: ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glVertexP4ui: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glVertexP4uiv: ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glTexCoordP1ui: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glTexCoordP1uiv: ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glTexCoordP2ui: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glTexCoordP2uiv: ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glTexCoordP3ui: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glTexCoordP3uiv: ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glTexCoordP4ui: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glTexCoordP4uiv: ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glMultiTexCoordP1ui: ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var glad_glMultiTexCoordP1uiv: ?*const fn (GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glMultiTexCoordP2ui: ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var glad_glMultiTexCoordP2uiv: ?*const fn (GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glMultiTexCoordP3ui: ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var glad_glMultiTexCoordP3uiv: ?*const fn (GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glMultiTexCoordP4ui: ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var glad_glMultiTexCoordP4uiv: ?*const fn (GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glNormalP3ui: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glNormalP3uiv: ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glColorP3ui: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glColorP3uiv: ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glColorP4ui: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glColorP4uiv: ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glSecondaryColorP3ui: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glSecondaryColorP3uiv: ?*const fn (GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var GLAD_GL_VERSION_4_0: c_int;
pub extern var glad_glMinSampleShading: ?*const fn (GLfloat) callconv(.C) void;
pub extern var glad_glBlendEquationi: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var glad_glBlendEquationSeparatei: ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub extern var glad_glBlendFunci: ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub extern var glad_glBlendFuncSeparatei: ?*const fn (GLuint, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var glad_glDrawArraysIndirect: ?*const fn (GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glDrawElementsIndirect: ?*const fn (GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glUniform1d: ?*const fn (GLint, GLdouble) callconv(.C) void;
pub extern var glad_glUniform2d: ?*const fn (GLint, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glUniform3d: ?*const fn (GLint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glUniform4d: ?*const fn (GLint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glUniform1dv: ?*const fn (GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glUniform2dv: ?*const fn (GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glUniform3dv: ?*const fn (GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glUniform4dv: ?*const fn (GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glUniformMatrix2dv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glUniformMatrix3dv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glUniformMatrix4dv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glUniformMatrix2x3dv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glUniformMatrix2x4dv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glUniformMatrix3x2dv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glUniformMatrix3x4dv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glUniformMatrix4x2dv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glUniformMatrix4x3dv: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glGetUniformdv: ?*const fn (GLuint, GLint, [*c]GLdouble) callconv(.C) void;
pub extern var glad_glGetSubroutineUniformLocation: ?*const fn (GLuint, GLenum, [*c]const GLchar) callconv(.C) GLint;
pub extern var glad_glGetSubroutineIndex: ?*const fn (GLuint, GLenum, [*c]const GLchar) callconv(.C) GLuint;
pub extern var glad_glGetActiveSubroutineUniformiv: ?*const fn (GLuint, GLenum, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetActiveSubroutineUniformName: ?*const fn (GLuint, GLenum, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var glad_glGetActiveSubroutineName: ?*const fn (GLuint, GLenum, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var glad_glUniformSubroutinesuiv: ?*const fn (GLenum, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGetUniformSubroutineuiv: ?*const fn (GLenum, GLint, [*c]GLuint) callconv(.C) void;
pub extern var glad_glGetProgramStageiv: ?*const fn (GLuint, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glPatchParameteri: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var glad_glPatchParameterfv: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glBindTransformFeedback: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glDeleteTransformFeedbacks: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGenTransformFeedbacks: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glIsTransformFeedback: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glPauseTransformFeedback: ?*const fn () callconv(.C) void;
pub extern var glad_glResumeTransformFeedback: ?*const fn () callconv(.C) void;
pub extern var glad_glDrawTransformFeedback: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glDrawTransformFeedbackStream: ?*const fn (GLenum, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glBeginQueryIndexed: ?*const fn (GLenum, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glEndQueryIndexed: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glGetQueryIndexediv: ?*const fn (GLenum, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var GLAD_GL_VERSION_4_1: c_int;
pub extern var glad_glReleaseShaderCompiler: ?*const fn () callconv(.C) void;
pub extern var glad_glShaderBinary: ?*const fn (GLsizei, [*c]const GLuint, GLenum, ?*const anyopaque, GLsizei) callconv(.C) void;
pub extern var glad_glGetShaderPrecisionFormat: ?*const fn (GLenum, GLenum, [*c]GLint, [*c]GLint) callconv(.C) void;
pub extern var glad_glDepthRangef: ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glClearDepthf: ?*const fn (GLfloat) callconv(.C) void;
pub extern var glad_glGetProgramBinary: ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLenum, ?*anyopaque) callconv(.C) void;
pub extern var glad_glProgramBinary: ?*const fn (GLuint, GLenum, ?*const anyopaque, GLsizei) callconv(.C) void;
pub extern var glad_glProgramParameteri: ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub extern var glad_glUseProgramStages: ?*const fn (GLuint, GLbitfield, GLuint) callconv(.C) void;
pub extern var glad_glActiveShaderProgram: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var glad_glCreateShaderProgramv: ?*const fn (GLenum, GLsizei, [*c]const [*c]const GLchar) callconv(.C) GLuint;
pub extern var glad_glBindProgramPipeline: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glDeleteProgramPipelines: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGenProgramPipelines: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glIsProgramPipeline: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glGetProgramPipelineiv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glProgramUniform1i: ?*const fn (GLuint, GLint, GLint) callconv(.C) void;
pub extern var glad_glProgramUniform1iv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glProgramUniform1f: ?*const fn (GLuint, GLint, GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniform1fv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniform1d: ?*const fn (GLuint, GLint, GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniform1dv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniform1ui: ?*const fn (GLuint, GLint, GLuint) callconv(.C) void;
pub extern var glad_glProgramUniform1uiv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glProgramUniform2i: ?*const fn (GLuint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glProgramUniform2iv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glProgramUniform2f: ?*const fn (GLuint, GLint, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniform2fv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniform2d: ?*const fn (GLuint, GLint, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniform2dv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniform2ui: ?*const fn (GLuint, GLint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glProgramUniform2uiv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glProgramUniform3i: ?*const fn (GLuint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glProgramUniform3iv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glProgramUniform3f: ?*const fn (GLuint, GLint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniform3fv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniform3d: ?*const fn (GLuint, GLint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniform3dv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniform3ui: ?*const fn (GLuint, GLint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glProgramUniform3uiv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glProgramUniform4i: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glProgramUniform4iv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glProgramUniform4f: ?*const fn (GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniform4fv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniform4d: ?*const fn (GLuint, GLint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniform4dv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniform4ui: ?*const fn (GLuint, GLint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glProgramUniform4uiv: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix2fv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix3fv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix4fv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix2dv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix3dv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix4dv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix2x3fv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix3x2fv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix2x4fv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix4x2fv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix3x4fv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix4x3fv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix2x3dv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix3x2dv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix2x4dv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix4x2dv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix3x4dv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix4x3dv: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glValidateProgramPipeline: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glGetProgramPipelineInfoLog: ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var glad_glVertexAttribL1d: ?*const fn (GLuint, GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttribL2d: ?*const fn (GLuint, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttribL3d: ?*const fn (GLuint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttribL4d: ?*const fn (GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttribL1dv: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttribL2dv: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttribL3dv: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttribL4dv: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttribLPointer: ?*const fn (GLuint, GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glGetVertexAttribLdv: ?*const fn (GLuint, GLenum, [*c]GLdouble) callconv(.C) void;
pub extern var glad_glViewportArrayv: ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glViewportIndexedf: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glViewportIndexedfv: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glScissorArrayv: ?*const fn (GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glScissorIndexed: ?*const fn (GLuint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glScissorIndexedv: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var glad_glDepthRangeArrayv: ?*const fn (GLuint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glDepthRangeIndexed: ?*const fn (GLuint, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glGetFloati_v: ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetDoublei_v: ?*const fn (GLenum, GLuint, [*c]GLdouble) callconv(.C) void;
pub extern var GLAD_GL_VERSION_4_2: c_int;
pub extern var glad_glDrawArraysInstancedBaseInstance: ?*const fn (GLenum, GLint, GLsizei, GLsizei, GLuint) callconv(.C) void;
pub extern var glad_glDrawElementsInstancedBaseInstance: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei, GLuint) callconv(.C) void;
pub extern var glad_glDrawElementsInstancedBaseVertexBaseInstance: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei, GLint, GLuint) callconv(.C) void;
pub extern var glad_glGetInternalformativ: ?*const fn (GLenum, GLenum, GLenum, GLsizei, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetActiveAtomicCounterBufferiv: ?*const fn (GLuint, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glBindImageTexture: ?*const fn (GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLenum) callconv(.C) void;
pub extern var glad_glMemoryBarrier: ?*const fn (GLbitfield) callconv(.C) void;
pub extern var glad_glTexStorage1D: ?*const fn (GLenum, GLsizei, GLenum, GLsizei) callconv(.C) void;
pub extern var glad_glTexStorage2D: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glTexStorage3D: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glDrawTransformFeedbackInstanced: ?*const fn (GLenum, GLuint, GLsizei) callconv(.C) void;
pub extern var glad_glDrawTransformFeedbackStreamInstanced: ?*const fn (GLenum, GLuint, GLuint, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_VERSION_4_3: c_int;
pub extern var glad_glClearBufferData: ?*const fn (GLenum, GLenum, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glClearBufferSubData: ?*const fn (GLenum, GLenum, GLintptr, GLsizeiptr, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glDispatchCompute: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glDispatchComputeIndirect: ?*const fn (GLintptr) callconv(.C) void;
pub extern var glad_glCopyImageSubData: ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glFramebufferParameteri: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var glad_glGetFramebufferParameteriv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetInternalformati64v: ?*const fn (GLenum, GLenum, GLenum, GLsizei, [*c]GLint64) callconv(.C) void;
pub extern var glad_glInvalidateTexSubImage: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glInvalidateTexImage: ?*const fn (GLuint, GLint) callconv(.C) void;
pub extern var glad_glInvalidateBufferSubData: ?*const fn (GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var glad_glInvalidateBufferData: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glInvalidateFramebuffer: ?*const fn (GLenum, GLsizei, [*c]const GLenum) callconv(.C) void;
pub extern var glad_glInvalidateSubFramebuffer: ?*const fn (GLenum, GLsizei, [*c]const GLenum, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glMultiDrawArraysIndirect: ?*const fn (GLenum, ?*const anyopaque, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glMultiDrawElementsIndirect: ?*const fn (GLenum, GLenum, ?*const anyopaque, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glGetProgramInterfaceiv: ?*const fn (GLuint, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetProgramResourceIndex: ?*const fn (GLuint, GLenum, [*c]const GLchar) callconv(.C) GLuint;
pub extern var glad_glGetProgramResourceName: ?*const fn (GLuint, GLenum, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var glad_glGetProgramResourceiv: ?*const fn (GLuint, GLenum, GLuint, GLsizei, [*c]const GLenum, GLsizei, [*c]GLsizei, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetProgramResourceLocation: ?*const fn (GLuint, GLenum, [*c]const GLchar) callconv(.C) GLint;
pub extern var glad_glGetProgramResourceLocationIndex: ?*const fn (GLuint, GLenum, [*c]const GLchar) callconv(.C) GLint;
pub extern var glad_glShaderStorageBlockBinding: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glTexBufferRange: ?*const fn (GLenum, GLenum, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var glad_glTexStorage2DMultisample: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var glad_glTexStorage3DMultisample: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var glad_glTextureView: ?*const fn (GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glBindVertexBuffer: ?*const fn (GLuint, GLuint, GLintptr, GLsizei) callconv(.C) void;
pub extern var glad_glVertexAttribFormat: ?*const fn (GLuint, GLint, GLenum, GLboolean, GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribIFormat: ?*const fn (GLuint, GLint, GLenum, GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribLFormat: ?*const fn (GLuint, GLint, GLenum, GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribBinding: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var glad_glVertexBindingDivisor: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var glad_glDebugMessageControl: ?*const fn (GLenum, GLenum, GLenum, GLsizei, [*c]const GLuint, GLboolean) callconv(.C) void;
pub extern var glad_glDebugMessageInsert: ?*const fn (GLenum, GLenum, GLuint, GLenum, GLsizei, [*c]const GLchar) callconv(.C) void;
pub extern var glad_glDebugMessageCallback: ?*const fn (GLDEBUGPROC, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glGetDebugMessageLog: ?*const fn (GLuint, GLsizei, [*c]GLenum, [*c]GLenum, [*c]GLuint, [*c]GLenum, [*c]GLsizei, [*c]GLchar) callconv(.C) GLuint;
pub extern var glad_glPushDebugGroup: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLchar) callconv(.C) void;
pub extern var glad_glPopDebugGroup: ?*const fn () callconv(.C) void;
pub extern var glad_glObjectLabel: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLchar) callconv(.C) void;
pub extern var glad_glGetObjectLabel: ?*const fn (GLenum, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var glad_glObjectPtrLabel: ?*const fn (?*const anyopaque, GLsizei, [*c]const GLchar) callconv(.C) void;
pub extern var glad_glGetObjectPtrLabel: ?*const fn (?*const anyopaque, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var GLAD_GL_VERSION_4_4: c_int;
pub extern var glad_glBufferStorage: ?*const fn (GLenum, GLsizeiptr, ?*const anyopaque, GLbitfield) callconv(.C) void;
pub extern var glad_glClearTexImage: ?*const fn (GLuint, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glClearTexSubImage: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glBindBuffersBase: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glBindBuffersRange: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLuint, [*c]const GLintptr, [*c]const GLsizeiptr) callconv(.C) void;
pub extern var glad_glBindTextures: ?*const fn (GLuint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glBindSamplers: ?*const fn (GLuint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glBindImageTextures: ?*const fn (GLuint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glBindVertexBuffers: ?*const fn (GLuint, GLsizei, [*c]const GLuint, [*c]const GLintptr, [*c]const GLsizei) callconv(.C) void;
pub extern var GLAD_GL_VERSION_4_5: c_int;
pub extern var glad_glClipControl: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var glad_glCreateTransformFeedbacks: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glTransformFeedbackBufferBase: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glTransformFeedbackBufferRange: ?*const fn (GLuint, GLuint, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var glad_glGetTransformFeedbackiv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetTransformFeedbacki_v: ?*const fn (GLuint, GLenum, GLuint, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetTransformFeedbacki64_v: ?*const fn (GLuint, GLenum, GLuint, [*c]GLint64) callconv(.C) void;
pub extern var glad_glCreateBuffers: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glNamedBufferStorage: ?*const fn (GLuint, GLsizeiptr, ?*const anyopaque, GLbitfield) callconv(.C) void;
pub extern var glad_glNamedBufferData: ?*const fn (GLuint, GLsizeiptr, ?*const anyopaque, GLenum) callconv(.C) void;
pub extern var glad_glNamedBufferSubData: ?*const fn (GLuint, GLintptr, GLsizeiptr, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCopyNamedBufferSubData: ?*const fn (GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var glad_glClearNamedBufferData: ?*const fn (GLuint, GLenum, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glClearNamedBufferSubData: ?*const fn (GLuint, GLenum, GLintptr, GLsizeiptr, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glMapNamedBuffer: ?*const fn (GLuint, GLenum) callconv(.C) ?*anyopaque;
pub extern var glad_glMapNamedBufferRange: ?*const fn (GLuint, GLintptr, GLsizeiptr, GLbitfield) callconv(.C) ?*anyopaque;
pub extern var glad_glUnmapNamedBuffer: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glFlushMappedNamedBufferRange: ?*const fn (GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var glad_glGetNamedBufferParameteriv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetNamedBufferParameteri64v: ?*const fn (GLuint, GLenum, [*c]GLint64) callconv(.C) void;
pub extern var glad_glGetNamedBufferPointerv: ?*const fn (GLuint, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var glad_glGetNamedBufferSubData: ?*const fn (GLuint, GLintptr, GLsizeiptr, ?*anyopaque) callconv(.C) void;
pub extern var glad_glCreateFramebuffers: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glNamedFramebufferRenderbuffer: ?*const fn (GLuint, GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var glad_glNamedFramebufferParameteri: ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub extern var glad_glNamedFramebufferTexture: ?*const fn (GLuint, GLenum, GLuint, GLint) callconv(.C) void;
pub extern var glad_glNamedFramebufferTextureLayer: ?*const fn (GLuint, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub extern var glad_glNamedFramebufferDrawBuffer: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var glad_glNamedFramebufferDrawBuffers: ?*const fn (GLuint, GLsizei, [*c]const GLenum) callconv(.C) void;
pub extern var glad_glNamedFramebufferReadBuffer: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var glad_glInvalidateNamedFramebufferData: ?*const fn (GLuint, GLsizei, [*c]const GLenum) callconv(.C) void;
pub extern var glad_glInvalidateNamedFramebufferSubData: ?*const fn (GLuint, GLsizei, [*c]const GLenum, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glClearNamedFramebufferiv: ?*const fn (GLuint, GLenum, GLint, [*c]const GLint) callconv(.C) void;
pub extern var glad_glClearNamedFramebufferuiv: ?*const fn (GLuint, GLenum, GLint, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glClearNamedFramebufferfv: ?*const fn (GLuint, GLenum, GLint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glClearNamedFramebufferfi: ?*const fn (GLuint, GLenum, GLint, GLfloat, GLint) callconv(.C) void;
pub extern var glad_glBlitNamedFramebuffer: ?*const fn (GLuint, GLuint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) callconv(.C) void;
pub extern var glad_glCheckNamedFramebufferStatus: ?*const fn (GLuint, GLenum) callconv(.C) GLenum;
pub extern var glad_glGetNamedFramebufferParameteriv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetNamedFramebufferAttachmentParameteriv: ?*const fn (GLuint, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glCreateRenderbuffers: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glNamedRenderbufferStorage: ?*const fn (GLuint, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glNamedRenderbufferStorageMultisample: ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glGetNamedRenderbufferParameteriv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glCreateTextures: ?*const fn (GLenum, GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glTextureBuffer: ?*const fn (GLuint, GLenum, GLuint) callconv(.C) void;
pub extern var glad_glTextureBufferRange: ?*const fn (GLuint, GLenum, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var glad_glTextureStorage1D: ?*const fn (GLuint, GLsizei, GLenum, GLsizei) callconv(.C) void;
pub extern var glad_glTextureStorage2D: ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glTextureStorage3D: ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glTextureStorage2DMultisample: ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var glad_glTextureStorage3DMultisample: ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var glad_glTextureSubImage1D: ?*const fn (GLuint, GLint, GLint, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glTextureSubImage2D: ?*const fn (GLuint, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glTextureSubImage3D: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCompressedTextureSubImage1D: ?*const fn (GLuint, GLint, GLint, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCompressedTextureSubImage2D: ?*const fn (GLuint, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCompressedTextureSubImage3D: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCopyTextureSubImage1D: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei) callconv(.C) void;
pub extern var glad_glCopyTextureSubImage2D: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glCopyTextureSubImage3D: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glTextureParameterf: ?*const fn (GLuint, GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glTextureParameterfv: ?*const fn (GLuint, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glTextureParameteri: ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub extern var glad_glTextureParameterIiv: ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glTextureParameterIuiv: ?*const fn (GLuint, GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glTextureParameteriv: ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glGenerateTextureMipmap: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glBindTextureUnit: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var glad_glGetTextureImage: ?*const fn (GLuint, GLint, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetCompressedTextureImage: ?*const fn (GLuint, GLint, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetTextureLevelParameterfv: ?*const fn (GLuint, GLint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetTextureLevelParameteriv: ?*const fn (GLuint, GLint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetTextureParameterfv: ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetTextureParameterIiv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetTextureParameterIuiv: ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var glad_glGetTextureParameteriv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glCreateVertexArrays: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glDisableVertexArrayAttrib: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var glad_glEnableVertexArrayAttrib: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var glad_glVertexArrayElementBuffer: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var glad_glVertexArrayVertexBuffer: ?*const fn (GLuint, GLuint, GLuint, GLintptr, GLsizei) callconv(.C) void;
pub extern var glad_glVertexArrayVertexBuffers: ?*const fn (GLuint, GLuint, GLsizei, [*c]const GLuint, [*c]const GLintptr, [*c]const GLsizei) callconv(.C) void;
pub extern var glad_glVertexArrayAttribBinding: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glVertexArrayAttribFormat: ?*const fn (GLuint, GLuint, GLint, GLenum, GLboolean, GLuint) callconv(.C) void;
pub extern var glad_glVertexArrayAttribIFormat: ?*const fn (GLuint, GLuint, GLint, GLenum, GLuint) callconv(.C) void;
pub extern var glad_glVertexArrayAttribLFormat: ?*const fn (GLuint, GLuint, GLint, GLenum, GLuint) callconv(.C) void;
pub extern var glad_glVertexArrayBindingDivisor: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glGetVertexArrayiv: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetVertexArrayIndexediv: ?*const fn (GLuint, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetVertexArrayIndexed64iv: ?*const fn (GLuint, GLuint, GLenum, [*c]GLint64) callconv(.C) void;
pub extern var glad_glCreateSamplers: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glCreateProgramPipelines: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glCreateQueries: ?*const fn (GLenum, GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glGetQueryBufferObjecti64v: ?*const fn (GLuint, GLuint, GLenum, GLintptr) callconv(.C) void;
pub extern var glad_glGetQueryBufferObjectiv: ?*const fn (GLuint, GLuint, GLenum, GLintptr) callconv(.C) void;
pub extern var glad_glGetQueryBufferObjectui64v: ?*const fn (GLuint, GLuint, GLenum, GLintptr) callconv(.C) void;
pub extern var glad_glGetQueryBufferObjectuiv: ?*const fn (GLuint, GLuint, GLenum, GLintptr) callconv(.C) void;
pub extern var glad_glMemoryBarrierByRegion: ?*const fn (GLbitfield) callconv(.C) void;
pub extern var glad_glGetTextureSubImage: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetCompressedTextureSubImage: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetGraphicsResetStatus: ?*const fn () callconv(.C) GLenum;
pub extern var glad_glGetnCompressedTexImage: ?*const fn (GLenum, GLint, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetnTexImage: ?*const fn (GLenum, GLint, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetnUniformdv: ?*const fn (GLuint, GLint, GLsizei, [*c]GLdouble) callconv(.C) void;
pub extern var glad_glGetnUniformfv: ?*const fn (GLuint, GLint, GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetnUniformiv: ?*const fn (GLuint, GLint, GLsizei, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetnUniformuiv: ?*const fn (GLuint, GLint, GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glReadnPixels: ?*const fn (GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetnMapdv: ?*const fn (GLenum, GLenum, GLsizei, [*c]GLdouble) callconv(.C) void;
pub extern var glad_glGetnMapfv: ?*const fn (GLenum, GLenum, GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetnMapiv: ?*const fn (GLenum, GLenum, GLsizei, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetnPixelMapfv: ?*const fn (GLenum, GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetnPixelMapuiv: ?*const fn (GLenum, GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glGetnPixelMapusv: ?*const fn (GLenum, GLsizei, [*c]GLushort) callconv(.C) void;
pub extern var glad_glGetnPolygonStipple: ?*const fn (GLsizei, [*c]GLubyte) callconv(.C) void;
pub extern var glad_glGetnColorTable: ?*const fn (GLenum, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetnConvolutionFilter: ?*const fn (GLenum, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetnSeparableFilter: ?*const fn (GLenum, GLenum, GLenum, GLsizei, ?*anyopaque, GLsizei, ?*anyopaque, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetnHistogram: ?*const fn (GLenum, GLboolean, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetnMinmax: ?*const fn (GLenum, GLboolean, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var glad_glTextureBarrier: ?*const fn () callconv(.C) void;
pub extern var GLAD_GL_VERSION_4_6: c_int;
pub extern var glad_glSpecializeShader: ?*const fn (GLuint, [*c]const GLchar, GLuint, [*c]const GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glMultiDrawArraysIndirectCount: ?*const fn (GLenum, ?*const anyopaque, GLintptr, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glMultiDrawElementsIndirectCount: ?*const fn (GLenum, GLenum, ?*const anyopaque, GLintptr, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glPolygonOffsetClamp: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var GLAD_GL_VERSION_ES_CM_1_0: c_int;
pub extern var glad_glClipPlanef: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glFrustumf: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glGetClipPlanef: ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glOrthof: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glAlphaFuncx: ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub extern var glad_glClearColorx: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glClearDepthx: ?*const fn (GLfixed) callconv(.C) void;
pub extern var glad_glClipPlanex: ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var glad_glColor4x: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glDepthRangex: ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glFogx: ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub extern var glad_glFogxv: ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var glad_glFrustumx: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glGetClipPlanex: ?*const fn (GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var glad_glGetFixedv: ?*const fn (GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var glad_glGetLightxv: ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var glad_glGetMaterialxv: ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var glad_glGetTexEnvxv: ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var glad_glGetTexParameterxv: ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var glad_glLightModelx: ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub extern var glad_glLightModelxv: ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var glad_glLightx: ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub extern var glad_glLightxv: ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var glad_glLineWidthx: ?*const fn (GLfixed) callconv(.C) void;
pub extern var glad_glLoadMatrixx: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var glad_glMaterialx: ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub extern var glad_glMaterialxv: ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var glad_glMultMatrixx: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var glad_glMultiTexCoord4x: ?*const fn (GLenum, GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glNormal3x: ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glOrthox: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glPointParameterx: ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub extern var glad_glPointParameterxv: ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var glad_glPointSizex: ?*const fn (GLfixed) callconv(.C) void;
pub extern var glad_glPolygonOffsetx: ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glRotatex: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glSampleCoveragex: ?*const fn (GLclampx, GLboolean) callconv(.C) void;
pub extern var glad_glScalex: ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glTexEnvx: ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub extern var glad_glTexEnvxv: ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var glad_glTexParameterx: ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub extern var glad_glTexParameterxv: ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var glad_glTranslatex: ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var GLAD_GL_ES_VERSION_2_0: c_int;
pub extern var GLAD_GL_ES_VERSION_3_0: c_int;
pub extern var GLAD_GL_ES_VERSION_3_1: c_int;
pub extern var GLAD_GL_ES_VERSION_3_2: c_int;
pub extern var glad_glBlendBarrier: ?*const fn () callconv(.C) void;
pub extern var glad_glPrimitiveBoundingBox: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var GLAD_GL_SC_VERSION_2_0: c_int;
pub extern var GLAD_GL_3DFX_multisample: c_int;
pub extern var GLAD_GL_3DFX_tbuffer: c_int;
pub extern var glad_glTbufferMask3DFX: ?*const fn (GLuint) callconv(.C) void;
pub extern var GLAD_GL_3DFX_texture_compression_FXT1: c_int;
pub extern var GLAD_GL_AMD_blend_minmax_factor: c_int;
pub extern var GLAD_GL_AMD_conservative_depth: c_int;
pub extern var GLAD_GL_AMD_debug_output: c_int;
pub extern var glad_glDebugMessageEnableAMD: ?*const fn (GLenum, GLenum, GLsizei, [*c]const GLuint, GLboolean) callconv(.C) void;
pub extern var glad_glDebugMessageInsertAMD: ?*const fn (GLenum, GLenum, GLuint, GLsizei, [*c]const GLchar) callconv(.C) void;
pub extern var glad_glDebugMessageCallbackAMD: ?*const fn (GLDEBUGPROCAMD, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetDebugMessageLogAMD: ?*const fn (GLuint, GLsizei, [*c]GLenum, [*c]GLenum, [*c]GLuint, [*c]GLsizei, [*c]GLchar) callconv(.C) GLuint;
pub extern var GLAD_GL_AMD_depth_clamp_separate: c_int;
pub extern var GLAD_GL_AMD_draw_buffers_blend: c_int;
pub extern var glad_glBlendFuncIndexedAMD: ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub extern var glad_glBlendFuncSeparateIndexedAMD: ?*const fn (GLuint, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var glad_glBlendEquationIndexedAMD: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var glad_glBlendEquationSeparateIndexedAMD: ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub extern var GLAD_GL_AMD_framebuffer_multisample_advanced: c_int;
pub extern var glad_glRenderbufferStorageMultisampleAdvancedAMD: ?*const fn (GLenum, GLsizei, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glNamedRenderbufferStorageMultisampleAdvancedAMD: ?*const fn (GLuint, GLsizei, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_AMD_framebuffer_sample_positions: c_int;
pub extern var glad_glFramebufferSamplePositionsfvAMD: ?*const fn (GLenum, GLuint, GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glNamedFramebufferSamplePositionsfvAMD: ?*const fn (GLuint, GLuint, GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glGetFramebufferParameterfvAMD: ?*const fn (GLenum, GLenum, GLuint, GLuint, GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetNamedFramebufferParameterfvAMD: ?*const fn (GLuint, GLenum, GLuint, GLuint, GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var GLAD_GL_AMD_gcn_shader: c_int;
pub extern var GLAD_GL_AMD_gpu_shader_half_float: c_int;
pub extern var GLAD_GL_AMD_gpu_shader_int16: c_int;
pub extern var GLAD_GL_AMD_gpu_shader_int64: c_int;
pub extern var glad_glUniform1i64NV: ?*const fn (GLint, GLint64EXT) callconv(.C) void;
pub extern var glad_glUniform2i64NV: ?*const fn (GLint, GLint64EXT, GLint64EXT) callconv(.C) void;
pub extern var glad_glUniform3i64NV: ?*const fn (GLint, GLint64EXT, GLint64EXT, GLint64EXT) callconv(.C) void;
pub extern var glad_glUniform4i64NV: ?*const fn (GLint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT) callconv(.C) void;
pub extern var glad_glUniform1i64vNV: ?*const fn (GLint, GLsizei, [*c]const GLint64EXT) callconv(.C) void;
pub extern var glad_glUniform2i64vNV: ?*const fn (GLint, GLsizei, [*c]const GLint64EXT) callconv(.C) void;
pub extern var glad_glUniform3i64vNV: ?*const fn (GLint, GLsizei, [*c]const GLint64EXT) callconv(.C) void;
pub extern var glad_glUniform4i64vNV: ?*const fn (GLint, GLsizei, [*c]const GLint64EXT) callconv(.C) void;
pub extern var glad_glUniform1ui64NV: ?*const fn (GLint, GLuint64EXT) callconv(.C) void;
pub extern var glad_glUniform2ui64NV: ?*const fn (GLint, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub extern var glad_glUniform3ui64NV: ?*const fn (GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub extern var glad_glUniform4ui64NV: ?*const fn (GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub extern var glad_glUniform1ui64vNV: ?*const fn (GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var glad_glUniform2ui64vNV: ?*const fn (GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var glad_glUniform3ui64vNV: ?*const fn (GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var glad_glUniform4ui64vNV: ?*const fn (GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var glad_glGetUniformi64vNV: ?*const fn (GLuint, GLint, [*c]GLint64EXT) callconv(.C) void;
pub extern var glad_glGetUniformui64vNV: ?*const fn (GLuint, GLint, [*c]GLuint64EXT) callconv(.C) void;
pub extern var glad_glProgramUniform1i64NV: ?*const fn (GLuint, GLint, GLint64EXT) callconv(.C) void;
pub extern var glad_glProgramUniform2i64NV: ?*const fn (GLuint, GLint, GLint64EXT, GLint64EXT) callconv(.C) void;
pub extern var glad_glProgramUniform3i64NV: ?*const fn (GLuint, GLint, GLint64EXT, GLint64EXT, GLint64EXT) callconv(.C) void;
pub extern var glad_glProgramUniform4i64NV: ?*const fn (GLuint, GLint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT) callconv(.C) void;
pub extern var glad_glProgramUniform1i64vNV: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint64EXT) callconv(.C) void;
pub extern var glad_glProgramUniform2i64vNV: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint64EXT) callconv(.C) void;
pub extern var glad_glProgramUniform3i64vNV: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint64EXT) callconv(.C) void;
pub extern var glad_glProgramUniform4i64vNV: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint64EXT) callconv(.C) void;
pub extern var glad_glProgramUniform1ui64NV: ?*const fn (GLuint, GLint, GLuint64EXT) callconv(.C) void;
pub extern var glad_glProgramUniform2ui64NV: ?*const fn (GLuint, GLint, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub extern var glad_glProgramUniform3ui64NV: ?*const fn (GLuint, GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub extern var glad_glProgramUniform4ui64NV: ?*const fn (GLuint, GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub extern var glad_glProgramUniform1ui64vNV: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var glad_glProgramUniform2ui64vNV: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var glad_glProgramUniform3ui64vNV: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var glad_glProgramUniform4ui64vNV: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var GLAD_GL_AMD_interleaved_elements: c_int;
pub extern var glad_glVertexAttribParameteriAMD: ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub extern var GLAD_GL_AMD_multi_draw_indirect: c_int;
pub extern var glad_glMultiDrawArraysIndirectAMD: ?*const fn (GLenum, ?*const anyopaque, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glMultiDrawElementsIndirectAMD: ?*const fn (GLenum, GLenum, ?*const anyopaque, GLsizei, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_AMD_name_gen_delete: c_int;
pub extern var glad_glGenNamesAMD: ?*const fn (GLenum, GLuint, [*c]GLuint) callconv(.C) void;
pub extern var glad_glDeleteNamesAMD: ?*const fn (GLenum, GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glIsNameAMD: ?*const fn (GLenum, GLuint) callconv(.C) GLboolean;
pub extern var GLAD_GL_AMD_occlusion_query_event: c_int;
pub extern var glad_glQueryObjectParameteruiAMD: ?*const fn (GLenum, GLuint, GLenum, GLuint) callconv(.C) void;
pub extern var GLAD_GL_AMD_performance_monitor: c_int;
pub extern var glad_glGetPerfMonitorGroupsAMD: ?*const fn ([*c]GLint, GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glGetPerfMonitorCountersAMD: ?*const fn (GLuint, [*c]GLint, [*c]GLint, GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glGetPerfMonitorGroupStringAMD: ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var glad_glGetPerfMonitorCounterStringAMD: ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var glad_glGetPerfMonitorCounterInfoAMD: ?*const fn (GLuint, GLuint, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGenPerfMonitorsAMD: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glDeletePerfMonitorsAMD: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glSelectPerfMonitorCountersAMD: ?*const fn (GLuint, GLboolean, GLuint, GLint, [*c]GLuint) callconv(.C) void;
pub extern var glad_glBeginPerfMonitorAMD: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glEndPerfMonitorAMD: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glGetPerfMonitorCounterDataAMD: ?*const fn (GLuint, GLenum, GLsizei, [*c]GLuint, [*c]GLint) callconv(.C) void;
pub extern var GLAD_GL_AMD_pinned_memory: c_int;
pub extern var GLAD_GL_AMD_query_buffer_object: c_int;
pub extern var GLAD_GL_AMD_sample_positions: c_int;
pub extern var glad_glSetMultisamplefvAMD: ?*const fn (GLenum, GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var GLAD_GL_AMD_seamless_cubemap_per_texture: c_int;
pub extern var GLAD_GL_AMD_shader_atomic_counter_ops: c_int;
pub extern var GLAD_GL_AMD_shader_ballot: c_int;
pub extern var GLAD_GL_AMD_shader_explicit_vertex_parameter: c_int;
pub extern var GLAD_GL_AMD_shader_gpu_shader_half_float_fetch: c_int;
pub extern var GLAD_GL_AMD_shader_image_load_store_lod: c_int;
pub extern var GLAD_GL_AMD_shader_stencil_export: c_int;
pub extern var GLAD_GL_AMD_shader_trinary_minmax: c_int;
pub extern var GLAD_GL_AMD_sparse_texture: c_int;
pub extern var glad_glTexStorageSparseAMD: ?*const fn (GLenum, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLbitfield) callconv(.C) void;
pub extern var glad_glTextureStorageSparseAMD: ?*const fn (GLuint, GLenum, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLbitfield) callconv(.C) void;
pub extern var GLAD_GL_AMD_stencil_operation_extended: c_int;
pub extern var glad_glStencilOpValueAMD: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var GLAD_GL_AMD_texture_gather_bias_lod: c_int;
pub extern var GLAD_GL_AMD_texture_texture4: c_int;
pub extern var GLAD_GL_AMD_transform_feedback3_lines_triangles: c_int;
pub extern var GLAD_GL_AMD_transform_feedback4: c_int;
pub extern var GLAD_GL_AMD_vertex_shader_layer: c_int;
pub extern var GLAD_GL_AMD_vertex_shader_tessellator: c_int;
pub extern var glad_glTessellationFactorAMD: ?*const fn (GLfloat) callconv(.C) void;
pub extern var glad_glTessellationModeAMD: ?*const fn (GLenum) callconv(.C) void;
pub extern var GLAD_GL_AMD_vertex_shader_viewport_index: c_int;
pub extern var GLAD_GL_APPLE_aux_depth_stencil: c_int;
pub extern var GLAD_GL_APPLE_client_storage: c_int;
pub extern var GLAD_GL_APPLE_element_array: c_int;
pub extern var glad_glElementPointerAPPLE: ?*const fn (GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glDrawElementArrayAPPLE: ?*const fn (GLenum, GLint, GLsizei) callconv(.C) void;
pub extern var glad_glDrawRangeElementArrayAPPLE: ?*const fn (GLenum, GLuint, GLuint, GLint, GLsizei) callconv(.C) void;
pub extern var glad_glMultiDrawElementArrayAPPLE: ?*const fn (GLenum, [*c]const GLint, [*c]const GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glMultiDrawRangeElementArrayAPPLE: ?*const fn (GLenum, GLuint, GLuint, [*c]const GLint, [*c]const GLsizei, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_APPLE_fence: c_int;
pub extern var glad_glGenFencesAPPLE: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glDeleteFencesAPPLE: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glSetFenceAPPLE: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glIsFenceAPPLE: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glTestFenceAPPLE: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glFinishFenceAPPLE: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glTestObjectAPPLE: ?*const fn (GLenum, GLuint) callconv(.C) GLboolean;
pub extern var glad_glFinishObjectAPPLE: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var GLAD_GL_APPLE_float_pixels: c_int;
pub extern var GLAD_GL_APPLE_flush_buffer_range: c_int;
pub extern var glad_glBufferParameteriAPPLE: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var glad_glFlushMappedBufferRangeAPPLE: ?*const fn (GLenum, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var GLAD_GL_APPLE_object_purgeable: c_int;
pub extern var glad_glObjectPurgeableAPPLE: ?*const fn (GLenum, GLuint, GLenum) callconv(.C) GLenum;
pub extern var glad_glObjectUnpurgeableAPPLE: ?*const fn (GLenum, GLuint, GLenum) callconv(.C) GLenum;
pub extern var glad_glGetObjectParameterivAPPLE: ?*const fn (GLenum, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var GLAD_GL_APPLE_rgb_422: c_int;
pub extern var GLAD_GL_APPLE_row_bytes: c_int;
pub extern var GLAD_GL_APPLE_specular_vector: c_int;
pub extern var GLAD_GL_APPLE_texture_range: c_int;
pub extern var glad_glTextureRangeAPPLE: ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glGetTexParameterPointervAPPLE: ?*const fn (GLenum, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var GLAD_GL_APPLE_transform_hint: c_int;
pub extern var GLAD_GL_APPLE_vertex_array_object: c_int;
pub extern var glad_glBindVertexArrayAPPLE: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glDeleteVertexArraysAPPLE: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGenVertexArraysAPPLE: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glIsVertexArrayAPPLE: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var GLAD_GL_APPLE_vertex_array_range: c_int;
pub extern var glad_glVertexArrayRangeAPPLE: ?*const fn (GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var glad_glFlushVertexArrayRangeAPPLE: ?*const fn (GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var glad_glVertexArrayParameteriAPPLE: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var GLAD_GL_APPLE_vertex_program_evaluators: c_int;
pub extern var glad_glEnableVertexAttribAPPLE: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var glad_glDisableVertexAttribAPPLE: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var glad_glIsVertexAttribEnabledAPPLE: ?*const fn (GLuint, GLenum) callconv(.C) GLboolean;
pub extern var glad_glMapVertexAttrib1dAPPLE: ?*const fn (GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glMapVertexAttrib1fAPPLE: ?*const fn (GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMapVertexAttrib2dAPPLE: ?*const fn (GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glMapVertexAttrib2fAPPLE: ?*const fn (GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, [*c]const GLfloat) callconv(.C) void;
pub extern var GLAD_GL_APPLE_ycbcr_422: c_int;
pub extern var GLAD_GL_ARB_ES2_compatibility: c_int;
pub extern var GLAD_GL_ARB_ES3_1_compatibility: c_int;
pub extern var GLAD_GL_ARB_ES3_2_compatibility: c_int;
pub extern var glad_glPrimitiveBoundingBoxARB: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var GLAD_GL_ARB_ES3_compatibility: c_int;
pub extern var GLAD_GL_ARB_arrays_of_arrays: c_int;
pub extern var GLAD_GL_ARB_base_instance: c_int;
pub extern var GLAD_GL_ARB_bindless_texture: c_int;
pub extern var glad_glGetTextureHandleARB: ?*const fn (GLuint) callconv(.C) GLuint64;
pub extern var glad_glGetTextureSamplerHandleARB: ?*const fn (GLuint, GLuint) callconv(.C) GLuint64;
pub extern var glad_glMakeTextureHandleResidentARB: ?*const fn (GLuint64) callconv(.C) void;
pub extern var glad_glMakeTextureHandleNonResidentARB: ?*const fn (GLuint64) callconv(.C) void;
pub extern var glad_glGetImageHandleARB: ?*const fn (GLuint, GLint, GLboolean, GLint, GLenum) callconv(.C) GLuint64;
pub extern var glad_glMakeImageHandleResidentARB: ?*const fn (GLuint64, GLenum) callconv(.C) void;
pub extern var glad_glMakeImageHandleNonResidentARB: ?*const fn (GLuint64) callconv(.C) void;
pub extern var glad_glUniformHandleui64ARB: ?*const fn (GLint, GLuint64) callconv(.C) void;
pub extern var glad_glUniformHandleui64vARB: ?*const fn (GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var glad_glProgramUniformHandleui64ARB: ?*const fn (GLuint, GLint, GLuint64) callconv(.C) void;
pub extern var glad_glProgramUniformHandleui64vARB: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var glad_glIsTextureHandleResidentARB: ?*const fn (GLuint64) callconv(.C) GLboolean;
pub extern var glad_glIsImageHandleResidentARB: ?*const fn (GLuint64) callconv(.C) GLboolean;
pub extern var glad_glVertexAttribL1ui64ARB: ?*const fn (GLuint, GLuint64EXT) callconv(.C) void;
pub extern var glad_glVertexAttribL1ui64vARB: ?*const fn (GLuint, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var glad_glGetVertexAttribLui64vARB: ?*const fn (GLuint, GLenum, [*c]GLuint64EXT) callconv(.C) void;
pub extern var GLAD_GL_ARB_blend_func_extended: c_int;
pub extern var GLAD_GL_ARB_buffer_storage: c_int;
pub extern var GLAD_GL_ARB_cl_event: c_int;
pub extern var glad_glCreateSyncFromCLeventARB: ?*const fn (?*_cl_context, ?*_cl_event, GLbitfield) callconv(.C) GLsync;
pub extern var GLAD_GL_ARB_clear_buffer_object: c_int;
pub extern var GLAD_GL_ARB_clear_texture: c_int;
pub extern var GLAD_GL_ARB_clip_control: c_int;
pub extern var GLAD_GL_ARB_color_buffer_float: c_int;
pub extern var glad_glClampColorARB: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var GLAD_GL_ARB_compatibility: c_int;
pub extern var GLAD_GL_ARB_compressed_texture_pixel_storage: c_int;
pub extern var GLAD_GL_ARB_compute_shader: c_int;
pub extern var GLAD_GL_ARB_compute_variable_group_size: c_int;
pub extern var glad_glDispatchComputeGroupSizeARB: ?*const fn (GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var GLAD_GL_ARB_conditional_render_inverted: c_int;
pub extern var GLAD_GL_ARB_conservative_depth: c_int;
pub extern var GLAD_GL_ARB_copy_buffer: c_int;
pub extern var GLAD_GL_ARB_copy_image: c_int;
pub extern var GLAD_GL_ARB_cull_distance: c_int;
pub extern var GLAD_GL_ARB_debug_output: c_int;
pub extern var glad_glDebugMessageControlARB: ?*const fn (GLenum, GLenum, GLenum, GLsizei, [*c]const GLuint, GLboolean) callconv(.C) void;
pub extern var glad_glDebugMessageInsertARB: ?*const fn (GLenum, GLenum, GLuint, GLenum, GLsizei, [*c]const GLchar) callconv(.C) void;
pub extern var glad_glDebugMessageCallbackARB: ?*const fn (GLDEBUGPROCARB, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glGetDebugMessageLogARB: ?*const fn (GLuint, GLsizei, [*c]GLenum, [*c]GLenum, [*c]GLuint, [*c]GLenum, [*c]GLsizei, [*c]GLchar) callconv(.C) GLuint;
pub extern var GLAD_GL_ARB_depth_buffer_float: c_int;
pub extern var GLAD_GL_ARB_depth_clamp: c_int;
pub extern var GLAD_GL_ARB_depth_texture: c_int;
pub extern var GLAD_GL_ARB_derivative_control: c_int;
pub extern var GLAD_GL_ARB_direct_state_access: c_int;
pub extern var GLAD_GL_ARB_draw_buffers: c_int;
pub extern var glad_glDrawBuffersARB: ?*const fn (GLsizei, [*c]const GLenum) callconv(.C) void;
pub extern var GLAD_GL_ARB_draw_buffers_blend: c_int;
pub extern var glad_glBlendEquationiARB: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var glad_glBlendEquationSeparateiARB: ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub extern var glad_glBlendFunciARB: ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub extern var glad_glBlendFuncSeparateiARB: ?*const fn (GLuint, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var GLAD_GL_ARB_draw_elements_base_vertex: c_int;
pub extern var GLAD_GL_ARB_draw_indirect: c_int;
pub extern var GLAD_GL_ARB_draw_instanced: c_int;
pub extern var glad_glDrawArraysInstancedARB: ?*const fn (GLenum, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glDrawElementsInstancedARB: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_ARB_enhanced_layouts: c_int;
pub extern var GLAD_GL_ARB_explicit_attrib_location: c_int;
pub extern var GLAD_GL_ARB_explicit_uniform_location: c_int;
pub extern var GLAD_GL_ARB_fragment_coord_conventions: c_int;
pub extern var GLAD_GL_ARB_fragment_layer_viewport: c_int;
pub extern var GLAD_GL_ARB_fragment_program: c_int;
pub extern var glad_glProgramStringARB: ?*const fn (GLenum, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glBindProgramARB: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glDeleteProgramsARB: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGenProgramsARB: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glProgramEnvParameter4dARB: ?*const fn (GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glProgramEnvParameter4dvARB: ?*const fn (GLenum, GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramEnvParameter4fARB: ?*const fn (GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glProgramEnvParameter4fvARB: ?*const fn (GLenum, GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramLocalParameter4dARB: ?*const fn (GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glProgramLocalParameter4dvARB: ?*const fn (GLenum, GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramLocalParameter4fARB: ?*const fn (GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glProgramLocalParameter4fvARB: ?*const fn (GLenum, GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glGetProgramEnvParameterdvARB: ?*const fn (GLenum, GLuint, [*c]GLdouble) callconv(.C) void;
pub extern var glad_glGetProgramEnvParameterfvARB: ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetProgramLocalParameterdvARB: ?*const fn (GLenum, GLuint, [*c]GLdouble) callconv(.C) void;
pub extern var glad_glGetProgramLocalParameterfvARB: ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetProgramivARB: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetProgramStringARB: ?*const fn (GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var glad_glIsProgramARB: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var GLAD_GL_ARB_fragment_program_shadow: c_int;
pub extern var GLAD_GL_ARB_fragment_shader: c_int;
pub extern var GLAD_GL_ARB_fragment_shader_interlock: c_int;
pub extern var GLAD_GL_ARB_framebuffer_no_attachments: c_int;
pub extern var GLAD_GL_ARB_framebuffer_object: c_int;
pub extern var GLAD_GL_ARB_framebuffer_sRGB: c_int;
pub extern var GLAD_GL_ARB_geometry_shader4: c_int;
pub extern var glad_glProgramParameteriARB: ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub extern var glad_glFramebufferTextureARB: ?*const fn (GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub extern var glad_glFramebufferTextureLayerARB: ?*const fn (GLenum, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub extern var glad_glFramebufferTextureFaceARB: ?*const fn (GLenum, GLenum, GLuint, GLint, GLenum) callconv(.C) void;
pub extern var GLAD_GL_ARB_get_program_binary: c_int;
pub extern var GLAD_GL_ARB_get_texture_sub_image: c_int;
pub extern var GLAD_GL_ARB_gl_spirv: c_int;
pub extern var glad_glSpecializeShaderARB: ?*const fn (GLuint, [*c]const GLchar, GLuint, [*c]const GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var GLAD_GL_ARB_gpu_shader5: c_int;
pub extern var GLAD_GL_ARB_gpu_shader_fp64: c_int;
pub extern var GLAD_GL_ARB_gpu_shader_int64: c_int;
pub extern var glad_glUniform1i64ARB: ?*const fn (GLint, GLint64) callconv(.C) void;
pub extern var glad_glUniform2i64ARB: ?*const fn (GLint, GLint64, GLint64) callconv(.C) void;
pub extern var glad_glUniform3i64ARB: ?*const fn (GLint, GLint64, GLint64, GLint64) callconv(.C) void;
pub extern var glad_glUniform4i64ARB: ?*const fn (GLint, GLint64, GLint64, GLint64, GLint64) callconv(.C) void;
pub extern var glad_glUniform1i64vARB: ?*const fn (GLint, GLsizei, [*c]const GLint64) callconv(.C) void;
pub extern var glad_glUniform2i64vARB: ?*const fn (GLint, GLsizei, [*c]const GLint64) callconv(.C) void;
pub extern var glad_glUniform3i64vARB: ?*const fn (GLint, GLsizei, [*c]const GLint64) callconv(.C) void;
pub extern var glad_glUniform4i64vARB: ?*const fn (GLint, GLsizei, [*c]const GLint64) callconv(.C) void;
pub extern var glad_glUniform1ui64ARB: ?*const fn (GLint, GLuint64) callconv(.C) void;
pub extern var glad_glUniform2ui64ARB: ?*const fn (GLint, GLuint64, GLuint64) callconv(.C) void;
pub extern var glad_glUniform3ui64ARB: ?*const fn (GLint, GLuint64, GLuint64, GLuint64) callconv(.C) void;
pub extern var glad_glUniform4ui64ARB: ?*const fn (GLint, GLuint64, GLuint64, GLuint64, GLuint64) callconv(.C) void;
pub extern var glad_glUniform1ui64vARB: ?*const fn (GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var glad_glUniform2ui64vARB: ?*const fn (GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var glad_glUniform3ui64vARB: ?*const fn (GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var glad_glUniform4ui64vARB: ?*const fn (GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var glad_glGetUniformi64vARB: ?*const fn (GLuint, GLint, [*c]GLint64) callconv(.C) void;
pub extern var glad_glGetUniformui64vARB: ?*const fn (GLuint, GLint, [*c]GLuint64) callconv(.C) void;
pub extern var glad_glGetnUniformi64vARB: ?*const fn (GLuint, GLint, GLsizei, [*c]GLint64) callconv(.C) void;
pub extern var glad_glGetnUniformui64vARB: ?*const fn (GLuint, GLint, GLsizei, [*c]GLuint64) callconv(.C) void;
pub extern var glad_glProgramUniform1i64ARB: ?*const fn (GLuint, GLint, GLint64) callconv(.C) void;
pub extern var glad_glProgramUniform2i64ARB: ?*const fn (GLuint, GLint, GLint64, GLint64) callconv(.C) void;
pub extern var glad_glProgramUniform3i64ARB: ?*const fn (GLuint, GLint, GLint64, GLint64, GLint64) callconv(.C) void;
pub extern var glad_glProgramUniform4i64ARB: ?*const fn (GLuint, GLint, GLint64, GLint64, GLint64, GLint64) callconv(.C) void;
pub extern var glad_glProgramUniform1i64vARB: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint64) callconv(.C) void;
pub extern var glad_glProgramUniform2i64vARB: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint64) callconv(.C) void;
pub extern var glad_glProgramUniform3i64vARB: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint64) callconv(.C) void;
pub extern var glad_glProgramUniform4i64vARB: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint64) callconv(.C) void;
pub extern var glad_glProgramUniform1ui64ARB: ?*const fn (GLuint, GLint, GLuint64) callconv(.C) void;
pub extern var glad_glProgramUniform2ui64ARB: ?*const fn (GLuint, GLint, GLuint64, GLuint64) callconv(.C) void;
pub extern var glad_glProgramUniform3ui64ARB: ?*const fn (GLuint, GLint, GLuint64, GLuint64, GLuint64) callconv(.C) void;
pub extern var glad_glProgramUniform4ui64ARB: ?*const fn (GLuint, GLint, GLuint64, GLuint64, GLuint64, GLuint64) callconv(.C) void;
pub extern var glad_glProgramUniform1ui64vARB: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var glad_glProgramUniform2ui64vARB: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var glad_glProgramUniform3ui64vARB: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var glad_glProgramUniform4ui64vARB: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var GLAD_GL_ARB_half_float_pixel: c_int;
pub extern var GLAD_GL_ARB_half_float_vertex: c_int;
pub extern var GLAD_GL_ARB_imaging: c_int;
pub extern var glad_glColorTable: ?*const fn (GLenum, GLenum, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glColorTableParameterfv: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glColorTableParameteriv: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glCopyColorTable: ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei) callconv(.C) void;
pub extern var glad_glGetColorTable: ?*const fn (GLenum, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetColorTableParameterfv: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetColorTableParameteriv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glColorSubTable: ?*const fn (GLenum, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCopyColorSubTable: ?*const fn (GLenum, GLsizei, GLint, GLint, GLsizei) callconv(.C) void;
pub extern var glad_glConvolutionFilter1D: ?*const fn (GLenum, GLenum, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glConvolutionFilter2D: ?*const fn (GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glConvolutionParameterf: ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glConvolutionParameterfv: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glConvolutionParameteri: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var glad_glConvolutionParameteriv: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glCopyConvolutionFilter1D: ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei) callconv(.C) void;
pub extern var glad_glCopyConvolutionFilter2D: ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glGetConvolutionFilter: ?*const fn (GLenum, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetConvolutionParameterfv: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetConvolutionParameteriv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetSeparableFilter: ?*const fn (GLenum, GLenum, GLenum, ?*anyopaque, ?*anyopaque, ?*anyopaque) callconv(.C) void;
pub extern var glad_glSeparableFilter2D: ?*const fn (GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glGetHistogram: ?*const fn (GLenum, GLboolean, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetHistogramParameterfv: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetHistogramParameteriv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetMinmax: ?*const fn (GLenum, GLboolean, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetMinmaxParameterfv: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetMinmaxParameteriv: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glHistogram: ?*const fn (GLenum, GLsizei, GLenum, GLboolean) callconv(.C) void;
pub extern var glad_glMinmax: ?*const fn (GLenum, GLenum, GLboolean) callconv(.C) void;
pub extern var glad_glResetHistogram: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glResetMinmax: ?*const fn (GLenum) callconv(.C) void;
pub extern var GLAD_GL_ARB_indirect_parameters: c_int;
pub extern var glad_glMultiDrawArraysIndirectCountARB: ?*const fn (GLenum, ?*const anyopaque, GLintptr, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glMultiDrawElementsIndirectCountARB: ?*const fn (GLenum, GLenum, ?*const anyopaque, GLintptr, GLsizei, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_ARB_instanced_arrays: c_int;
pub extern var glad_glVertexAttribDivisorARB: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var GLAD_GL_ARB_internalformat_query: c_int;
pub extern var GLAD_GL_ARB_internalformat_query2: c_int;
pub extern var GLAD_GL_ARB_invalidate_subdata: c_int;
pub extern var GLAD_GL_ARB_map_buffer_alignment: c_int;
pub extern var GLAD_GL_ARB_map_buffer_range: c_int;
pub extern var GLAD_GL_ARB_matrix_palette: c_int;
pub extern var glad_glCurrentPaletteMatrixARB: ?*const fn (GLint) callconv(.C) void;
pub extern var glad_glMatrixIndexubvARB: ?*const fn (GLint, [*c]const GLubyte) callconv(.C) void;
pub extern var glad_glMatrixIndexusvARB: ?*const fn (GLint, [*c]const GLushort) callconv(.C) void;
pub extern var glad_glMatrixIndexuivARB: ?*const fn (GLint, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glMatrixIndexPointerARB: ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var GLAD_GL_ARB_multi_bind: c_int;
pub extern var GLAD_GL_ARB_multi_draw_indirect: c_int;
pub extern var GLAD_GL_ARB_multisample: c_int;
pub extern var glad_glSampleCoverageARB: ?*const fn (GLfloat, GLboolean) callconv(.C) void;
pub extern var GLAD_GL_ARB_multitexture: c_int;
pub extern var glad_glActiveTextureARB: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glClientActiveTextureARB: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glMultiTexCoord1dARB: ?*const fn (GLenum, GLdouble) callconv(.C) void;
pub extern var glad_glMultiTexCoord1dvARB: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glMultiTexCoord1fARB: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glMultiTexCoord1fvARB: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMultiTexCoord1iARB: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var glad_glMultiTexCoord1ivARB: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glMultiTexCoord1sARB: ?*const fn (GLenum, GLshort) callconv(.C) void;
pub extern var glad_glMultiTexCoord1svARB: ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glMultiTexCoord2dARB: ?*const fn (GLenum, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glMultiTexCoord2dvARB: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glMultiTexCoord2fARB: ?*const fn (GLenum, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glMultiTexCoord2fvARB: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMultiTexCoord2iARB: ?*const fn (GLenum, GLint, GLint) callconv(.C) void;
pub extern var glad_glMultiTexCoord2ivARB: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glMultiTexCoord2sARB: ?*const fn (GLenum, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glMultiTexCoord2svARB: ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glMultiTexCoord3dARB: ?*const fn (GLenum, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glMultiTexCoord3dvARB: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glMultiTexCoord3fARB: ?*const fn (GLenum, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glMultiTexCoord3fvARB: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMultiTexCoord3iARB: ?*const fn (GLenum, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glMultiTexCoord3ivARB: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glMultiTexCoord3sARB: ?*const fn (GLenum, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glMultiTexCoord3svARB: ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glMultiTexCoord4dARB: ?*const fn (GLenum, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glMultiTexCoord4dvARB: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glMultiTexCoord4fARB: ?*const fn (GLenum, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glMultiTexCoord4fvARB: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMultiTexCoord4iARB: ?*const fn (GLenum, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glMultiTexCoord4ivARB: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glMultiTexCoord4sARB: ?*const fn (GLenum, GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glMultiTexCoord4svARB: ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub extern var GLAD_GL_ARB_occlusion_query: c_int;
pub extern var glad_glGenQueriesARB: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glDeleteQueriesARB: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glIsQueryARB: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glBeginQueryARB: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glEndQueryARB: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glGetQueryivARB: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetQueryObjectivARB: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetQueryObjectuivARB: ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var GLAD_GL_ARB_occlusion_query2: c_int;
pub extern var GLAD_GL_ARB_parallel_shader_compile: c_int;
pub extern var glad_glMaxShaderCompilerThreadsARB: ?*const fn (GLuint) callconv(.C) void;
pub extern var GLAD_GL_ARB_pipeline_statistics_query: c_int;
pub extern var GLAD_GL_ARB_pixel_buffer_object: c_int;
pub extern var GLAD_GL_ARB_point_parameters: c_int;
pub extern var glad_glPointParameterfARB: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glPointParameterfvARB: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var GLAD_GL_ARB_point_sprite: c_int;
pub extern var GLAD_GL_ARB_polygon_offset_clamp: c_int;
pub extern var GLAD_GL_ARB_post_depth_coverage: c_int;
pub extern var GLAD_GL_ARB_program_interface_query: c_int;
pub extern var GLAD_GL_ARB_provoking_vertex: c_int;
pub extern var GLAD_GL_ARB_query_buffer_object: c_int;
pub extern var GLAD_GL_ARB_robust_buffer_access_behavior: c_int;
pub extern var GLAD_GL_ARB_robustness: c_int;
pub extern var glad_glGetGraphicsResetStatusARB: ?*const fn () callconv(.C) GLenum;
pub extern var glad_glGetnTexImageARB: ?*const fn (GLenum, GLint, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var glad_glReadnPixelsARB: ?*const fn (GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetnCompressedTexImageARB: ?*const fn (GLenum, GLint, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetnUniformfvARB: ?*const fn (GLuint, GLint, GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetnUniformivARB: ?*const fn (GLuint, GLint, GLsizei, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetnUniformuivARB: ?*const fn (GLuint, GLint, GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glGetnUniformdvARB: ?*const fn (GLuint, GLint, GLsizei, [*c]GLdouble) callconv(.C) void;
pub extern var glad_glGetnMapdvARB: ?*const fn (GLenum, GLenum, GLsizei, [*c]GLdouble) callconv(.C) void;
pub extern var glad_glGetnMapfvARB: ?*const fn (GLenum, GLenum, GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetnMapivARB: ?*const fn (GLenum, GLenum, GLsizei, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetnPixelMapfvARB: ?*const fn (GLenum, GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetnPixelMapuivARB: ?*const fn (GLenum, GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glGetnPixelMapusvARB: ?*const fn (GLenum, GLsizei, [*c]GLushort) callconv(.C) void;
pub extern var glad_glGetnPolygonStippleARB: ?*const fn (GLsizei, [*c]GLubyte) callconv(.C) void;
pub extern var glad_glGetnColorTableARB: ?*const fn (GLenum, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetnConvolutionFilterARB: ?*const fn (GLenum, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetnSeparableFilterARB: ?*const fn (GLenum, GLenum, GLenum, GLsizei, ?*anyopaque, GLsizei, ?*anyopaque, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetnHistogramARB: ?*const fn (GLenum, GLboolean, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetnMinmaxARB: ?*const fn (GLenum, GLboolean, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var GLAD_GL_ARB_robustness_isolation: c_int;
pub extern var GLAD_GL_ARB_sample_locations: c_int;
pub extern var glad_glFramebufferSampleLocationsfvARB: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glNamedFramebufferSampleLocationsfvARB: ?*const fn (GLuint, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glEvaluateDepthValuesARB: ?*const fn () callconv(.C) void;
pub extern var GLAD_GL_ARB_sample_shading: c_int;
pub extern var glad_glMinSampleShadingARB: ?*const fn (GLfloat) callconv(.C) void;
pub extern var GLAD_GL_ARB_sampler_objects: c_int;
pub extern var GLAD_GL_ARB_seamless_cube_map: c_int;
pub extern var GLAD_GL_ARB_seamless_cubemap_per_texture: c_int;
pub extern var GLAD_GL_ARB_separate_shader_objects: c_int;
pub extern var GLAD_GL_ARB_shader_atomic_counter_ops: c_int;
pub extern var GLAD_GL_ARB_shader_atomic_counters: c_int;
pub extern var GLAD_GL_ARB_shader_ballot: c_int;
pub extern var GLAD_GL_ARB_shader_bit_encoding: c_int;
pub extern var GLAD_GL_ARB_shader_clock: c_int;
pub extern var GLAD_GL_ARB_shader_draw_parameters: c_int;
pub extern var GLAD_GL_ARB_shader_group_vote: c_int;
pub extern var GLAD_GL_ARB_shader_image_load_store: c_int;
pub extern var GLAD_GL_ARB_shader_image_size: c_int;
pub extern var GLAD_GL_ARB_shader_objects: c_int;
pub extern var glad_glDeleteObjectARB: ?*const fn (GLhandleARB) callconv(.C) void;
pub extern var glad_glGetHandleARB: ?*const fn (GLenum) callconv(.C) GLhandleARB;
pub extern var glad_glDetachObjectARB: ?*const fn (GLhandleARB, GLhandleARB) callconv(.C) void;
pub extern var glad_glCreateShaderObjectARB: ?*const fn (GLenum) callconv(.C) GLhandleARB;
pub extern var glad_glShaderSourceARB: ?*const fn (GLhandleARB, GLsizei, [*c][*c]const GLcharARB, [*c]const GLint) callconv(.C) void;
pub extern var glad_glCompileShaderARB: ?*const fn (GLhandleARB) callconv(.C) void;
pub extern var glad_glCreateProgramObjectARB: ?*const fn () callconv(.C) GLhandleARB;
pub extern var glad_glAttachObjectARB: ?*const fn (GLhandleARB, GLhandleARB) callconv(.C) void;
pub extern var glad_glLinkProgramARB: ?*const fn (GLhandleARB) callconv(.C) void;
pub extern var glad_glUseProgramObjectARB: ?*const fn (GLhandleARB) callconv(.C) void;
pub extern var glad_glValidateProgramARB: ?*const fn (GLhandleARB) callconv(.C) void;
pub extern var glad_glUniform1fARB: ?*const fn (GLint, GLfloat) callconv(.C) void;
pub extern var glad_glUniform2fARB: ?*const fn (GLint, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glUniform3fARB: ?*const fn (GLint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glUniform4fARB: ?*const fn (GLint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glUniform1iARB: ?*const fn (GLint, GLint) callconv(.C) void;
pub extern var glad_glUniform2iARB: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glUniform3iARB: ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glUniform4iARB: ?*const fn (GLint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glUniform1fvARB: ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glUniform2fvARB: ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glUniform3fvARB: ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glUniform4fvARB: ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glUniform1ivARB: ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glUniform2ivARB: ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glUniform3ivARB: ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glUniform4ivARB: ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glUniformMatrix2fvARB: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glUniformMatrix3fvARB: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glUniformMatrix4fvARB: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glGetObjectParameterfvARB: ?*const fn (GLhandleARB, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetObjectParameterivARB: ?*const fn (GLhandleARB, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetInfoLogARB: ?*const fn (GLhandleARB, GLsizei, [*c]GLsizei, [*c]GLcharARB) callconv(.C) void;
pub extern var glad_glGetAttachedObjectsARB: ?*const fn (GLhandleARB, GLsizei, [*c]GLsizei, [*c]GLhandleARB) callconv(.C) void;
pub extern var glad_glGetUniformLocationARB: ?*const fn (GLhandleARB, [*c]const GLcharARB) callconv(.C) GLint;
pub extern var glad_glGetActiveUniformARB: ?*const fn (GLhandleARB, GLuint, GLsizei, [*c]GLsizei, [*c]GLint, [*c]GLenum, [*c]GLcharARB) callconv(.C) void;
pub extern var glad_glGetUniformfvARB: ?*const fn (GLhandleARB, GLint, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetUniformivARB: ?*const fn (GLhandleARB, GLint, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetShaderSourceARB: ?*const fn (GLhandleARB, GLsizei, [*c]GLsizei, [*c]GLcharARB) callconv(.C) void;
pub extern var GLAD_GL_ARB_shader_precision: c_int;
pub extern var GLAD_GL_ARB_shader_stencil_export: c_int;
pub extern var GLAD_GL_ARB_shader_storage_buffer_object: c_int;
pub extern var GLAD_GL_ARB_shader_subroutine: c_int;
pub extern var GLAD_GL_ARB_shader_texture_image_samples: c_int;
pub extern var GLAD_GL_ARB_shader_texture_lod: c_int;
pub extern var GLAD_GL_ARB_shader_viewport_layer_array: c_int;
pub extern var GLAD_GL_ARB_shading_language_100: c_int;
pub extern var GLAD_GL_ARB_shading_language_420pack: c_int;
pub extern var GLAD_GL_ARB_shading_language_include: c_int;
pub extern var glad_glNamedStringARB: ?*const fn (GLenum, GLint, [*c]const GLchar, GLint, [*c]const GLchar) callconv(.C) void;
pub extern var glad_glDeleteNamedStringARB: ?*const fn (GLint, [*c]const GLchar) callconv(.C) void;
pub extern var glad_glCompileShaderIncludeARB: ?*const fn (GLuint, GLsizei, [*c]const [*c]const GLchar, [*c]const GLint) callconv(.C) void;
pub extern var glad_glIsNamedStringARB: ?*const fn (GLint, [*c]const GLchar) callconv(.C) GLboolean;
pub extern var glad_glGetNamedStringARB: ?*const fn (GLint, [*c]const GLchar, GLsizei, [*c]GLint, [*c]GLchar) callconv(.C) void;
pub extern var glad_glGetNamedStringivARB: ?*const fn (GLint, [*c]const GLchar, GLenum, [*c]GLint) callconv(.C) void;
pub extern var GLAD_GL_ARB_shading_language_packing: c_int;
pub extern var GLAD_GL_ARB_shadow: c_int;
pub extern var GLAD_GL_ARB_shadow_ambient: c_int;
pub extern var GLAD_GL_ARB_sparse_buffer: c_int;
pub extern var glad_glBufferPageCommitmentARB: ?*const fn (GLenum, GLintptr, GLsizeiptr, GLboolean) callconv(.C) void;
pub extern var glad_glNamedBufferPageCommitmentEXT: ?*const fn (GLuint, GLintptr, GLsizeiptr, GLboolean) callconv(.C) void;
pub extern var glad_glNamedBufferPageCommitmentARB: ?*const fn (GLuint, GLintptr, GLsizeiptr, GLboolean) callconv(.C) void;
pub extern var GLAD_GL_ARB_sparse_texture: c_int;
pub extern var glad_glTexPageCommitmentARB: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var GLAD_GL_ARB_sparse_texture2: c_int;
pub extern var GLAD_GL_ARB_sparse_texture_clamp: c_int;
pub extern var GLAD_GL_ARB_spirv_extensions: c_int;
pub extern var GLAD_GL_ARB_stencil_texturing: c_int;
pub extern var GLAD_GL_ARB_sync: c_int;
pub extern var GLAD_GL_ARB_tessellation_shader: c_int;
pub extern var GLAD_GL_ARB_texture_barrier: c_int;
pub extern var GLAD_GL_ARB_texture_border_clamp: c_int;
pub extern var GLAD_GL_ARB_texture_buffer_object: c_int;
pub extern var glad_glTexBufferARB: ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var GLAD_GL_ARB_texture_buffer_object_rgb32: c_int;
pub extern var GLAD_GL_ARB_texture_buffer_range: c_int;
pub extern var GLAD_GL_ARB_texture_compression: c_int;
pub extern var glad_glCompressedTexImage3DARB: ?*const fn (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCompressedTexImage2DARB: ?*const fn (GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCompressedTexImage1DARB: ?*const fn (GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCompressedTexSubImage3DARB: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCompressedTexSubImage2DARB: ?*const fn (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCompressedTexSubImage1DARB: ?*const fn (GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glGetCompressedTexImageARB: ?*const fn (GLenum, GLint, ?*anyopaque) callconv(.C) void;
pub extern var GLAD_GL_ARB_texture_compression_bptc: c_int;
pub extern var GLAD_GL_ARB_texture_compression_rgtc: c_int;
pub extern var GLAD_GL_ARB_texture_cube_map: c_int;
pub extern var GLAD_GL_ARB_texture_cube_map_array: c_int;
pub extern var GLAD_GL_ARB_texture_env_add: c_int;
pub extern var GLAD_GL_ARB_texture_env_combine: c_int;
pub extern var GLAD_GL_ARB_texture_env_crossbar: c_int;
pub extern var GLAD_GL_ARB_texture_env_dot3: c_int;
pub extern var GLAD_GL_ARB_texture_filter_anisotropic: c_int;
pub extern var GLAD_GL_ARB_texture_filter_minmax: c_int;
pub extern var GLAD_GL_ARB_texture_float: c_int;
pub extern var GLAD_GL_ARB_texture_gather: c_int;
pub extern var GLAD_GL_ARB_texture_mirror_clamp_to_edge: c_int;
pub extern var GLAD_GL_ARB_texture_mirrored_repeat: c_int;
pub extern var GLAD_GL_ARB_texture_multisample: c_int;
pub extern var GLAD_GL_ARB_texture_non_power_of_two: c_int;
pub extern var GLAD_GL_ARB_texture_query_levels: c_int;
pub extern var GLAD_GL_ARB_texture_query_lod: c_int;
pub extern var GLAD_GL_ARB_texture_rectangle: c_int;
pub extern var GLAD_GL_ARB_texture_rg: c_int;
pub extern var GLAD_GL_ARB_texture_rgb10_a2ui: c_int;
pub extern var GLAD_GL_ARB_texture_stencil8: c_int;
pub extern var GLAD_GL_ARB_texture_storage: c_int;
pub extern var GLAD_GL_ARB_texture_storage_multisample: c_int;
pub extern var GLAD_GL_ARB_texture_swizzle: c_int;
pub extern var GLAD_GL_ARB_texture_view: c_int;
pub extern var GLAD_GL_ARB_timer_query: c_int;
pub extern var GLAD_GL_ARB_transform_feedback2: c_int;
pub extern var GLAD_GL_ARB_transform_feedback3: c_int;
pub extern var GLAD_GL_ARB_transform_feedback_instanced: c_int;
pub extern var GLAD_GL_ARB_transform_feedback_overflow_query: c_int;
pub extern var GLAD_GL_ARB_transpose_matrix: c_int;
pub extern var glad_glLoadTransposeMatrixfARB: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glLoadTransposeMatrixdARB: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glMultTransposeMatrixfARB: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMultTransposeMatrixdARB: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var GLAD_GL_ARB_uniform_buffer_object: c_int;
pub extern var GLAD_GL_ARB_vertex_array_bgra: c_int;
pub extern var GLAD_GL_ARB_vertex_array_object: c_int;
pub extern var GLAD_GL_ARB_vertex_attrib_64bit: c_int;
pub extern var GLAD_GL_ARB_vertex_attrib_binding: c_int;
pub extern var GLAD_GL_ARB_vertex_blend: c_int;
pub extern var glad_glWeightbvARB: ?*const fn (GLint, [*c]const GLbyte) callconv(.C) void;
pub extern var glad_glWeightsvARB: ?*const fn (GLint, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glWeightivARB: ?*const fn (GLint, [*c]const GLint) callconv(.C) void;
pub extern var glad_glWeightfvARB: ?*const fn (GLint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glWeightdvARB: ?*const fn (GLint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glWeightubvARB: ?*const fn (GLint, [*c]const GLubyte) callconv(.C) void;
pub extern var glad_glWeightusvARB: ?*const fn (GLint, [*c]const GLushort) callconv(.C) void;
pub extern var glad_glWeightuivARB: ?*const fn (GLint, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glWeightPointerARB: ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glVertexBlendARB: ?*const fn (GLint) callconv(.C) void;
pub extern var GLAD_GL_ARB_vertex_buffer_object: c_int;
pub extern var glad_glBindBufferARB: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glDeleteBuffersARB: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGenBuffersARB: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glIsBufferARB: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glBufferDataARB: ?*const fn (GLenum, GLsizeiptrARB, ?*const anyopaque, GLenum) callconv(.C) void;
pub extern var glad_glBufferSubDataARB: ?*const fn (GLenum, GLintptrARB, GLsizeiptrARB, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glGetBufferSubDataARB: ?*const fn (GLenum, GLintptrARB, GLsizeiptrARB, ?*anyopaque) callconv(.C) void;
pub extern var glad_glMapBufferARB: ?*const fn (GLenum, GLenum) callconv(.C) ?*anyopaque;
pub extern var glad_glUnmapBufferARB: ?*const fn (GLenum) callconv(.C) GLboolean;
pub extern var glad_glGetBufferParameterivARB: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetBufferPointervARB: ?*const fn (GLenum, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var GLAD_GL_ARB_vertex_program: c_int;
pub extern var glad_glVertexAttrib1dARB: ?*const fn (GLuint, GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttrib1dvARB: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttrib1fARB: ?*const fn (GLuint, GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttrib1fvARB: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttrib1sARB: ?*const fn (GLuint, GLshort) callconv(.C) void;
pub extern var glad_glVertexAttrib1svARB: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertexAttrib2dARB: ?*const fn (GLuint, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttrib2dvARB: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttrib2fARB: ?*const fn (GLuint, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttrib2fvARB: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttrib2sARB: ?*const fn (GLuint, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glVertexAttrib2svARB: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertexAttrib3dARB: ?*const fn (GLuint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttrib3dvARB: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttrib3fARB: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttrib3fvARB: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttrib3sARB: ?*const fn (GLuint, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glVertexAttrib3svARB: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertexAttrib4NbvARB: ?*const fn (GLuint, [*c]const GLbyte) callconv(.C) void;
pub extern var glad_glVertexAttrib4NivARB: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var glad_glVertexAttrib4NsvARB: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertexAttrib4NubARB: ?*const fn (GLuint, GLubyte, GLubyte, GLubyte, GLubyte) callconv(.C) void;
pub extern var glad_glVertexAttrib4NubvARB: ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
pub extern var glad_glVertexAttrib4NuivARB: ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glVertexAttrib4NusvARB: ?*const fn (GLuint, [*c]const GLushort) callconv(.C) void;
pub extern var glad_glVertexAttrib4bvARB: ?*const fn (GLuint, [*c]const GLbyte) callconv(.C) void;
pub extern var glad_glVertexAttrib4dARB: ?*const fn (GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttrib4dvARB: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttrib4fARB: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttrib4fvARB: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttrib4ivARB: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var glad_glVertexAttrib4sARB: ?*const fn (GLuint, GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glVertexAttrib4svARB: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertexAttrib4ubvARB: ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
pub extern var glad_glVertexAttrib4uivARB: ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glVertexAttrib4usvARB: ?*const fn (GLuint, [*c]const GLushort) callconv(.C) void;
pub extern var glad_glVertexAttribPointerARB: ?*const fn (GLuint, GLint, GLenum, GLboolean, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glEnableVertexAttribArrayARB: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glDisableVertexAttribArrayARB: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glGetVertexAttribdvARB: ?*const fn (GLuint, GLenum, [*c]GLdouble) callconv(.C) void;
pub extern var glad_glGetVertexAttribfvARB: ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetVertexAttribivARB: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetVertexAttribPointervARB: ?*const fn (GLuint, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var GLAD_GL_ARB_vertex_shader: c_int;
pub extern var glad_glBindAttribLocationARB: ?*const fn (GLhandleARB, GLuint, [*c]const GLcharARB) callconv(.C) void;
pub extern var glad_glGetActiveAttribARB: ?*const fn (GLhandleARB, GLuint, GLsizei, [*c]GLsizei, [*c]GLint, [*c]GLenum, [*c]GLcharARB) callconv(.C) void;
pub extern var glad_glGetAttribLocationARB: ?*const fn (GLhandleARB, [*c]const GLcharARB) callconv(.C) GLint;
pub extern var GLAD_GL_ARB_vertex_type_10f_11f_11f_rev: c_int;
pub extern var GLAD_GL_ARB_vertex_type_2_10_10_10_rev: c_int;
pub extern var GLAD_GL_ARB_viewport_array: c_int;
pub extern var glad_glDepthRangeArraydvNV: ?*const fn (GLuint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glDepthRangeIndexeddNV: ?*const fn (GLuint, GLdouble, GLdouble) callconv(.C) void;
pub extern var GLAD_GL_ARB_window_pos: c_int;
pub extern var glad_glWindowPos2dARB: ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glWindowPos2dvARB: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glWindowPos2fARB: ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glWindowPos2fvARB: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glWindowPos2iARB: ?*const fn (GLint, GLint) callconv(.C) void;
pub extern var glad_glWindowPos2ivARB: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var glad_glWindowPos2sARB: ?*const fn (GLshort, GLshort) callconv(.C) void;
pub extern var glad_glWindowPos2svARB: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var glad_glWindowPos3dARB: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glWindowPos3dvARB: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glWindowPos3fARB: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glWindowPos3fvARB: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glWindowPos3iARB: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glWindowPos3ivARB: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var glad_glWindowPos3sARB: ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glWindowPos3svARB: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var GLAD_GL_ATI_draw_buffers: c_int;
pub extern var glad_glDrawBuffersATI: ?*const fn (GLsizei, [*c]const GLenum) callconv(.C) void;
pub extern var GLAD_GL_ATI_element_array: c_int;
pub extern var glad_glElementPointerATI: ?*const fn (GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glDrawElementArrayATI: ?*const fn (GLenum, GLsizei) callconv(.C) void;
pub extern var glad_glDrawRangeElementArrayATI: ?*const fn (GLenum, GLuint, GLuint, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_ATI_envmap_bumpmap: c_int;
pub extern var glad_glTexBumpParameterivATI: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glTexBumpParameterfvATI: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glGetTexBumpParameterivATI: ?*const fn (GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetTexBumpParameterfvATI: ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var GLAD_GL_ATI_fragment_shader: c_int;
pub extern var glad_glGenFragmentShadersATI: ?*const fn (GLuint) callconv(.C) GLuint;
pub extern var glad_glBindFragmentShaderATI: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glDeleteFragmentShaderATI: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glBeginFragmentShaderATI: ?*const fn () callconv(.C) void;
pub extern var glad_glEndFragmentShaderATI: ?*const fn () callconv(.C) void;
pub extern var glad_glPassTexCoordATI: ?*const fn (GLuint, GLuint, GLenum) callconv(.C) void;
pub extern var glad_glSampleMapATI: ?*const fn (GLuint, GLuint, GLenum) callconv(.C) void;
pub extern var glad_glColorFragmentOp1ATI: ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glColorFragmentOp2ATI: ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glColorFragmentOp3ATI: ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glAlphaFragmentOp1ATI: ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glAlphaFragmentOp2ATI: ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glAlphaFragmentOp3ATI: ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glSetFragmentShaderConstantATI: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var GLAD_GL_ATI_map_object_buffer: c_int;
pub extern var glad_glMapObjectBufferATI: ?*const fn (GLuint) callconv(.C) ?*anyopaque;
pub extern var glad_glUnmapObjectBufferATI: ?*const fn (GLuint) callconv(.C) void;
pub extern var GLAD_GL_ATI_meminfo: c_int;
pub extern var GLAD_GL_ATI_pixel_format_float: c_int;
pub extern var GLAD_GL_ATI_pn_triangles: c_int;
pub extern var glad_glPNTrianglesiATI: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var glad_glPNTrianglesfATI: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var GLAD_GL_ATI_separate_stencil: c_int;
pub extern var glad_glStencilOpSeparateATI: ?*const fn (GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var glad_glStencilFuncSeparateATI: ?*const fn (GLenum, GLenum, GLint, GLuint) callconv(.C) void;
pub extern var GLAD_GL_ATI_text_fragment_shader: c_int;
pub extern var GLAD_GL_ATI_texture_env_combine3: c_int;
pub extern var GLAD_GL_ATI_texture_float: c_int;
pub extern var GLAD_GL_ATI_texture_mirror_once: c_int;
pub extern var GLAD_GL_ATI_vertex_array_object: c_int;
pub extern var glad_glNewObjectBufferATI: ?*const fn (GLsizei, ?*const anyopaque, GLenum) callconv(.C) GLuint;
pub extern var glad_glIsObjectBufferATI: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glUpdateObjectBufferATI: ?*const fn (GLuint, GLuint, GLsizei, ?*const anyopaque, GLenum) callconv(.C) void;
pub extern var glad_glGetObjectBufferfvATI: ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetObjectBufferivATI: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glFreeObjectBufferATI: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glArrayObjectATI: ?*const fn (GLenum, GLint, GLenum, GLsizei, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glGetArrayObjectfvATI: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetArrayObjectivATI: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glVariantArrayObjectATI: ?*const fn (GLuint, GLenum, GLsizei, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glGetVariantArrayObjectfvATI: ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetVariantArrayObjectivATI: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var GLAD_GL_ATI_vertex_attrib_array_object: c_int;
pub extern var glad_glVertexAttribArrayObjectATI: ?*const fn (GLuint, GLint, GLenum, GLboolean, GLsizei, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glGetVertexAttribArrayObjectfvATI: ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetVertexAttribArrayObjectivATI: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var GLAD_GL_ATI_vertex_streams: c_int;
pub extern var glad_glVertexStream1sATI: ?*const fn (GLenum, GLshort) callconv(.C) void;
pub extern var glad_glVertexStream1svATI: ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertexStream1iATI: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var glad_glVertexStream1ivATI: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glVertexStream1fATI: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glVertexStream1fvATI: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glVertexStream1dATI: ?*const fn (GLenum, GLdouble) callconv(.C) void;
pub extern var glad_glVertexStream1dvATI: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexStream2sATI: ?*const fn (GLenum, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glVertexStream2svATI: ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertexStream2iATI: ?*const fn (GLenum, GLint, GLint) callconv(.C) void;
pub extern var glad_glVertexStream2ivATI: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glVertexStream2fATI: ?*const fn (GLenum, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glVertexStream2fvATI: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glVertexStream2dATI: ?*const fn (GLenum, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glVertexStream2dvATI: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexStream3sATI: ?*const fn (GLenum, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glVertexStream3svATI: ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertexStream3iATI: ?*const fn (GLenum, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glVertexStream3ivATI: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glVertexStream3fATI: ?*const fn (GLenum, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glVertexStream3fvATI: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glVertexStream3dATI: ?*const fn (GLenum, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glVertexStream3dvATI: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexStream4sATI: ?*const fn (GLenum, GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glVertexStream4svATI: ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertexStream4iATI: ?*const fn (GLenum, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glVertexStream4ivATI: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glVertexStream4fATI: ?*const fn (GLenum, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glVertexStream4fvATI: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glVertexStream4dATI: ?*const fn (GLenum, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glVertexStream4dvATI: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glNormalStream3bATI: ?*const fn (GLenum, GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var glad_glNormalStream3bvATI: ?*const fn (GLenum, [*c]const GLbyte) callconv(.C) void;
pub extern var glad_glNormalStream3sATI: ?*const fn (GLenum, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glNormalStream3svATI: ?*const fn (GLenum, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glNormalStream3iATI: ?*const fn (GLenum, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glNormalStream3ivATI: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glNormalStream3fATI: ?*const fn (GLenum, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glNormalStream3fvATI: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glNormalStream3dATI: ?*const fn (GLenum, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glNormalStream3dvATI: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glClientActiveVertexStreamATI: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glVertexBlendEnviATI: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var glad_glVertexBlendEnvfATI: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var GLAD_GL_EXT_422_pixels: c_int;
pub extern var GLAD_GL_EXT_EGL_image_storage: c_int;
pub extern var glad_glEGLImageTargetTexStorageEXT: ?*const fn (GLenum, GLeglImageOES, [*c]const GLint) callconv(.C) void;
pub extern var glad_glEGLImageTargetTextureStorageEXT: ?*const fn (GLuint, GLeglImageOES, [*c]const GLint) callconv(.C) void;
pub extern var GLAD_GL_EXT_EGL_sync: c_int;
pub extern var GLAD_GL_EXT_abgr: c_int;
pub extern var GLAD_GL_EXT_bgra: c_int;
pub extern var GLAD_GL_EXT_bindable_uniform: c_int;
pub extern var glad_glUniformBufferEXT: ?*const fn (GLuint, GLint, GLuint) callconv(.C) void;
pub extern var glad_glGetUniformBufferSizeEXT: ?*const fn (GLuint, GLint) callconv(.C) GLint;
pub extern var glad_glGetUniformOffsetEXT: ?*const fn (GLuint, GLint) callconv(.C) GLintptr;
pub extern var GLAD_GL_EXT_blend_color: c_int;
pub extern var glad_glBlendColorEXT: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var GLAD_GL_EXT_blend_equation_separate: c_int;
pub extern var glad_glBlendEquationSeparateEXT: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var GLAD_GL_EXT_blend_func_separate: c_int;
pub extern var glad_glBlendFuncSeparateEXT: ?*const fn (GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var GLAD_GL_EXT_blend_logic_op: c_int;
pub extern var GLAD_GL_EXT_blend_minmax: c_int;
pub extern var glad_glBlendEquationEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var GLAD_GL_EXT_blend_subtract: c_int;
pub extern var GLAD_GL_EXT_clip_volume_hint: c_int;
pub extern var GLAD_GL_EXT_cmyka: c_int;
pub extern var GLAD_GL_EXT_color_subtable: c_int;
pub extern var glad_glColorSubTableEXT: ?*const fn (GLenum, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCopyColorSubTableEXT: ?*const fn (GLenum, GLsizei, GLint, GLint, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_EXT_compiled_vertex_array: c_int;
pub extern var glad_glLockArraysEXT: ?*const fn (GLint, GLsizei) callconv(.C) void;
pub extern var glad_glUnlockArraysEXT: ?*const fn () callconv(.C) void;
pub extern var GLAD_GL_EXT_convolution: c_int;
pub extern var glad_glConvolutionFilter1DEXT: ?*const fn (GLenum, GLenum, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glConvolutionFilter2DEXT: ?*const fn (GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glConvolutionParameterfEXT: ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glConvolutionParameterfvEXT: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glConvolutionParameteriEXT: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var glad_glConvolutionParameterivEXT: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glCopyConvolutionFilter1DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei) callconv(.C) void;
pub extern var glad_glCopyConvolutionFilter2DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glGetConvolutionFilterEXT: ?*const fn (GLenum, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetConvolutionParameterfvEXT: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetConvolutionParameterivEXT: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetSeparableFilterEXT: ?*const fn (GLenum, GLenum, GLenum, ?*anyopaque, ?*anyopaque, ?*anyopaque) callconv(.C) void;
pub extern var glad_glSeparableFilter2DEXT: ?*const fn (GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque, ?*const anyopaque) callconv(.C) void;
pub extern var GLAD_GL_EXT_coordinate_frame: c_int;
pub extern var glad_glTangent3bEXT: ?*const fn (GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var glad_glTangent3bvEXT: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var glad_glTangent3dEXT: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glTangent3dvEXT: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glTangent3fEXT: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glTangent3fvEXT: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glTangent3iEXT: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glTangent3ivEXT: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var glad_glTangent3sEXT: ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glTangent3svEXT: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var glad_glBinormal3bEXT: ?*const fn (GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var glad_glBinormal3bvEXT: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var glad_glBinormal3dEXT: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glBinormal3dvEXT: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glBinormal3fEXT: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glBinormal3fvEXT: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glBinormal3iEXT: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glBinormal3ivEXT: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var glad_glBinormal3sEXT: ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glBinormal3svEXT: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var glad_glTangentPointerEXT: ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glBinormalPointerEXT: ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var GLAD_GL_EXT_copy_texture: c_int;
pub extern var glad_glCopyTexImage1DEXT: ?*const fn (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) callconv(.C) void;
pub extern var glad_glCopyTexImage2DEXT: ?*const fn (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) callconv(.C) void;
pub extern var glad_glCopyTexSubImage1DEXT: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei) callconv(.C) void;
pub extern var glad_glCopyTexSubImage2DEXT: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glCopyTexSubImage3DEXT: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_EXT_cull_vertex: c_int;
pub extern var glad_glCullParameterdvEXT: ?*const fn (GLenum, [*c]GLdouble) callconv(.C) void;
pub extern var glad_glCullParameterfvEXT: ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var GLAD_GL_EXT_debug_label: c_int;
pub extern var glad_glLabelObjectEXT: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLchar) callconv(.C) void;
pub extern var glad_glGetObjectLabelEXT: ?*const fn (GLenum, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var GLAD_GL_EXT_debug_marker: c_int;
pub extern var glad_glInsertEventMarkerEXT: ?*const fn (GLsizei, [*c]const GLchar) callconv(.C) void;
pub extern var glad_glPushGroupMarkerEXT: ?*const fn (GLsizei, [*c]const GLchar) callconv(.C) void;
pub extern var glad_glPopGroupMarkerEXT: ?*const fn () callconv(.C) void;
pub extern var GLAD_GL_EXT_depth_bounds_test: c_int;
pub extern var glad_glDepthBoundsEXT: ?*const fn (GLclampd, GLclampd) callconv(.C) void;
pub extern var GLAD_GL_EXT_direct_state_access: c_int;
pub extern var glad_glMatrixLoadfEXT: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMatrixLoaddEXT: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glMatrixMultfEXT: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMatrixMultdEXT: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glMatrixLoadIdentityEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glMatrixRotatefEXT: ?*const fn (GLenum, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glMatrixRotatedEXT: ?*const fn (GLenum, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glMatrixScalefEXT: ?*const fn (GLenum, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glMatrixScaledEXT: ?*const fn (GLenum, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glMatrixTranslatefEXT: ?*const fn (GLenum, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glMatrixTranslatedEXT: ?*const fn (GLenum, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glMatrixFrustumEXT: ?*const fn (GLenum, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glMatrixOrthoEXT: ?*const fn (GLenum, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glMatrixPopEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glMatrixPushEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glClientAttribDefaultEXT: ?*const fn (GLbitfield) callconv(.C) void;
pub extern var glad_glPushClientAttribDefaultEXT: ?*const fn (GLbitfield) callconv(.C) void;
pub extern var glad_glTextureParameterfEXT: ?*const fn (GLuint, GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glTextureParameterfvEXT: ?*const fn (GLuint, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glTextureParameteriEXT: ?*const fn (GLuint, GLenum, GLenum, GLint) callconv(.C) void;
pub extern var glad_glTextureParameterivEXT: ?*const fn (GLuint, GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glTextureImage1DEXT: ?*const fn (GLuint, GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glTextureImage2DEXT: ?*const fn (GLuint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glTextureSubImage1DEXT: ?*const fn (GLuint, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glTextureSubImage2DEXT: ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCopyTextureImage1DEXT: ?*const fn (GLuint, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) callconv(.C) void;
pub extern var glad_glCopyTextureImage2DEXT: ?*const fn (GLuint, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) callconv(.C) void;
pub extern var glad_glCopyTextureSubImage1DEXT: ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei) callconv(.C) void;
pub extern var glad_glCopyTextureSubImage2DEXT: ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glGetTextureImageEXT: ?*const fn (GLuint, GLenum, GLint, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetTextureParameterfvEXT: ?*const fn (GLuint, GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetTextureParameterivEXT: ?*const fn (GLuint, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetTextureLevelParameterfvEXT: ?*const fn (GLuint, GLenum, GLint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetTextureLevelParameterivEXT: ?*const fn (GLuint, GLenum, GLint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glTextureImage3DEXT: ?*const fn (GLuint, GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glTextureSubImage3DEXT: ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCopyTextureSubImage3DEXT: ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glBindMultiTextureEXT: ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var glad_glMultiTexCoordPointerEXT: ?*const fn (GLenum, GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glMultiTexEnvfEXT: ?*const fn (GLenum, GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glMultiTexEnvfvEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMultiTexEnviEXT: ?*const fn (GLenum, GLenum, GLenum, GLint) callconv(.C) void;
pub extern var glad_glMultiTexEnvivEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glMultiTexGendEXT: ?*const fn (GLenum, GLenum, GLenum, GLdouble) callconv(.C) void;
pub extern var glad_glMultiTexGendvEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glMultiTexGenfEXT: ?*const fn (GLenum, GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glMultiTexGenfvEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMultiTexGeniEXT: ?*const fn (GLenum, GLenum, GLenum, GLint) callconv(.C) void;
pub extern var glad_glMultiTexGenivEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glGetMultiTexEnvfvEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetMultiTexEnvivEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetMultiTexGendvEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]GLdouble) callconv(.C) void;
pub extern var glad_glGetMultiTexGenfvEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetMultiTexGenivEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glMultiTexParameteriEXT: ?*const fn (GLenum, GLenum, GLenum, GLint) callconv(.C) void;
pub extern var glad_glMultiTexParameterivEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glMultiTexParameterfEXT: ?*const fn (GLenum, GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glMultiTexParameterfvEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMultiTexImage1DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glMultiTexImage2DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glMultiTexSubImage1DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glMultiTexSubImage2DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCopyMultiTexImage1DEXT: ?*const fn (GLenum, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) callconv(.C) void;
pub extern var glad_glCopyMultiTexImage2DEXT: ?*const fn (GLenum, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) callconv(.C) void;
pub extern var glad_glCopyMultiTexSubImage1DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei) callconv(.C) void;
pub extern var glad_glCopyMultiTexSubImage2DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glGetMultiTexImageEXT: ?*const fn (GLenum, GLenum, GLint, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetMultiTexParameterfvEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetMultiTexParameterivEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetMultiTexLevelParameterfvEXT: ?*const fn (GLenum, GLenum, GLint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetMultiTexLevelParameterivEXT: ?*const fn (GLenum, GLenum, GLint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glMultiTexImage3DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glMultiTexSubImage3DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCopyMultiTexSubImage3DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glEnableClientStateIndexedEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glDisableClientStateIndexedEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glGetFloatIndexedvEXT: ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetDoubleIndexedvEXT: ?*const fn (GLenum, GLuint, [*c]GLdouble) callconv(.C) void;
pub extern var glad_glGetPointerIndexedvEXT: ?*const fn (GLenum, GLuint, [*c]?*anyopaque) callconv(.C) void;
pub extern var glad_glEnableIndexedEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glDisableIndexedEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glIsEnabledIndexedEXT: ?*const fn (GLenum, GLuint) callconv(.C) GLboolean;
pub extern var glad_glGetIntegerIndexedvEXT: ?*const fn (GLenum, GLuint, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetBooleanIndexedvEXT: ?*const fn (GLenum, GLuint, [*c]GLboolean) callconv(.C) void;
pub extern var glad_glCompressedTextureImage3DEXT: ?*const fn (GLuint, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCompressedTextureImage2DEXT: ?*const fn (GLuint, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCompressedTextureImage1DEXT: ?*const fn (GLuint, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCompressedTextureSubImage3DEXT: ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCompressedTextureSubImage2DEXT: ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCompressedTextureSubImage1DEXT: ?*const fn (GLuint, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glGetCompressedTextureImageEXT: ?*const fn (GLuint, GLenum, GLint, ?*anyopaque) callconv(.C) void;
pub extern var glad_glCompressedMultiTexImage3DEXT: ?*const fn (GLenum, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCompressedMultiTexImage2DEXT: ?*const fn (GLenum, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCompressedMultiTexImage1DEXT: ?*const fn (GLenum, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCompressedMultiTexSubImage3DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCompressedMultiTexSubImage2DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCompressedMultiTexSubImage1DEXT: ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glGetCompressedMultiTexImageEXT: ?*const fn (GLenum, GLenum, GLint, ?*anyopaque) callconv(.C) void;
pub extern var glad_glMatrixLoadTransposefEXT: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMatrixLoadTransposedEXT: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glMatrixMultTransposefEXT: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMatrixMultTransposedEXT: ?*const fn (GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glNamedBufferDataEXT: ?*const fn (GLuint, GLsizeiptr, ?*const anyopaque, GLenum) callconv(.C) void;
pub extern var glad_glNamedBufferSubDataEXT: ?*const fn (GLuint, GLintptr, GLsizeiptr, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glMapNamedBufferEXT: ?*const fn (GLuint, GLenum) callconv(.C) ?*anyopaque;
pub extern var glad_glUnmapNamedBufferEXT: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glGetNamedBufferParameterivEXT: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetNamedBufferPointervEXT: ?*const fn (GLuint, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var glad_glGetNamedBufferSubDataEXT: ?*const fn (GLuint, GLintptr, GLsizeiptr, ?*anyopaque) callconv(.C) void;
pub extern var glad_glProgramUniform1fEXT: ?*const fn (GLuint, GLint, GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniform2fEXT: ?*const fn (GLuint, GLint, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniform3fEXT: ?*const fn (GLuint, GLint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniform4fEXT: ?*const fn (GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniform1iEXT: ?*const fn (GLuint, GLint, GLint) callconv(.C) void;
pub extern var glad_glProgramUniform2iEXT: ?*const fn (GLuint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glProgramUniform3iEXT: ?*const fn (GLuint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glProgramUniform4iEXT: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glProgramUniform1fvEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniform2fvEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniform3fvEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniform4fvEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniform1ivEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glProgramUniform2ivEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glProgramUniform3ivEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glProgramUniform4ivEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix2fvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix3fvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix4fvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix2x3fvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix3x2fvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix2x4fvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix4x2fvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix3x4fvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix4x3fvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glTextureBufferEXT: ?*const fn (GLuint, GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var glad_glMultiTexBufferEXT: ?*const fn (GLenum, GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var glad_glTextureParameterIivEXT: ?*const fn (GLuint, GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glTextureParameterIuivEXT: ?*const fn (GLuint, GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGetTextureParameterIivEXT: ?*const fn (GLuint, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetTextureParameterIuivEXT: ?*const fn (GLuint, GLenum, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var glad_glMultiTexParameterIivEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glMultiTexParameterIuivEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGetMultiTexParameterIivEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetMultiTexParameterIuivEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var glad_glProgramUniform1uiEXT: ?*const fn (GLuint, GLint, GLuint) callconv(.C) void;
pub extern var glad_glProgramUniform2uiEXT: ?*const fn (GLuint, GLint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glProgramUniform3uiEXT: ?*const fn (GLuint, GLint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glProgramUniform4uiEXT: ?*const fn (GLuint, GLint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glProgramUniform1uivEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glProgramUniform2uivEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glProgramUniform3uivEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glProgramUniform4uivEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glNamedProgramLocalParameters4fvEXT: ?*const fn (GLuint, GLenum, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glNamedProgramLocalParameterI4iEXT: ?*const fn (GLuint, GLenum, GLuint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glNamedProgramLocalParameterI4ivEXT: ?*const fn (GLuint, GLenum, GLuint, [*c]const GLint) callconv(.C) void;
pub extern var glad_glNamedProgramLocalParametersI4ivEXT: ?*const fn (GLuint, GLenum, GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glNamedProgramLocalParameterI4uiEXT: ?*const fn (GLuint, GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glNamedProgramLocalParameterI4uivEXT: ?*const fn (GLuint, GLenum, GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glNamedProgramLocalParametersI4uivEXT: ?*const fn (GLuint, GLenum, GLuint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGetNamedProgramLocalParameterIivEXT: ?*const fn (GLuint, GLenum, GLuint, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetNamedProgramLocalParameterIuivEXT: ?*const fn (GLuint, GLenum, GLuint, [*c]GLuint) callconv(.C) void;
pub extern var glad_glEnableClientStateiEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glDisableClientStateiEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glGetFloati_vEXT: ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetDoublei_vEXT: ?*const fn (GLenum, GLuint, [*c]GLdouble) callconv(.C) void;
pub extern var glad_glGetPointeri_vEXT: ?*const fn (GLenum, GLuint, [*c]?*anyopaque) callconv(.C) void;
pub extern var glad_glNamedProgramStringEXT: ?*const fn (GLuint, GLenum, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glNamedProgramLocalParameter4dEXT: ?*const fn (GLuint, GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glNamedProgramLocalParameter4dvEXT: ?*const fn (GLuint, GLenum, GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glNamedProgramLocalParameter4fEXT: ?*const fn (GLuint, GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glNamedProgramLocalParameter4fvEXT: ?*const fn (GLuint, GLenum, GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glGetNamedProgramLocalParameterdvEXT: ?*const fn (GLuint, GLenum, GLuint, [*c]GLdouble) callconv(.C) void;
pub extern var glad_glGetNamedProgramLocalParameterfvEXT: ?*const fn (GLuint, GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetNamedProgramivEXT: ?*const fn (GLuint, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetNamedProgramStringEXT: ?*const fn (GLuint, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var glad_glNamedRenderbufferStorageEXT: ?*const fn (GLuint, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glGetNamedRenderbufferParameterivEXT: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glNamedRenderbufferStorageMultisampleEXT: ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glNamedRenderbufferStorageMultisampleCoverageEXT: ?*const fn (GLuint, GLsizei, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glCheckNamedFramebufferStatusEXT: ?*const fn (GLuint, GLenum) callconv(.C) GLenum;
pub extern var glad_glNamedFramebufferTexture1DEXT: ?*const fn (GLuint, GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub extern var glad_glNamedFramebufferTexture2DEXT: ?*const fn (GLuint, GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub extern var glad_glNamedFramebufferTexture3DEXT: ?*const fn (GLuint, GLenum, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub extern var glad_glNamedFramebufferRenderbufferEXT: ?*const fn (GLuint, GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var glad_glGetNamedFramebufferAttachmentParameterivEXT: ?*const fn (GLuint, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGenerateTextureMipmapEXT: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var glad_glGenerateMultiTexMipmapEXT: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var glad_glFramebufferDrawBufferEXT: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var glad_glFramebufferDrawBuffersEXT: ?*const fn (GLuint, GLsizei, [*c]const GLenum) callconv(.C) void;
pub extern var glad_glFramebufferReadBufferEXT: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var glad_glGetFramebufferParameterivEXT: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glNamedCopyBufferSubDataEXT: ?*const fn (GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var glad_glNamedFramebufferTextureEXT: ?*const fn (GLuint, GLenum, GLuint, GLint) callconv(.C) void;
pub extern var glad_glNamedFramebufferTextureLayerEXT: ?*const fn (GLuint, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub extern var glad_glNamedFramebufferTextureFaceEXT: ?*const fn (GLuint, GLenum, GLuint, GLint, GLenum) callconv(.C) void;
pub extern var glad_glTextureRenderbufferEXT: ?*const fn (GLuint, GLenum, GLuint) callconv(.C) void;
pub extern var glad_glMultiTexRenderbufferEXT: ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var glad_glVertexArrayVertexOffsetEXT: ?*const fn (GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub extern var glad_glVertexArrayColorOffsetEXT: ?*const fn (GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub extern var glad_glVertexArrayEdgeFlagOffsetEXT: ?*const fn (GLuint, GLuint, GLsizei, GLintptr) callconv(.C) void;
pub extern var glad_glVertexArrayIndexOffsetEXT: ?*const fn (GLuint, GLuint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub extern var glad_glVertexArrayNormalOffsetEXT: ?*const fn (GLuint, GLuint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub extern var glad_glVertexArrayTexCoordOffsetEXT: ?*const fn (GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub extern var glad_glVertexArrayMultiTexCoordOffsetEXT: ?*const fn (GLuint, GLuint, GLenum, GLint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub extern var glad_glVertexArrayFogCoordOffsetEXT: ?*const fn (GLuint, GLuint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub extern var glad_glVertexArraySecondaryColorOffsetEXT: ?*const fn (GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub extern var glad_glVertexArrayVertexAttribOffsetEXT: ?*const fn (GLuint, GLuint, GLuint, GLint, GLenum, GLboolean, GLsizei, GLintptr) callconv(.C) void;
pub extern var glad_glVertexArrayVertexAttribIOffsetEXT: ?*const fn (GLuint, GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub extern var glad_glEnableVertexArrayEXT: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var glad_glDisableVertexArrayEXT: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var glad_glEnableVertexArrayAttribEXT: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var glad_glDisableVertexArrayAttribEXT: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var glad_glGetVertexArrayIntegervEXT: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetVertexArrayPointervEXT: ?*const fn (GLuint, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var glad_glGetVertexArrayIntegeri_vEXT: ?*const fn (GLuint, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetVertexArrayPointeri_vEXT: ?*const fn (GLuint, GLuint, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var glad_glMapNamedBufferRangeEXT: ?*const fn (GLuint, GLintptr, GLsizeiptr, GLbitfield) callconv(.C) ?*anyopaque;
pub extern var glad_glFlushMappedNamedBufferRangeEXT: ?*const fn (GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var glad_glNamedBufferStorageEXT: ?*const fn (GLuint, GLsizeiptr, ?*const anyopaque, GLbitfield) callconv(.C) void;
pub extern var glad_glClearNamedBufferDataEXT: ?*const fn (GLuint, GLenum, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glClearNamedBufferSubDataEXT: ?*const fn (GLuint, GLenum, GLsizeiptr, GLsizeiptr, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glNamedFramebufferParameteriEXT: ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub extern var glad_glGetNamedFramebufferParameterivEXT: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glProgramUniform1dEXT: ?*const fn (GLuint, GLint, GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniform2dEXT: ?*const fn (GLuint, GLint, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniform3dEXT: ?*const fn (GLuint, GLint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniform4dEXT: ?*const fn (GLuint, GLint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniform1dvEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniform2dvEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniform3dvEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniform4dvEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix2dvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix3dvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix4dvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix2x3dvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix2x4dvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix3x2dvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix3x4dvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix4x2dvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramUniformMatrix4x3dvEXT: ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glTextureBufferRangeEXT: ?*const fn (GLuint, GLenum, GLenum, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var glad_glTextureStorage1DEXT: ?*const fn (GLuint, GLenum, GLsizei, GLenum, GLsizei) callconv(.C) void;
pub extern var glad_glTextureStorage2DEXT: ?*const fn (GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glTextureStorage3DEXT: ?*const fn (GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glTextureStorage2DMultisampleEXT: ?*const fn (GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var glad_glTextureStorage3DMultisampleEXT: ?*const fn (GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var glad_glVertexArrayBindVertexBufferEXT: ?*const fn (GLuint, GLuint, GLuint, GLintptr, GLsizei) callconv(.C) void;
pub extern var glad_glVertexArrayVertexAttribFormatEXT: ?*const fn (GLuint, GLuint, GLint, GLenum, GLboolean, GLuint) callconv(.C) void;
pub extern var glad_glVertexArrayVertexAttribIFormatEXT: ?*const fn (GLuint, GLuint, GLint, GLenum, GLuint) callconv(.C) void;
pub extern var glad_glVertexArrayVertexAttribLFormatEXT: ?*const fn (GLuint, GLuint, GLint, GLenum, GLuint) callconv(.C) void;
pub extern var glad_glVertexArrayVertexAttribBindingEXT: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glVertexArrayVertexBindingDivisorEXT: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glVertexArrayVertexAttribLOffsetEXT: ?*const fn (GLuint, GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) callconv(.C) void;
pub extern var glad_glTexturePageCommitmentEXT: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var glad_glVertexArrayVertexAttribDivisorEXT: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var GLAD_GL_EXT_draw_buffers2: c_int;
pub extern var glad_glColorMaskIndexedEXT: ?*const fn (GLuint, GLboolean, GLboolean, GLboolean, GLboolean) callconv(.C) void;
pub extern var GLAD_GL_EXT_draw_instanced: c_int;
pub extern var glad_glDrawArraysInstancedEXT: ?*const fn (GLenum, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glDrawElementsInstancedEXT: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_EXT_draw_range_elements: c_int;
pub extern var glad_glDrawRangeElementsEXT: ?*const fn (GLenum, GLuint, GLuint, GLsizei, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var GLAD_GL_EXT_external_buffer: c_int;
pub extern var glad_glBufferStorageExternalEXT: ?*const fn (GLenum, GLintptr, GLsizeiptr, GLeglClientBufferEXT, GLbitfield) callconv(.C) void;
pub extern var glad_glNamedBufferStorageExternalEXT: ?*const fn (GLuint, GLintptr, GLsizeiptr, GLeglClientBufferEXT, GLbitfield) callconv(.C) void;
pub extern var GLAD_GL_EXT_fog_coord: c_int;
pub extern var glad_glFogCoordfEXT: ?*const fn (GLfloat) callconv(.C) void;
pub extern var glad_glFogCoordfvEXT: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glFogCoorddEXT: ?*const fn (GLdouble) callconv(.C) void;
pub extern var glad_glFogCoorddvEXT: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glFogCoordPointerEXT: ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var GLAD_GL_EXT_framebuffer_blit: c_int;
pub extern var glad_glBlitFramebufferEXT: ?*const fn (GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) callconv(.C) void;
pub extern var GLAD_GL_EXT_framebuffer_blit_layers: c_int;
pub extern var glad_glBlitFramebufferLayersEXT: ?*const fn (GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) callconv(.C) void;
pub extern var glad_glBlitFramebufferLayerEXT: ?*const fn (GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) callconv(.C) void;
pub extern var GLAD_GL_EXT_framebuffer_multisample: c_int;
pub extern var glad_glRenderbufferStorageMultisampleEXT: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_EXT_framebuffer_multisample_blit_scaled: c_int;
pub extern var GLAD_GL_EXT_framebuffer_object: c_int;
pub extern var glad_glIsRenderbufferEXT: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glBindRenderbufferEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glDeleteRenderbuffersEXT: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGenRenderbuffersEXT: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glRenderbufferStorageEXT: ?*const fn (GLenum, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glGetRenderbufferParameterivEXT: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glIsFramebufferEXT: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glBindFramebufferEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glDeleteFramebuffersEXT: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGenFramebuffersEXT: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glCheckFramebufferStatusEXT: ?*const fn (GLenum) callconv(.C) GLenum;
pub extern var glad_glFramebufferTexture1DEXT: ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub extern var glad_glFramebufferTexture2DEXT: ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub extern var glad_glFramebufferTexture3DEXT: ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub extern var glad_glFramebufferRenderbufferEXT: ?*const fn (GLenum, GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var glad_glGetFramebufferAttachmentParameterivEXT: ?*const fn (GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGenerateMipmapEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var GLAD_GL_EXT_framebuffer_sRGB: c_int;
pub extern var GLAD_GL_EXT_geometry_shader4: c_int;
pub extern var glad_glProgramParameteriEXT: ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub extern var GLAD_GL_EXT_gpu_program_parameters: c_int;
pub extern var glad_glProgramEnvParameters4fvEXT: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramLocalParameters4fvEXT: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var GLAD_GL_EXT_gpu_shader4: c_int;
pub extern var glad_glGetUniformuivEXT: ?*const fn (GLuint, GLint, [*c]GLuint) callconv(.C) void;
pub extern var glad_glBindFragDataLocationEXT: ?*const fn (GLuint, GLuint, [*c]const GLchar) callconv(.C) void;
pub extern var glad_glGetFragDataLocationEXT: ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLint;
pub extern var glad_glUniform1uiEXT: ?*const fn (GLint, GLuint) callconv(.C) void;
pub extern var glad_glUniform2uiEXT: ?*const fn (GLint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glUniform3uiEXT: ?*const fn (GLint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glUniform4uiEXT: ?*const fn (GLint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glUniform1uivEXT: ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glUniform2uivEXT: ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glUniform3uivEXT: ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glUniform4uivEXT: ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribI1iEXT: ?*const fn (GLuint, GLint) callconv(.C) void;
pub extern var glad_glVertexAttribI2iEXT: ?*const fn (GLuint, GLint, GLint) callconv(.C) void;
pub extern var glad_glVertexAttribI3iEXT: ?*const fn (GLuint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glVertexAttribI4iEXT: ?*const fn (GLuint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glVertexAttribI1uiEXT: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribI2uiEXT: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribI3uiEXT: ?*const fn (GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribI4uiEXT: ?*const fn (GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribI1ivEXT: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var glad_glVertexAttribI2ivEXT: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var glad_glVertexAttribI3ivEXT: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var glad_glVertexAttribI4ivEXT: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var glad_glVertexAttribI1uivEXT: ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribI2uivEXT: ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribI3uivEXT: ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribI4uivEXT: ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glVertexAttribI4bvEXT: ?*const fn (GLuint, [*c]const GLbyte) callconv(.C) void;
pub extern var glad_glVertexAttribI4svEXT: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertexAttribI4ubvEXT: ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
pub extern var glad_glVertexAttribI4usvEXT: ?*const fn (GLuint, [*c]const GLushort) callconv(.C) void;
pub extern var glad_glVertexAttribIPointerEXT: ?*const fn (GLuint, GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glGetVertexAttribIivEXT: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetVertexAttribIuivEXT: ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var GLAD_GL_EXT_histogram: c_int;
pub extern var glad_glGetHistogramEXT: ?*const fn (GLenum, GLboolean, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetHistogramParameterfvEXT: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetHistogramParameterivEXT: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetMinmaxEXT: ?*const fn (GLenum, GLboolean, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetMinmaxParameterfvEXT: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetMinmaxParameterivEXT: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glHistogramEXT: ?*const fn (GLenum, GLsizei, GLenum, GLboolean) callconv(.C) void;
pub extern var glad_glMinmaxEXT: ?*const fn (GLenum, GLenum, GLboolean) callconv(.C) void;
pub extern var glad_glResetHistogramEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glResetMinmaxEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var GLAD_GL_EXT_index_array_formats: c_int;
pub extern var GLAD_GL_EXT_index_func: c_int;
pub extern var glad_glIndexFuncEXT: ?*const fn (GLenum, GLclampf) callconv(.C) void;
pub extern var GLAD_GL_EXT_index_material: c_int;
pub extern var glad_glIndexMaterialEXT: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var GLAD_GL_EXT_index_texture: c_int;
pub extern var GLAD_GL_EXT_light_texture: c_int;
pub extern var glad_glApplyTextureEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glTextureLightEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glTextureMaterialEXT: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var GLAD_GL_EXT_memory_object: c_int;
pub extern var glad_glGetUnsignedBytevEXT: ?*const fn (GLenum, [*c]GLubyte) callconv(.C) void;
pub extern var glad_glGetUnsignedBytei_vEXT: ?*const fn (GLenum, GLuint, [*c]GLubyte) callconv(.C) void;
pub extern var glad_glDeleteMemoryObjectsEXT: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glIsMemoryObjectEXT: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glCreateMemoryObjectsEXT: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glMemoryObjectParameterivEXT: ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glGetMemoryObjectParameterivEXT: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glTexStorageMem2DEXT: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLuint, GLuint64) callconv(.C) void;
pub extern var glad_glTexStorageMem2DMultisampleEXT: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean, GLuint, GLuint64) callconv(.C) void;
pub extern var glad_glTexStorageMem3DEXT: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLuint, GLuint64) callconv(.C) void;
pub extern var glad_glTexStorageMem3DMultisampleEXT: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean, GLuint, GLuint64) callconv(.C) void;
pub extern var glad_glBufferStorageMemEXT: ?*const fn (GLenum, GLsizeiptr, GLuint, GLuint64) callconv(.C) void;
pub extern var glad_glTextureStorageMem2DEXT: ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLuint, GLuint64) callconv(.C) void;
pub extern var glad_glTextureStorageMem2DMultisampleEXT: ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLboolean, GLuint, GLuint64) callconv(.C) void;
pub extern var glad_glTextureStorageMem3DEXT: ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLuint, GLuint64) callconv(.C) void;
pub extern var glad_glTextureStorageMem3DMultisampleEXT: ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean, GLuint, GLuint64) callconv(.C) void;
pub extern var glad_glNamedBufferStorageMemEXT: ?*const fn (GLuint, GLsizeiptr, GLuint, GLuint64) callconv(.C) void;
pub extern var glad_glTexStorageMem1DEXT: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLuint, GLuint64) callconv(.C) void;
pub extern var glad_glTextureStorageMem1DEXT: ?*const fn (GLuint, GLsizei, GLenum, GLsizei, GLuint, GLuint64) callconv(.C) void;
pub extern var GLAD_GL_EXT_memory_object_fd: c_int;
pub extern var glad_glImportMemoryFdEXT: ?*const fn (GLuint, GLuint64, GLenum, GLint) callconv(.C) void;
pub extern var GLAD_GL_EXT_memory_object_win32: c_int;
pub extern var glad_glImportMemoryWin32HandleEXT: ?*const fn (GLuint, GLuint64, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var glad_glImportMemoryWin32NameEXT: ?*const fn (GLuint, GLuint64, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var GLAD_GL_EXT_misc_attribute: c_int;
pub extern var GLAD_GL_EXT_multi_draw_arrays: c_int;
pub extern var glad_glMultiDrawArraysEXT: ?*const fn (GLenum, [*c]const GLint, [*c]const GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glMultiDrawElementsEXT: ?*const fn (GLenum, [*c]const GLsizei, GLenum, [*c]const ?*const anyopaque, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_EXT_multisample: c_int;
pub extern var glad_glSampleMaskEXT: ?*const fn (GLclampf, GLboolean) callconv(.C) void;
pub extern var glad_glSamplePatternEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var GLAD_GL_EXT_multiview_tessellation_geometry_shader: c_int;
pub extern var GLAD_GL_EXT_multiview_texture_multisample: c_int;
pub extern var GLAD_GL_EXT_multiview_timer_query: c_int;
pub extern var GLAD_GL_EXT_packed_depth_stencil: c_int;
pub extern var GLAD_GL_EXT_packed_float: c_int;
pub extern var GLAD_GL_EXT_packed_pixels: c_int;
pub extern var GLAD_GL_EXT_paletted_texture: c_int;
pub extern var glad_glColorTableEXT: ?*const fn (GLenum, GLenum, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glGetColorTableEXT: ?*const fn (GLenum, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetColorTableParameterivEXT: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetColorTableParameterfvEXT: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var GLAD_GL_EXT_pixel_buffer_object: c_int;
pub extern var GLAD_GL_EXT_pixel_transform: c_int;
pub extern var glad_glPixelTransformParameteriEXT: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var glad_glPixelTransformParameterfEXT: ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glPixelTransformParameterivEXT: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glPixelTransformParameterfvEXT: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glGetPixelTransformParameterivEXT: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetPixelTransformParameterfvEXT: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var GLAD_GL_EXT_pixel_transform_color_table: c_int;
pub extern var GLAD_GL_EXT_point_parameters: c_int;
pub extern var glad_glPointParameterfEXT: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glPointParameterfvEXT: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var GLAD_GL_EXT_polygon_offset: c_int;
pub extern var glad_glPolygonOffsetEXT: ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub extern var GLAD_GL_EXT_polygon_offset_clamp: c_int;
pub extern var glad_glPolygonOffsetClampEXT: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var GLAD_GL_EXT_post_depth_coverage: c_int;
pub extern var GLAD_GL_EXT_provoking_vertex: c_int;
pub extern var glad_glProvokingVertexEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var GLAD_GL_EXT_raster_multisample: c_int;
pub extern var glad_glRasterSamplesEXT: ?*const fn (GLuint, GLboolean) callconv(.C) void;
pub extern var GLAD_GL_EXT_rescale_normal: c_int;
pub extern var GLAD_GL_EXT_secondary_color: c_int;
pub extern var glad_glSecondaryColor3bEXT: ?*const fn (GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var glad_glSecondaryColor3bvEXT: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var glad_glSecondaryColor3dEXT: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glSecondaryColor3dvEXT: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glSecondaryColor3fEXT: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glSecondaryColor3fvEXT: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glSecondaryColor3iEXT: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glSecondaryColor3ivEXT: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var glad_glSecondaryColor3sEXT: ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glSecondaryColor3svEXT: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var glad_glSecondaryColor3ubEXT: ?*const fn (GLubyte, GLubyte, GLubyte) callconv(.C) void;
pub extern var glad_glSecondaryColor3ubvEXT: ?*const fn ([*c]const GLubyte) callconv(.C) void;
pub extern var glad_glSecondaryColor3uiEXT: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glSecondaryColor3uivEXT: ?*const fn ([*c]const GLuint) callconv(.C) void;
pub extern var glad_glSecondaryColor3usEXT: ?*const fn (GLushort, GLushort, GLushort) callconv(.C) void;
pub extern var glad_glSecondaryColor3usvEXT: ?*const fn ([*c]const GLushort) callconv(.C) void;
pub extern var glad_glSecondaryColorPointerEXT: ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var GLAD_GL_EXT_semaphore: c_int;
pub extern var glad_glGenSemaphoresEXT: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glDeleteSemaphoresEXT: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glIsSemaphoreEXT: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glSemaphoreParameterui64vEXT: ?*const fn (GLuint, GLenum, [*c]const GLuint64) callconv(.C) void;
pub extern var glad_glGetSemaphoreParameterui64vEXT: ?*const fn (GLuint, GLenum, [*c]GLuint64) callconv(.C) void;
pub extern var glad_glWaitSemaphoreEXT: ?*const fn (GLuint, GLuint, [*c]const GLuint, GLuint, [*c]const GLuint, [*c]const GLenum) callconv(.C) void;
pub extern var glad_glSignalSemaphoreEXT: ?*const fn (GLuint, GLuint, [*c]const GLuint, GLuint, [*c]const GLuint, [*c]const GLenum) callconv(.C) void;
pub extern var GLAD_GL_EXT_semaphore_fd: c_int;
pub extern var glad_glImportSemaphoreFdEXT: ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub extern var GLAD_GL_EXT_semaphore_win32: c_int;
pub extern var glad_glImportSemaphoreWin32HandleEXT: ?*const fn (GLuint, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var glad_glImportSemaphoreWin32NameEXT: ?*const fn (GLuint, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var GLAD_GL_EXT_separate_shader_objects: c_int;
pub extern var glad_glUseShaderProgramEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glActiveProgramEXT: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glCreateShaderProgramEXT: ?*const fn (GLenum, [*c]const GLchar) callconv(.C) GLuint;
pub extern var glad_glActiveShaderProgramEXT: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var glad_glBindProgramPipelineEXT: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glCreateShaderProgramvEXT: ?*const fn (GLenum, GLsizei, [*c]const [*c]const GLchar) callconv(.C) GLuint;
pub extern var glad_glDeleteProgramPipelinesEXT: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGenProgramPipelinesEXT: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glGetProgramPipelineInfoLogEXT: ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var glad_glGetProgramPipelineivEXT: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glIsProgramPipelineEXT: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glUseProgramStagesEXT: ?*const fn (GLuint, GLbitfield, GLuint) callconv(.C) void;
pub extern var glad_glValidateProgramPipelineEXT: ?*const fn (GLuint) callconv(.C) void;
pub extern var GLAD_GL_EXT_separate_specular_color: c_int;
pub extern var GLAD_GL_EXT_shader_framebuffer_fetch: c_int;
pub extern var GLAD_GL_EXT_shader_framebuffer_fetch_non_coherent: c_int;
pub extern var glad_glFramebufferFetchBarrierEXT: ?*const fn () callconv(.C) void;
pub extern var GLAD_GL_EXT_shader_image_load_formatted: c_int;
pub extern var GLAD_GL_EXT_shader_image_load_store: c_int;
pub extern var glad_glBindImageTextureEXT: ?*const fn (GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLint) callconv(.C) void;
pub extern var glad_glMemoryBarrierEXT: ?*const fn (GLbitfield) callconv(.C) void;
pub extern var GLAD_GL_EXT_shader_integer_mix: c_int;
pub extern var GLAD_GL_EXT_shader_samples_identical: c_int;
pub extern var GLAD_GL_EXT_shadow_funcs: c_int;
pub extern var GLAD_GL_EXT_shared_texture_palette: c_int;
pub extern var GLAD_GL_EXT_sparse_texture2: c_int;
pub extern var GLAD_GL_EXT_stencil_clear_tag: c_int;
pub extern var glad_glStencilClearTagEXT: ?*const fn (GLsizei, GLuint) callconv(.C) void;
pub extern var GLAD_GL_EXT_stencil_two_side: c_int;
pub extern var glad_glActiveStencilFaceEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var GLAD_GL_EXT_stencil_wrap: c_int;
pub extern var GLAD_GL_EXT_subtexture: c_int;
pub extern var glad_glTexSubImage1DEXT: ?*const fn (GLenum, GLint, GLint, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glTexSubImage2DEXT: ?*const fn (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var GLAD_GL_EXT_texture: c_int;
pub extern var GLAD_GL_EXT_texture3D: c_int;
pub extern var glad_glTexImage3DEXT: ?*const fn (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glTexSubImage3DEXT: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var GLAD_GL_EXT_texture_array: c_int;
pub extern var glad_glFramebufferTextureLayerEXT: ?*const fn (GLenum, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub extern var GLAD_GL_EXT_texture_buffer_object: c_int;
pub extern var glad_glTexBufferEXT: ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var GLAD_GL_EXT_texture_compression_latc: c_int;
pub extern var GLAD_GL_EXT_texture_compression_rgtc: c_int;
pub extern var GLAD_GL_EXT_texture_compression_s3tc: c_int;
pub extern var GLAD_GL_EXT_texture_cube_map: c_int;
pub extern var GLAD_GL_EXT_texture_env_add: c_int;
pub extern var GLAD_GL_EXT_texture_env_combine: c_int;
pub extern var GLAD_GL_EXT_texture_env_dot3: c_int;
pub extern var GLAD_GL_EXT_texture_filter_anisotropic: c_int;
pub extern var GLAD_GL_EXT_texture_filter_minmax: c_int;
pub extern var GLAD_GL_EXT_texture_integer: c_int;
pub extern var glad_glTexParameterIivEXT: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glTexParameterIuivEXT: ?*const fn (GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGetTexParameterIivEXT: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetTexParameterIuivEXT: ?*const fn (GLenum, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var glad_glClearColorIiEXT: ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glClearColorIuiEXT: ?*const fn (GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var GLAD_GL_EXT_texture_lod_bias: c_int;
pub extern var GLAD_GL_EXT_texture_mirror_clamp: c_int;
pub extern var GLAD_GL_EXT_texture_object: c_int;
pub extern var glad_glAreTexturesResidentEXT: ?*const fn (GLsizei, [*c]const GLuint, [*c]GLboolean) callconv(.C) GLboolean;
pub extern var glad_glBindTextureEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glDeleteTexturesEXT: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGenTexturesEXT: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glIsTextureEXT: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glPrioritizeTexturesEXT: ?*const fn (GLsizei, [*c]const GLuint, [*c]const GLclampf) callconv(.C) void;
pub extern var GLAD_GL_EXT_texture_perturb_normal: c_int;
pub extern var glad_glTextureNormalEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var GLAD_GL_EXT_texture_sRGB: c_int;
pub extern var GLAD_GL_EXT_texture_sRGB_R8: c_int;
pub extern var GLAD_GL_EXT_texture_sRGB_RG8: c_int;
pub extern var GLAD_GL_EXT_texture_sRGB_decode: c_int;
pub extern var GLAD_GL_EXT_texture_shadow_lod: c_int;
pub extern var GLAD_GL_EXT_texture_shared_exponent: c_int;
pub extern var GLAD_GL_EXT_texture_snorm: c_int;
pub extern var GLAD_GL_EXT_texture_storage: c_int;
pub extern var glad_glTexStorage1DEXT: ?*const fn (GLenum, GLsizei, GLenum, GLsizei) callconv(.C) void;
pub extern var glad_glTexStorage2DEXT: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glTexStorage3DEXT: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_EXT_texture_swizzle: c_int;
pub extern var GLAD_GL_EXT_timer_query: c_int;
pub extern var glad_glGetQueryObjecti64vEXT: ?*const fn (GLuint, GLenum, [*c]GLint64) callconv(.C) void;
pub extern var glad_glGetQueryObjectui64vEXT: ?*const fn (GLuint, GLenum, [*c]GLuint64) callconv(.C) void;
pub extern var GLAD_GL_EXT_transform_feedback: c_int;
pub extern var glad_glBeginTransformFeedbackEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glEndTransformFeedbackEXT: ?*const fn () callconv(.C) void;
pub extern var glad_glBindBufferRangeEXT: ?*const fn (GLenum, GLuint, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var glad_glBindBufferOffsetEXT: ?*const fn (GLenum, GLuint, GLuint, GLintptr) callconv(.C) void;
pub extern var glad_glBindBufferBaseEXT: ?*const fn (GLenum, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glTransformFeedbackVaryingsEXT: ?*const fn (GLuint, GLsizei, [*c]const [*c]const GLchar, GLenum) callconv(.C) void;
pub extern var glad_glGetTransformFeedbackVaryingEXT: ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLsizei, [*c]GLenum, [*c]GLchar) callconv(.C) void;
pub extern var GLAD_GL_EXT_vertex_array: c_int;
pub extern var glad_glArrayElementEXT: ?*const fn (GLint) callconv(.C) void;
pub extern var glad_glColorPointerEXT: ?*const fn (GLint, GLenum, GLsizei, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glDrawArraysEXT: ?*const fn (GLenum, GLint, GLsizei) callconv(.C) void;
pub extern var glad_glEdgeFlagPointerEXT: ?*const fn (GLsizei, GLsizei, [*c]const GLboolean) callconv(.C) void;
pub extern var glad_glGetPointervEXT: ?*const fn (GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var glad_glIndexPointerEXT: ?*const fn (GLenum, GLsizei, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glNormalPointerEXT: ?*const fn (GLenum, GLsizei, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glTexCoordPointerEXT: ?*const fn (GLint, GLenum, GLsizei, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glVertexPointerEXT: ?*const fn (GLint, GLenum, GLsizei, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var GLAD_GL_EXT_vertex_array_bgra: c_int;
pub extern var GLAD_GL_EXT_vertex_attrib_64bit: c_int;
pub extern var glad_glVertexAttribL1dEXT: ?*const fn (GLuint, GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttribL2dEXT: ?*const fn (GLuint, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttribL3dEXT: ?*const fn (GLuint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttribL4dEXT: ?*const fn (GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttribL1dvEXT: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttribL2dvEXT: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttribL3dvEXT: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttribL4dvEXT: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttribLPointerEXT: ?*const fn (GLuint, GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glGetVertexAttribLdvEXT: ?*const fn (GLuint, GLenum, [*c]GLdouble) callconv(.C) void;
pub extern var GLAD_GL_EXT_vertex_shader: c_int;
pub extern var glad_glBeginVertexShaderEXT: ?*const fn () callconv(.C) void;
pub extern var glad_glEndVertexShaderEXT: ?*const fn () callconv(.C) void;
pub extern var glad_glBindVertexShaderEXT: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glGenVertexShadersEXT: ?*const fn (GLuint) callconv(.C) GLuint;
pub extern var glad_glDeleteVertexShaderEXT: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glShaderOp1EXT: ?*const fn (GLenum, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glShaderOp2EXT: ?*const fn (GLenum, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glShaderOp3EXT: ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glSwizzleEXT: ?*const fn (GLuint, GLuint, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var glad_glWriteMaskEXT: ?*const fn (GLuint, GLuint, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var glad_glInsertComponentEXT: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glExtractComponentEXT: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glGenSymbolsEXT: ?*const fn (GLenum, GLenum, GLenum, GLuint) callconv(.C) GLuint;
pub extern var glad_glSetInvariantEXT: ?*const fn (GLuint, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glSetLocalConstantEXT: ?*const fn (GLuint, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glVariantbvEXT: ?*const fn (GLuint, [*c]const GLbyte) callconv(.C) void;
pub extern var glad_glVariantsvEXT: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glVariantivEXT: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var glad_glVariantfvEXT: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glVariantdvEXT: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVariantubvEXT: ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
pub extern var glad_glVariantusvEXT: ?*const fn (GLuint, [*c]const GLushort) callconv(.C) void;
pub extern var glad_glVariantuivEXT: ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glVariantPointerEXT: ?*const fn (GLuint, GLenum, GLuint, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glEnableVariantClientStateEXT: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glDisableVariantClientStateEXT: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glBindLightParameterEXT: ?*const fn (GLenum, GLenum) callconv(.C) GLuint;
pub extern var glad_glBindMaterialParameterEXT: ?*const fn (GLenum, GLenum) callconv(.C) GLuint;
pub extern var glad_glBindTexGenParameterEXT: ?*const fn (GLenum, GLenum, GLenum) callconv(.C) GLuint;
pub extern var glad_glBindTextureUnitParameterEXT: ?*const fn (GLenum, GLenum) callconv(.C) GLuint;
pub extern var glad_glBindParameterEXT: ?*const fn (GLenum) callconv(.C) GLuint;
pub extern var glad_glIsVariantEnabledEXT: ?*const fn (GLuint, GLenum) callconv(.C) GLboolean;
pub extern var glad_glGetVariantBooleanvEXT: ?*const fn (GLuint, GLenum, [*c]GLboolean) callconv(.C) void;
pub extern var glad_glGetVariantIntegervEXT: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetVariantFloatvEXT: ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetVariantPointervEXT: ?*const fn (GLuint, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var glad_glGetInvariantBooleanvEXT: ?*const fn (GLuint, GLenum, [*c]GLboolean) callconv(.C) void;
pub extern var glad_glGetInvariantIntegervEXT: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetInvariantFloatvEXT: ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetLocalConstantBooleanvEXT: ?*const fn (GLuint, GLenum, [*c]GLboolean) callconv(.C) void;
pub extern var glad_glGetLocalConstantIntegervEXT: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetLocalConstantFloatvEXT: ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var GLAD_GL_EXT_vertex_weighting: c_int;
pub extern var glad_glVertexWeightfEXT: ?*const fn (GLfloat) callconv(.C) void;
pub extern var glad_glVertexWeightfvEXT: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glVertexWeightPointerEXT: ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var GLAD_GL_EXT_win32_keyed_mutex: c_int;
pub extern var glad_glAcquireKeyedMutexWin32EXT: ?*const fn (GLuint, GLuint64, GLuint) callconv(.C) GLboolean;
pub extern var glad_glReleaseKeyedMutexWin32EXT: ?*const fn (GLuint, GLuint64) callconv(.C) GLboolean;
pub extern var GLAD_GL_EXT_window_rectangles: c_int;
pub extern var glad_glWindowRectanglesEXT: ?*const fn (GLenum, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var GLAD_GL_EXT_x11_sync_object: c_int;
pub extern var glad_glImportSyncEXT: ?*const fn (GLenum, GLintptr, GLbitfield) callconv(.C) GLsync;
pub extern var GLAD_GL_GREMEDY_frame_terminator: c_int;
pub extern var glad_glFrameTerminatorGREMEDY: ?*const fn () callconv(.C) void;
pub extern var GLAD_GL_GREMEDY_string_marker: c_int;
pub extern var glad_glStringMarkerGREMEDY: ?*const fn (GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var GLAD_GL_HP_convolution_border_modes: c_int;
pub extern var GLAD_GL_HP_image_transform: c_int;
pub extern var glad_glImageTransformParameteriHP: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var glad_glImageTransformParameterfHP: ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glImageTransformParameterivHP: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glImageTransformParameterfvHP: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glGetImageTransformParameterivHP: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetImageTransformParameterfvHP: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var GLAD_GL_HP_occlusion_test: c_int;
pub extern var GLAD_GL_HP_texture_lighting: c_int;
pub extern var GLAD_GL_IBM_cull_vertex: c_int;
pub extern var GLAD_GL_IBM_multimode_draw_arrays: c_int;
pub extern var glad_glMultiModeDrawArraysIBM: ?*const fn ([*c]const GLenum, [*c]const GLint, [*c]const GLsizei, GLsizei, GLint) callconv(.C) void;
pub extern var glad_glMultiModeDrawElementsIBM: ?*const fn ([*c]const GLenum, [*c]const GLsizei, GLenum, [*c]const ?*const anyopaque, GLsizei, GLint) callconv(.C) void;
pub extern var GLAD_GL_IBM_rasterpos_clip: c_int;
pub extern var GLAD_GL_IBM_static_data: c_int;
pub extern var glad_glFlushStaticDataIBM: ?*const fn (GLenum) callconv(.C) void;
pub extern var GLAD_GL_IBM_texture_mirrored_repeat: c_int;
pub extern var GLAD_GL_IBM_vertex_array_lists: c_int;
pub extern var glad_glColorPointerListIBM: ?*const fn (GLint, GLenum, GLint, [*c]?*const anyopaque, GLint) callconv(.C) void;
pub extern var glad_glSecondaryColorPointerListIBM: ?*const fn (GLint, GLenum, GLint, [*c]?*const anyopaque, GLint) callconv(.C) void;
pub extern var glad_glEdgeFlagPointerListIBM: ?*const fn (GLint, [*c][*c]const GLboolean, GLint) callconv(.C) void;
pub extern var glad_glFogCoordPointerListIBM: ?*const fn (GLenum, GLint, [*c]?*const anyopaque, GLint) callconv(.C) void;
pub extern var glad_glIndexPointerListIBM: ?*const fn (GLenum, GLint, [*c]?*const anyopaque, GLint) callconv(.C) void;
pub extern var glad_glNormalPointerListIBM: ?*const fn (GLenum, GLint, [*c]?*const anyopaque, GLint) callconv(.C) void;
pub extern var glad_glTexCoordPointerListIBM: ?*const fn (GLint, GLenum, GLint, [*c]?*const anyopaque, GLint) callconv(.C) void;
pub extern var glad_glVertexPointerListIBM: ?*const fn (GLint, GLenum, GLint, [*c]?*const anyopaque, GLint) callconv(.C) void;
pub extern var GLAD_GL_INGR_blend_func_separate: c_int;
pub extern var glad_glBlendFuncSeparateINGR: ?*const fn (GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var GLAD_GL_INGR_color_clamp: c_int;
pub extern var GLAD_GL_INGR_interlace_read: c_int;
pub extern var GLAD_GL_INTEL_blackhole_render: c_int;
pub extern var GLAD_GL_INTEL_conservative_rasterization: c_int;
pub extern var GLAD_GL_INTEL_fragment_shader_ordering: c_int;
pub extern var GLAD_GL_INTEL_framebuffer_CMAA: c_int;
pub extern var glad_glApplyFramebufferAttachmentCMAAINTEL: ?*const fn () callconv(.C) void;
pub extern var GLAD_GL_INTEL_map_texture: c_int;
pub extern var glad_glSyncTextureINTEL: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glUnmapTexture2DINTEL: ?*const fn (GLuint, GLint) callconv(.C) void;
pub extern var glad_glMapTexture2DINTEL: ?*const fn (GLuint, GLint, GLbitfield, [*c]GLint, [*c]GLenum) callconv(.C) ?*anyopaque;
pub extern var GLAD_GL_INTEL_parallel_arrays: c_int;
pub extern var glad_glVertexPointervINTEL: ?*const fn (GLint, GLenum, [*c]?*const anyopaque) callconv(.C) void;
pub extern var glad_glNormalPointervINTEL: ?*const fn (GLenum, [*c]?*const anyopaque) callconv(.C) void;
pub extern var glad_glColorPointervINTEL: ?*const fn (GLint, GLenum, [*c]?*const anyopaque) callconv(.C) void;
pub extern var glad_glTexCoordPointervINTEL: ?*const fn (GLint, GLenum, [*c]?*const anyopaque) callconv(.C) void;
pub extern var GLAD_GL_INTEL_performance_query: c_int;
pub extern var glad_glBeginPerfQueryINTEL: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glCreatePerfQueryINTEL: ?*const fn (GLuint, [*c]GLuint) callconv(.C) void;
pub extern var glad_glDeletePerfQueryINTEL: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glEndPerfQueryINTEL: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glGetFirstPerfQueryIdINTEL: ?*const fn ([*c]GLuint) callconv(.C) void;
pub extern var glad_glGetNextPerfQueryIdINTEL: ?*const fn (GLuint, [*c]GLuint) callconv(.C) void;
pub extern var glad_glGetPerfCounterInfoINTEL: ?*const fn (GLuint, GLuint, GLuint, [*c]GLchar, GLuint, [*c]GLchar, [*c]GLuint, [*c]GLuint, [*c]GLuint, [*c]GLuint, [*c]GLuint64) callconv(.C) void;
pub extern var glad_glGetPerfQueryDataINTEL: ?*const fn (GLuint, GLuint, GLsizei, ?*anyopaque, [*c]GLuint) callconv(.C) void;
pub extern var glad_glGetPerfQueryIdByNameINTEL: ?*const fn ([*c]GLchar, [*c]GLuint) callconv(.C) void;
pub extern var glad_glGetPerfQueryInfoINTEL: ?*const fn (GLuint, GLuint, [*c]GLchar, [*c]GLuint, [*c]GLuint, [*c]GLuint, [*c]GLuint) callconv(.C) void;
pub extern var GLAD_GL_KHR_blend_equation_advanced: c_int;
pub extern var glad_glBlendBarrierKHR: ?*const fn () callconv(.C) void;
pub extern var GLAD_GL_KHR_blend_equation_advanced_coherent: c_int;
pub extern var GLAD_GL_KHR_context_flush_control: c_int;
pub extern var GLAD_GL_KHR_debug: c_int;
pub extern var glad_glDebugMessageControlKHR: ?*const fn (GLenum, GLenum, GLenum, GLsizei, [*c]const GLuint, GLboolean) callconv(.C) void;
pub extern var glad_glDebugMessageInsertKHR: ?*const fn (GLenum, GLenum, GLuint, GLenum, GLsizei, [*c]const GLchar) callconv(.C) void;
pub extern var glad_glDebugMessageCallbackKHR: ?*const fn (GLDEBUGPROCKHR, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glGetDebugMessageLogKHR: ?*const fn (GLuint, GLsizei, [*c]GLenum, [*c]GLenum, [*c]GLuint, [*c]GLenum, [*c]GLsizei, [*c]GLchar) callconv(.C) GLuint;
pub extern var glad_glPushDebugGroupKHR: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLchar) callconv(.C) void;
pub extern var glad_glPopDebugGroupKHR: ?*const fn () callconv(.C) void;
pub extern var glad_glObjectLabelKHR: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLchar) callconv(.C) void;
pub extern var glad_glGetObjectLabelKHR: ?*const fn (GLenum, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var glad_glObjectPtrLabelKHR: ?*const fn (?*const anyopaque, GLsizei, [*c]const GLchar) callconv(.C) void;
pub extern var glad_glGetObjectPtrLabelKHR: ?*const fn (?*const anyopaque, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var glad_glGetPointervKHR: ?*const fn (GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var GLAD_GL_KHR_no_error: c_int;
pub extern var GLAD_GL_KHR_parallel_shader_compile: c_int;
pub extern var glad_glMaxShaderCompilerThreadsKHR: ?*const fn (GLuint) callconv(.C) void;
pub extern var GLAD_GL_KHR_robust_buffer_access_behavior: c_int;
pub extern var GLAD_GL_KHR_robustness: c_int;
pub extern var glad_glGetGraphicsResetStatusKHR: ?*const fn () callconv(.C) GLenum;
pub extern var glad_glReadnPixelsKHR: ?*const fn (GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetnUniformfvKHR: ?*const fn (GLuint, GLint, GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetnUniformivKHR: ?*const fn (GLuint, GLint, GLsizei, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetnUniformuivKHR: ?*const fn (GLuint, GLint, GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var GLAD_GL_KHR_shader_subgroup: c_int;
pub extern var GLAD_GL_KHR_texture_compression_astc_hdr: c_int;
pub extern var GLAD_GL_KHR_texture_compression_astc_ldr: c_int;
pub extern var GLAD_GL_KHR_texture_compression_astc_sliced_3d: c_int;
pub extern var GLAD_GL_MESAX_texture_stack: c_int;
pub extern var GLAD_GL_MESA_framebuffer_flip_x: c_int;
pub extern var GLAD_GL_MESA_framebuffer_flip_y: c_int;
pub extern var glad_glFramebufferParameteriMESA: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var glad_glGetFramebufferParameterivMESA: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var GLAD_GL_MESA_framebuffer_swap_xy: c_int;
pub extern var GLAD_GL_MESA_pack_invert: c_int;
pub extern var GLAD_GL_MESA_program_binary_formats: c_int;
pub extern var GLAD_GL_MESA_resize_buffers: c_int;
pub extern var glad_glResizeBuffersMESA: ?*const fn () callconv(.C) void;
pub extern var GLAD_GL_MESA_shader_integer_functions: c_int;
pub extern var GLAD_GL_MESA_tile_raster_order: c_int;
pub extern var GLAD_GL_MESA_window_pos: c_int;
pub extern var glad_glWindowPos2dMESA: ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glWindowPos2dvMESA: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glWindowPos2fMESA: ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glWindowPos2fvMESA: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glWindowPos2iMESA: ?*const fn (GLint, GLint) callconv(.C) void;
pub extern var glad_glWindowPos2ivMESA: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var glad_glWindowPos2sMESA: ?*const fn (GLshort, GLshort) callconv(.C) void;
pub extern var glad_glWindowPos2svMESA: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var glad_glWindowPos3dMESA: ?*const fn (GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glWindowPos3dvMESA: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glWindowPos3fMESA: ?*const fn (GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glWindowPos3fvMESA: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glWindowPos3iMESA: ?*const fn (GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glWindowPos3ivMESA: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var glad_glWindowPos3sMESA: ?*const fn (GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glWindowPos3svMESA: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var glad_glWindowPos4dMESA: ?*const fn (GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glWindowPos4dvMESA: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var glad_glWindowPos4fMESA: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glWindowPos4fvMESA: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var glad_glWindowPos4iMESA: ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glWindowPos4ivMESA: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var glad_glWindowPos4sMESA: ?*const fn (GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glWindowPos4svMESA: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var GLAD_GL_MESA_ycbcr_texture: c_int;
pub extern var GLAD_GL_NVX_blend_equation_advanced_multi_draw_buffers: c_int;
pub extern var GLAD_GL_NVX_conditional_render: c_int;
pub extern var glad_glBeginConditionalRenderNVX: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glEndConditionalRenderNVX: ?*const fn () callconv(.C) void;
pub extern var GLAD_GL_NVX_gpu_memory_info: c_int;
pub extern var GLAD_GL_NVX_gpu_multicast2: c_int;
pub extern var glad_glUploadGpuMaskNVX: ?*const fn (GLbitfield) callconv(.C) void;
pub extern var glad_glMulticastViewportArrayvNVX: ?*const fn (GLuint, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMulticastViewportPositionWScaleNVX: ?*const fn (GLuint, GLuint, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glMulticastScissorArrayvNVX: ?*const fn (GLuint, GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glAsyncCopyBufferSubDataNVX: ?*const fn (GLsizei, [*c]const GLuint, [*c]const GLuint64, GLuint, GLbitfield, GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr, GLsizei, [*c]const GLuint, [*c]const GLuint64) callconv(.C) GLuint;
pub extern var glad_glAsyncCopyImageSubDataNVX: ?*const fn (GLsizei, [*c]const GLuint, [*c]const GLuint64, GLuint, GLbitfield, GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, [*c]const GLuint, [*c]const GLuint64) callconv(.C) GLuint;
pub extern var GLAD_GL_NVX_linked_gpu_multicast: c_int;
pub extern var glad_glLGPUNamedBufferSubDataNVX: ?*const fn (GLbitfield, GLuint, GLintptr, GLsizeiptr, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glLGPUCopyImageSubDataNVX: ?*const fn (GLuint, GLbitfield, GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glLGPUInterlockNVX: ?*const fn () callconv(.C) void;
pub extern var GLAD_GL_NVX_progress_fence: c_int;
pub extern var glad_glCreateProgressFenceNVX: ?*const fn () callconv(.C) GLuint;
pub extern var glad_glSignalSemaphoreui64NVX: ?*const fn (GLuint, GLsizei, [*c]const GLuint, [*c]const GLuint64) callconv(.C) void;
pub extern var glad_glWaitSemaphoreui64NVX: ?*const fn (GLuint, GLsizei, [*c]const GLuint, [*c]const GLuint64) callconv(.C) void;
pub extern var glad_glClientWaitSemaphoreui64NVX: ?*const fn (GLsizei, [*c]const GLuint, [*c]const GLuint64) callconv(.C) void;
pub extern var GLAD_GL_NV_alpha_to_coverage_dither_control: c_int;
pub extern var glad_glAlphaToCoverageDitherControlNV: ?*const fn (GLenum) callconv(.C) void;
pub extern var GLAD_GL_NV_bindless_multi_draw_indirect: c_int;
pub extern var glad_glMultiDrawArraysIndirectBindlessNV: ?*const fn (GLenum, ?*const anyopaque, GLsizei, GLsizei, GLint) callconv(.C) void;
pub extern var glad_glMultiDrawElementsIndirectBindlessNV: ?*const fn (GLenum, GLenum, ?*const anyopaque, GLsizei, GLsizei, GLint) callconv(.C) void;
pub extern var GLAD_GL_NV_bindless_multi_draw_indirect_count: c_int;
pub extern var glad_glMultiDrawArraysIndirectBindlessCountNV: ?*const fn (GLenum, ?*const anyopaque, GLsizei, GLsizei, GLsizei, GLint) callconv(.C) void;
pub extern var glad_glMultiDrawElementsIndirectBindlessCountNV: ?*const fn (GLenum, GLenum, ?*const anyopaque, GLsizei, GLsizei, GLsizei, GLint) callconv(.C) void;
pub extern var GLAD_GL_NV_bindless_texture: c_int;
pub extern var glad_glGetTextureHandleNV: ?*const fn (GLuint) callconv(.C) GLuint64;
pub extern var glad_glGetTextureSamplerHandleNV: ?*const fn (GLuint, GLuint) callconv(.C) GLuint64;
pub extern var glad_glMakeTextureHandleResidentNV: ?*const fn (GLuint64) callconv(.C) void;
pub extern var glad_glMakeTextureHandleNonResidentNV: ?*const fn (GLuint64) callconv(.C) void;
pub extern var glad_glGetImageHandleNV: ?*const fn (GLuint, GLint, GLboolean, GLint, GLenum) callconv(.C) GLuint64;
pub extern var glad_glMakeImageHandleResidentNV: ?*const fn (GLuint64, GLenum) callconv(.C) void;
pub extern var glad_glMakeImageHandleNonResidentNV: ?*const fn (GLuint64) callconv(.C) void;
pub extern var glad_glUniformHandleui64NV: ?*const fn (GLint, GLuint64) callconv(.C) void;
pub extern var glad_glUniformHandleui64vNV: ?*const fn (GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var glad_glProgramUniformHandleui64NV: ?*const fn (GLuint, GLint, GLuint64) callconv(.C) void;
pub extern var glad_glProgramUniformHandleui64vNV: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var glad_glIsTextureHandleResidentNV: ?*const fn (GLuint64) callconv(.C) GLboolean;
pub extern var glad_glIsImageHandleResidentNV: ?*const fn (GLuint64) callconv(.C) GLboolean;
pub extern var GLAD_GL_NV_blend_equation_advanced: c_int;
pub extern var glad_glBlendParameteriNV: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var glad_glBlendBarrierNV: ?*const fn () callconv(.C) void;
pub extern var GLAD_GL_NV_blend_equation_advanced_coherent: c_int;
pub extern var GLAD_GL_NV_blend_minmax_factor: c_int;
pub extern var GLAD_GL_NV_blend_square: c_int;
pub extern var GLAD_GL_NV_clip_space_w_scaling: c_int;
pub extern var glad_glViewportPositionWScaleNV: ?*const fn (GLuint, GLfloat, GLfloat) callconv(.C) void;
pub extern var GLAD_GL_NV_command_list: c_int;
pub extern var glad_glCreateStatesNV: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glDeleteStatesNV: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glIsStateNV: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glStateCaptureNV: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var glad_glGetCommandHeaderNV: ?*const fn (GLenum, GLuint) callconv(.C) GLuint;
pub extern var glad_glGetStageIndexNV: ?*const fn (GLenum) callconv(.C) GLushort;
pub extern var glad_glDrawCommandsNV: ?*const fn (GLenum, GLuint, [*c]const GLintptr, [*c]const GLsizei, GLuint) callconv(.C) void;
pub extern var glad_glDrawCommandsAddressNV: ?*const fn (GLenum, [*c]const GLuint64, [*c]const GLsizei, GLuint) callconv(.C) void;
pub extern var glad_glDrawCommandsStatesNV: ?*const fn (GLuint, [*c]const GLintptr, [*c]const GLsizei, [*c]const GLuint, [*c]const GLuint, GLuint) callconv(.C) void;
pub extern var glad_glDrawCommandsStatesAddressNV: ?*const fn ([*c]const GLuint64, [*c]const GLsizei, [*c]const GLuint, [*c]const GLuint, GLuint) callconv(.C) void;
pub extern var glad_glCreateCommandListsNV: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glDeleteCommandListsNV: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glIsCommandListNV: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glListDrawCommandsStatesClientNV: ?*const fn (GLuint, GLuint, [*c]?*const anyopaque, [*c]const GLsizei, [*c]const GLuint, [*c]const GLuint, GLuint) callconv(.C) void;
pub extern var glad_glCommandListSegmentsNV: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var glad_glCompileCommandListNV: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glCallCommandListNV: ?*const fn (GLuint) callconv(.C) void;
pub extern var GLAD_GL_NV_compute_program5: c_int;
pub extern var GLAD_GL_NV_compute_shader_derivatives: c_int;
pub extern var GLAD_GL_NV_conditional_render: c_int;
pub extern var glad_glBeginConditionalRenderNV: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var glad_glEndConditionalRenderNV: ?*const fn () callconv(.C) void;
pub extern var GLAD_GL_NV_conservative_raster: c_int;
pub extern var glad_glSubpixelPrecisionBiasNV: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var GLAD_GL_NV_conservative_raster_dilate: c_int;
pub extern var glad_glConservativeRasterParameterfNV: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var GLAD_GL_NV_conservative_raster_pre_snap: c_int;
pub extern var GLAD_GL_NV_conservative_raster_pre_snap_triangles: c_int;
pub extern var glad_glConservativeRasterParameteriNV: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var GLAD_GL_NV_conservative_raster_underestimation: c_int;
pub extern var GLAD_GL_NV_copy_depth_to_color: c_int;
pub extern var GLAD_GL_NV_copy_image: c_int;
pub extern var glad_glCopyImageSubDataNV: ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_NV_deep_texture3D: c_int;
pub extern var GLAD_GL_NV_depth_buffer_float: c_int;
pub extern var glad_glDepthRangedNV: ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glClearDepthdNV: ?*const fn (GLdouble) callconv(.C) void;
pub extern var glad_glDepthBoundsdNV: ?*const fn (GLdouble, GLdouble) callconv(.C) void;
pub extern var GLAD_GL_NV_depth_clamp: c_int;
pub extern var GLAD_GL_NV_draw_texture: c_int;
pub extern var glad_glDrawTextureNV: ?*const fn (GLuint, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var GLAD_GL_NV_draw_vulkan_image: c_int;
pub extern var glad_glDrawVkImageNV: ?*const fn (GLuint64, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glGetVkProcAddrNV: ?*const fn ([*c]const GLchar) callconv(.C) GLVULKANPROCNV;
pub extern var glad_glWaitVkSemaphoreNV: ?*const fn (GLuint64) callconv(.C) void;
pub extern var glad_glSignalVkSemaphoreNV: ?*const fn (GLuint64) callconv(.C) void;
pub extern var glad_glSignalVkFenceNV: ?*const fn (GLuint64) callconv(.C) void;
pub extern var GLAD_GL_NV_evaluators: c_int;
pub extern var glad_glMapControlPointsNV: ?*const fn (GLenum, GLuint, GLenum, GLsizei, GLsizei, GLint, GLint, GLboolean, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glMapParameterivNV: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glMapParameterfvNV: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glGetMapControlPointsNV: ?*const fn (GLenum, GLuint, GLenum, GLsizei, GLsizei, GLboolean, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetMapParameterivNV: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetMapParameterfvNV: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetMapAttribParameterivNV: ?*const fn (GLenum, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetMapAttribParameterfvNV: ?*const fn (GLenum, GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glEvalMapsNV: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var GLAD_GL_NV_explicit_multisample: c_int;
pub extern var glad_glGetMultisamplefvNV: ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glSampleMaskIndexedNV: ?*const fn (GLuint, GLbitfield) callconv(.C) void;
pub extern var glad_glTexRenderbufferNV: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var GLAD_GL_NV_fence: c_int;
pub extern var glad_glDeleteFencesNV: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGenFencesNV: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glIsFenceNV: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glTestFenceNV: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glGetFenceivNV: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glFinishFenceNV: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glSetFenceNV: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var GLAD_GL_NV_fill_rectangle: c_int;
pub extern var GLAD_GL_NV_float_buffer: c_int;
pub extern var GLAD_GL_NV_fog_distance: c_int;
pub extern var GLAD_GL_NV_fragment_coverage_to_color: c_int;
pub extern var glad_glFragmentCoverageColorNV: ?*const fn (GLuint) callconv(.C) void;
pub extern var GLAD_GL_NV_fragment_program: c_int;
pub extern var glad_glProgramNamedParameter4fNV: ?*const fn (GLuint, GLsizei, [*c]const GLubyte, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glProgramNamedParameter4fvNV: ?*const fn (GLuint, GLsizei, [*c]const GLubyte, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramNamedParameter4dNV: ?*const fn (GLuint, GLsizei, [*c]const GLubyte, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glProgramNamedParameter4dvNV: ?*const fn (GLuint, GLsizei, [*c]const GLubyte, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glGetProgramNamedParameterfvNV: ?*const fn (GLuint, GLsizei, [*c]const GLubyte, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetProgramNamedParameterdvNV: ?*const fn (GLuint, GLsizei, [*c]const GLubyte, [*c]GLdouble) callconv(.C) void;
pub extern var GLAD_GL_NV_fragment_program2: c_int;
pub extern var GLAD_GL_NV_fragment_program4: c_int;
pub extern var GLAD_GL_NV_fragment_program_option: c_int;
pub extern var GLAD_GL_NV_fragment_shader_barycentric: c_int;
pub extern var GLAD_GL_NV_fragment_shader_interlock: c_int;
pub extern var GLAD_GL_NV_framebuffer_mixed_samples: c_int;
pub extern var glad_glCoverageModulationTableNV: ?*const fn (GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glGetCoverageModulationTableNV: ?*const fn (GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glCoverageModulationNV: ?*const fn (GLenum) callconv(.C) void;
pub extern var GLAD_GL_NV_framebuffer_multisample_coverage: c_int;
pub extern var glad_glRenderbufferStorageMultisampleCoverageNV: ?*const fn (GLenum, GLsizei, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_NV_geometry_program4: c_int;
pub extern var glad_glProgramVertexLimitNV: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var glad_glFramebufferTextureEXT: ?*const fn (GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub extern var glad_glFramebufferTextureFaceEXT: ?*const fn (GLenum, GLenum, GLuint, GLint, GLenum) callconv(.C) void;
pub extern var GLAD_GL_NV_geometry_shader4: c_int;
pub extern var GLAD_GL_NV_geometry_shader_passthrough: c_int;
pub extern var GLAD_GL_NV_gpu_multicast: c_int;
pub extern var glad_glRenderGpuMaskNV: ?*const fn (GLbitfield) callconv(.C) void;
pub extern var glad_glMulticastBufferSubDataNV: ?*const fn (GLbitfield, GLuint, GLintptr, GLsizeiptr, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glMulticastCopyBufferSubDataNV: ?*const fn (GLuint, GLbitfield, GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var glad_glMulticastCopyImageSubDataNV: ?*const fn (GLuint, GLbitfield, GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glMulticastBlitFramebufferNV: ?*const fn (GLuint, GLuint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) callconv(.C) void;
pub extern var glad_glMulticastFramebufferSampleLocationsfvNV: ?*const fn (GLuint, GLuint, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMulticastBarrierNV: ?*const fn () callconv(.C) void;
pub extern var glad_glMulticastWaitSyncNV: ?*const fn (GLuint, GLbitfield) callconv(.C) void;
pub extern var glad_glMulticastGetQueryObjectivNV: ?*const fn (GLuint, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glMulticastGetQueryObjectuivNV: ?*const fn (GLuint, GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var glad_glMulticastGetQueryObjecti64vNV: ?*const fn (GLuint, GLuint, GLenum, [*c]GLint64) callconv(.C) void;
pub extern var glad_glMulticastGetQueryObjectui64vNV: ?*const fn (GLuint, GLuint, GLenum, [*c]GLuint64) callconv(.C) void;
pub extern var GLAD_GL_NV_gpu_program4: c_int;
pub extern var glad_glProgramLocalParameterI4iNV: ?*const fn (GLenum, GLuint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glProgramLocalParameterI4ivNV: ?*const fn (GLenum, GLuint, [*c]const GLint) callconv(.C) void;
pub extern var glad_glProgramLocalParametersI4ivNV: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glProgramLocalParameterI4uiNV: ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glProgramLocalParameterI4uivNV: ?*const fn (GLenum, GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glProgramLocalParametersI4uivNV: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glProgramEnvParameterI4iNV: ?*const fn (GLenum, GLuint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glProgramEnvParameterI4ivNV: ?*const fn (GLenum, GLuint, [*c]const GLint) callconv(.C) void;
pub extern var glad_glProgramEnvParametersI4ivNV: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glProgramEnvParameterI4uiNV: ?*const fn (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glProgramEnvParameterI4uivNV: ?*const fn (GLenum, GLuint, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glProgramEnvParametersI4uivNV: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGetProgramLocalParameterIivNV: ?*const fn (GLenum, GLuint, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetProgramLocalParameterIuivNV: ?*const fn (GLenum, GLuint, [*c]GLuint) callconv(.C) void;
pub extern var glad_glGetProgramEnvParameterIivNV: ?*const fn (GLenum, GLuint, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetProgramEnvParameterIuivNV: ?*const fn (GLenum, GLuint, [*c]GLuint) callconv(.C) void;
pub extern var GLAD_GL_NV_gpu_program5: c_int;
pub extern var glad_glProgramSubroutineParametersuivNV: ?*const fn (GLenum, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGetProgramSubroutineParameteruivNV: ?*const fn (GLenum, GLuint, [*c]GLuint) callconv(.C) void;
pub extern var GLAD_GL_NV_gpu_program5_mem_extended: c_int;
pub extern var GLAD_GL_NV_gpu_shader5: c_int;
pub extern var GLAD_GL_NV_half_float: c_int;
pub extern var glad_glVertex2hNV: ?*const fn (GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var glad_glVertex2hvNV: ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub extern var glad_glVertex3hNV: ?*const fn (GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var glad_glVertex3hvNV: ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub extern var glad_glVertex4hNV: ?*const fn (GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var glad_glVertex4hvNV: ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub extern var glad_glNormal3hNV: ?*const fn (GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var glad_glNormal3hvNV: ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub extern var glad_glColor3hNV: ?*const fn (GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var glad_glColor3hvNV: ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub extern var glad_glColor4hNV: ?*const fn (GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var glad_glColor4hvNV: ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub extern var glad_glTexCoord1hNV: ?*const fn (GLhalfNV) callconv(.C) void;
pub extern var glad_glTexCoord1hvNV: ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub extern var glad_glTexCoord2hNV: ?*const fn (GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var glad_glTexCoord2hvNV: ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub extern var glad_glTexCoord3hNV: ?*const fn (GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var glad_glTexCoord3hvNV: ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub extern var glad_glTexCoord4hNV: ?*const fn (GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var glad_glTexCoord4hvNV: ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub extern var glad_glMultiTexCoord1hNV: ?*const fn (GLenum, GLhalfNV) callconv(.C) void;
pub extern var glad_glMultiTexCoord1hvNV: ?*const fn (GLenum, [*c]const GLhalfNV) callconv(.C) void;
pub extern var glad_glMultiTexCoord2hNV: ?*const fn (GLenum, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var glad_glMultiTexCoord2hvNV: ?*const fn (GLenum, [*c]const GLhalfNV) callconv(.C) void;
pub extern var glad_glMultiTexCoord3hNV: ?*const fn (GLenum, GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var glad_glMultiTexCoord3hvNV: ?*const fn (GLenum, [*c]const GLhalfNV) callconv(.C) void;
pub extern var glad_glMultiTexCoord4hNV: ?*const fn (GLenum, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var glad_glMultiTexCoord4hvNV: ?*const fn (GLenum, [*c]const GLhalfNV) callconv(.C) void;
pub extern var glad_glVertexAttrib1hNV: ?*const fn (GLuint, GLhalfNV) callconv(.C) void;
pub extern var glad_glVertexAttrib1hvNV: ?*const fn (GLuint, [*c]const GLhalfNV) callconv(.C) void;
pub extern var glad_glVertexAttrib2hNV: ?*const fn (GLuint, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var glad_glVertexAttrib2hvNV: ?*const fn (GLuint, [*c]const GLhalfNV) callconv(.C) void;
pub extern var glad_glVertexAttrib3hNV: ?*const fn (GLuint, GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var glad_glVertexAttrib3hvNV: ?*const fn (GLuint, [*c]const GLhalfNV) callconv(.C) void;
pub extern var glad_glVertexAttrib4hNV: ?*const fn (GLuint, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var glad_glVertexAttrib4hvNV: ?*const fn (GLuint, [*c]const GLhalfNV) callconv(.C) void;
pub extern var glad_glVertexAttribs1hvNV: ?*const fn (GLuint, GLsizei, [*c]const GLhalfNV) callconv(.C) void;
pub extern var glad_glVertexAttribs2hvNV: ?*const fn (GLuint, GLsizei, [*c]const GLhalfNV) callconv(.C) void;
pub extern var glad_glVertexAttribs3hvNV: ?*const fn (GLuint, GLsizei, [*c]const GLhalfNV) callconv(.C) void;
pub extern var glad_glVertexAttribs4hvNV: ?*const fn (GLuint, GLsizei, [*c]const GLhalfNV) callconv(.C) void;
pub extern var glad_glFogCoordhNV: ?*const fn (GLhalfNV) callconv(.C) void;
pub extern var glad_glFogCoordhvNV: ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub extern var glad_glSecondaryColor3hNV: ?*const fn (GLhalfNV, GLhalfNV, GLhalfNV) callconv(.C) void;
pub extern var glad_glSecondaryColor3hvNV: ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub extern var glad_glVertexWeighthNV: ?*const fn (GLhalfNV) callconv(.C) void;
pub extern var glad_glVertexWeighthvNV: ?*const fn ([*c]const GLhalfNV) callconv(.C) void;
pub extern var GLAD_GL_NV_internalformat_sample_query: c_int;
pub extern var glad_glGetInternalformatSampleivNV: ?*const fn (GLenum, GLenum, GLsizei, GLenum, GLsizei, [*c]GLint) callconv(.C) void;
pub extern var GLAD_GL_NV_light_max_exponent: c_int;
pub extern var GLAD_GL_NV_memory_attachment: c_int;
pub extern var glad_glGetMemoryObjectDetachedResourcesuivNV: ?*const fn (GLuint, GLenum, GLint, GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glResetMemoryObjectParameterNV: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var glad_glTexAttachMemoryNV: ?*const fn (GLenum, GLuint, GLuint64) callconv(.C) void;
pub extern var glad_glBufferAttachMemoryNV: ?*const fn (GLenum, GLuint, GLuint64) callconv(.C) void;
pub extern var glad_glTextureAttachMemoryNV: ?*const fn (GLuint, GLuint, GLuint64) callconv(.C) void;
pub extern var glad_glNamedBufferAttachMemoryNV: ?*const fn (GLuint, GLuint, GLuint64) callconv(.C) void;
pub extern var GLAD_GL_NV_memory_object_sparse: c_int;
pub extern var glad_glBufferPageCommitmentMemNV: ?*const fn (GLenum, GLintptr, GLsizeiptr, GLuint, GLuint64, GLboolean) callconv(.C) void;
pub extern var glad_glTexPageCommitmentMemNV: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLuint, GLuint64, GLboolean) callconv(.C) void;
pub extern var glad_glNamedBufferPageCommitmentMemNV: ?*const fn (GLuint, GLintptr, GLsizeiptr, GLuint, GLuint64, GLboolean) callconv(.C) void;
pub extern var glad_glTexturePageCommitmentMemNV: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLuint, GLuint64, GLboolean) callconv(.C) void;
pub extern var GLAD_GL_NV_mesh_shader: c_int;
pub extern var glad_glDrawMeshTasksNV: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var glad_glDrawMeshTasksIndirectNV: ?*const fn (GLintptr) callconv(.C) void;
pub extern var glad_glMultiDrawMeshTasksIndirectNV: ?*const fn (GLintptr, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glMultiDrawMeshTasksIndirectCountNV: ?*const fn (GLintptr, GLintptr, GLsizei, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_NV_multisample_coverage: c_int;
pub extern var GLAD_GL_NV_multisample_filter_hint: c_int;
pub extern var GLAD_GL_NV_occlusion_query: c_int;
pub extern var glad_glGenOcclusionQueriesNV: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glDeleteOcclusionQueriesNV: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glIsOcclusionQueryNV: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glBeginOcclusionQueryNV: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glEndOcclusionQueryNV: ?*const fn () callconv(.C) void;
pub extern var glad_glGetOcclusionQueryivNV: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetOcclusionQueryuivNV: ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var GLAD_GL_NV_packed_depth_stencil: c_int;
pub extern var GLAD_GL_NV_parameter_buffer_object: c_int;
pub extern var glad_glProgramBufferParametersfvNV: ?*const fn (GLenum, GLuint, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramBufferParametersIivNV: ?*const fn (GLenum, GLuint, GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glProgramBufferParametersIuivNV: ?*const fn (GLenum, GLuint, GLuint, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var GLAD_GL_NV_parameter_buffer_object2: c_int;
pub extern var GLAD_GL_NV_path_rendering: c_int;
pub extern var glad_glGenPathsNV: ?*const fn (GLsizei) callconv(.C) GLuint;
pub extern var glad_glDeletePathsNV: ?*const fn (GLuint, GLsizei) callconv(.C) void;
pub extern var glad_glIsPathNV: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glPathCommandsNV: ?*const fn (GLuint, GLsizei, [*c]const GLubyte, GLsizei, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glPathCoordsNV: ?*const fn (GLuint, GLsizei, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glPathSubCommandsNV: ?*const fn (GLuint, GLsizei, GLsizei, GLsizei, [*c]const GLubyte, GLsizei, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glPathSubCoordsNV: ?*const fn (GLuint, GLsizei, GLsizei, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glPathStringNV: ?*const fn (GLuint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glPathGlyphsNV: ?*const fn (GLuint, GLenum, ?*const anyopaque, GLbitfield, GLsizei, GLenum, ?*const anyopaque, GLenum, GLuint, GLfloat) callconv(.C) void;
pub extern var glad_glPathGlyphRangeNV: ?*const fn (GLuint, GLenum, ?*const anyopaque, GLbitfield, GLuint, GLsizei, GLenum, GLuint, GLfloat) callconv(.C) void;
pub extern var glad_glWeightPathsNV: ?*const fn (GLuint, GLsizei, [*c]const GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glCopyPathNV: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var glad_glInterpolatePathsNV: ?*const fn (GLuint, GLuint, GLuint, GLfloat) callconv(.C) void;
pub extern var glad_glTransformPathNV: ?*const fn (GLuint, GLuint, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glPathParameterivNV: ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glPathParameteriNV: ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub extern var glad_glPathParameterfvNV: ?*const fn (GLuint, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glPathParameterfNV: ?*const fn (GLuint, GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glPathDashArrayNV: ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glPathStencilFuncNV: ?*const fn (GLenum, GLint, GLuint) callconv(.C) void;
pub extern var glad_glPathStencilDepthOffsetNV: ?*const fn (GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glStencilFillPathNV: ?*const fn (GLuint, GLenum, GLuint) callconv(.C) void;
pub extern var glad_glStencilStrokePathNV: ?*const fn (GLuint, GLint, GLuint) callconv(.C) void;
pub extern var glad_glStencilFillPathInstancedNV: ?*const fn (GLsizei, GLenum, ?*const anyopaque, GLuint, GLenum, GLuint, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glStencilStrokePathInstancedNV: ?*const fn (GLsizei, GLenum, ?*const anyopaque, GLuint, GLint, GLuint, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glPathCoverDepthFuncNV: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glCoverFillPathNV: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var glad_glCoverStrokePathNV: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var glad_glCoverFillPathInstancedNV: ?*const fn (GLsizei, GLenum, ?*const anyopaque, GLuint, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glCoverStrokePathInstancedNV: ?*const fn (GLsizei, GLenum, ?*const anyopaque, GLuint, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glGetPathParameterivNV: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetPathParameterfvNV: ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetPathCommandsNV: ?*const fn (GLuint, [*c]GLubyte) callconv(.C) void;
pub extern var glad_glGetPathCoordsNV: ?*const fn (GLuint, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetPathDashArrayNV: ?*const fn (GLuint, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetPathMetricsNV: ?*const fn (GLbitfield, GLsizei, GLenum, ?*const anyopaque, GLuint, GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetPathMetricRangeNV: ?*const fn (GLbitfield, GLuint, GLsizei, GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetPathSpacingNV: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLuint, GLfloat, GLfloat, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glIsPointInFillPathNV: ?*const fn (GLuint, GLuint, GLfloat, GLfloat) callconv(.C) GLboolean;
pub extern var glad_glIsPointInStrokePathNV: ?*const fn (GLuint, GLfloat, GLfloat) callconv(.C) GLboolean;
pub extern var glad_glGetPathLengthNV: ?*const fn (GLuint, GLsizei, GLsizei) callconv(.C) GLfloat;
pub extern var glad_glPointAlongPathNV: ?*const fn (GLuint, GLsizei, GLsizei, GLfloat, [*c]GLfloat, [*c]GLfloat, [*c]GLfloat, [*c]GLfloat) callconv(.C) GLboolean;
pub extern var glad_glMatrixLoad3x2fNV: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMatrixLoad3x3fNV: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMatrixLoadTranspose3x3fNV: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMatrixMult3x2fNV: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMatrixMult3x3fNV: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glMatrixMultTranspose3x3fNV: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glStencilThenCoverFillPathNV: ?*const fn (GLuint, GLenum, GLuint, GLenum) callconv(.C) void;
pub extern var glad_glStencilThenCoverStrokePathNV: ?*const fn (GLuint, GLint, GLuint, GLenum) callconv(.C) void;
pub extern var glad_glStencilThenCoverFillPathInstancedNV: ?*const fn (GLsizei, GLenum, ?*const anyopaque, GLuint, GLenum, GLuint, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glStencilThenCoverStrokePathInstancedNV: ?*const fn (GLsizei, GLenum, ?*const anyopaque, GLuint, GLint, GLuint, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glPathGlyphIndexRangeNV: ?*const fn (GLenum, ?*const anyopaque, GLbitfield, GLuint, GLfloat, [*c]GLuint) callconv(.C) GLenum;
pub extern var glad_glPathGlyphIndexArrayNV: ?*const fn (GLuint, GLenum, ?*const anyopaque, GLbitfield, GLuint, GLsizei, GLuint, GLfloat) callconv(.C) GLenum;
pub extern var glad_glPathMemoryGlyphIndexArrayNV: ?*const fn (GLuint, GLenum, GLsizeiptr, ?*const anyopaque, GLsizei, GLuint, GLsizei, GLuint, GLfloat) callconv(.C) GLenum;
pub extern var glad_glProgramPathFragmentInputGenNV: ?*const fn (GLuint, GLint, GLenum, GLint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glGetProgramResourcefvNV: ?*const fn (GLuint, GLenum, GLuint, GLsizei, [*c]const GLenum, GLsizei, [*c]GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glPathColorGenNV: ?*const fn (GLenum, GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glPathTexGenNV: ?*const fn (GLenum, GLenum, GLint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glPathFogGenNV: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glGetPathColorGenivNV: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetPathColorGenfvNV: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetPathTexGenivNV: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetPathTexGenfvNV: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var GLAD_GL_NV_path_rendering_shared_edge: c_int;
pub extern var GLAD_GL_NV_pixel_data_range: c_int;
pub extern var glad_glPixelDataRangeNV: ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glFlushPixelDataRangeNV: ?*const fn (GLenum) callconv(.C) void;
pub extern var GLAD_GL_NV_point_sprite: c_int;
pub extern var glad_glPointParameteriNV: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var glad_glPointParameterivNV: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var GLAD_GL_NV_present_video: c_int;
pub extern var glad_glPresentFrameKeyedNV: ?*const fn (GLuint, GLuint64EXT, GLuint, GLuint, GLenum, GLenum, GLuint, GLuint, GLenum, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glPresentFrameDualFillNV: ?*const fn (GLuint, GLuint64EXT, GLuint, GLuint, GLenum, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint) callconv(.C) void;
pub extern var glad_glGetVideoivNV: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetVideouivNV: ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var glad_glGetVideoi64vNV: ?*const fn (GLuint, GLenum, [*c]GLint64EXT) callconv(.C) void;
pub extern var glad_glGetVideoui64vNV: ?*const fn (GLuint, GLenum, [*c]GLuint64EXT) callconv(.C) void;
pub extern var GLAD_GL_NV_primitive_restart: c_int;
pub extern var glad_glPrimitiveRestartNV: ?*const fn () callconv(.C) void;
pub extern var glad_glPrimitiveRestartIndexNV: ?*const fn (GLuint) callconv(.C) void;
pub extern var GLAD_GL_NV_primitive_shading_rate: c_int;
pub extern var GLAD_GL_NV_query_resource: c_int;
pub extern var glad_glQueryResourceNV: ?*const fn (GLenum, GLint, GLuint, [*c]GLint) callconv(.C) GLint;
pub extern var GLAD_GL_NV_query_resource_tag: c_int;
pub extern var glad_glGenQueryResourceTagNV: ?*const fn (GLsizei, [*c]GLint) callconv(.C) void;
pub extern var glad_glDeleteQueryResourceTagNV: ?*const fn (GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glQueryResourceTagNV: ?*const fn (GLint, [*c]const GLchar) callconv(.C) void;
pub extern var GLAD_GL_NV_register_combiners: c_int;
pub extern var glad_glCombinerParameterfvNV: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glCombinerParameterfNV: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glCombinerParameterivNV: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glCombinerParameteriNV: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var glad_glCombinerInputNV: ?*const fn (GLenum, GLenum, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var glad_glCombinerOutputNV: ?*const fn (GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLboolean, GLboolean, GLboolean) callconv(.C) void;
pub extern var glad_glFinalCombinerInputNV: ?*const fn (GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var glad_glGetCombinerInputParameterfvNV: ?*const fn (GLenum, GLenum, GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetCombinerInputParameterivNV: ?*const fn (GLenum, GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetCombinerOutputParameterfvNV: ?*const fn (GLenum, GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetCombinerOutputParameterivNV: ?*const fn (GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetFinalCombinerInputParameterfvNV: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetFinalCombinerInputParameterivNV: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var GLAD_GL_NV_register_combiners2: c_int;
pub extern var glad_glCombinerStageParameterfvNV: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glGetCombinerStageParameterfvNV: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var GLAD_GL_NV_representative_fragment_test: c_int;
pub extern var GLAD_GL_NV_robustness_video_memory_purge: c_int;
pub extern var GLAD_GL_NV_sample_locations: c_int;
pub extern var glad_glFramebufferSampleLocationsfvNV: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glNamedFramebufferSampleLocationsfvNV: ?*const fn (GLuint, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glResolveDepthValuesNV: ?*const fn () callconv(.C) void;
pub extern var GLAD_GL_NV_sample_mask_override_coverage: c_int;
pub extern var GLAD_GL_NV_scissor_exclusive: c_int;
pub extern var glad_glScissorExclusiveNV: ?*const fn (GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glScissorExclusiveArrayvNV: ?*const fn (GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var GLAD_GL_NV_shader_atomic_counters: c_int;
pub extern var GLAD_GL_NV_shader_atomic_float: c_int;
pub extern var GLAD_GL_NV_shader_atomic_float64: c_int;
pub extern var GLAD_GL_NV_shader_atomic_fp16_vector: c_int;
pub extern var GLAD_GL_NV_shader_atomic_int64: c_int;
pub extern var GLAD_GL_NV_shader_buffer_load: c_int;
pub extern var glad_glMakeBufferResidentNV: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var glad_glMakeBufferNonResidentNV: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glIsBufferResidentNV: ?*const fn (GLenum) callconv(.C) GLboolean;
pub extern var glad_glMakeNamedBufferResidentNV: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var glad_glMakeNamedBufferNonResidentNV: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glIsNamedBufferResidentNV: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glGetBufferParameterui64vNV: ?*const fn (GLenum, GLenum, [*c]GLuint64EXT) callconv(.C) void;
pub extern var glad_glGetNamedBufferParameterui64vNV: ?*const fn (GLuint, GLenum, [*c]GLuint64EXT) callconv(.C) void;
pub extern var glad_glGetIntegerui64vNV: ?*const fn (GLenum, [*c]GLuint64EXT) callconv(.C) void;
pub extern var glad_glUniformui64NV: ?*const fn (GLint, GLuint64EXT) callconv(.C) void;
pub extern var glad_glUniformui64vNV: ?*const fn (GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var glad_glProgramUniformui64NV: ?*const fn (GLuint, GLint, GLuint64EXT) callconv(.C) void;
pub extern var glad_glProgramUniformui64vNV: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var GLAD_GL_NV_shader_buffer_store: c_int;
pub extern var GLAD_GL_NV_shader_storage_buffer_object: c_int;
pub extern var GLAD_GL_NV_shader_subgroup_partitioned: c_int;
pub extern var GLAD_GL_NV_shader_texture_footprint: c_int;
pub extern var GLAD_GL_NV_shader_thread_group: c_int;
pub extern var GLAD_GL_NV_shader_thread_shuffle: c_int;
pub extern var GLAD_GL_NV_shading_rate_image: c_int;
pub extern var glad_glBindShadingRateImageNV: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glGetShadingRateImagePaletteNV: ?*const fn (GLuint, GLuint, [*c]GLenum) callconv(.C) void;
pub extern var glad_glGetShadingRateSampleLocationivNV: ?*const fn (GLenum, GLuint, GLuint, [*c]GLint) callconv(.C) void;
pub extern var glad_glShadingRateImageBarrierNV: ?*const fn (GLboolean) callconv(.C) void;
pub extern var glad_glShadingRateImagePaletteNV: ?*const fn (GLuint, GLuint, GLsizei, [*c]const GLenum) callconv(.C) void;
pub extern var glad_glShadingRateSampleOrderNV: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glShadingRateSampleOrderCustomNV: ?*const fn (GLenum, GLuint, [*c]const GLint) callconv(.C) void;
pub extern var GLAD_GL_NV_stereo_view_rendering: c_int;
pub extern var GLAD_GL_NV_tessellation_program5: c_int;
pub extern var GLAD_GL_NV_texgen_emboss: c_int;
pub extern var GLAD_GL_NV_texgen_reflection: c_int;
pub extern var GLAD_GL_NV_texture_barrier: c_int;
pub extern var glad_glTextureBarrierNV: ?*const fn () callconv(.C) void;
pub extern var GLAD_GL_NV_texture_compression_vtc: c_int;
pub extern var GLAD_GL_NV_texture_env_combine4: c_int;
pub extern var GLAD_GL_NV_texture_expand_normal: c_int;
pub extern var GLAD_GL_NV_texture_multisample: c_int;
pub extern var glad_glTexImage2DMultisampleCoverageNV: ?*const fn (GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var glad_glTexImage3DMultisampleCoverageNV: ?*const fn (GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var glad_glTextureImage2DMultisampleNV: ?*const fn (GLuint, GLenum, GLsizei, GLint, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var glad_glTextureImage3DMultisampleNV: ?*const fn (GLuint, GLenum, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var glad_glTextureImage2DMultisampleCoverageNV: ?*const fn (GLuint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var glad_glTextureImage3DMultisampleCoverageNV: ?*const fn (GLuint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var GLAD_GL_NV_texture_rectangle: c_int;
pub extern var GLAD_GL_NV_texture_rectangle_compressed: c_int;
pub extern var GLAD_GL_NV_texture_shader: c_int;
pub extern var GLAD_GL_NV_texture_shader2: c_int;
pub extern var GLAD_GL_NV_texture_shader3: c_int;
pub extern var GLAD_GL_NV_timeline_semaphore: c_int;
pub extern var glad_glCreateSemaphoresNV: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glSemaphoreParameterivNV: ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glGetSemaphoreParameterivNV: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var GLAD_GL_NV_transform_feedback: c_int;
pub extern var glad_glBeginTransformFeedbackNV: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glEndTransformFeedbackNV: ?*const fn () callconv(.C) void;
pub extern var glad_glTransformFeedbackAttribsNV: ?*const fn (GLsizei, [*c]const GLint, GLenum) callconv(.C) void;
pub extern var glad_glBindBufferRangeNV: ?*const fn (GLenum, GLuint, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var glad_glBindBufferOffsetNV: ?*const fn (GLenum, GLuint, GLuint, GLintptr) callconv(.C) void;
pub extern var glad_glBindBufferBaseNV: ?*const fn (GLenum, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glTransformFeedbackVaryingsNV: ?*const fn (GLuint, GLsizei, [*c]const GLint, GLenum) callconv(.C) void;
pub extern var glad_glActiveVaryingNV: ?*const fn (GLuint, [*c]const GLchar) callconv(.C) void;
pub extern var glad_glGetVaryingLocationNV: ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLint;
pub extern var glad_glGetActiveVaryingNV: ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLsizei, [*c]GLenum, [*c]GLchar) callconv(.C) void;
pub extern var glad_glGetTransformFeedbackVaryingNV: ?*const fn (GLuint, GLuint, [*c]GLint) callconv(.C) void;
pub extern var glad_glTransformFeedbackStreamAttribsNV: ?*const fn (GLsizei, [*c]const GLint, GLsizei, [*c]const GLint, GLenum) callconv(.C) void;
pub extern var GLAD_GL_NV_transform_feedback2: c_int;
pub extern var glad_glBindTransformFeedbackNV: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glDeleteTransformFeedbacksNV: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGenTransformFeedbacksNV: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glIsTransformFeedbackNV: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glPauseTransformFeedbackNV: ?*const fn () callconv(.C) void;
pub extern var glad_glResumeTransformFeedbackNV: ?*const fn () callconv(.C) void;
pub extern var glad_glDrawTransformFeedbackNV: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var GLAD_GL_NV_uniform_buffer_std430_layout: c_int;
pub extern var GLAD_GL_NV_uniform_buffer_unified_memory: c_int;
pub extern var GLAD_GL_NV_vdpau_interop: c_int;
pub extern var glad_glVDPAUInitNV: ?*const fn (?*const anyopaque, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glVDPAUFiniNV: ?*const fn () callconv(.C) void;
pub extern var glad_glVDPAURegisterVideoSurfaceNV: ?*const fn (?*const anyopaque, GLenum, GLsizei, [*c]const GLuint) callconv(.C) GLvdpauSurfaceNV;
pub extern var glad_glVDPAURegisterOutputSurfaceNV: ?*const fn (?*const anyopaque, GLenum, GLsizei, [*c]const GLuint) callconv(.C) GLvdpauSurfaceNV;
pub extern var glad_glVDPAUIsSurfaceNV: ?*const fn (GLvdpauSurfaceNV) callconv(.C) GLboolean;
pub extern var glad_glVDPAUUnregisterSurfaceNV: ?*const fn (GLvdpauSurfaceNV) callconv(.C) void;
pub extern var glad_glVDPAUGetSurfaceivNV: ?*const fn (GLvdpauSurfaceNV, GLenum, GLsizei, [*c]GLsizei, [*c]GLint) callconv(.C) void;
pub extern var glad_glVDPAUSurfaceAccessNV: ?*const fn (GLvdpauSurfaceNV, GLenum) callconv(.C) void;
pub extern var glad_glVDPAUMapSurfacesNV: ?*const fn (GLsizei, [*c]const GLvdpauSurfaceNV) callconv(.C) void;
pub extern var glad_glVDPAUUnmapSurfacesNV: ?*const fn (GLsizei, [*c]const GLvdpauSurfaceNV) callconv(.C) void;
pub extern var GLAD_GL_NV_vdpau_interop2: c_int;
pub extern var glad_glVDPAURegisterVideoSurfaceWithPictureStructureNV: ?*const fn (?*const anyopaque, GLenum, GLsizei, [*c]const GLuint, GLboolean) callconv(.C) GLvdpauSurfaceNV;
pub extern var GLAD_GL_NV_vertex_array_range: c_int;
pub extern var glad_glFlushVertexArrayRangeNV: ?*const fn () callconv(.C) void;
pub extern var glad_glVertexArrayRangeNV: ?*const fn (GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var GLAD_GL_NV_vertex_array_range2: c_int;
pub extern var GLAD_GL_NV_vertex_attrib_integer_64bit: c_int;
pub extern var glad_glVertexAttribL1i64NV: ?*const fn (GLuint, GLint64EXT) callconv(.C) void;
pub extern var glad_glVertexAttribL2i64NV: ?*const fn (GLuint, GLint64EXT, GLint64EXT) callconv(.C) void;
pub extern var glad_glVertexAttribL3i64NV: ?*const fn (GLuint, GLint64EXT, GLint64EXT, GLint64EXT) callconv(.C) void;
pub extern var glad_glVertexAttribL4i64NV: ?*const fn (GLuint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT) callconv(.C) void;
pub extern var glad_glVertexAttribL1i64vNV: ?*const fn (GLuint, [*c]const GLint64EXT) callconv(.C) void;
pub extern var glad_glVertexAttribL2i64vNV: ?*const fn (GLuint, [*c]const GLint64EXT) callconv(.C) void;
pub extern var glad_glVertexAttribL3i64vNV: ?*const fn (GLuint, [*c]const GLint64EXT) callconv(.C) void;
pub extern var glad_glVertexAttribL4i64vNV: ?*const fn (GLuint, [*c]const GLint64EXT) callconv(.C) void;
pub extern var glad_glVertexAttribL1ui64NV: ?*const fn (GLuint, GLuint64EXT) callconv(.C) void;
pub extern var glad_glVertexAttribL2ui64NV: ?*const fn (GLuint, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub extern var glad_glVertexAttribL3ui64NV: ?*const fn (GLuint, GLuint64EXT, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub extern var glad_glVertexAttribL4ui64NV: ?*const fn (GLuint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT) callconv(.C) void;
pub extern var glad_glVertexAttribL1ui64vNV: ?*const fn (GLuint, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var glad_glVertexAttribL2ui64vNV: ?*const fn (GLuint, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var glad_glVertexAttribL3ui64vNV: ?*const fn (GLuint, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var glad_glVertexAttribL4ui64vNV: ?*const fn (GLuint, [*c]const GLuint64EXT) callconv(.C) void;
pub extern var glad_glGetVertexAttribLi64vNV: ?*const fn (GLuint, GLenum, [*c]GLint64EXT) callconv(.C) void;
pub extern var glad_glGetVertexAttribLui64vNV: ?*const fn (GLuint, GLenum, [*c]GLuint64EXT) callconv(.C) void;
pub extern var glad_glVertexAttribLFormatNV: ?*const fn (GLuint, GLint, GLenum, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_NV_vertex_buffer_unified_memory: c_int;
pub extern var glad_glBufferAddressRangeNV: ?*const fn (GLenum, GLuint, GLuint64EXT, GLsizeiptr) callconv(.C) void;
pub extern var glad_glVertexFormatNV: ?*const fn (GLint, GLenum, GLsizei) callconv(.C) void;
pub extern var glad_glNormalFormatNV: ?*const fn (GLenum, GLsizei) callconv(.C) void;
pub extern var glad_glColorFormatNV: ?*const fn (GLint, GLenum, GLsizei) callconv(.C) void;
pub extern var glad_glIndexFormatNV: ?*const fn (GLenum, GLsizei) callconv(.C) void;
pub extern var glad_glTexCoordFormatNV: ?*const fn (GLint, GLenum, GLsizei) callconv(.C) void;
pub extern var glad_glEdgeFlagFormatNV: ?*const fn (GLsizei) callconv(.C) void;
pub extern var glad_glSecondaryColorFormatNV: ?*const fn (GLint, GLenum, GLsizei) callconv(.C) void;
pub extern var glad_glFogCoordFormatNV: ?*const fn (GLenum, GLsizei) callconv(.C) void;
pub extern var glad_glVertexAttribFormatNV: ?*const fn (GLuint, GLint, GLenum, GLboolean, GLsizei) callconv(.C) void;
pub extern var glad_glVertexAttribIFormatNV: ?*const fn (GLuint, GLint, GLenum, GLsizei) callconv(.C) void;
pub extern var glad_glGetIntegerui64i_vNV: ?*const fn (GLenum, GLuint, [*c]GLuint64EXT) callconv(.C) void;
pub extern var GLAD_GL_NV_vertex_program: c_int;
pub extern var glad_glAreProgramsResidentNV: ?*const fn (GLsizei, [*c]const GLuint, [*c]GLboolean) callconv(.C) GLboolean;
pub extern var glad_glBindProgramNV: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glDeleteProgramsNV: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glExecuteProgramNV: ?*const fn (GLenum, GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glGenProgramsNV: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glGetProgramParameterdvNV: ?*const fn (GLenum, GLuint, GLenum, [*c]GLdouble) callconv(.C) void;
pub extern var glad_glGetProgramParameterfvNV: ?*const fn (GLenum, GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetProgramivNV: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetProgramStringNV: ?*const fn (GLuint, GLenum, [*c]GLubyte) callconv(.C) void;
pub extern var glad_glGetTrackMatrixivNV: ?*const fn (GLenum, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetVertexAttribdvNV: ?*const fn (GLuint, GLenum, [*c]GLdouble) callconv(.C) void;
pub extern var glad_glGetVertexAttribfvNV: ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetVertexAttribivNV: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetVertexAttribPointervNV: ?*const fn (GLuint, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var glad_glIsProgramNV: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glLoadProgramNV: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLubyte) callconv(.C) void;
pub extern var glad_glProgramParameter4dNV: ?*const fn (GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glProgramParameter4dvNV: ?*const fn (GLenum, GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramParameter4fNV: ?*const fn (GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glProgramParameter4fvNV: ?*const fn (GLenum, GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glProgramParameters4dvNV: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glProgramParameters4fvNV: ?*const fn (GLenum, GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glRequestResidentProgramsNV: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glTrackMatrixNV: ?*const fn (GLenum, GLuint, GLenum, GLenum) callconv(.C) void;
pub extern var glad_glVertexAttribPointerNV: ?*const fn (GLuint, GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glVertexAttrib1dNV: ?*const fn (GLuint, GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttrib1dvNV: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttrib1fNV: ?*const fn (GLuint, GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttrib1fvNV: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttrib1sNV: ?*const fn (GLuint, GLshort) callconv(.C) void;
pub extern var glad_glVertexAttrib1svNV: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertexAttrib2dNV: ?*const fn (GLuint, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttrib2dvNV: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttrib2fNV: ?*const fn (GLuint, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttrib2fvNV: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttrib2sNV: ?*const fn (GLuint, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glVertexAttrib2svNV: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertexAttrib3dNV: ?*const fn (GLuint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttrib3dvNV: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttrib3fNV: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttrib3fvNV: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttrib3sNV: ?*const fn (GLuint, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glVertexAttrib3svNV: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertexAttrib4dNV: ?*const fn (GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttrib4dvNV: ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttrib4fNV: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttrib4fvNV: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttrib4sNV: ?*const fn (GLuint, GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glVertexAttrib4svNV: ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertexAttrib4ubNV: ?*const fn (GLuint, GLubyte, GLubyte, GLubyte, GLubyte) callconv(.C) void;
pub extern var glad_glVertexAttrib4ubvNV: ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
pub extern var glad_glVertexAttribs1dvNV: ?*const fn (GLuint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttribs1fvNV: ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttribs1svNV: ?*const fn (GLuint, GLsizei, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertexAttribs2dvNV: ?*const fn (GLuint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttribs2fvNV: ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttribs2svNV: ?*const fn (GLuint, GLsizei, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertexAttribs3dvNV: ?*const fn (GLuint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttribs3fvNV: ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttribs3svNV: ?*const fn (GLuint, GLsizei, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertexAttribs4dvNV: ?*const fn (GLuint, GLsizei, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glVertexAttribs4fvNV: ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glVertexAttribs4svNV: ?*const fn (GLuint, GLsizei, [*c]const GLshort) callconv(.C) void;
pub extern var glad_glVertexAttribs4ubvNV: ?*const fn (GLuint, GLsizei, [*c]const GLubyte) callconv(.C) void;
pub extern var GLAD_GL_NV_vertex_program1_1: c_int;
pub extern var GLAD_GL_NV_vertex_program2: c_int;
pub extern var GLAD_GL_NV_vertex_program2_option: c_int;
pub extern var GLAD_GL_NV_vertex_program3: c_int;
pub extern var GLAD_GL_NV_vertex_program4: c_int;
pub extern var GLAD_GL_NV_video_capture: c_int;
pub extern var glad_glBeginVideoCaptureNV: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glBindVideoCaptureStreamBufferNV: ?*const fn (GLuint, GLuint, GLenum, GLintptrARB) callconv(.C) void;
pub extern var glad_glBindVideoCaptureStreamTextureNV: ?*const fn (GLuint, GLuint, GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var glad_glEndVideoCaptureNV: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glGetVideoCaptureivNV: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetVideoCaptureStreamivNV: ?*const fn (GLuint, GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetVideoCaptureStreamfvNV: ?*const fn (GLuint, GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetVideoCaptureStreamdvNV: ?*const fn (GLuint, GLuint, GLenum, [*c]GLdouble) callconv(.C) void;
pub extern var glad_glVideoCaptureNV: ?*const fn (GLuint, [*c]GLuint, [*c]GLuint64EXT) callconv(.C) GLenum;
pub extern var glad_glVideoCaptureStreamParameterivNV: ?*const fn (GLuint, GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glVideoCaptureStreamParameterfvNV: ?*const fn (GLuint, GLuint, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glVideoCaptureStreamParameterdvNV: ?*const fn (GLuint, GLuint, GLenum, [*c]const GLdouble) callconv(.C) void;
pub extern var GLAD_GL_NV_viewport_array2: c_int;
pub extern var GLAD_GL_NV_viewport_swizzle: c_int;
pub extern var glad_glViewportSwizzleNV: ?*const fn (GLuint, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var GLAD_GL_OES_byte_coordinates: c_int;
pub extern var glad_glMultiTexCoord1bOES: ?*const fn (GLenum, GLbyte) callconv(.C) void;
pub extern var glad_glMultiTexCoord1bvOES: ?*const fn (GLenum, [*c]const GLbyte) callconv(.C) void;
pub extern var glad_glMultiTexCoord2bOES: ?*const fn (GLenum, GLbyte, GLbyte) callconv(.C) void;
pub extern var glad_glMultiTexCoord2bvOES: ?*const fn (GLenum, [*c]const GLbyte) callconv(.C) void;
pub extern var glad_glMultiTexCoord3bOES: ?*const fn (GLenum, GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var glad_glMultiTexCoord3bvOES: ?*const fn (GLenum, [*c]const GLbyte) callconv(.C) void;
pub extern var glad_glMultiTexCoord4bOES: ?*const fn (GLenum, GLbyte, GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var glad_glMultiTexCoord4bvOES: ?*const fn (GLenum, [*c]const GLbyte) callconv(.C) void;
pub extern var glad_glTexCoord1bOES: ?*const fn (GLbyte) callconv(.C) void;
pub extern var glad_glTexCoord1bvOES: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var glad_glTexCoord2bOES: ?*const fn (GLbyte, GLbyte) callconv(.C) void;
pub extern var glad_glTexCoord2bvOES: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var glad_glTexCoord3bOES: ?*const fn (GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var glad_glTexCoord3bvOES: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var glad_glTexCoord4bOES: ?*const fn (GLbyte, GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var glad_glTexCoord4bvOES: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var glad_glVertex2bOES: ?*const fn (GLbyte, GLbyte) callconv(.C) void;
pub extern var glad_glVertex2bvOES: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var glad_glVertex3bOES: ?*const fn (GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var glad_glVertex3bvOES: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var glad_glVertex4bOES: ?*const fn (GLbyte, GLbyte, GLbyte, GLbyte) callconv(.C) void;
pub extern var glad_glVertex4bvOES: ?*const fn ([*c]const GLbyte) callconv(.C) void;
pub extern var GLAD_GL_OES_compressed_paletted_texture: c_int;
pub extern var GLAD_GL_OES_fixed_point: c_int;
pub extern var glad_glAlphaFuncxOES: ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub extern var glad_glClearColorxOES: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glClearDepthxOES: ?*const fn (GLfixed) callconv(.C) void;
pub extern var glad_glClipPlanexOES: ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var glad_glColor4xOES: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glDepthRangexOES: ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glFogxOES: ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub extern var glad_glFogxvOES: ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var glad_glFrustumxOES: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glGetClipPlanexOES: ?*const fn (GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var glad_glGetFixedvOES: ?*const fn (GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var glad_glGetTexEnvxvOES: ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var glad_glGetTexParameterxvOES: ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var glad_glLightModelxOES: ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub extern var glad_glLightModelxvOES: ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var glad_glLightxOES: ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub extern var glad_glLightxvOES: ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var glad_glLineWidthxOES: ?*const fn (GLfixed) callconv(.C) void;
pub extern var glad_glLoadMatrixxOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var glad_glMaterialxOES: ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub extern var glad_glMaterialxvOES: ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var glad_glMultMatrixxOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var glad_glMultiTexCoord4xOES: ?*const fn (GLenum, GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glNormal3xOES: ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glOrthoxOES: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glPointParameterxvOES: ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var glad_glPointSizexOES: ?*const fn (GLfixed) callconv(.C) void;
pub extern var glad_glPolygonOffsetxOES: ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glRotatexOES: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glScalexOES: ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glTexEnvxOES: ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub extern var glad_glTexEnvxvOES: ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var glad_glTexParameterxOES: ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub extern var glad_glTexParameterxvOES: ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var glad_glTranslatexOES: ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glGetLightxvOES: ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var glad_glGetMaterialxvOES: ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var glad_glPointParameterxOES: ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub extern var glad_glSampleCoveragexOES: ?*const fn (GLclampx, GLboolean) callconv(.C) void;
pub extern var glad_glAccumxOES: ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub extern var glad_glBitmapxOES: ?*const fn (GLsizei, GLsizei, GLfixed, GLfixed, GLfixed, GLfixed, [*c]const GLubyte) callconv(.C) void;
pub extern var glad_glBlendColorxOES: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glClearAccumxOES: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glColor3xOES: ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glColor3xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var glad_glColor4xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var glad_glConvolutionParameterxOES: ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub extern var glad_glConvolutionParameterxvOES: ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var glad_glEvalCoord1xOES: ?*const fn (GLfixed) callconv(.C) void;
pub extern var glad_glEvalCoord1xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var glad_glEvalCoord2xOES: ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glEvalCoord2xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var glad_glFeedbackBufferxOES: ?*const fn (GLsizei, GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var glad_glGetConvolutionParameterxvOES: ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var glad_glGetHistogramParameterxvOES: ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var glad_glGetLightxOES: ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var glad_glGetMapxvOES: ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var glad_glGetMaterialxOES: ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub extern var glad_glGetPixelMapxv: ?*const fn (GLenum, GLint, [*c]GLfixed) callconv(.C) void;
pub extern var glad_glGetTexGenxvOES: ?*const fn (GLenum, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var glad_glGetTexLevelParameterxvOES: ?*const fn (GLenum, GLint, GLenum, [*c]GLfixed) callconv(.C) void;
pub extern var glad_glIndexxOES: ?*const fn (GLfixed) callconv(.C) void;
pub extern var glad_glIndexxvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var glad_glLoadTransposeMatrixxOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var glad_glMap1xOES: ?*const fn (GLenum, GLfixed, GLfixed, GLint, GLint, GLfixed) callconv(.C) void;
pub extern var glad_glMap2xOES: ?*const fn (GLenum, GLfixed, GLfixed, GLint, GLint, GLfixed, GLfixed, GLint, GLint, GLfixed) callconv(.C) void;
pub extern var glad_glMapGrid1xOES: ?*const fn (GLint, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glMapGrid2xOES: ?*const fn (GLint, GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glMultTransposeMatrixxOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var glad_glMultiTexCoord1xOES: ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub extern var glad_glMultiTexCoord1xvOES: ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var glad_glMultiTexCoord2xOES: ?*const fn (GLenum, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glMultiTexCoord2xvOES: ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var glad_glMultiTexCoord3xOES: ?*const fn (GLenum, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glMultiTexCoord3xvOES: ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var glad_glMultiTexCoord4xvOES: ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var glad_glNormal3xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var glad_glPassThroughxOES: ?*const fn (GLfixed) callconv(.C) void;
pub extern var glad_glPixelMapx: ?*const fn (GLenum, GLint, [*c]const GLfixed) callconv(.C) void;
pub extern var glad_glPixelStorex: ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub extern var glad_glPixelTransferxOES: ?*const fn (GLenum, GLfixed) callconv(.C) void;
pub extern var glad_glPixelZoomxOES: ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glPrioritizeTexturesxOES: ?*const fn (GLsizei, [*c]const GLuint, [*c]const GLfixed) callconv(.C) void;
pub extern var glad_glRasterPos2xOES: ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glRasterPos2xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var glad_glRasterPos3xOES: ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glRasterPos3xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var glad_glRasterPos4xOES: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glRasterPos4xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var glad_glRectxOES: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glRectxvOES: ?*const fn ([*c]const GLfixed, [*c]const GLfixed) callconv(.C) void;
pub extern var glad_glTexCoord1xOES: ?*const fn (GLfixed) callconv(.C) void;
pub extern var glad_glTexCoord1xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var glad_glTexCoord2xOES: ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glTexCoord2xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var glad_glTexCoord3xOES: ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glTexCoord3xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var glad_glTexCoord4xOES: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glTexCoord4xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var glad_glTexGenxOES: ?*const fn (GLenum, GLenum, GLfixed) callconv(.C) void;
pub extern var glad_glTexGenxvOES: ?*const fn (GLenum, GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var glad_glVertex2xOES: ?*const fn (GLfixed) callconv(.C) void;
pub extern var glad_glVertex2xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var glad_glVertex3xOES: ?*const fn (GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glVertex3xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var glad_glVertex4xOES: ?*const fn (GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glVertex4xvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var GLAD_GL_OES_query_matrix: c_int;
pub extern var glad_glQueryMatrixxOES: ?*const fn ([*c]GLfixed, [*c]GLint) callconv(.C) GLbitfield;
pub extern var GLAD_GL_OES_read_format: c_int;
pub extern var GLAD_GL_OES_single_precision: c_int;
pub extern var glad_glClearDepthfOES: ?*const fn (GLclampf) callconv(.C) void;
pub extern var glad_glClipPlanefOES: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glDepthRangefOES: ?*const fn (GLclampf, GLclampf) callconv(.C) void;
pub extern var glad_glFrustumfOES: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glGetClipPlanefOES: ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glOrthofOES: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var GLAD_GL_OML_interlace: c_int;
pub extern var GLAD_GL_OML_resample: c_int;
pub extern var GLAD_GL_OML_subsample: c_int;
pub extern var GLAD_GL_OVR_multiview: c_int;
pub extern var glad_glFramebufferTextureMultiviewOVR: ?*const fn (GLenum, GLenum, GLuint, GLint, GLint, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_OVR_multiview2: c_int;
pub extern var GLAD_GL_PGI_misc_hints: c_int;
pub extern var glad_glHintPGI: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var GLAD_GL_PGI_vertex_hints: c_int;
pub extern var GLAD_GL_REND_screen_coordinates: c_int;
pub extern var GLAD_GL_S3_s3tc: c_int;
pub extern var GLAD_GL_SGIS_detail_texture: c_int;
pub extern var glad_glDetailTexFuncSGIS: ?*const fn (GLenum, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glGetDetailTexFuncSGIS: ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var GLAD_GL_SGIS_fog_function: c_int;
pub extern var glad_glFogFuncSGIS: ?*const fn (GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glGetFogFuncSGIS: ?*const fn ([*c]GLfloat) callconv(.C) void;
pub extern var GLAD_GL_SGIS_generate_mipmap: c_int;
pub extern var GLAD_GL_SGIS_multisample: c_int;
pub extern var glad_glSampleMaskSGIS: ?*const fn (GLclampf, GLboolean) callconv(.C) void;
pub extern var glad_glSamplePatternSGIS: ?*const fn (GLenum) callconv(.C) void;
pub extern var GLAD_GL_SGIS_pixel_texture: c_int;
pub extern var glad_glPixelTexGenParameteriSGIS: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var glad_glPixelTexGenParameterivSGIS: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glPixelTexGenParameterfSGIS: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glPixelTexGenParameterfvSGIS: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glGetPixelTexGenParameterivSGIS: ?*const fn (GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetPixelTexGenParameterfvSGIS: ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var GLAD_GL_SGIS_point_line_texgen: c_int;
pub extern var GLAD_GL_SGIS_point_parameters: c_int;
pub extern var glad_glPointParameterfSGIS: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glPointParameterfvSGIS: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var GLAD_GL_SGIS_sharpen_texture: c_int;
pub extern var glad_glSharpenTexFuncSGIS: ?*const fn (GLenum, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glGetSharpenTexFuncSGIS: ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var GLAD_GL_SGIS_texture4D: c_int;
pub extern var glad_glTexImage4DSGIS: ?*const fn (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glTexSubImage4DSGIS: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var GLAD_GL_SGIS_texture_border_clamp: c_int;
pub extern var GLAD_GL_SGIS_texture_color_mask: c_int;
pub extern var glad_glTextureColorMaskSGIS: ?*const fn (GLboolean, GLboolean, GLboolean, GLboolean) callconv(.C) void;
pub extern var GLAD_GL_SGIS_texture_edge_clamp: c_int;
pub extern var GLAD_GL_SGIS_texture_filter4: c_int;
pub extern var glad_glGetTexFilterFuncSGIS: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glTexFilterFuncSGIS: ?*const fn (GLenum, GLenum, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var GLAD_GL_SGIS_texture_lod: c_int;
pub extern var GLAD_GL_SGIS_texture_select: c_int;
pub extern var GLAD_GL_SGIX_async: c_int;
pub extern var glad_glAsyncMarkerSGIX: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glFinishAsyncSGIX: ?*const fn ([*c]GLuint) callconv(.C) GLint;
pub extern var glad_glPollAsyncSGIX: ?*const fn ([*c]GLuint) callconv(.C) GLint;
pub extern var glad_glGenAsyncMarkersSGIX: ?*const fn (GLsizei) callconv(.C) GLuint;
pub extern var glad_glDeleteAsyncMarkersSGIX: ?*const fn (GLuint, GLsizei) callconv(.C) void;
pub extern var glad_glIsAsyncMarkerSGIX: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var GLAD_GL_SGIX_async_histogram: c_int;
pub extern var GLAD_GL_SGIX_async_pixel: c_int;
pub extern var GLAD_GL_SGIX_blend_alpha_minmax: c_int;
pub extern var GLAD_GL_SGIX_calligraphic_fragment: c_int;
pub extern var GLAD_GL_SGIX_clipmap: c_int;
pub extern var GLAD_GL_SGIX_convolution_accuracy: c_int;
pub extern var GLAD_GL_SGIX_depth_pass_instrument: c_int;
pub extern var GLAD_GL_SGIX_depth_texture: c_int;
pub extern var GLAD_GL_SGIX_flush_raster: c_int;
pub extern var glad_glFlushRasterSGIX: ?*const fn () callconv(.C) void;
pub extern var GLAD_GL_SGIX_fog_offset: c_int;
pub extern var GLAD_GL_SGIX_fragment_lighting: c_int;
pub extern var glad_glFragmentColorMaterialSGIX: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var glad_glFragmentLightfSGIX: ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glFragmentLightfvSGIX: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glFragmentLightiSGIX: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var glad_glFragmentLightivSGIX: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glFragmentLightModelfSGIX: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glFragmentLightModelfvSGIX: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glFragmentLightModeliSGIX: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var glad_glFragmentLightModelivSGIX: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glFragmentMaterialfSGIX: ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glFragmentMaterialfvSGIX: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glFragmentMaterialiSGIX: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var glad_glFragmentMaterialivSGIX: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glGetFragmentLightfvSGIX: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetFragmentLightivSGIX: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetFragmentMaterialfvSGIX: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetFragmentMaterialivSGIX: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glLightEnviSGIX: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var GLAD_GL_SGIX_framezoom: c_int;
pub extern var glad_glFrameZoomSGIX: ?*const fn (GLint) callconv(.C) void;
pub extern var GLAD_GL_SGIX_igloo_interface: c_int;
pub extern var glad_glIglooInterfaceSGIX: ?*const fn (GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var GLAD_GL_SGIX_instruments: c_int;
pub extern var glad_glGetInstrumentsSGIX: ?*const fn () callconv(.C) GLint;
pub extern var glad_glInstrumentsBufferSGIX: ?*const fn (GLsizei, [*c]GLint) callconv(.C) void;
pub extern var glad_glPollInstrumentsSGIX: ?*const fn ([*c]GLint) callconv(.C) GLint;
pub extern var glad_glReadInstrumentsSGIX: ?*const fn (GLint) callconv(.C) void;
pub extern var glad_glStartInstrumentsSGIX: ?*const fn () callconv(.C) void;
pub extern var glad_glStopInstrumentsSGIX: ?*const fn (GLint) callconv(.C) void;
pub extern var GLAD_GL_SGIX_interlace: c_int;
pub extern var GLAD_GL_SGIX_ir_instrument1: c_int;
pub extern var GLAD_GL_SGIX_list_priority: c_int;
pub extern var glad_glGetListParameterfvSGIX: ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetListParameterivSGIX: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glListParameterfSGIX: ?*const fn (GLuint, GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glListParameterfvSGIX: ?*const fn (GLuint, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glListParameteriSGIX: ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
pub extern var glad_glListParameterivSGIX: ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var GLAD_GL_SGIX_pixel_texture: c_int;
pub extern var glad_glPixelTexGenSGIX: ?*const fn (GLenum) callconv(.C) void;
pub extern var GLAD_GL_SGIX_pixel_tiles: c_int;
pub extern var GLAD_GL_SGIX_polynomial_ffd: c_int;
pub extern var glad_glDeformationMap3dSGIX: ?*const fn (GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, [*c]const GLdouble) callconv(.C) void;
pub extern var glad_glDeformationMap3fSGIX: ?*const fn (GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glDeformSGIX: ?*const fn (GLbitfield) callconv(.C) void;
pub extern var glad_glLoadIdentityDeformationMapSGIX: ?*const fn (GLbitfield) callconv(.C) void;
pub extern var GLAD_GL_SGIX_reference_plane: c_int;
pub extern var glad_glReferencePlaneSGIX: ?*const fn ([*c]const GLdouble) callconv(.C) void;
pub extern var GLAD_GL_SGIX_resample: c_int;
pub extern var GLAD_GL_SGIX_scalebias_hint: c_int;
pub extern var GLAD_GL_SGIX_shadow: c_int;
pub extern var GLAD_GL_SGIX_shadow_ambient: c_int;
pub extern var GLAD_GL_SGIX_sprite: c_int;
pub extern var glad_glSpriteParameterfSGIX: ?*const fn (GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glSpriteParameterfvSGIX: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glSpriteParameteriSGIX: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var glad_glSpriteParameterivSGIX: ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
pub extern var GLAD_GL_SGIX_subsample: c_int;
pub extern var GLAD_GL_SGIX_tag_sample_buffer: c_int;
pub extern var glad_glTagSampleBufferSGIX: ?*const fn () callconv(.C) void;
pub extern var GLAD_GL_SGIX_texture_add_env: c_int;
pub extern var GLAD_GL_SGIX_texture_coordinate_clamp: c_int;
pub extern var GLAD_GL_SGIX_texture_lod_bias: c_int;
pub extern var GLAD_GL_SGIX_texture_multi_buffer: c_int;
pub extern var GLAD_GL_SGIX_texture_scale_bias: c_int;
pub extern var GLAD_GL_SGIX_vertex_preclip: c_int;
pub extern var GLAD_GL_SGIX_ycrcb: c_int;
pub extern var GLAD_GL_SGIX_ycrcb_subsample: c_int;
pub extern var GLAD_GL_SGIX_ycrcba: c_int;
pub extern var GLAD_GL_SGI_color_matrix: c_int;
pub extern var GLAD_GL_SGI_color_table: c_int;
pub extern var glad_glColorTableSGI: ?*const fn (GLenum, GLenum, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glColorTableParameterfvSGI: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glColorTableParameterivSGI: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glCopyColorTableSGI: ?*const fn (GLenum, GLenum, GLint, GLint, GLsizei) callconv(.C) void;
pub extern var glad_glGetColorTableSGI: ?*const fn (GLenum, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetColorTableParameterfvSGI: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetColorTableParameterivSGI: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var GLAD_GL_SGI_texture_color_table: c_int;
pub extern var GLAD_GL_SUNX_constant_data: c_int;
pub extern var glad_glFinishTextureSUNX: ?*const fn () callconv(.C) void;
pub extern var GLAD_GL_SUN_convolution_border_modes: c_int;
pub extern var GLAD_GL_SUN_global_alpha: c_int;
pub extern var glad_glGlobalAlphaFactorbSUN: ?*const fn (GLbyte) callconv(.C) void;
pub extern var glad_glGlobalAlphaFactorsSUN: ?*const fn (GLshort) callconv(.C) void;
pub extern var glad_glGlobalAlphaFactoriSUN: ?*const fn (GLint) callconv(.C) void;
pub extern var glad_glGlobalAlphaFactorfSUN: ?*const fn (GLfloat) callconv(.C) void;
pub extern var glad_glGlobalAlphaFactordSUN: ?*const fn (GLdouble) callconv(.C) void;
pub extern var glad_glGlobalAlphaFactorubSUN: ?*const fn (GLubyte) callconv(.C) void;
pub extern var glad_glGlobalAlphaFactorusSUN: ?*const fn (GLushort) callconv(.C) void;
pub extern var glad_glGlobalAlphaFactoruiSUN: ?*const fn (GLuint) callconv(.C) void;
pub extern var GLAD_GL_SUN_mesh_array: c_int;
pub extern var glad_glDrawMeshArraysSUN: ?*const fn (GLenum, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_SUN_slice_accum: c_int;
pub extern var GLAD_GL_SUN_triangle_list: c_int;
pub extern var glad_glReplacementCodeuiSUN: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glReplacementCodeusSUN: ?*const fn (GLushort) callconv(.C) void;
pub extern var glad_glReplacementCodeubSUN: ?*const fn (GLubyte) callconv(.C) void;
pub extern var glad_glReplacementCodeuivSUN: ?*const fn ([*c]const GLuint) callconv(.C) void;
pub extern var glad_glReplacementCodeusvSUN: ?*const fn ([*c]const GLushort) callconv(.C) void;
pub extern var glad_glReplacementCodeubvSUN: ?*const fn ([*c]const GLubyte) callconv(.C) void;
pub extern var glad_glReplacementCodePointerSUN: ?*const fn (GLenum, GLsizei, [*c]?*const anyopaque) callconv(.C) void;
pub extern var GLAD_GL_SUN_vertex: c_int;
pub extern var glad_glColor4ubVertex2fSUN: ?*const fn (GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glColor4ubVertex2fvSUN: ?*const fn ([*c]const GLubyte, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glColor4ubVertex3fSUN: ?*const fn (GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glColor4ubVertex3fvSUN: ?*const fn ([*c]const GLubyte, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glColor3fVertex3fSUN: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glColor3fVertex3fvSUN: ?*const fn ([*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glNormal3fVertex3fSUN: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glNormal3fVertex3fvSUN: ?*const fn ([*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glColor4fNormal3fVertex3fSUN: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glColor4fNormal3fVertex3fvSUN: ?*const fn ([*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glTexCoord2fVertex3fSUN: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glTexCoord2fVertex3fvSUN: ?*const fn ([*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glTexCoord4fVertex4fSUN: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glTexCoord4fVertex4fvSUN: ?*const fn ([*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glTexCoord2fColor4ubVertex3fSUN: ?*const fn (GLfloat, GLfloat, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glTexCoord2fColor4ubVertex3fvSUN: ?*const fn ([*c]const GLfloat, [*c]const GLubyte, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glTexCoord2fColor3fVertex3fSUN: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glTexCoord2fColor3fVertex3fvSUN: ?*const fn ([*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glTexCoord2fNormal3fVertex3fSUN: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glTexCoord2fNormal3fVertex3fvSUN: ?*const fn ([*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glTexCoord2fColor4fNormal3fVertex3fSUN: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glTexCoord2fColor4fNormal3fVertex3fvSUN: ?*const fn ([*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glTexCoord4fColor4fNormal3fVertex4fSUN: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glTexCoord4fColor4fNormal3fVertex4fvSUN: ?*const fn ([*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glReplacementCodeuiVertex3fSUN: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glReplacementCodeuiVertex3fvSUN: ?*const fn ([*c]const GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glReplacementCodeuiColor4ubVertex3fSUN: ?*const fn (GLuint, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glReplacementCodeuiColor4ubVertex3fvSUN: ?*const fn ([*c]const GLuint, [*c]const GLubyte, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glReplacementCodeuiColor3fVertex3fSUN: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glReplacementCodeuiColor3fVertex3fvSUN: ?*const fn ([*c]const GLuint, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glReplacementCodeuiNormal3fVertex3fSUN: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glReplacementCodeuiNormal3fVertex3fvSUN: ?*const fn ([*c]const GLuint, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glReplacementCodeuiColor4fNormal3fVertex3fSUN: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glReplacementCodeuiColor4fNormal3fVertex3fvSUN: ?*const fn ([*c]const GLuint, [*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glReplacementCodeuiTexCoord2fVertex3fSUN: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glReplacementCodeuiTexCoord2fVertex3fvSUN: ?*const fn ([*c]const GLuint, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN: ?*const fn ([*c]const GLuint, [*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN: ?*const fn ([*c]const GLuint, [*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat, [*c]const GLfloat) callconv(.C) void;
pub extern var GLAD_GL_WIN_phong_shading: c_int;
pub extern var GLAD_GL_WIN_specular_fog: c_int;
pub extern var GLAD_GL_AMD_compressed_3DC_texture: c_int;
pub extern var GLAD_GL_AMD_compressed_ATC_texture: c_int;
pub extern var GLAD_GL_APPLE_copy_texture_levels: c_int;
pub extern var glad_glCopyTextureLevelsAPPLE: ?*const fn (GLuint, GLuint, GLint, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_APPLE_framebuffer_multisample: c_int;
pub extern var glad_glRenderbufferStorageMultisampleAPPLE: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glResolveMultisampleFramebufferAPPLE: ?*const fn () callconv(.C) void;
pub extern var GLAD_GL_APPLE_sync: c_int;
pub extern var glad_glFenceSyncAPPLE: ?*const fn (GLenum, GLbitfield) callconv(.C) GLsync;
pub extern var glad_glIsSyncAPPLE: ?*const fn (GLsync) callconv(.C) GLboolean;
pub extern var glad_glDeleteSyncAPPLE: ?*const fn (GLsync) callconv(.C) void;
pub extern var glad_glClientWaitSyncAPPLE: ?*const fn (GLsync, GLbitfield, GLuint64) callconv(.C) GLenum;
pub extern var glad_glWaitSyncAPPLE: ?*const fn (GLsync, GLbitfield, GLuint64) callconv(.C) void;
pub extern var glad_glGetInteger64vAPPLE: ?*const fn (GLenum, [*c]GLint64) callconv(.C) void;
pub extern var glad_glGetSyncivAPPLE: ?*const fn (GLsync, GLenum, GLsizei, [*c]GLsizei, [*c]GLint) callconv(.C) void;
pub extern var GLAD_GL_APPLE_texture_2D_limited_npot: c_int;
pub extern var GLAD_GL_APPLE_texture_format_BGRA8888: c_int;
pub extern var GLAD_GL_APPLE_texture_max_level: c_int;
pub extern var GLAD_GL_ARM_rgba8: c_int;
pub extern var GLAD_GL_EXT_discard_framebuffer: c_int;
pub extern var glad_glDiscardFramebufferEXT: ?*const fn (GLenum, GLsizei, [*c]const GLenum) callconv(.C) void;
pub extern var GLAD_GL_EXT_map_buffer_range: c_int;
pub extern var glad_glMapBufferRangeEXT: ?*const fn (GLenum, GLintptr, GLsizeiptr, GLbitfield) callconv(.C) ?*anyopaque;
pub extern var glad_glFlushMappedBufferRangeEXT: ?*const fn (GLenum, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var GLAD_GL_EXT_multisampled_render_to_texture: c_int;
pub extern var glad_glFramebufferTexture2DMultisampleEXT: ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_EXT_read_format_bgra: c_int;
pub extern var GLAD_GL_EXT_robustness: c_int;
pub extern var glad_glGetGraphicsResetStatusEXT: ?*const fn () callconv(.C) GLenum;
pub extern var glad_glReadnPixelsEXT: ?*const fn (GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, ?*anyopaque) callconv(.C) void;
pub extern var glad_glGetnUniformfvEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetnUniformivEXT: ?*const fn (GLuint, GLint, GLsizei, [*c]GLint) callconv(.C) void;
pub extern var GLAD_GL_EXT_sRGB: c_int;
pub extern var GLAD_GL_EXT_texture_compression_dxt1: c_int;
pub extern var GLAD_GL_EXT_texture_format_BGRA8888: c_int;
pub extern var GLAD_GL_IMG_multisampled_render_to_texture: c_int;
pub extern var glad_glRenderbufferStorageMultisampleIMG: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glFramebufferTexture2DMultisampleIMG: ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_IMG_read_format: c_int;
pub extern var GLAD_GL_IMG_texture_compression_pvrtc: c_int;
pub extern var GLAD_GL_IMG_texture_env_enhanced_fixed_function: c_int;
pub extern var GLAD_GL_IMG_user_clip_plane: c_int;
pub extern var glad_glClipPlanefIMG: ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glClipPlanexIMG: ?*const fn (GLenum, [*c]const GLfixed) callconv(.C) void;
pub extern var GLAD_GL_OES_EGL_image: c_int;
pub extern var glad_glEGLImageTargetTexture2DOES: ?*const fn (GLenum, GLeglImageOES) callconv(.C) void;
pub extern var glad_glEGLImageTargetRenderbufferStorageOES: ?*const fn (GLenum, GLeglImageOES) callconv(.C) void;
pub extern var GLAD_GL_OES_EGL_image_external: c_int;
pub extern var GLAD_GL_OES_blend_equation_separate: c_int;
pub extern var glad_glBlendEquationSeparateOES: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var GLAD_GL_OES_blend_func_separate: c_int;
pub extern var glad_glBlendFuncSeparateOES: ?*const fn (GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var GLAD_GL_OES_blend_subtract: c_int;
pub extern var glad_glBlendEquationOES: ?*const fn (GLenum) callconv(.C) void;
pub extern var GLAD_GL_OES_compressed_ETC1_RGB8_sub_texture: c_int;
pub extern var GLAD_GL_OES_compressed_ETC1_RGB8_texture: c_int;
pub extern var GLAD_GL_OES_depth24: c_int;
pub extern var GLAD_GL_OES_depth32: c_int;
pub extern var GLAD_GL_OES_draw_texture: c_int;
pub extern var glad_glDrawTexsOES: ?*const fn (GLshort, GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
pub extern var glad_glDrawTexiOES: ?*const fn (GLint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glDrawTexxOES: ?*const fn (GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) callconv(.C) void;
pub extern var glad_glDrawTexsvOES: ?*const fn ([*c]const GLshort) callconv(.C) void;
pub extern var glad_glDrawTexivOES: ?*const fn ([*c]const GLint) callconv(.C) void;
pub extern var glad_glDrawTexxvOES: ?*const fn ([*c]const GLfixed) callconv(.C) void;
pub extern var glad_glDrawTexfOES: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glDrawTexfvOES: ?*const fn ([*c]const GLfloat) callconv(.C) void;
pub extern var GLAD_GL_OES_element_index_uint: c_int;
pub extern var GLAD_GL_OES_extended_matrix_palette: c_int;
pub extern var GLAD_GL_OES_fbo_render_mipmap: c_int;
pub extern var GLAD_GL_OES_framebuffer_object: c_int;
pub extern var glad_glIsRenderbufferOES: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glBindRenderbufferOES: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glDeleteRenderbuffersOES: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGenRenderbuffersOES: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glRenderbufferStorageOES: ?*const fn (GLenum, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glGetRenderbufferParameterivOES: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glIsFramebufferOES: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glBindFramebufferOES: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glDeleteFramebuffersOES: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGenFramebuffersOES: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glCheckFramebufferStatusOES: ?*const fn (GLenum) callconv(.C) GLenum;
pub extern var glad_glFramebufferRenderbufferOES: ?*const fn (GLenum, GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var glad_glFramebufferTexture2DOES: ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub extern var glad_glGetFramebufferAttachmentParameterivOES: ?*const fn (GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGenerateMipmapOES: ?*const fn (GLenum) callconv(.C) void;
pub extern var GLAD_GL_OES_mapbuffer: c_int;
pub extern var glad_glMapBufferOES: ?*const fn (GLenum, GLenum) callconv(.C) ?*anyopaque;
pub extern var glad_glUnmapBufferOES: ?*const fn (GLenum) callconv(.C) GLboolean;
pub extern var glad_glGetBufferPointervOES: ?*const fn (GLenum, GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var GLAD_GL_OES_matrix_get: c_int;
pub extern var GLAD_GL_OES_matrix_palette: c_int;
pub extern var glad_glCurrentPaletteMatrixOES: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glLoadPaletteFromModelViewMatrixOES: ?*const fn () callconv(.C) void;
pub extern var glad_glMatrixIndexPointerOES: ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glWeightPointerOES: ?*const fn (GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var GLAD_GL_OES_packed_depth_stencil: c_int;
pub extern var GLAD_GL_OES_point_size_array: c_int;
pub extern var glad_glPointSizePointerOES: ?*const fn (GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var GLAD_GL_OES_point_sprite: c_int;
pub extern var GLAD_GL_OES_required_internalformat: c_int;
pub extern var GLAD_GL_OES_rgb8_rgba8: c_int;
pub extern var GLAD_GL_OES_stencil1: c_int;
pub extern var GLAD_GL_OES_stencil4: c_int;
pub extern var GLAD_GL_OES_stencil8: c_int;
pub extern var GLAD_GL_OES_stencil_wrap: c_int;
pub extern var GLAD_GL_OES_surfaceless_context: c_int;
pub extern var GLAD_GL_OES_texture_cube_map: c_int;
pub extern var glad_glTexGenfOES: ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
pub extern var glad_glTexGenfvOES: ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glTexGeniOES: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var glad_glTexGenivOES: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glGetTexGenfvOES: ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glGetTexGenivOES: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var GLAD_GL_OES_texture_env_crossbar: c_int;
pub extern var GLAD_GL_OES_texture_mirrored_repeat: c_int;
pub extern var GLAD_GL_OES_texture_npot: c_int;
pub extern var GLAD_GL_OES_vertex_array_object: c_int;
pub extern var glad_glBindVertexArrayOES: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glDeleteVertexArraysOES: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGenVertexArraysOES: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glIsVertexArrayOES: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var GLAD_GL_QCOM_driver_control: c_int;
pub extern var glad_glGetDriverControlsQCOM: ?*const fn ([*c]GLint, GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glGetDriverControlStringQCOM: ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var glad_glEnableDriverControlQCOM: ?*const fn (GLuint) callconv(.C) void;
pub extern var glad_glDisableDriverControlQCOM: ?*const fn (GLuint) callconv(.C) void;
pub extern var GLAD_GL_QCOM_extended_get: c_int;
pub extern var glad_glExtGetTexturesQCOM: ?*const fn ([*c]GLuint, GLint, [*c]GLint) callconv(.C) void;
pub extern var glad_glExtGetBuffersQCOM: ?*const fn ([*c]GLuint, GLint, [*c]GLint) callconv(.C) void;
pub extern var glad_glExtGetRenderbuffersQCOM: ?*const fn ([*c]GLuint, GLint, [*c]GLint) callconv(.C) void;
pub extern var glad_glExtGetFramebuffersQCOM: ?*const fn ([*c]GLuint, GLint, [*c]GLint) callconv(.C) void;
pub extern var glad_glExtGetTexLevelParameterivQCOM: ?*const fn (GLuint, GLenum, GLint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glExtTexObjectStateOverrideiQCOM: ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
pub extern var glad_glExtGetTexSubImageQCOM: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
pub extern var glad_glExtGetBufferPointervQCOM: ?*const fn (GLenum, [*c]?*anyopaque) callconv(.C) void;
pub extern var GLAD_GL_QCOM_extended_get2: c_int;
pub extern var glad_glExtGetShadersQCOM: ?*const fn ([*c]GLuint, GLint, [*c]GLint) callconv(.C) void;
pub extern var glad_glExtGetProgramsQCOM: ?*const fn ([*c]GLuint, GLint, [*c]GLint) callconv(.C) void;
pub extern var glad_glExtIsProgramBinaryQCOM: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glExtGetProgramBinarySourceQCOM: ?*const fn (GLuint, GLenum, [*c]GLchar, [*c]GLint) callconv(.C) void;
pub extern var GLAD_GL_QCOM_perfmon_global_mode: c_int;
pub extern var GLAD_GL_QCOM_tiled_rendering: c_int;
pub extern var glad_glStartTilingQCOM: ?*const fn (GLuint, GLuint, GLuint, GLuint, GLbitfield) callconv(.C) void;
pub extern var glad_glEndTilingQCOM: ?*const fn (GLbitfield) callconv(.C) void;
pub extern var GLAD_GL_QCOM_writeonly_rendering: c_int;
pub extern var GLAD_GL_AMD_program_binary_Z400: c_int;
pub extern var GLAD_GL_ANDROID_extension_pack_es31a: c_int;
pub extern var GLAD_GL_ANGLE_depth_texture: c_int;
pub extern var GLAD_GL_ANGLE_framebuffer_blit: c_int;
pub extern var glad_glBlitFramebufferANGLE: ?*const fn (GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) callconv(.C) void;
pub extern var GLAD_GL_ANGLE_framebuffer_multisample: c_int;
pub extern var glad_glRenderbufferStorageMultisampleANGLE: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_ANGLE_instanced_arrays: c_int;
pub extern var glad_glDrawArraysInstancedANGLE: ?*const fn (GLenum, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glDrawElementsInstancedANGLE: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei) callconv(.C) void;
pub extern var glad_glVertexAttribDivisorANGLE: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var GLAD_GL_ANGLE_pack_reverse_row_order: c_int;
pub extern var GLAD_GL_ANGLE_program_binary: c_int;
pub extern var GLAD_GL_ANGLE_texture_compression_dxt3: c_int;
pub extern var GLAD_GL_ANGLE_texture_compression_dxt5: c_int;
pub extern var GLAD_GL_ANGLE_texture_usage: c_int;
pub extern var GLAD_GL_ANGLE_translated_shader_source: c_int;
pub extern var glad_glGetTranslatedShaderSourceANGLE: ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
pub extern var GLAD_GL_APPLE_clip_distance: c_int;
pub extern var GLAD_GL_APPLE_color_buffer_packed_float: c_int;
pub extern var GLAD_GL_APPLE_texture_packed_float: c_int;
pub extern var GLAD_GL_ARM_mali_program_binary: c_int;
pub extern var GLAD_GL_ARM_mali_shader_binary: c_int;
pub extern var GLAD_GL_ARM_shader_core_properties: c_int;
pub extern var glad_glMaxActiveShaderCoresARM: ?*const fn (GLuint) callconv(.C) void;
pub extern var GLAD_GL_ARM_shader_framebuffer_fetch: c_int;
pub extern var GLAD_GL_ARM_shader_framebuffer_fetch_depth_stencil: c_int;
pub extern var GLAD_GL_ARM_texture_unnormalized_coordinates: c_int;
pub extern var GLAD_GL_DMP_program_binary: c_int;
pub extern var GLAD_GL_DMP_shader_binary: c_int;
pub extern var GLAD_GL_EXT_EGL_image_array: c_int;
pub extern var GLAD_GL_EXT_EGL_image_storage_compression: c_int;
pub extern var GLAD_GL_EXT_YUV_target: c_int;
pub extern var GLAD_GL_EXT_base_instance: c_int;
pub extern var glad_glDrawArraysInstancedBaseInstanceEXT: ?*const fn (GLenum, GLint, GLsizei, GLsizei, GLuint) callconv(.C) void;
pub extern var glad_glDrawElementsInstancedBaseInstanceEXT: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei, GLuint) callconv(.C) void;
pub extern var glad_glDrawElementsInstancedBaseVertexBaseInstanceEXT: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei, GLint, GLuint) callconv(.C) void;
pub extern var GLAD_GL_EXT_blend_func_extended: c_int;
pub extern var glad_glBindFragDataLocationIndexedEXT: ?*const fn (GLuint, GLuint, GLuint, [*c]const GLchar) callconv(.C) void;
pub extern var glad_glGetProgramResourceLocationIndexEXT: ?*const fn (GLuint, GLenum, [*c]const GLchar) callconv(.C) GLint;
pub extern var glad_glGetFragDataIndexEXT: ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLint;
pub extern var GLAD_GL_EXT_buffer_storage: c_int;
pub extern var glad_glBufferStorageEXT: ?*const fn (GLenum, GLsizeiptr, ?*const anyopaque, GLbitfield) callconv(.C) void;
pub extern var GLAD_GL_EXT_clear_texture: c_int;
pub extern var glad_glClearTexImageEXT: ?*const fn (GLuint, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glClearTexSubImageEXT: ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var GLAD_GL_EXT_clip_control: c_int;
pub extern var glad_glClipControlEXT: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var GLAD_GL_EXT_clip_cull_distance: c_int;
pub extern var GLAD_GL_EXT_color_buffer_float: c_int;
pub extern var GLAD_GL_EXT_color_buffer_half_float: c_int;
pub extern var GLAD_GL_EXT_conservative_depth: c_int;
pub extern var GLAD_GL_EXT_copy_image: c_int;
pub extern var glad_glCopyImageSubDataEXT: ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_EXT_depth_clamp: c_int;
pub extern var GLAD_GL_EXT_disjoint_timer_query: c_int;
pub extern var glad_glGenQueriesEXT: ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
pub extern var glad_glDeleteQueriesEXT: ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glIsQueryEXT: ?*const fn (GLuint) callconv(.C) GLboolean;
pub extern var glad_glBeginQueryEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glEndQueryEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glQueryCounterEXT: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var glad_glGetQueryivEXT: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetQueryObjectivEXT: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetQueryObjectuivEXT: ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var glad_glGetInteger64vEXT: ?*const fn (GLenum, [*c]GLint64) callconv(.C) void;
pub extern var GLAD_GL_EXT_draw_buffers: c_int;
pub extern var glad_glDrawBuffersEXT: ?*const fn (GLsizei, [*c]const GLenum) callconv(.C) void;
pub extern var GLAD_GL_EXT_draw_buffers_indexed: c_int;
pub extern var glad_glEnableiEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glDisableiEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glBlendEquationiEXT: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var glad_glBlendEquationSeparateiEXT: ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub extern var glad_glBlendFunciEXT: ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub extern var glad_glBlendFuncSeparateiEXT: ?*const fn (GLuint, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var glad_glColorMaskiEXT: ?*const fn (GLuint, GLboolean, GLboolean, GLboolean, GLboolean) callconv(.C) void;
pub extern var glad_glIsEnablediEXT: ?*const fn (GLenum, GLuint) callconv(.C) GLboolean;
pub extern var GLAD_GL_EXT_draw_elements_base_vertex: c_int;
pub extern var glad_glDrawElementsBaseVertexEXT: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLint) callconv(.C) void;
pub extern var glad_glDrawRangeElementsBaseVertexEXT: ?*const fn (GLenum, GLuint, GLuint, GLsizei, GLenum, ?*const anyopaque, GLint) callconv(.C) void;
pub extern var glad_glDrawElementsInstancedBaseVertexEXT: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei, GLint) callconv(.C) void;
pub extern var glad_glMultiDrawElementsBaseVertexEXT: ?*const fn (GLenum, [*c]const GLsizei, GLenum, [*c]const ?*const anyopaque, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var GLAD_GL_EXT_draw_transform_feedback: c_int;
pub extern var glad_glDrawTransformFeedbackEXT: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glDrawTransformFeedbackInstancedEXT: ?*const fn (GLenum, GLuint, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_EXT_float_blend: c_int;
pub extern var GLAD_GL_EXT_fragment_shading_rate: c_int;
pub extern var glad_glGetFragmentShadingRatesEXT: ?*const fn (GLsizei, GLsizei, [*c]GLsizei, [*c]GLenum) callconv(.C) void;
pub extern var glad_glShadingRateEXT: ?*const fn (GLenum) callconv(.C) void;
pub extern var glad_glShadingRateCombinerOpsEXT: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var glad_glFramebufferShadingRateEXT: ?*const fn (GLenum, GLenum, GLuint, GLint, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_EXT_geometry_point_size: c_int;
pub extern var GLAD_GL_EXT_geometry_shader: c_int;
pub extern var GLAD_GL_EXT_gpu_shader5: c_int;
pub extern var GLAD_GL_EXT_instanced_arrays: c_int;
pub extern var glad_glVertexAttribDivisorEXT: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var GLAD_GL_EXT_multi_draw_indirect: c_int;
pub extern var glad_glMultiDrawArraysIndirectEXT: ?*const fn (GLenum, ?*const anyopaque, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glMultiDrawElementsIndirectEXT: ?*const fn (GLenum, GLenum, ?*const anyopaque, GLsizei, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_EXT_multisampled_compatibility: c_int;
pub extern var GLAD_GL_EXT_multisampled_render_to_texture2: c_int;
pub extern var GLAD_GL_EXT_multiview_draw_buffers: c_int;
pub extern var glad_glReadBufferIndexedEXT: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var glad_glDrawBuffersIndexedEXT: ?*const fn (GLint, [*c]const GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glGetIntegeri_vEXT: ?*const fn (GLenum, GLuint, [*c]GLint) callconv(.C) void;
pub extern var GLAD_GL_EXT_occlusion_query_boolean: c_int;
pub extern var GLAD_GL_EXT_primitive_bounding_box: c_int;
pub extern var glad_glPrimitiveBoundingBoxEXT: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var GLAD_GL_EXT_protected_textures: c_int;
pub extern var GLAD_GL_EXT_pvrtc_sRGB: c_int;
pub extern var GLAD_GL_EXT_render_snorm: c_int;
pub extern var GLAD_GL_EXT_sRGB_write_control: c_int;
pub extern var GLAD_GL_EXT_separate_depth_stencil: c_int;
pub extern var GLAD_GL_EXT_shader_group_vote: c_int;
pub extern var GLAD_GL_EXT_shader_implicit_conversions: c_int;
pub extern var GLAD_GL_EXT_shader_io_blocks: c_int;
pub extern var GLAD_GL_EXT_shader_non_constant_global_initializers: c_int;
pub extern var GLAD_GL_EXT_shader_pixel_local_storage: c_int;
pub extern var GLAD_GL_EXT_shader_pixel_local_storage2: c_int;
pub extern var glad_glFramebufferPixelLocalStorageSizeEXT: ?*const fn (GLuint, GLsizei) callconv(.C) void;
pub extern var glad_glGetFramebufferPixelLocalStorageSizeEXT: ?*const fn (GLuint) callconv(.C) GLsizei;
pub extern var glad_glClearPixelLocalStorageuiEXT: ?*const fn (GLsizei, GLsizei, [*c]const GLuint) callconv(.C) void;
pub extern var GLAD_GL_EXT_shader_texture_lod: c_int;
pub extern var GLAD_GL_EXT_shadow_samplers: c_int;
pub extern var GLAD_GL_EXT_sparse_texture: c_int;
pub extern var glad_glTexPageCommitmentEXT: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var GLAD_GL_EXT_tessellation_point_size: c_int;
pub extern var GLAD_GL_EXT_tessellation_shader: c_int;
pub extern var glad_glPatchParameteriEXT: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var GLAD_GL_EXT_texture_border_clamp: c_int;
pub extern var glad_glSamplerParameterIivEXT: ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glSamplerParameterIuivEXT: ?*const fn (GLuint, GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGetSamplerParameterIivEXT: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetSamplerParameterIuivEXT: ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var GLAD_GL_EXT_texture_buffer: c_int;
pub extern var glad_glTexBufferRangeEXT: ?*const fn (GLenum, GLenum, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var GLAD_GL_EXT_texture_compression_astc_decode_mode: c_int;
pub extern var GLAD_GL_EXT_texture_compression_bptc: c_int;
pub extern var GLAD_GL_EXT_texture_compression_s3tc_srgb: c_int;
pub extern var GLAD_GL_EXT_texture_cube_map_array: c_int;
pub extern var GLAD_GL_EXT_texture_format_sRGB_override: c_int;
pub extern var GLAD_GL_EXT_texture_mirror_clamp_to_edge: c_int;
pub extern var GLAD_GL_EXT_texture_norm16: c_int;
pub extern var GLAD_GL_EXT_texture_query_lod: c_int;
pub extern var GLAD_GL_EXT_texture_rg: c_int;
pub extern var GLAD_GL_EXT_texture_storage_compression: c_int;
pub extern var glad_glTexStorageAttribs2DEXT: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glTexStorageAttribs3DEXT: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var GLAD_GL_EXT_texture_type_2_10_10_10_REV: c_int;
pub extern var GLAD_GL_EXT_texture_view: c_int;
pub extern var glad_glTextureViewEXT: ?*const fn (GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var GLAD_GL_EXT_unpack_subimage: c_int;
pub extern var GLAD_GL_FJ_shader_binary_GCCSO: c_int;
pub extern var GLAD_GL_IMG_bindless_texture: c_int;
pub extern var glad_glGetTextureHandleIMG: ?*const fn (GLuint) callconv(.C) GLuint64;
pub extern var glad_glGetTextureSamplerHandleIMG: ?*const fn (GLuint, GLuint) callconv(.C) GLuint64;
pub extern var glad_glUniformHandleui64IMG: ?*const fn (GLint, GLuint64) callconv(.C) void;
pub extern var glad_glUniformHandleui64vIMG: ?*const fn (GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var glad_glProgramUniformHandleui64IMG: ?*const fn (GLuint, GLint, GLuint64) callconv(.C) void;
pub extern var glad_glProgramUniformHandleui64vIMG: ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint64) callconv(.C) void;
pub extern var GLAD_GL_IMG_framebuffer_downsample: c_int;
pub extern var glad_glFramebufferTexture2DDownsampleIMG: ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint, GLint, GLint) callconv(.C) void;
pub extern var glad_glFramebufferTextureLayerDownsampleIMG: ?*const fn (GLenum, GLenum, GLuint, GLint, GLint, GLint, GLint) callconv(.C) void;
pub extern var GLAD_GL_IMG_program_binary: c_int;
pub extern var GLAD_GL_IMG_shader_binary: c_int;
pub extern var GLAD_GL_IMG_texture_compression_pvrtc2: c_int;
pub extern var GLAD_GL_IMG_texture_filter_cubic: c_int;
pub extern var GLAD_GL_MESA_bgra: c_int;
pub extern var GLAD_GL_MESA_sampler_objects: c_int;
pub extern var GLAD_GL_NV_copy_buffer: c_int;
pub extern var glad_glCopyBufferSubDataNV: ?*const fn (GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var GLAD_GL_NV_coverage_sample: c_int;
pub extern var glad_glCoverageMaskNV: ?*const fn (GLboolean) callconv(.C) void;
pub extern var glad_glCoverageOperationNV: ?*const fn (GLenum) callconv(.C) void;
pub extern var GLAD_GL_NV_depth_nonlinear: c_int;
pub extern var GLAD_GL_NV_draw_buffers: c_int;
pub extern var glad_glDrawBuffersNV: ?*const fn (GLsizei, [*c]const GLenum) callconv(.C) void;
pub extern var GLAD_GL_NV_draw_instanced: c_int;
pub extern var glad_glDrawArraysInstancedNV: ?*const fn (GLenum, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glDrawElementsInstancedNV: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_NV_explicit_attrib_location: c_int;
pub extern var GLAD_GL_NV_fbo_color_attachments: c_int;
pub extern var GLAD_GL_NV_framebuffer_blit: c_int;
pub extern var glad_glBlitFramebufferNV: ?*const fn (GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) callconv(.C) void;
pub extern var GLAD_GL_NV_framebuffer_multisample: c_int;
pub extern var glad_glRenderbufferStorageMultisampleNV: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_NV_generate_mipmap_sRGB: c_int;
pub extern var GLAD_GL_NV_image_formats: c_int;
pub extern var GLAD_GL_NV_instanced_arrays: c_int;
pub extern var glad_glVertexAttribDivisorNV: ?*const fn (GLuint, GLuint) callconv(.C) void;
pub extern var GLAD_GL_NV_non_square_matrices: c_int;
pub extern var glad_glUniformMatrix2x3fvNV: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glUniformMatrix3x2fvNV: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glUniformMatrix2x4fvNV: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glUniformMatrix4x2fvNV: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glUniformMatrix3x4fvNV: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glUniformMatrix4x3fvNV: ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
pub extern var GLAD_GL_NV_pack_subimage: c_int;
pub extern var GLAD_GL_NV_pixel_buffer_object: c_int;
pub extern var GLAD_GL_NV_polygon_mode: c_int;
pub extern var glad_glPolygonModeNV: ?*const fn (GLenum, GLenum) callconv(.C) void;
pub extern var GLAD_GL_NV_read_buffer: c_int;
pub extern var glad_glReadBufferNV: ?*const fn (GLenum) callconv(.C) void;
pub extern var GLAD_GL_NV_read_buffer_front: c_int;
pub extern var GLAD_GL_NV_read_depth: c_int;
pub extern var GLAD_GL_NV_read_depth_stencil: c_int;
pub extern var GLAD_GL_NV_read_stencil: c_int;
pub extern var GLAD_GL_NV_sRGB_formats: c_int;
pub extern var GLAD_GL_NV_shader_noperspective_interpolation: c_int;
pub extern var GLAD_GL_NV_shadow_samplers_array: c_int;
pub extern var GLAD_GL_NV_shadow_samplers_cube: c_int;
pub extern var GLAD_GL_NV_texture_border_clamp: c_int;
pub extern var GLAD_GL_NV_texture_compression_s3tc_update: c_int;
pub extern var GLAD_GL_NV_texture_npot_2D_mipmap: c_int;
pub extern var GLAD_GL_NV_viewport_array: c_int;
pub extern var glad_glViewportArrayvNV: ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glViewportIndexedfNV: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glViewportIndexedfvNV: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glScissorArrayvNV: ?*const fn (GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glScissorIndexedNV: ?*const fn (GLuint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glScissorIndexedvNV: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var glad_glDepthRangeArrayfvNV: ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glDepthRangeIndexedfNV: ?*const fn (GLuint, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glGetFloati_vNV: ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub extern var glad_glEnableiNV: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glDisableiNV: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glIsEnablediNV: ?*const fn (GLenum, GLuint) callconv(.C) GLboolean;
pub extern var GLAD_GL_OES_EGL_image_external_essl3: c_int;
pub extern var GLAD_GL_OES_copy_image: c_int;
pub extern var glad_glCopyImageSubDataOES: ?*const fn (GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_OES_depth_texture: c_int;
pub extern var GLAD_GL_OES_draw_buffers_indexed: c_int;
pub extern var glad_glEnableiOES: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glDisableiOES: ?*const fn (GLenum, GLuint) callconv(.C) void;
pub extern var glad_glBlendEquationiOES: ?*const fn (GLuint, GLenum) callconv(.C) void;
pub extern var glad_glBlendEquationSeparateiOES: ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub extern var glad_glBlendFunciOES: ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
pub extern var glad_glBlendFuncSeparateiOES: ?*const fn (GLuint, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
pub extern var glad_glColorMaskiOES: ?*const fn (GLuint, GLboolean, GLboolean, GLboolean, GLboolean) callconv(.C) void;
pub extern var glad_glIsEnablediOES: ?*const fn (GLenum, GLuint) callconv(.C) GLboolean;
pub extern var GLAD_GL_OES_draw_elements_base_vertex: c_int;
pub extern var glad_glDrawElementsBaseVertexOES: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLint) callconv(.C) void;
pub extern var glad_glDrawRangeElementsBaseVertexOES: ?*const fn (GLenum, GLuint, GLuint, GLsizei, GLenum, ?*const anyopaque, GLint) callconv(.C) void;
pub extern var glad_glDrawElementsInstancedBaseVertexOES: ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei, GLint) callconv(.C) void;
pub extern var GLAD_GL_OES_fragment_precision_high: c_int;
pub extern var GLAD_GL_OES_geometry_point_size: c_int;
pub extern var GLAD_GL_OES_geometry_shader: c_int;
pub extern var glad_glFramebufferTextureOES: ?*const fn (GLenum, GLenum, GLuint, GLint) callconv(.C) void;
pub extern var GLAD_GL_OES_get_program_binary: c_int;
pub extern var glad_glGetProgramBinaryOES: ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLenum, ?*anyopaque) callconv(.C) void;
pub extern var glad_glProgramBinaryOES: ?*const fn (GLuint, GLenum, ?*const anyopaque, GLint) callconv(.C) void;
pub extern var GLAD_GL_OES_gpu_shader5: c_int;
pub extern var GLAD_GL_OES_primitive_bounding_box: c_int;
pub extern var glad_glPrimitiveBoundingBoxOES: ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var GLAD_GL_OES_sample_shading: c_int;
pub extern var glad_glMinSampleShadingOES: ?*const fn (GLfloat) callconv(.C) void;
pub extern var GLAD_GL_OES_sample_variables: c_int;
pub extern var GLAD_GL_OES_shader_image_atomic: c_int;
pub extern var GLAD_GL_OES_shader_io_blocks: c_int;
pub extern var GLAD_GL_OES_shader_multisample_interpolation: c_int;
pub extern var GLAD_GL_OES_standard_derivatives: c_int;
pub extern var GLAD_GL_OES_tessellation_point_size: c_int;
pub extern var GLAD_GL_OES_tessellation_shader: c_int;
pub extern var glad_glPatchParameteriOES: ?*const fn (GLenum, GLint) callconv(.C) void;
pub extern var GLAD_GL_OES_texture_3D: c_int;
pub extern var glad_glTexImage3DOES: ?*const fn (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glTexSubImage3DOES: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCopyTexSubImage3DOES: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glCompressedTexImage3DOES: ?*const fn (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glCompressedTexSubImage3DOES: ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
pub extern var glad_glFramebufferTexture3DOES: ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint, GLint) callconv(.C) void;
pub extern var GLAD_GL_OES_texture_border_clamp: c_int;
pub extern var glad_glTexParameterIivOES: ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glTexParameterIuivOES: ?*const fn (GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGetTexParameterIivOES: ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetTexParameterIuivOES: ?*const fn (GLenum, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var glad_glSamplerParameterIivOES: ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
pub extern var glad_glSamplerParameterIuivOES: ?*const fn (GLuint, GLenum, [*c]const GLuint) callconv(.C) void;
pub extern var glad_glGetSamplerParameterIivOES: ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
pub extern var glad_glGetSamplerParameterIuivOES: ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
pub extern var GLAD_GL_OES_texture_buffer: c_int;
pub extern var glad_glTexBufferOES: ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
pub extern var glad_glTexBufferRangeOES: ?*const fn (GLenum, GLenum, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
pub extern var GLAD_GL_OES_texture_compression_astc: c_int;
pub extern var GLAD_GL_OES_texture_cube_map_array: c_int;
pub extern var GLAD_GL_OES_texture_float: c_int;
pub extern var GLAD_GL_OES_texture_float_linear: c_int;
pub extern var GLAD_GL_OES_texture_half_float: c_int;
pub extern var GLAD_GL_OES_texture_half_float_linear: c_int;
pub extern var GLAD_GL_OES_texture_stencil8: c_int;
pub extern var GLAD_GL_OES_texture_storage_multisample_2d_array: c_int;
pub extern var glad_glTexStorage3DMultisampleOES: ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
pub extern var GLAD_GL_OES_texture_view: c_int;
pub extern var glad_glTextureViewOES: ?*const fn (GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var GLAD_GL_OES_vertex_half_float: c_int;
pub extern var GLAD_GL_OES_vertex_type_10_10_10_2: c_int;
pub extern var GLAD_GL_OES_viewport_array: c_int;
pub extern var glad_glViewportArrayvOES: ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glViewportIndexedfOES: ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glViewportIndexedfvOES: ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glScissorArrayvOES: ?*const fn (GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
pub extern var glad_glScissorIndexedOES: ?*const fn (GLuint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
pub extern var glad_glScissorIndexedvOES: ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
pub extern var glad_glDepthRangeArrayfvOES: ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
pub extern var glad_glDepthRangeIndexedfOES: ?*const fn (GLuint, GLfloat, GLfloat) callconv(.C) void;
pub extern var glad_glGetFloati_vOES: ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
pub extern var GLAD_GL_OVR_multiview_multisampled_render_to_texture: c_int;
pub extern var glad_glFramebufferTextureMultisampleMultiviewOVR: ?*const fn (GLenum, GLenum, GLuint, GLint, GLsizei, GLint, GLsizei) callconv(.C) void;
pub extern var GLAD_GL_QCOM_YUV_texture_gather: c_int;
pub extern var GLAD_GL_QCOM_alpha_test: c_int;
pub extern var glad_glAlphaFuncQCOM: ?*const fn (GLenum, GLclampf) callconv(.C) void;
pub extern var GLAD_GL_QCOM_binning_control: c_int;
pub extern var GLAD_GL_QCOM_frame_extrapolation: c_int;
pub extern var glad_glExtrapolateTex2DQCOM: ?*const fn (GLuint, GLuint, GLuint, GLfloat) callconv(.C) void;
pub extern var GLAD_GL_QCOM_framebuffer_foveated: c_int;
pub extern var glad_glFramebufferFoveationConfigQCOM: ?*const fn (GLuint, GLuint, GLuint, GLuint, [*c]GLuint) callconv(.C) void;
pub extern var glad_glFramebufferFoveationParametersQCOM: ?*const fn (GLuint, GLuint, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var GLAD_GL_QCOM_motion_estimation: c_int;
pub extern var glad_glTexEstimateMotionQCOM: ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var glad_glTexEstimateMotionRegionsQCOM: ?*const fn (GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
pub extern var GLAD_GL_QCOM_render_sRGB_R8_RG8: c_int;
pub extern var GLAD_GL_QCOM_render_shared_exponent: c_int;
pub extern var GLAD_GL_QCOM_shader_framebuffer_fetch_noncoherent: c_int;
pub extern var glad_glFramebufferFetchBarrierQCOM: ?*const fn () callconv(.C) void;
pub extern var GLAD_GL_QCOM_shader_framebuffer_fetch_rate: c_int;
pub extern var GLAD_GL_QCOM_shading_rate: c_int;
pub extern var glad_glShadingRateQCOM: ?*const fn (GLenum) callconv(.C) void;
pub extern var GLAD_GL_QCOM_texture_foveated: c_int;
pub extern var glad_glTextureFoveationParametersQCOM: ?*const fn (GLuint, GLuint, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
pub extern var GLAD_GL_QCOM_texture_foveated2: c_int;
pub extern var GLAD_GL_QCOM_texture_foveated_subsampled_layout: c_int;
pub extern var GLAD_GL_QCOM_texture_lod_bias: c_int;
pub extern var GLAD_GL_VIV_shader_binary: c_int;
pub extern var GLAD_GL_IMG_pvric_end_to_end_signature: c_int;
pub extern var GLAD_GL_IMG_tile_region_protection: c_int;
pub const GL_DEPTH_BUFFER_BIT = 0x00000100;
pub const GL_STENCIL_BUFFER_BIT = 0x00000400;
pub const GL_COLOR_BUFFER_BIT = 0x00004000;
pub const GL_FALSE = 0;
pub const GL_TRUE = 1;
pub const GL_POINTS = 0x0000;
pub const GL_LINES = 0x0001;
pub const GL_LINE_LOOP = 0x0002;
pub const GL_LINE_STRIP = 0x0003;
pub const GL_TRIANGLES = 0x0004;
pub const GL_TRIANGLE_STRIP = 0x0005;
pub const GL_TRIANGLE_FAN = 0x0006;
pub const GL_QUADS = 0x0007;
pub const GL_NEVER = 0x0200;
pub const GL_LESS = 0x0201;
pub const GL_EQUAL = 0x0202;
pub const GL_LEQUAL = 0x0203;
pub const GL_GREATER = 0x0204;
pub const GL_NOTEQUAL = 0x0205;
pub const GL_GEQUAL = 0x0206;
pub const GL_ALWAYS = 0x0207;
pub const GL_ZERO = 0;
pub const GL_ONE = 1;
pub const GL_SRC_COLOR = 0x0300;
pub const GL_ONE_MINUS_SRC_COLOR = 0x0301;
pub const GL_SRC_ALPHA = 0x0302;
pub const GL_ONE_MINUS_SRC_ALPHA = 0x0303;
pub const GL_DST_ALPHA = 0x0304;
pub const GL_ONE_MINUS_DST_ALPHA = 0x0305;
pub const GL_DST_COLOR = 0x0306;
pub const GL_ONE_MINUS_DST_COLOR = 0x0307;
pub const GL_SRC_ALPHA_SATURATE = 0x0308;
pub const GL_NONE = 0;
pub const GL_FRONT_LEFT = 0x0400;
pub const GL_FRONT_RIGHT = 0x0401;
pub const GL_BACK_LEFT = 0x0402;
pub const GL_BACK_RIGHT = 0x0403;
pub const GL_FRONT = 0x0404;
pub const GL_BACK = 0x0405;
pub const GL_LEFT = 0x0406;
pub const GL_RIGHT = 0x0407;
pub const GL_FRONT_AND_BACK = 0x0408;
pub const GL_NO_ERROR = 0;
pub const GL_INVALID_ENUM = 0x0500;
pub const GL_INVALID_VALUE = 0x0501;
pub const GL_INVALID_OPERATION = 0x0502;
pub const GL_OUT_OF_MEMORY = 0x0505;
pub const GL_CW = 0x0900;
pub const GL_CCW = 0x0901;
pub const GL_POINT_SIZE = 0x0B11;
pub const GL_POINT_SIZE_RANGE = 0x0B12;
pub const GL_POINT_SIZE_GRANULARITY = 0x0B13;
pub const GL_LINE_SMOOTH = 0x0B20;
pub const GL_LINE_WIDTH = 0x0B21;
pub const GL_LINE_WIDTH_RANGE = 0x0B22;
pub const GL_LINE_WIDTH_GRANULARITY = 0x0B23;
pub const GL_POLYGON_MODE = 0x0B40;
pub const GL_POLYGON_SMOOTH = 0x0B41;
pub const GL_CULL_FACE = 0x0B44;
pub const GL_CULL_FACE_MODE = 0x0B45;
pub const GL_FRONT_FACE = 0x0B46;
pub const GL_DEPTH_RANGE = 0x0B70;
pub const GL_DEPTH_TEST = 0x0B71;
pub const GL_DEPTH_WRITEMASK = 0x0B72;
pub const GL_DEPTH_CLEAR_VALUE = 0x0B73;
pub const GL_DEPTH_FUNC = 0x0B74;
pub const GL_STENCIL_TEST = 0x0B90;
pub const GL_STENCIL_CLEAR_VALUE = 0x0B91;
pub const GL_STENCIL_FUNC = 0x0B92;
pub const GL_STENCIL_VALUE_MASK = 0x0B93;
pub const GL_STENCIL_FAIL = 0x0B94;
pub const GL_STENCIL_PASS_DEPTH_FAIL = 0x0B95;
pub const GL_STENCIL_PASS_DEPTH_PASS = 0x0B96;
pub const GL_STENCIL_REF = 0x0B97;
pub const GL_STENCIL_WRITEMASK = 0x0B98;
pub const GL_VIEWPORT = 0x0BA2;
pub const GL_DITHER = 0x0BD0;
pub const GL_BLEND_DST = 0x0BE0;
pub const GL_BLEND_SRC = 0x0BE1;
pub const GL_BLEND = 0x0BE2;
pub const GL_LOGIC_OP_MODE = 0x0BF0;
pub const GL_DRAW_BUFFER = 0x0C01;
pub const GL_READ_BUFFER = 0x0C02;
pub const GL_SCISSOR_BOX = 0x0C10;
pub const GL_SCISSOR_TEST = 0x0C11;
pub const GL_COLOR_CLEAR_VALUE = 0x0C22;
pub const GL_COLOR_WRITEMASK = 0x0C23;
pub const GL_DOUBLEBUFFER = 0x0C32;
pub const GL_STEREO = 0x0C33;
pub const GL_LINE_SMOOTH_HINT = 0x0C52;
pub const GL_POLYGON_SMOOTH_HINT = 0x0C53;
pub const GL_UNPACK_SWAP_BYTES = 0x0CF0;
pub const GL_UNPACK_LSB_FIRST = 0x0CF1;
pub const GL_UNPACK_ROW_LENGTH = 0x0CF2;
pub const GL_UNPACK_SKIP_ROWS = 0x0CF3;
pub const GL_UNPACK_SKIP_PIXELS = 0x0CF4;
pub const GL_UNPACK_ALIGNMENT = 0x0CF5;
pub const GL_PACK_SWAP_BYTES = 0x0D00;
pub const GL_PACK_LSB_FIRST = 0x0D01;
pub const GL_PACK_ROW_LENGTH = 0x0D02;
pub const GL_PACK_SKIP_ROWS = 0x0D03;
pub const GL_PACK_SKIP_PIXELS = 0x0D04;
pub const GL_PACK_ALIGNMENT = 0x0D05;
pub const GL_MAX_TEXTURE_SIZE = 0x0D33;
pub const GL_MAX_VIEWPORT_DIMS = 0x0D3A;
pub const GL_SUBPIXEL_BITS = 0x0D50;
pub const GL_TEXTURE_1D = 0x0DE0;
pub const GL_TEXTURE_2D = 0x0DE1;
pub const GL_TEXTURE_WIDTH = 0x1000;
pub const GL_TEXTURE_HEIGHT = 0x1001;
pub const GL_TEXTURE_BORDER_COLOR = 0x1004;
pub const GL_DONT_CARE = 0x1100;
pub const GL_FASTEST = 0x1101;
pub const GL_NICEST = 0x1102;
pub const GL_BYTE = 0x1400;
pub const GL_UNSIGNED_BYTE = 0x1401;
pub const GL_SHORT = 0x1402;
pub const GL_UNSIGNED_SHORT = 0x1403;
pub const GL_INT = 0x1404;
pub const GL_UNSIGNED_INT = 0x1405;
pub const GL_FLOAT = 0x1406;
pub const GL_STACK_OVERFLOW = 0x0503;
pub const GL_STACK_UNDERFLOW = 0x0504;
pub const GL_CLEAR = 0x1500;
pub const GL_AND = 0x1501;
pub const GL_AND_REVERSE = 0x1502;
pub const GL_COPY = 0x1503;
pub const GL_AND_INVERTED = 0x1504;
pub const GL_NOOP = 0x1505;
pub const GL_XOR = 0x1506;
pub const GL_OR = 0x1507;
pub const GL_NOR = 0x1508;
pub const GL_EQUIV = 0x1509;
pub const GL_INVERT = 0x150A;
pub const GL_OR_REVERSE = 0x150B;
pub const GL_COPY_INVERTED = 0x150C;
pub const GL_OR_INVERTED = 0x150D;
pub const GL_NAND = 0x150E;
pub const GL_SET = 0x150F;
pub const GL_TEXTURE = 0x1702;
pub const GL_COLOR = 0x1800;
pub const GL_DEPTH = 0x1801;
pub const GL_STENCIL = 0x1802;
pub const GL_STENCIL_INDEX = 0x1901;
pub const GL_DEPTH_COMPONENT = 0x1902;
pub const GL_RED = 0x1903;
pub const GL_GREEN = 0x1904;
pub const GL_BLUE = 0x1905;
pub const GL_ALPHA = 0x1906;
pub const GL_RGB = 0x1907;
pub const GL_RGBA = 0x1908;
pub const GL_POINT = 0x1B00;
pub const GL_LINE = 0x1B01;
pub const GL_FILL = 0x1B02;
pub const GL_KEEP = 0x1E00;
pub const GL_REPLACE = 0x1E01;
pub const GL_INCR = 0x1E02;
pub const GL_DECR = 0x1E03;
pub const GL_VENDOR = 0x1F00;
pub const GL_RENDERER = 0x1F01;
pub const GL_VERSION = 0x1F02;
pub const GL_EXTENSIONS = 0x1F03;
pub const GL_NEAREST = 0x2600;
pub const GL_LINEAR = 0x2601;
pub const GL_NEAREST_MIPMAP_NEAREST = 0x2700;
pub const GL_LINEAR_MIPMAP_NEAREST = 0x2701;
pub const GL_NEAREST_MIPMAP_LINEAR = 0x2702;
pub const GL_LINEAR_MIPMAP_LINEAR = 0x2703;
pub const GL_TEXTURE_MAG_FILTER = 0x2800;
pub const GL_TEXTURE_MIN_FILTER = 0x2801;
pub const GL_TEXTURE_WRAP_S = 0x2802;
pub const GL_TEXTURE_WRAP_T = 0x2803;
pub const GL_REPEAT = 0x2901;
pub const GL_CURRENT_BIT = 0x00000001;
pub const GL_POINT_BIT = 0x00000002;
pub const GL_LINE_BIT = 0x00000004;
pub const GL_POLYGON_BIT = 0x00000008;
pub const GL_POLYGON_STIPPLE_BIT = 0x00000010;
pub const GL_PIXEL_MODE_BIT = 0x00000020;
pub const GL_LIGHTING_BIT = 0x00000040;
pub const GL_FOG_BIT = 0x00000080;
pub const GL_ACCUM_BUFFER_BIT = 0x00000200;
pub const GL_VIEWPORT_BIT = 0x00000800;
pub const GL_TRANSFORM_BIT = 0x00001000;
pub const GL_ENABLE_BIT = 0x00002000;
pub const GL_HINT_BIT = 0x00008000;
pub const GL_EVAL_BIT = 0x00010000;
pub const GL_LIST_BIT = 0x00020000;
pub const GL_TEXTURE_BIT = 0x00040000;
pub const GL_SCISSOR_BIT = 0x00080000;
pub const GL_ALL_ATTRIB_BITS = 0xFFFFFFFF;
pub const GL_QUAD_STRIP = 0x0008;
pub const GL_POLYGON = 0x0009;
pub const GL_ACCUM = 0x0100;
pub const GL_LOAD = 0x0101;
pub const GL_RETURN = 0x0102;
pub const GL_MULT = 0x0103;
pub const GL_ADD = 0x0104;
pub const GL_AUX0 = 0x0409;
pub const GL_AUX1 = 0x040A;
pub const GL_AUX2 = 0x040B;
pub const GL_AUX3 = 0x040C;
pub const GL_2D = 0x0600;
pub const GL_3D = 0x0601;
pub const GL_3D_COLOR = 0x0602;
pub const GL_3D_COLOR_TEXTURE = 0x0603;
pub const GL_4D_COLOR_TEXTURE = 0x0604;
pub const GL_PASS_THROUGH_TOKEN = 0x0700;
pub const GL_POINT_TOKEN = 0x0701;
pub const GL_LINE_TOKEN = 0x0702;
pub const GL_POLYGON_TOKEN = 0x0703;
pub const GL_BITMAP_TOKEN = 0x0704;
pub const GL_DRAW_PIXEL_TOKEN = 0x0705;
pub const GL_COPY_PIXEL_TOKEN = 0x0706;
pub const GL_LINE_RESET_TOKEN = 0x0707;
pub const GL_EXP = 0x0800;
pub const GL_EXP2 = 0x0801;
pub const GL_COEFF = 0x0A00;
pub const GL_ORDER = 0x0A01;
pub const GL_DOMAIN = 0x0A02;
pub const GL_PIXEL_MAP_I_TO_I = 0x0C70;
pub const GL_PIXEL_MAP_S_TO_S = 0x0C71;
pub const GL_PIXEL_MAP_I_TO_R = 0x0C72;
pub const GL_PIXEL_MAP_I_TO_G = 0x0C73;
pub const GL_PIXEL_MAP_I_TO_B = 0x0C74;
pub const GL_PIXEL_MAP_I_TO_A = 0x0C75;
pub const GL_PIXEL_MAP_R_TO_R = 0x0C76;
pub const GL_PIXEL_MAP_G_TO_G = 0x0C77;
pub const GL_PIXEL_MAP_B_TO_B = 0x0C78;
pub const GL_PIXEL_MAP_A_TO_A = 0x0C79;
pub const GL_CURRENT_COLOR = 0x0B00;
pub const GL_CURRENT_INDEX = 0x0B01;
pub const GL_CURRENT_NORMAL = 0x0B02;
pub const GL_CURRENT_TEXTURE_COORDS = 0x0B03;
pub const GL_CURRENT_RASTER_COLOR = 0x0B04;
pub const GL_CURRENT_RASTER_INDEX = 0x0B05;
pub const GL_CURRENT_RASTER_TEXTURE_COORDS = 0x0B06;
pub const GL_CURRENT_RASTER_POSITION = 0x0B07;
pub const GL_CURRENT_RASTER_POSITION_VALID = 0x0B08;
pub const GL_CURRENT_RASTER_DISTANCE = 0x0B09;
pub const GL_POINT_SMOOTH = 0x0B10;
pub const GL_LINE_STIPPLE = 0x0B24;
pub const GL_LINE_STIPPLE_PATTERN = 0x0B25;
pub const GL_LINE_STIPPLE_REPEAT = 0x0B26;
pub const GL_LIST_MODE = 0x0B30;
pub const GL_MAX_LIST_NESTING = 0x0B31;
pub const GL_LIST_BASE = 0x0B32;
pub const GL_LIST_INDEX = 0x0B33;
pub const GL_POLYGON_STIPPLE = 0x0B42;
pub const GL_EDGE_FLAG = 0x0B43;
pub const GL_LIGHTING = 0x0B50;
pub const GL_LIGHT_MODEL_LOCAL_VIEWER = 0x0B51;
pub const GL_LIGHT_MODEL_TWO_SIDE = 0x0B52;
pub const GL_LIGHT_MODEL_AMBIENT = 0x0B53;
pub const GL_SHADE_MODEL = 0x0B54;
pub const GL_COLOR_MATERIAL_FACE = 0x0B55;
pub const GL_COLOR_MATERIAL_PARAMETER = 0x0B56;
pub const GL_COLOR_MATERIAL = 0x0B57;
pub const GL_FOG = 0x0B60;
pub const GL_FOG_INDEX = 0x0B61;
pub const GL_FOG_DENSITY = 0x0B62;
pub const GL_FOG_START = 0x0B63;
pub const GL_FOG_END = 0x0B64;
pub const GL_FOG_MODE = 0x0B65;
pub const GL_FOG_COLOR = 0x0B66;
pub const GL_ACCUM_CLEAR_VALUE = 0x0B80;
pub const GL_MATRIX_MODE = 0x0BA0;
pub const GL_NORMALIZE = 0x0BA1;
pub const GL_MODELVIEW_STACK_DEPTH = 0x0BA3;
pub const GL_PROJECTION_STACK_DEPTH = 0x0BA4;
pub const GL_TEXTURE_STACK_DEPTH = 0x0BA5;
pub const GL_MODELVIEW_MATRIX = 0x0BA6;
pub const GL_PROJECTION_MATRIX = 0x0BA7;
pub const GL_TEXTURE_MATRIX = 0x0BA8;
pub const GL_ATTRIB_STACK_DEPTH = 0x0BB0;
pub const GL_ALPHA_TEST = 0x0BC0;
pub const GL_ALPHA_TEST_FUNC = 0x0BC1;
pub const GL_ALPHA_TEST_REF = 0x0BC2;
pub const GL_LOGIC_OP = 0x0BF1;
pub const GL_AUX_BUFFERS = 0x0C00;
pub const GL_INDEX_CLEAR_VALUE = 0x0C20;
pub const GL_INDEX_WRITEMASK = 0x0C21;
pub const GL_INDEX_MODE = 0x0C30;
pub const GL_RGBA_MODE = 0x0C31;
pub const GL_RENDER_MODE = 0x0C40;
pub const GL_PERSPECTIVE_CORRECTION_HINT = 0x0C50;
pub const GL_POINT_SMOOTH_HINT = 0x0C51;
pub const GL_FOG_HINT = 0x0C54;
pub const GL_TEXTURE_GEN_S = 0x0C60;
pub const GL_TEXTURE_GEN_T = 0x0C61;
pub const GL_TEXTURE_GEN_R = 0x0C62;
pub const GL_TEXTURE_GEN_Q = 0x0C63;
pub const GL_PIXEL_MAP_I_TO_I_SIZE = 0x0CB0;
pub const GL_PIXEL_MAP_S_TO_S_SIZE = 0x0CB1;
pub const GL_PIXEL_MAP_I_TO_R_SIZE = 0x0CB2;
pub const GL_PIXEL_MAP_I_TO_G_SIZE = 0x0CB3;
pub const GL_PIXEL_MAP_I_TO_B_SIZE = 0x0CB4;
pub const GL_PIXEL_MAP_I_TO_A_SIZE = 0x0CB5;
pub const GL_PIXEL_MAP_R_TO_R_SIZE = 0x0CB6;
pub const GL_PIXEL_MAP_G_TO_G_SIZE = 0x0CB7;
pub const GL_PIXEL_MAP_B_TO_B_SIZE = 0x0CB8;
pub const GL_PIXEL_MAP_A_TO_A_SIZE = 0x0CB9;
pub const GL_MAP_COLOR = 0x0D10;
pub const GL_MAP_STENCIL = 0x0D11;
pub const GL_INDEX_SHIFT = 0x0D12;
pub const GL_INDEX_OFFSET = 0x0D13;
pub const GL_RED_SCALE = 0x0D14;
pub const GL_RED_BIAS = 0x0D15;
pub const GL_ZOOM_X = 0x0D16;
pub const GL_ZOOM_Y = 0x0D17;
pub const GL_GREEN_SCALE = 0x0D18;
pub const GL_GREEN_BIAS = 0x0D19;
pub const GL_BLUE_SCALE = 0x0D1A;
pub const GL_BLUE_BIAS = 0x0D1B;
pub const GL_ALPHA_SCALE = 0x0D1C;
pub const GL_ALPHA_BIAS = 0x0D1D;
pub const GL_DEPTH_SCALE = 0x0D1E;
pub const GL_DEPTH_BIAS = 0x0D1F;
pub const GL_MAX_EVAL_ORDER = 0x0D30;
pub const GL_MAX_LIGHTS = 0x0D31;
pub const GL_MAX_CLIP_PLANES = 0x0D32;
pub const GL_MAX_PIXEL_MAP_TABLE = 0x0D34;
pub const GL_MAX_ATTRIB_STACK_DEPTH = 0x0D35;
pub const GL_MAX_MODELVIEW_STACK_DEPTH = 0x0D36;
pub const GL_MAX_NAME_STACK_DEPTH = 0x0D37;
pub const GL_MAX_PROJECTION_STACK_DEPTH = 0x0D38;
pub const GL_MAX_TEXTURE_STACK_DEPTH = 0x0D39;
pub const GL_INDEX_BITS = 0x0D51;
pub const GL_RED_BITS = 0x0D52;
pub const GL_GREEN_BITS = 0x0D53;
pub const GL_BLUE_BITS = 0x0D54;
pub const GL_ALPHA_BITS = 0x0D55;
pub const GL_DEPTH_BITS = 0x0D56;
pub const GL_STENCIL_BITS = 0x0D57;
pub const GL_ACCUM_RED_BITS = 0x0D58;
pub const GL_ACCUM_GREEN_BITS = 0x0D59;
pub const GL_ACCUM_BLUE_BITS = 0x0D5A;
pub const GL_ACCUM_ALPHA_BITS = 0x0D5B;
pub const GL_NAME_STACK_DEPTH = 0x0D70;
pub const GL_AUTO_NORMAL = 0x0D80;
pub const GL_MAP1_COLOR_4 = 0x0D90;
pub const GL_MAP1_INDEX = 0x0D91;
pub const GL_MAP1_NORMAL = 0x0D92;
pub const GL_MAP1_TEXTURE_COORD_1 = 0x0D93;
pub const GL_MAP1_TEXTURE_COORD_2 = 0x0D94;
pub const GL_MAP1_TEXTURE_COORD_3 = 0x0D95;
pub const GL_MAP1_TEXTURE_COORD_4 = 0x0D96;
pub const GL_MAP1_VERTEX_3 = 0x0D97;
pub const GL_MAP1_VERTEX_4 = 0x0D98;
pub const GL_MAP2_COLOR_4 = 0x0DB0;
pub const GL_MAP2_INDEX = 0x0DB1;
pub const GL_MAP2_NORMAL = 0x0DB2;
pub const GL_MAP2_TEXTURE_COORD_1 = 0x0DB3;
pub const GL_MAP2_TEXTURE_COORD_2 = 0x0DB4;
pub const GL_MAP2_TEXTURE_COORD_3 = 0x0DB5;
pub const GL_MAP2_TEXTURE_COORD_4 = 0x0DB6;
pub const GL_MAP2_VERTEX_3 = 0x0DB7;
pub const GL_MAP2_VERTEX_4 = 0x0DB8;
pub const GL_MAP1_GRID_DOMAIN = 0x0DD0;
pub const GL_MAP1_GRID_SEGMENTS = 0x0DD1;
pub const GL_MAP2_GRID_DOMAIN = 0x0DD2;
pub const GL_MAP2_GRID_SEGMENTS = 0x0DD3;
pub const GL_TEXTURE_COMPONENTS = 0x1003;
pub const GL_TEXTURE_BORDER = 0x1005;
pub const GL_AMBIENT = 0x1200;
pub const GL_DIFFUSE = 0x1201;
pub const GL_SPECULAR = 0x1202;
pub const GL_POSITION = 0x1203;
pub const GL_SPOT_DIRECTION = 0x1204;
pub const GL_SPOT_EXPONENT = 0x1205;
pub const GL_SPOT_CUTOFF = 0x1206;
pub const GL_CONSTANT_ATTENUATION = 0x1207;
pub const GL_LINEAR_ATTENUATION = 0x1208;
pub const GL_QUADRATIC_ATTENUATION = 0x1209;
pub const GL_COMPILE = 0x1300;
pub const GL_COMPILE_AND_EXECUTE = 0x1301;
pub const GL_2_BYTES = 0x1407;
pub const GL_3_BYTES = 0x1408;
pub const GL_4_BYTES = 0x1409;
pub const GL_EMISSION = 0x1600;
pub const GL_SHININESS = 0x1601;
pub const GL_AMBIENT_AND_DIFFUSE = 0x1602;
pub const GL_COLOR_INDEXES = 0x1603;
pub const GL_MODELVIEW = 0x1700;
pub const GL_PROJECTION = 0x1701;
pub const GL_COLOR_INDEX = 0x1900;
pub const GL_LUMINANCE = 0x1909;
pub const GL_LUMINANCE_ALPHA = 0x190A;
pub const GL_BITMAP = 0x1A00;
pub const GL_RENDER = 0x1C00;
pub const GL_FEEDBACK = 0x1C01;
pub const GL_SELECT = 0x1C02;
pub const GL_FLAT = 0x1D00;
pub const GL_SMOOTH = 0x1D01;
pub const GL_S = 0x2000;
pub const GL_T = 0x2001;
pub const GL_R = 0x2002;
pub const GL_Q = 0x2003;
pub const GL_MODULATE = 0x2100;
pub const GL_DECAL = 0x2101;
pub const GL_TEXTURE_ENV_MODE = 0x2200;
pub const GL_TEXTURE_ENV_COLOR = 0x2201;
pub const GL_TEXTURE_ENV = 0x2300;
pub const GL_EYE_LINEAR = 0x2400;
pub const GL_OBJECT_LINEAR = 0x2401;
pub const GL_SPHERE_MAP = 0x2402;
pub const GL_TEXTURE_GEN_MODE = 0x2500;
pub const GL_OBJECT_PLANE = 0x2501;
pub const GL_EYE_PLANE = 0x2502;
pub const GL_CLAMP = 0x2900;
pub const GL_CLIP_PLANE0 = 0x3000;
pub const GL_CLIP_PLANE1 = 0x3001;
pub const GL_CLIP_PLANE2 = 0x3002;
pub const GL_CLIP_PLANE3 = 0x3003;
pub const GL_CLIP_PLANE4 = 0x3004;
pub const GL_CLIP_PLANE5 = 0x3005;
pub const GL_LIGHT0 = 0x4000;
pub const GL_LIGHT1 = 0x4001;
pub const GL_LIGHT2 = 0x4002;
pub const GL_LIGHT3 = 0x4003;
pub const GL_LIGHT4 = 0x4004;
pub const GL_LIGHT5 = 0x4005;
pub const GL_LIGHT6 = 0x4006;
pub const GL_LIGHT7 = 0x4007;
pub const GL_COLOR_LOGIC_OP = 0x0BF2;
pub const GL_POLYGON_OFFSET_UNITS = 0x2A00;
pub const GL_POLYGON_OFFSET_POINT = 0x2A01;
pub const GL_POLYGON_OFFSET_LINE = 0x2A02;
pub const GL_POLYGON_OFFSET_FILL = 0x8037;
pub const GL_POLYGON_OFFSET_FACTOR = 0x8038;
pub const GL_TEXTURE_BINDING_1D = 0x8068;
pub const GL_TEXTURE_BINDING_2D = 0x8069;
pub const GL_TEXTURE_INTERNAL_FORMAT = 0x1003;
pub const GL_TEXTURE_RED_SIZE = 0x805C;
pub const GL_TEXTURE_GREEN_SIZE = 0x805D;
pub const GL_TEXTURE_BLUE_SIZE = 0x805E;
pub const GL_TEXTURE_ALPHA_SIZE = 0x805F;
pub const GL_DOUBLE = 0x140A;
pub const GL_PROXY_TEXTURE_1D = 0x8063;
pub const GL_PROXY_TEXTURE_2D = 0x8064;
pub const GL_R3_G3_B2 = 0x2A10;
pub const GL_RGB4 = 0x804F;
pub const GL_RGB5 = 0x8050;
pub const GL_RGB8 = 0x8051;
pub const GL_RGB10 = 0x8052;
pub const GL_RGB12 = 0x8053;
pub const GL_RGB16 = 0x8054;
pub const GL_RGBA2 = 0x8055;
pub const GL_RGBA4 = 0x8056;
pub const GL_RGB5_A1 = 0x8057;
pub const GL_RGBA8 = 0x8058;
pub const GL_RGB10_A2 = 0x8059;
pub const GL_RGBA12 = 0x805A;
pub const GL_RGBA16 = 0x805B;
pub const GL_CLIENT_PIXEL_STORE_BIT = 0x00000001;
pub const GL_CLIENT_VERTEX_ARRAY_BIT = 0x00000002;
pub const GL_CLIENT_ALL_ATTRIB_BITS = 0xFFFFFFFF;
pub const GL_VERTEX_ARRAY_POINTER = 0x808E;
pub const GL_NORMAL_ARRAY_POINTER = 0x808F;
pub const GL_COLOR_ARRAY_POINTER = 0x8090;
pub const GL_INDEX_ARRAY_POINTER = 0x8091;
pub const GL_TEXTURE_COORD_ARRAY_POINTER = 0x8092;
pub const GL_EDGE_FLAG_ARRAY_POINTER = 0x8093;
pub const GL_FEEDBACK_BUFFER_POINTER = 0x0DF0;
pub const GL_SELECTION_BUFFER_POINTER = 0x0DF3;
pub const GL_CLIENT_ATTRIB_STACK_DEPTH = 0x0BB1;
pub const GL_INDEX_LOGIC_OP = 0x0BF1;
pub const GL_MAX_CLIENT_ATTRIB_STACK_DEPTH = 0x0D3B;
pub const GL_FEEDBACK_BUFFER_SIZE = 0x0DF1;
pub const GL_FEEDBACK_BUFFER_TYPE = 0x0DF2;
pub const GL_SELECTION_BUFFER_SIZE = 0x0DF4;
pub const GL_VERTEX_ARRAY = 0x8074;
pub const GL_NORMAL_ARRAY = 0x8075;
pub const GL_COLOR_ARRAY = 0x8076;
pub const GL_INDEX_ARRAY = 0x8077;
pub const GL_TEXTURE_COORD_ARRAY = 0x8078;
pub const GL_EDGE_FLAG_ARRAY = 0x8079;
pub const GL_VERTEX_ARRAY_SIZE = 0x807A;
pub const GL_VERTEX_ARRAY_TYPE = 0x807B;
pub const GL_VERTEX_ARRAY_STRIDE = 0x807C;
pub const GL_NORMAL_ARRAY_TYPE = 0x807E;
pub const GL_NORMAL_ARRAY_STRIDE = 0x807F;
pub const GL_COLOR_ARRAY_SIZE = 0x8081;
pub const GL_COLOR_ARRAY_TYPE = 0x8082;
pub const GL_COLOR_ARRAY_STRIDE = 0x8083;
pub const GL_INDEX_ARRAY_TYPE = 0x8085;
pub const GL_INDEX_ARRAY_STRIDE = 0x8086;
pub const GL_TEXTURE_COORD_ARRAY_SIZE = 0x8088;
pub const GL_TEXTURE_COORD_ARRAY_TYPE = 0x8089;
pub const GL_TEXTURE_COORD_ARRAY_STRIDE = 0x808A;
pub const GL_EDGE_FLAG_ARRAY_STRIDE = 0x808C;
pub const GL_TEXTURE_LUMINANCE_SIZE = 0x8060;
pub const GL_TEXTURE_INTENSITY_SIZE = 0x8061;
pub const GL_TEXTURE_PRIORITY = 0x8066;
pub const GL_TEXTURE_RESIDENT = 0x8067;
pub const GL_ALPHA4 = 0x803B;
pub const GL_ALPHA8 = 0x803C;
pub const GL_ALPHA12 = 0x803D;
pub const GL_ALPHA16 = 0x803E;
pub const GL_LUMINANCE4 = 0x803F;
pub const GL_LUMINANCE8 = 0x8040;
pub const GL_LUMINANCE12 = 0x8041;
pub const GL_LUMINANCE16 = 0x8042;
pub const GL_LUMINANCE4_ALPHA4 = 0x8043;
pub const GL_LUMINANCE6_ALPHA2 = 0x8044;
pub const GL_LUMINANCE8_ALPHA8 = 0x8045;
pub const GL_LUMINANCE12_ALPHA4 = 0x8046;
pub const GL_LUMINANCE12_ALPHA12 = 0x8047;
pub const GL_LUMINANCE16_ALPHA16 = 0x8048;
pub const GL_INTENSITY = 0x8049;
pub const GL_INTENSITY4 = 0x804A;
pub const GL_INTENSITY8 = 0x804B;
pub const GL_INTENSITY12 = 0x804C;
pub const GL_INTENSITY16 = 0x804D;
pub const GL_V2F = 0x2A20;
pub const GL_V3F = 0x2A21;
pub const GL_C4UB_V2F = 0x2A22;
pub const GL_C4UB_V3F = 0x2A23;
pub const GL_C3F_V3F = 0x2A24;
pub const GL_N3F_V3F = 0x2A25;
pub const GL_C4F_N3F_V3F = 0x2A26;
pub const GL_T2F_V3F = 0x2A27;
pub const GL_T4F_V4F = 0x2A28;
pub const GL_T2F_C4UB_V3F = 0x2A29;
pub const GL_T2F_C3F_V3F = 0x2A2A;
pub const GL_T2F_N3F_V3F = 0x2A2B;
pub const GL_T2F_C4F_N3F_V3F = 0x2A2C;
pub const GL_T4F_C4F_N3F_V4F = 0x2A2D;
pub const GL_UNSIGNED_BYTE_3_3_2 = 0x8032;
pub const GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033;
pub const GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034;
pub const GL_UNSIGNED_INT_8_8_8_8 = 0x8035;
pub const GL_UNSIGNED_INT_10_10_10_2 = 0x8036;
pub const GL_TEXTURE_BINDING_3D = 0x806A;
pub const GL_PACK_SKIP_IMAGES = 0x806B;
pub const GL_PACK_IMAGE_HEIGHT = 0x806C;
pub const GL_UNPACK_SKIP_IMAGES = 0x806D;
pub const GL_UNPACK_IMAGE_HEIGHT = 0x806E;
pub const GL_TEXTURE_3D = 0x806F;
pub const GL_PROXY_TEXTURE_3D = 0x8070;
pub const GL_TEXTURE_DEPTH = 0x8071;
pub const GL_TEXTURE_WRAP_R = 0x8072;
pub const GL_MAX_3D_TEXTURE_SIZE = 0x8073;
pub const GL_UNSIGNED_BYTE_2_3_3_REV = 0x8362;
pub const GL_UNSIGNED_SHORT_5_6_5 = 0x8363;
pub const GL_UNSIGNED_SHORT_5_6_5_REV = 0x8364;
pub const GL_UNSIGNED_SHORT_4_4_4_4_REV = 0x8365;
pub const GL_UNSIGNED_SHORT_1_5_5_5_REV = 0x8366;
pub const GL_UNSIGNED_INT_8_8_8_8_REV = 0x8367;
pub const GL_UNSIGNED_INT_2_10_10_10_REV = 0x8368;
pub const GL_BGR = 0x80E0;
pub const GL_BGRA = 0x80E1;
pub const GL_MAX_ELEMENTS_VERTICES = 0x80E8;
pub const GL_MAX_ELEMENTS_INDICES = 0x80E9;
pub const GL_CLAMP_TO_EDGE = 0x812F;
pub const GL_TEXTURE_MIN_LOD = 0x813A;
pub const GL_TEXTURE_MAX_LOD = 0x813B;
pub const GL_TEXTURE_BASE_LEVEL = 0x813C;
pub const GL_TEXTURE_MAX_LEVEL = 0x813D;
pub const GL_SMOOTH_POINT_SIZE_RANGE = 0x0B12;
pub const GL_SMOOTH_POINT_SIZE_GRANULARITY = 0x0B13;
pub const GL_SMOOTH_LINE_WIDTH_RANGE = 0x0B22;
pub const GL_SMOOTH_LINE_WIDTH_GRANULARITY = 0x0B23;
pub const GL_ALIASED_LINE_WIDTH_RANGE = 0x846E;
pub const GL_RESCALE_NORMAL = 0x803A;
pub const GL_LIGHT_MODEL_COLOR_CONTROL = 0x81F8;
pub const GL_SINGLE_COLOR = 0x81F9;
pub const GL_SEPARATE_SPECULAR_COLOR = 0x81FA;
pub const GL_ALIASED_POINT_SIZE_RANGE = 0x846D;
pub const GL_TEXTURE0 = 0x84C0;
pub const GL_TEXTURE1 = 0x84C1;
pub const GL_TEXTURE2 = 0x84C2;
pub const GL_TEXTURE3 = 0x84C3;
pub const GL_TEXTURE4 = 0x84C4;
pub const GL_TEXTURE5 = 0x84C5;
pub const GL_TEXTURE6 = 0x84C6;
pub const GL_TEXTURE7 = 0x84C7;
pub const GL_TEXTURE8 = 0x84C8;
pub const GL_TEXTURE9 = 0x84C9;
pub const GL_TEXTURE10 = 0x84CA;
pub const GL_TEXTURE11 = 0x84CB;
pub const GL_TEXTURE12 = 0x84CC;
pub const GL_TEXTURE13 = 0x84CD;
pub const GL_TEXTURE14 = 0x84CE;
pub const GL_TEXTURE15 = 0x84CF;
pub const GL_TEXTURE16 = 0x84D0;
pub const GL_TEXTURE17 = 0x84D1;
pub const GL_TEXTURE18 = 0x84D2;
pub const GL_TEXTURE19 = 0x84D3;
pub const GL_TEXTURE20 = 0x84D4;
pub const GL_TEXTURE21 = 0x84D5;
pub const GL_TEXTURE22 = 0x84D6;
pub const GL_TEXTURE23 = 0x84D7;
pub const GL_TEXTURE24 = 0x84D8;
pub const GL_TEXTURE25 = 0x84D9;
pub const GL_TEXTURE26 = 0x84DA;
pub const GL_TEXTURE27 = 0x84DB;
pub const GL_TEXTURE28 = 0x84DC;
pub const GL_TEXTURE29 = 0x84DD;
pub const GL_TEXTURE30 = 0x84DE;
pub const GL_TEXTURE31 = 0x84DF;
pub const GL_ACTIVE_TEXTURE = 0x84E0;
pub const GL_MULTISAMPLE = 0x809D;
pub const GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809E;
pub const GL_SAMPLE_ALPHA_TO_ONE = 0x809F;
pub const GL_SAMPLE_COVERAGE = 0x80A0;
pub const GL_SAMPLE_BUFFERS = 0x80A8;
pub const GL_SAMPLES = 0x80A9;
pub const GL_SAMPLE_COVERAGE_VALUE = 0x80AA;
pub const GL_SAMPLE_COVERAGE_INVERT = 0x80AB;
pub const GL_TEXTURE_CUBE_MAP = 0x8513;
pub const GL_TEXTURE_BINDING_CUBE_MAP = 0x8514;
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516;
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517;
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518;
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519;
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A;
pub const GL_PROXY_TEXTURE_CUBE_MAP = 0x851B;
pub const GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C;
pub const GL_COMPRESSED_RGB = 0x84ED;
pub const GL_COMPRESSED_RGBA = 0x84EE;
pub const GL_TEXTURE_COMPRESSION_HINT = 0x84EF;
pub const GL_TEXTURE_COMPRESSED_IMAGE_SIZE = 0x86A0;
pub const GL_TEXTURE_COMPRESSED = 0x86A1;
pub const GL_NUM_COMPRESSED_TEXTURE_FORMATS = 0x86A2;
pub const GL_COMPRESSED_TEXTURE_FORMATS = 0x86A3;
pub const GL_CLAMP_TO_BORDER = 0x812D;
pub const GL_CLIENT_ACTIVE_TEXTURE = 0x84E1;
pub const GL_MAX_TEXTURE_UNITS = 0x84E2;
pub const GL_TRANSPOSE_MODELVIEW_MATRIX = 0x84E3;
pub const GL_TRANSPOSE_PROJECTION_MATRIX = 0x84E4;
pub const GL_TRANSPOSE_TEXTURE_MATRIX = 0x84E5;
pub const GL_TRANSPOSE_COLOR_MATRIX = 0x84E6;
pub const GL_MULTISAMPLE_BIT = 0x20000000;
pub const GL_NORMAL_MAP = 0x8511;
pub const GL_REFLECTION_MAP = 0x8512;
pub const GL_COMPRESSED_ALPHA = 0x84E9;
pub const GL_COMPRESSED_LUMINANCE = 0x84EA;
pub const GL_COMPRESSED_LUMINANCE_ALPHA = 0x84EB;
pub const GL_COMPRESSED_INTENSITY = 0x84EC;
pub const GL_COMBINE = 0x8570;
pub const GL_COMBINE_RGB = 0x8571;
pub const GL_COMBINE_ALPHA = 0x8572;
pub const GL_SOURCE0_RGB = 0x8580;
pub const GL_SOURCE1_RGB = 0x8581;
pub const GL_SOURCE2_RGB = 0x8582;
pub const GL_SOURCE0_ALPHA = 0x8588;
pub const GL_SOURCE1_ALPHA = 0x8589;
pub const GL_SOURCE2_ALPHA = 0x858A;
pub const GL_OPERAND0_RGB = 0x8590;
pub const GL_OPERAND1_RGB = 0x8591;
pub const GL_OPERAND2_RGB = 0x8592;
pub const GL_OPERAND0_ALPHA = 0x8598;
pub const GL_OPERAND1_ALPHA = 0x8599;
pub const GL_OPERAND2_ALPHA = 0x859A;
pub const GL_RGB_SCALE = 0x8573;
pub const GL_ADD_SIGNED = 0x8574;
pub const GL_INTERPOLATE = 0x8575;
pub const GL_SUBTRACT = 0x84E7;
pub const GL_CONSTANT = 0x8576;
pub const GL_PRIMARY_COLOR = 0x8577;
pub const GL_PREVIOUS = 0x8578;
pub const GL_DOT3_RGB = 0x86AE;
pub const GL_DOT3_RGBA = 0x86AF;
pub const GL_BLEND_DST_RGB = 0x80C8;
pub const GL_BLEND_SRC_RGB = 0x80C9;
pub const GL_BLEND_DST_ALPHA = 0x80CA;
pub const GL_BLEND_SRC_ALPHA = 0x80CB;
pub const GL_POINT_FADE_THRESHOLD_SIZE = 0x8128;
pub const GL_DEPTH_COMPONENT16 = 0x81A5;
pub const GL_DEPTH_COMPONENT24 = 0x81A6;
pub const GL_DEPTH_COMPONENT32 = 0x81A7;
pub const GL_MIRRORED_REPEAT = 0x8370;
pub const GL_MAX_TEXTURE_LOD_BIAS = 0x84FD;
pub const GL_TEXTURE_LOD_BIAS = 0x8501;
pub const GL_INCR_WRAP = 0x8507;
pub const GL_DECR_WRAP = 0x8508;
pub const GL_TEXTURE_DEPTH_SIZE = 0x884A;
pub const GL_TEXTURE_COMPARE_MODE = 0x884C;
pub const GL_TEXTURE_COMPARE_FUNC = 0x884D;
pub const GL_POINT_SIZE_MIN = 0x8126;
pub const GL_POINT_SIZE_MAX = 0x8127;
pub const GL_POINT_DISTANCE_ATTENUATION = 0x8129;
pub const GL_GENERATE_MIPMAP = 0x8191;
pub const GL_GENERATE_MIPMAP_HINT = 0x8192;
pub const GL_FOG_COORDINATE_SOURCE = 0x8450;
pub const GL_FOG_COORDINATE = 0x8451;
pub const GL_FRAGMENT_DEPTH = 0x8452;
pub const GL_CURRENT_FOG_COORDINATE = 0x8453;
pub const GL_FOG_COORDINATE_ARRAY_TYPE = 0x8454;
pub const GL_FOG_COORDINATE_ARRAY_STRIDE = 0x8455;
pub const GL_FOG_COORDINATE_ARRAY_POINTER = 0x8456;
pub const GL_FOG_COORDINATE_ARRAY = 0x8457;
pub const GL_COLOR_SUM = 0x8458;
pub const GL_CURRENT_SECONDARY_COLOR = 0x8459;
pub const GL_SECONDARY_COLOR_ARRAY_SIZE = 0x845A;
pub const GL_SECONDARY_COLOR_ARRAY_TYPE = 0x845B;
pub const GL_SECONDARY_COLOR_ARRAY_STRIDE = 0x845C;
pub const GL_SECONDARY_COLOR_ARRAY_POINTER = 0x845D;
pub const GL_SECONDARY_COLOR_ARRAY = 0x845E;
pub const GL_TEXTURE_FILTER_CONTROL = 0x8500;
pub const GL_DEPTH_TEXTURE_MODE = 0x884B;
pub const GL_COMPARE_R_TO_TEXTURE = 0x884E;
pub const GL_BLEND_COLOR = 0x8005;
pub const GL_BLEND_EQUATION = 0x8009;
pub const GL_CONSTANT_COLOR = 0x8001;
pub const GL_ONE_MINUS_CONSTANT_COLOR = 0x8002;
pub const GL_CONSTANT_ALPHA = 0x8003;
pub const GL_ONE_MINUS_CONSTANT_ALPHA = 0x8004;
pub const GL_FUNC_ADD = 0x8006;
pub const GL_FUNC_REVERSE_SUBTRACT = 0x800B;
pub const GL_FUNC_SUBTRACT = 0x800A;
pub const GL_MIN = 0x8007;
pub const GL_MAX = 0x8008;
pub const GL_BUFFER_SIZE = 0x8764;
pub const GL_BUFFER_USAGE = 0x8765;
pub const GL_QUERY_COUNTER_BITS = 0x8864;
pub const GL_CURRENT_QUERY = 0x8865;
pub const GL_QUERY_RESULT = 0x8866;
pub const GL_QUERY_RESULT_AVAILABLE = 0x8867;
pub const GL_ARRAY_BUFFER = 0x8892;
pub const GL_ELEMENT_ARRAY_BUFFER = 0x8893;
pub const GL_ARRAY_BUFFER_BINDING = 0x8894;
pub const GL_ELEMENT_ARRAY_BUFFER_BINDING = 0x8895;
pub const GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F;
pub const GL_READ_ONLY = 0x88B8;
pub const GL_WRITE_ONLY = 0x88B9;
pub const GL_READ_WRITE = 0x88BA;
pub const GL_BUFFER_ACCESS = 0x88BB;
pub const GL_BUFFER_MAPPED = 0x88BC;
pub const GL_BUFFER_MAP_POINTER = 0x88BD;
pub const GL_STREAM_DRAW = 0x88E0;
pub const GL_STREAM_READ = 0x88E1;
pub const GL_STREAM_COPY = 0x88E2;
pub const GL_STATIC_DRAW = 0x88E4;
pub const GL_STATIC_READ = 0x88E5;
pub const GL_STATIC_COPY = 0x88E6;
pub const GL_DYNAMIC_DRAW = 0x88E8;
pub const GL_DYNAMIC_READ = 0x88E9;
pub const GL_DYNAMIC_COPY = 0x88EA;
pub const GL_SAMPLES_PASSED = 0x8914;
pub const GL_SRC1_ALPHA = 0x8589;
pub const GL_VERTEX_ARRAY_BUFFER_BINDING = 0x8896;
pub const GL_NORMAL_ARRAY_BUFFER_BINDING = 0x8897;
pub const GL_COLOR_ARRAY_BUFFER_BINDING = 0x8898;
pub const GL_INDEX_ARRAY_BUFFER_BINDING = 0x8899;
pub const GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = 0x889A;
pub const GL_EDGE_FLAG_ARRAY_BUFFER_BINDING = 0x889B;
pub const GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING = 0x889C;
pub const GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING = 0x889D;
pub const GL_WEIGHT_ARRAY_BUFFER_BINDING = 0x889E;
pub const GL_FOG_COORD_SRC = 0x8450;
pub const GL_FOG_COORD = 0x8451;
pub const GL_CURRENT_FOG_COORD = 0x8453;
pub const GL_FOG_COORD_ARRAY_TYPE = 0x8454;
pub const GL_FOG_COORD_ARRAY_STRIDE = 0x8455;
pub const GL_FOG_COORD_ARRAY_POINTER = 0x8456;
pub const GL_FOG_COORD_ARRAY = 0x8457;
pub const GL_FOG_COORD_ARRAY_BUFFER_BINDING = 0x889D;
pub const GL_SRC0_RGB = 0x8580;
pub const GL_SRC1_RGB = 0x8581;
pub const GL_SRC2_RGB = 0x8582;
pub const GL_SRC0_ALPHA = 0x8588;
pub const GL_SRC2_ALPHA = 0x858A;
pub const GL_BLEND_EQUATION_RGB = 0x8009;
pub const GL_VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622;
pub const GL_VERTEX_ATTRIB_ARRAY_SIZE = 0x8623;
pub const GL_VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624;
pub const GL_VERTEX_ATTRIB_ARRAY_TYPE = 0x8625;
pub const GL_CURRENT_VERTEX_ATTRIB = 0x8626;
pub const GL_VERTEX_PROGRAM_POINT_SIZE = 0x8642;
pub const GL_VERTEX_ATTRIB_ARRAY_POINTER = 0x8645;
pub const GL_STENCIL_BACK_FUNC = 0x8800;
pub const GL_STENCIL_BACK_FAIL = 0x8801;
pub const GL_STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802;
pub const GL_STENCIL_BACK_PASS_DEPTH_PASS = 0x8803;
pub const GL_MAX_DRAW_BUFFERS = 0x8824;
pub const GL_DRAW_BUFFER0 = 0x8825;
pub const GL_DRAW_BUFFER1 = 0x8826;
pub const GL_DRAW_BUFFER2 = 0x8827;
pub const GL_DRAW_BUFFER3 = 0x8828;
pub const GL_DRAW_BUFFER4 = 0x8829;
pub const GL_DRAW_BUFFER5 = 0x882A;
pub const GL_DRAW_BUFFER6 = 0x882B;
pub const GL_DRAW_BUFFER7 = 0x882C;
pub const GL_DRAW_BUFFER8 = 0x882D;
pub const GL_DRAW_BUFFER9 = 0x882E;
pub const GL_DRAW_BUFFER10 = 0x882F;
pub const GL_DRAW_BUFFER11 = 0x8830;
pub const GL_DRAW_BUFFER12 = 0x8831;
pub const GL_DRAW_BUFFER13 = 0x8832;
pub const GL_DRAW_BUFFER14 = 0x8833;
pub const GL_DRAW_BUFFER15 = 0x8834;
pub const GL_BLEND_EQUATION_ALPHA = 0x883D;
pub const GL_MAX_VERTEX_ATTRIBS = 0x8869;
pub const GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A;
pub const GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872;
pub const GL_FRAGMENT_SHADER = 0x8B30;
pub const GL_VERTEX_SHADER = 0x8B31;
pub const GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49;
pub const GL_MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A;
pub const GL_MAX_VARYING_FLOATS = 0x8B4B;
pub const GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C;
pub const GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;
pub const GL_SHADER_TYPE = 0x8B4F;
pub const GL_FLOAT_VEC2 = 0x8B50;
pub const GL_FLOAT_VEC3 = 0x8B51;
pub const GL_FLOAT_VEC4 = 0x8B52;
pub const GL_INT_VEC2 = 0x8B53;
pub const GL_INT_VEC3 = 0x8B54;
pub const GL_INT_VEC4 = 0x8B55;
pub const GL_BOOL = 0x8B56;
pub const GL_BOOL_VEC2 = 0x8B57;
pub const GL_BOOL_VEC3 = 0x8B58;
pub const GL_BOOL_VEC4 = 0x8B59;
pub const GL_FLOAT_MAT2 = 0x8B5A;
pub const GL_FLOAT_MAT3 = 0x8B5B;
pub const GL_FLOAT_MAT4 = 0x8B5C;
pub const GL_SAMPLER_1D = 0x8B5D;
pub const GL_SAMPLER_2D = 0x8B5E;
pub const GL_SAMPLER_3D = 0x8B5F;
pub const GL_SAMPLER_CUBE = 0x8B60;
pub const GL_SAMPLER_1D_SHADOW = 0x8B61;
pub const GL_SAMPLER_2D_SHADOW = 0x8B62;
pub const GL_DELETE_STATUS = 0x8B80;
pub const GL_COMPILE_STATUS = 0x8B81;
pub const GL_LINK_STATUS = 0x8B82;
pub const GL_VALIDATE_STATUS = 0x8B83;
pub const GL_INFO_LOG_LENGTH = 0x8B84;
pub const GL_ATTACHED_SHADERS = 0x8B85;
pub const GL_ACTIVE_UNIFORMS = 0x8B86;
pub const GL_ACTIVE_UNIFORM_MAX_LENGTH = 0x8B87;
pub const GL_SHADER_SOURCE_LENGTH = 0x8B88;
pub const GL_ACTIVE_ATTRIBUTES = 0x8B89;
pub const GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = 0x8B8A;
pub const GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B;
pub const GL_SHADING_LANGUAGE_VERSION = 0x8B8C;
pub const GL_CURRENT_PROGRAM = 0x8B8D;
pub const GL_POINT_SPRITE_COORD_ORIGIN = 0x8CA0;
pub const GL_LOWER_LEFT = 0x8CA1;
pub const GL_UPPER_LEFT = 0x8CA2;
pub const GL_STENCIL_BACK_REF = 0x8CA3;
pub const GL_STENCIL_BACK_VALUE_MASK = 0x8CA4;
pub const GL_STENCIL_BACK_WRITEMASK = 0x8CA5;
pub const GL_VERTEX_PROGRAM_TWO_SIDE = 0x8643;
pub const GL_POINT_SPRITE = 0x8861;
pub const GL_COORD_REPLACE = 0x8862;
pub const GL_MAX_TEXTURE_COORDS = 0x8871;
pub const GL_PIXEL_PACK_BUFFER = 0x88EB;
pub const GL_PIXEL_UNPACK_BUFFER = 0x88EC;
pub const GL_PIXEL_PACK_BUFFER_BINDING = 0x88ED;
pub const GL_PIXEL_UNPACK_BUFFER_BINDING = 0x88EF;
pub const GL_FLOAT_MAT2x3 = 0x8B65;
pub const GL_FLOAT_MAT2x4 = 0x8B66;
pub const GL_FLOAT_MAT3x2 = 0x8B67;
pub const GL_FLOAT_MAT3x4 = 0x8B68;
pub const GL_FLOAT_MAT4x2 = 0x8B69;
pub const GL_FLOAT_MAT4x3 = 0x8B6A;
pub const GL_SRGB = 0x8C40;
pub const GL_SRGB8 = 0x8C41;
pub const GL_SRGB_ALPHA = 0x8C42;
pub const GL_SRGB8_ALPHA8 = 0x8C43;
pub const GL_COMPRESSED_SRGB = 0x8C48;
pub const GL_COMPRESSED_SRGB_ALPHA = 0x8C49;
pub const GL_CURRENT_RASTER_SECONDARY_COLOR = 0x845F;
pub const GL_SLUMINANCE_ALPHA = 0x8C44;
pub const GL_SLUMINANCE8_ALPHA8 = 0x8C45;
pub const GL_SLUMINANCE = 0x8C46;
pub const GL_SLUMINANCE8 = 0x8C47;
pub const GL_COMPRESSED_SLUMINANCE = 0x8C4A;
pub const GL_COMPRESSED_SLUMINANCE_ALPHA = 0x8C4B;
pub const GL_COMPARE_REF_TO_TEXTURE = 0x884E;
pub const GL_CLIP_DISTANCE0 = 0x3000;
pub const GL_CLIP_DISTANCE1 = 0x3001;
pub const GL_CLIP_DISTANCE2 = 0x3002;
pub const GL_CLIP_DISTANCE3 = 0x3003;
pub const GL_CLIP_DISTANCE4 = 0x3004;
pub const GL_CLIP_DISTANCE5 = 0x3005;
pub const GL_CLIP_DISTANCE6 = 0x3006;
pub const GL_CLIP_DISTANCE7 = 0x3007;
pub const GL_MAX_CLIP_DISTANCES = 0x0D32;
pub const GL_MAJOR_VERSION = 0x821B;
pub const GL_MINOR_VERSION = 0x821C;
pub const GL_NUM_EXTENSIONS = 0x821D;
pub const GL_CONTEXT_FLAGS = 0x821E;
pub const GL_COMPRESSED_RED = 0x8225;
pub const GL_COMPRESSED_RG = 0x8226;
pub const GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = 0x00000001;
pub const GL_RGBA32F = 0x8814;
pub const GL_RGB32F = 0x8815;
pub const GL_RGBA16F = 0x881A;
pub const GL_RGB16F = 0x881B;
pub const GL_VERTEX_ATTRIB_ARRAY_INTEGER = 0x88FD;
pub const GL_MAX_ARRAY_TEXTURE_LAYERS = 0x88FF;
pub const GL_MIN_PROGRAM_TEXEL_OFFSET = 0x8904;
pub const GL_MAX_PROGRAM_TEXEL_OFFSET = 0x8905;
pub const GL_CLAMP_READ_COLOR = 0x891C;
pub const GL_FIXED_ONLY = 0x891D;
pub const GL_MAX_VARYING_COMPONENTS = 0x8B4B;
pub const GL_TEXTURE_1D_ARRAY = 0x8C18;
pub const GL_PROXY_TEXTURE_1D_ARRAY = 0x8C19;
pub const GL_TEXTURE_2D_ARRAY = 0x8C1A;
pub const GL_PROXY_TEXTURE_2D_ARRAY = 0x8C1B;
pub const GL_TEXTURE_BINDING_1D_ARRAY = 0x8C1C;
pub const GL_TEXTURE_BINDING_2D_ARRAY = 0x8C1D;
pub const GL_R11F_G11F_B10F = 0x8C3A;
pub const GL_UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;
pub const GL_RGB9_E5 = 0x8C3D;
pub const GL_UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;
pub const GL_TEXTURE_SHARED_SIZE = 0x8C3F;
pub const GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = 0x8C76;
pub const GL_TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8C7F;
pub const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8C80;
pub const GL_TRANSFORM_FEEDBACK_VARYINGS = 0x8C83;
pub const GL_TRANSFORM_FEEDBACK_BUFFER_START = 0x8C84;
pub const GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8C85;
pub const GL_PRIMITIVES_GENERATED = 0x8C87;
pub const GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8C88;
pub const GL_RASTERIZER_DISCARD = 0x8C89;
pub const GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8C8A;
pub const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8C8B;
pub const GL_INTERLEAVED_ATTRIBS = 0x8C8C;
pub const GL_SEPARATE_ATTRIBS = 0x8C8D;
pub const GL_TRANSFORM_FEEDBACK_BUFFER = 0x8C8E;
pub const GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8C8F;
pub const GL_RGBA32UI = 0x8D70;
pub const GL_RGB32UI = 0x8D71;
pub const GL_RGBA16UI = 0x8D76;
pub const GL_RGB16UI = 0x8D77;
pub const GL_RGBA8UI = 0x8D7C;
pub const GL_RGB8UI = 0x8D7D;
pub const GL_RGBA32I = 0x8D82;
pub const GL_RGB32I = 0x8D83;
pub const GL_RGBA16I = 0x8D88;
pub const GL_RGB16I = 0x8D89;
pub const GL_RGBA8I = 0x8D8E;
pub const GL_RGB8I = 0x8D8F;
pub const GL_RED_INTEGER = 0x8D94;
pub const GL_GREEN_INTEGER = 0x8D95;
pub const GL_BLUE_INTEGER = 0x8D96;
pub const GL_RGB_INTEGER = 0x8D98;
pub const GL_RGBA_INTEGER = 0x8D99;
pub const GL_BGR_INTEGER = 0x8D9A;
pub const GL_BGRA_INTEGER = 0x8D9B;
pub const GL_SAMPLER_1D_ARRAY = 0x8DC0;
pub const GL_SAMPLER_2D_ARRAY = 0x8DC1;
pub const GL_SAMPLER_1D_ARRAY_SHADOW = 0x8DC3;
pub const GL_SAMPLER_2D_ARRAY_SHADOW = 0x8DC4;
pub const GL_SAMPLER_CUBE_SHADOW = 0x8DC5;
pub const GL_UNSIGNED_INT_VEC2 = 0x8DC6;
pub const GL_UNSIGNED_INT_VEC3 = 0x8DC7;
pub const GL_UNSIGNED_INT_VEC4 = 0x8DC8;
pub const GL_INT_SAMPLER_1D = 0x8DC9;
pub const GL_INT_SAMPLER_2D = 0x8DCA;
pub const GL_INT_SAMPLER_3D = 0x8DCB;
pub const GL_INT_SAMPLER_CUBE = 0x8DCC;
pub const GL_INT_SAMPLER_1D_ARRAY = 0x8DCE;
pub const GL_INT_SAMPLER_2D_ARRAY = 0x8DCF;
pub const GL_UNSIGNED_INT_SAMPLER_1D = 0x8DD1;
pub const GL_UNSIGNED_INT_SAMPLER_2D = 0x8DD2;
pub const GL_UNSIGNED_INT_SAMPLER_3D = 0x8DD3;
pub const GL_UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4;
pub const GL_UNSIGNED_INT_SAMPLER_1D_ARRAY = 0x8DD6;
pub const GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;
pub const GL_QUERY_WAIT = 0x8E13;
pub const GL_QUERY_NO_WAIT = 0x8E14;
pub const GL_QUERY_BY_REGION_WAIT = 0x8E15;
pub const GL_QUERY_BY_REGION_NO_WAIT = 0x8E16;
pub const GL_BUFFER_ACCESS_FLAGS = 0x911F;
pub const GL_BUFFER_MAP_LENGTH = 0x9120;
pub const GL_BUFFER_MAP_OFFSET = 0x9121;
pub const GL_DEPTH_COMPONENT32F = 0x8CAC;
pub const GL_DEPTH32F_STENCIL8 = 0x8CAD;
pub const GL_FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;
pub const GL_INVALID_FRAMEBUFFER_OPERATION = 0x0506;
pub const GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210;
pub const GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211;
pub const GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212;
pub const GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213;
pub const GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214;
pub const GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215;
pub const GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216;
pub const GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217;
pub const GL_FRAMEBUFFER_DEFAULT = 0x8218;
pub const GL_FRAMEBUFFER_UNDEFINED = 0x8219;
pub const GL_DEPTH_STENCIL_ATTACHMENT = 0x821A;
pub const GL_MAX_RENDERBUFFER_SIZE = 0x84E8;
pub const GL_DEPTH_STENCIL = 0x84F9;
pub const GL_UNSIGNED_INT_24_8 = 0x84FA;
pub const GL_DEPTH24_STENCIL8 = 0x88F0;
pub const GL_TEXTURE_STENCIL_SIZE = 0x88F1;
pub const GL_TEXTURE_RED_TYPE = 0x8C10;
pub const GL_TEXTURE_GREEN_TYPE = 0x8C11;
pub const GL_TEXTURE_BLUE_TYPE = 0x8C12;
pub const GL_TEXTURE_ALPHA_TYPE = 0x8C13;
pub const GL_TEXTURE_DEPTH_TYPE = 0x8C16;
pub const GL_UNSIGNED_NORMALIZED = 0x8C17;
pub const GL_FRAMEBUFFER_BINDING = 0x8CA6;
pub const GL_DRAW_FRAMEBUFFER_BINDING = 0x8CA6;
pub const GL_RENDERBUFFER_BINDING = 0x8CA7;
pub const GL_READ_FRAMEBUFFER = 0x8CA8;
pub const GL_DRAW_FRAMEBUFFER = 0x8CA9;
pub const GL_READ_FRAMEBUFFER_BINDING = 0x8CAA;
pub const GL_RENDERBUFFER_SAMPLES = 0x8CAB;
pub const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8CD0;
pub const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8CD1;
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8CD2;
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3;
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8CD4;
pub const GL_FRAMEBUFFER_COMPLETE = 0x8CD5;
pub const GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6;
pub const GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;
pub const GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = 0x8CDB;
pub const GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER = 0x8CDC;
pub const GL_FRAMEBUFFER_UNSUPPORTED = 0x8CDD;
pub const GL_MAX_COLOR_ATTACHMENTS = 0x8CDF;
pub const GL_COLOR_ATTACHMENT0 = 0x8CE0;
pub const GL_COLOR_ATTACHMENT1 = 0x8CE1;
pub const GL_COLOR_ATTACHMENT2 = 0x8CE2;
pub const GL_COLOR_ATTACHMENT3 = 0x8CE3;
pub const GL_COLOR_ATTACHMENT4 = 0x8CE4;
pub const GL_COLOR_ATTACHMENT5 = 0x8CE5;
pub const GL_COLOR_ATTACHMENT6 = 0x8CE6;
pub const GL_COLOR_ATTACHMENT7 = 0x8CE7;
pub const GL_COLOR_ATTACHMENT8 = 0x8CE8;
pub const GL_COLOR_ATTACHMENT9 = 0x8CE9;
pub const GL_COLOR_ATTACHMENT10 = 0x8CEA;
pub const GL_COLOR_ATTACHMENT11 = 0x8CEB;
pub const GL_COLOR_ATTACHMENT12 = 0x8CEC;
pub const GL_COLOR_ATTACHMENT13 = 0x8CED;
pub const GL_COLOR_ATTACHMENT14 = 0x8CEE;
pub const GL_COLOR_ATTACHMENT15 = 0x8CEF;
pub const GL_COLOR_ATTACHMENT16 = 0x8CF0;
pub const GL_COLOR_ATTACHMENT17 = 0x8CF1;
pub const GL_COLOR_ATTACHMENT18 = 0x8CF2;
pub const GL_COLOR_ATTACHMENT19 = 0x8CF3;
pub const GL_COLOR_ATTACHMENT20 = 0x8CF4;
pub const GL_COLOR_ATTACHMENT21 = 0x8CF5;
pub const GL_COLOR_ATTACHMENT22 = 0x8CF6;
pub const GL_COLOR_ATTACHMENT23 = 0x8CF7;
pub const GL_COLOR_ATTACHMENT24 = 0x8CF8;
pub const GL_COLOR_ATTACHMENT25 = 0x8CF9;
pub const GL_COLOR_ATTACHMENT26 = 0x8CFA;
pub const GL_COLOR_ATTACHMENT27 = 0x8CFB;
pub const GL_COLOR_ATTACHMENT28 = 0x8CFC;
pub const GL_COLOR_ATTACHMENT29 = 0x8CFD;
pub const GL_COLOR_ATTACHMENT30 = 0x8CFE;
pub const GL_COLOR_ATTACHMENT31 = 0x8CFF;
pub const GL_DEPTH_ATTACHMENT = 0x8D00;
pub const GL_STENCIL_ATTACHMENT = 0x8D20;
pub const GL_FRAMEBUFFER = 0x8D40;
pub const GL_RENDERBUFFER = 0x8D41;
pub const GL_RENDERBUFFER_WIDTH = 0x8D42;
pub const GL_RENDERBUFFER_HEIGHT = 0x8D43;
pub const GL_RENDERBUFFER_INTERNAL_FORMAT = 0x8D44;
pub const GL_STENCIL_INDEX1 = 0x8D46;
pub const GL_STENCIL_INDEX4 = 0x8D47;
pub const GL_STENCIL_INDEX8 = 0x8D48;
pub const GL_STENCIL_INDEX16 = 0x8D49;
pub const GL_RENDERBUFFER_RED_SIZE = 0x8D50;
pub const GL_RENDERBUFFER_GREEN_SIZE = 0x8D51;
pub const GL_RENDERBUFFER_BLUE_SIZE = 0x8D52;
pub const GL_RENDERBUFFER_ALPHA_SIZE = 0x8D53;
pub const GL_RENDERBUFFER_DEPTH_SIZE = 0x8D54;
pub const GL_RENDERBUFFER_STENCIL_SIZE = 0x8D55;
pub const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8D56;
pub const GL_MAX_SAMPLES = 0x8D57;
pub const GL_INDEX = 0x8222;
pub const GL_TEXTURE_LUMINANCE_TYPE = 0x8C14;
pub const GL_TEXTURE_INTENSITY_TYPE = 0x8C15;
pub const GL_FRAMEBUFFER_SRGB = 0x8DB9;
pub const GL_HALF_FLOAT = 0x140B;
pub const GL_MAP_READ_BIT = 0x0001;
pub const GL_MAP_WRITE_BIT = 0x0002;
pub const GL_MAP_INVALIDATE_RANGE_BIT = 0x0004;
pub const GL_MAP_INVALIDATE_BUFFER_BIT = 0x0008;
pub const GL_MAP_FLUSH_EXPLICIT_BIT = 0x0010;
pub const GL_MAP_UNSYNCHRONIZED_BIT = 0x0020;
pub const GL_COMPRESSED_RED_RGTC1 = 0x8DBB;
pub const GL_COMPRESSED_SIGNED_RED_RGTC1 = 0x8DBC;
pub const GL_COMPRESSED_RG_RGTC2 = 0x8DBD;
pub const GL_COMPRESSED_SIGNED_RG_RGTC2 = 0x8DBE;
pub const GL_RG = 0x8227;
pub const GL_RG_INTEGER = 0x8228;
pub const GL_R8 = 0x8229;
pub const GL_R16 = 0x822A;
pub const GL_RG8 = 0x822B;
pub const GL_RG16 = 0x822C;
pub const GL_R16F = 0x822D;
pub const GL_R32F = 0x822E;
pub const GL_RG16F = 0x822F;
pub const GL_RG32F = 0x8230;
pub const GL_R8I = 0x8231;
pub const GL_R8UI = 0x8232;
pub const GL_R16I = 0x8233;
pub const GL_R16UI = 0x8234;
pub const GL_R32I = 0x8235;
pub const GL_R32UI = 0x8236;
pub const GL_RG8I = 0x8237;
pub const GL_RG8UI = 0x8238;
pub const GL_RG16I = 0x8239;
pub const GL_RG16UI = 0x823A;
pub const GL_RG32I = 0x823B;
pub const GL_RG32UI = 0x823C;
pub const GL_VERTEX_ARRAY_BINDING = 0x85B5;
pub const GL_CLAMP_VERTEX_COLOR = 0x891A;
pub const GL_CLAMP_FRAGMENT_COLOR = 0x891B;
pub const GL_ALPHA_INTEGER = 0x8D97;
pub const GL_SAMPLER_2D_RECT = 0x8B63;
pub const GL_SAMPLER_2D_RECT_SHADOW = 0x8B64;
pub const GL_SAMPLER_BUFFER = 0x8DC2;
pub const GL_INT_SAMPLER_2D_RECT = 0x8DCD;
pub const GL_INT_SAMPLER_BUFFER = 0x8DD0;
pub const GL_UNSIGNED_INT_SAMPLER_2D_RECT = 0x8DD5;
pub const GL_UNSIGNED_INT_SAMPLER_BUFFER = 0x8DD8;
pub const GL_TEXTURE_BUFFER = 0x8C2A;
pub const GL_MAX_TEXTURE_BUFFER_SIZE = 0x8C2B;
pub const GL_TEXTURE_BINDING_BUFFER = 0x8C2C;
pub const GL_TEXTURE_BUFFER_DATA_STORE_BINDING = 0x8C2D;
pub const GL_TEXTURE_RECTANGLE = 0x84F5;
pub const GL_TEXTURE_BINDING_RECTANGLE = 0x84F6;
pub const GL_PROXY_TEXTURE_RECTANGLE = 0x84F7;
pub const GL_MAX_RECTANGLE_TEXTURE_SIZE = 0x84F8;
pub const GL_R8_SNORM = 0x8F94;
pub const GL_RG8_SNORM = 0x8F95;
pub const GL_RGB8_SNORM = 0x8F96;
pub const GL_RGBA8_SNORM = 0x8F97;
pub const GL_R16_SNORM = 0x8F98;
pub const GL_RG16_SNORM = 0x8F99;
pub const GL_RGB16_SNORM = 0x8F9A;
pub const GL_RGBA16_SNORM = 0x8F9B;
pub const GL_SIGNED_NORMALIZED = 0x8F9C;
pub const GL_PRIMITIVE_RESTART = 0x8F9D;
pub const GL_PRIMITIVE_RESTART_INDEX = 0x8F9E;
pub const GL_COPY_READ_BUFFER = 0x8F36;
pub const GL_COPY_WRITE_BUFFER = 0x8F37;
pub const GL_UNIFORM_BUFFER = 0x8A11;
pub const GL_UNIFORM_BUFFER_BINDING = 0x8A28;
pub const GL_UNIFORM_BUFFER_START = 0x8A29;
pub const GL_UNIFORM_BUFFER_SIZE = 0x8A2A;
pub const GL_MAX_VERTEX_UNIFORM_BLOCKS = 0x8A2B;
pub const GL_MAX_GEOMETRY_UNIFORM_BLOCKS = 0x8A2C;
pub const GL_MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8A2D;
pub const GL_MAX_COMBINED_UNIFORM_BLOCKS = 0x8A2E;
pub const GL_MAX_UNIFORM_BUFFER_BINDINGS = 0x8A2F;
pub const GL_MAX_UNIFORM_BLOCK_SIZE = 0x8A30;
pub const GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8A31;
pub const GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS = 0x8A32;
pub const GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8A33;
pub const GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8A34;
pub const GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = 0x8A35;
pub const GL_ACTIVE_UNIFORM_BLOCKS = 0x8A36;
pub const GL_UNIFORM_TYPE = 0x8A37;
pub const GL_UNIFORM_SIZE = 0x8A38;
pub const GL_UNIFORM_NAME_LENGTH = 0x8A39;
pub const GL_UNIFORM_BLOCK_INDEX = 0x8A3A;
pub const GL_UNIFORM_OFFSET = 0x8A3B;
pub const GL_UNIFORM_ARRAY_STRIDE = 0x8A3C;
pub const GL_UNIFORM_MATRIX_STRIDE = 0x8A3D;
pub const GL_UNIFORM_IS_ROW_MAJOR = 0x8A3E;
pub const GL_UNIFORM_BLOCK_BINDING = 0x8A3F;
pub const GL_UNIFORM_BLOCK_DATA_SIZE = 0x8A40;
pub const GL_UNIFORM_BLOCK_NAME_LENGTH = 0x8A41;
pub const GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8A42;
pub const GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8A43;
pub const GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8A44;
pub const GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER = 0x8A45;
pub const GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8A46;
pub const GL_INVALID_INDEX = 0xFFFFFFFF;
pub const GL_CONTEXT_CORE_PROFILE_BIT = 0x00000001;
pub const GL_CONTEXT_COMPATIBILITY_PROFILE_BIT = 0x00000002;
pub const GL_LINES_ADJACENCY = 0x000A;
pub const GL_LINE_STRIP_ADJACENCY = 0x000B;
pub const GL_TRIANGLES_ADJACENCY = 0x000C;
pub const GL_TRIANGLE_STRIP_ADJACENCY = 0x000D;
pub const GL_PROGRAM_POINT_SIZE = 0x8642;
pub const GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = 0x8C29;
pub const GL_FRAMEBUFFER_ATTACHMENT_LAYERED = 0x8DA7;
pub const GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = 0x8DA8;
pub const GL_GEOMETRY_SHADER = 0x8DD9;
pub const GL_GEOMETRY_VERTICES_OUT = 0x8916;
pub const GL_GEOMETRY_INPUT_TYPE = 0x8917;
pub const GL_GEOMETRY_OUTPUT_TYPE = 0x8918;
pub const GL_MAX_GEOMETRY_UNIFORM_COMPONENTS = 0x8DDF;
pub const GL_MAX_GEOMETRY_OUTPUT_VERTICES = 0x8DE0;
pub const GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = 0x8DE1;
pub const GL_MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122;
pub const GL_MAX_GEOMETRY_INPUT_COMPONENTS = 0x9123;
pub const GL_MAX_GEOMETRY_OUTPUT_COMPONENTS = 0x9124;
pub const GL_MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125;
pub const GL_CONTEXT_PROFILE_MASK = 0x9126;
pub const GL_DEPTH_CLAMP = 0x864F;
pub const GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION = 0x8E4C;
pub const GL_FIRST_VERTEX_CONVENTION = 0x8E4D;
pub const GL_LAST_VERTEX_CONVENTION = 0x8E4E;
pub const GL_PROVOKING_VERTEX = 0x8E4F;
pub const GL_TEXTURE_CUBE_MAP_SEAMLESS = 0x884F;
pub const GL_MAX_SERVER_WAIT_TIMEOUT = 0x9111;
pub const GL_OBJECT_TYPE = 0x9112;
pub const GL_SYNC_CONDITION = 0x9113;
pub const GL_SYNC_STATUS = 0x9114;
pub const GL_SYNC_FLAGS = 0x9115;
pub const GL_SYNC_FENCE = 0x9116;
pub const GL_SYNC_GPU_COMMANDS_COMPLETE = 0x9117;
pub const GL_UNSIGNALED = 0x9118;
pub const GL_SIGNALED = 0x9119;
pub const GL_ALREADY_SIGNALED = 0x911A;
pub const GL_TIMEOUT_EXPIRED = 0x911B;
pub const GL_CONDITION_SATISFIED = 0x911C;
pub const GL_WAIT_FAILED = 0x911D;
pub const GL_TIMEOUT_IGNORED = 0xFFFFFFFFFFFFFFFF;
pub const GL_SYNC_FLUSH_COMMANDS_BIT = 0x00000001;
pub const GL_SAMPLE_POSITION = 0x8E50;
pub const GL_SAMPLE_MASK = 0x8E51;
pub const GL_SAMPLE_MASK_VALUE = 0x8E52;
pub const GL_MAX_SAMPLE_MASK_WORDS = 0x8E59;
pub const GL_TEXTURE_2D_MULTISAMPLE = 0x9100;
pub const GL_PROXY_TEXTURE_2D_MULTISAMPLE = 0x9101;
pub const GL_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9102;
pub const GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9103;
pub const GL_TEXTURE_BINDING_2D_MULTISAMPLE = 0x9104;
pub const GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = 0x9105;
pub const GL_TEXTURE_SAMPLES = 0x9106;
pub const GL_TEXTURE_FIXED_SAMPLE_LOCATIONS = 0x9107;
pub const GL_SAMPLER_2D_MULTISAMPLE = 0x9108;
pub const GL_INT_SAMPLER_2D_MULTISAMPLE = 0x9109;
pub const GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = 0x910A;
pub const GL_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910B;
pub const GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910C;
pub const GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910D;
pub const GL_MAX_COLOR_TEXTURE_SAMPLES = 0x910E;
pub const GL_MAX_DEPTH_TEXTURE_SAMPLES = 0x910F;
pub const GL_MAX_INTEGER_SAMPLES = 0x9110;
pub const GL_VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88FE;
pub const GL_SRC1_COLOR = 0x88F9;
pub const GL_ONE_MINUS_SRC1_COLOR = 0x88FA;
pub const GL_ONE_MINUS_SRC1_ALPHA = 0x88FB;
pub const GL_MAX_DUAL_SOURCE_DRAW_BUFFERS = 0x88FC;
pub const GL_ANY_SAMPLES_PASSED = 0x8C2F;
pub const GL_SAMPLER_BINDING = 0x8919;
pub const GL_RGB10_A2UI = 0x906F;
pub const GL_TEXTURE_SWIZZLE_R = 0x8E42;
pub const GL_TEXTURE_SWIZZLE_G = 0x8E43;
pub const GL_TEXTURE_SWIZZLE_B = 0x8E44;
pub const GL_TEXTURE_SWIZZLE_A = 0x8E45;
pub const GL_TEXTURE_SWIZZLE_RGBA = 0x8E46;
pub const GL_TIME_ELAPSED = 0x88BF;
pub const GL_TIMESTAMP = 0x8E28;
pub const GL_INT_2_10_10_10_REV = 0x8D9F;
pub const GL_SAMPLE_SHADING = 0x8C36;
pub const GL_MIN_SAMPLE_SHADING_VALUE = 0x8C37;
pub const GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5E;
pub const GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5F;
pub const GL_TEXTURE_CUBE_MAP_ARRAY = 0x9009;
pub const GL_TEXTURE_BINDING_CUBE_MAP_ARRAY = 0x900A;
pub const GL_PROXY_TEXTURE_CUBE_MAP_ARRAY = 0x900B;
pub const GL_SAMPLER_CUBE_MAP_ARRAY = 0x900C;
pub const GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW = 0x900D;
pub const GL_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900E;
pub const GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900F;
pub const GL_DRAW_INDIRECT_BUFFER = 0x8F3F;
pub const GL_DRAW_INDIRECT_BUFFER_BINDING = 0x8F43;
pub const GL_GEOMETRY_SHADER_INVOCATIONS = 0x887F;
pub const GL_MAX_GEOMETRY_SHADER_INVOCATIONS = 0x8E5A;
pub const GL_MIN_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5B;
pub const GL_MAX_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5C;
pub const GL_FRAGMENT_INTERPOLATION_OFFSET_BITS = 0x8E5D;
pub const GL_MAX_VERTEX_STREAMS = 0x8E71;
pub const GL_DOUBLE_VEC2 = 0x8FFC;
pub const GL_DOUBLE_VEC3 = 0x8FFD;
pub const GL_DOUBLE_VEC4 = 0x8FFE;
pub const GL_DOUBLE_MAT2 = 0x8F46;
pub const GL_DOUBLE_MAT3 = 0x8F47;
pub const GL_DOUBLE_MAT4 = 0x8F48;
pub const GL_DOUBLE_MAT2x3 = 0x8F49;
pub const GL_DOUBLE_MAT2x4 = 0x8F4A;
pub const GL_DOUBLE_MAT3x2 = 0x8F4B;
pub const GL_DOUBLE_MAT3x4 = 0x8F4C;
pub const GL_DOUBLE_MAT4x2 = 0x8F4D;
pub const GL_DOUBLE_MAT4x3 = 0x8F4E;
pub const GL_ACTIVE_SUBROUTINES = 0x8DE5;
pub const GL_ACTIVE_SUBROUTINE_UNIFORMS = 0x8DE6;
pub const GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS = 0x8E47;
pub const GL_ACTIVE_SUBROUTINE_MAX_LENGTH = 0x8E48;
pub const GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH = 0x8E49;
pub const GL_MAX_SUBROUTINES = 0x8DE7;
pub const GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS = 0x8DE8;
pub const GL_NUM_COMPATIBLE_SUBROUTINES = 0x8E4A;
pub const GL_COMPATIBLE_SUBROUTINES = 0x8E4B;
pub const GL_PATCHES = 0x000E;
pub const GL_PATCH_VERTICES = 0x8E72;
pub const GL_PATCH_DEFAULT_INNER_LEVEL = 0x8E73;
pub const GL_PATCH_DEFAULT_OUTER_LEVEL = 0x8E74;
pub const GL_TESS_CONTROL_OUTPUT_VERTICES = 0x8E75;
pub const GL_TESS_GEN_MODE = 0x8E76;
pub const GL_TESS_GEN_SPACING = 0x8E77;
pub const GL_TESS_GEN_VERTEX_ORDER = 0x8E78;
pub const GL_TESS_GEN_POINT_MODE = 0x8E79;
pub const GL_ISOLINES = 0x8E7A;
pub const GL_FRACTIONAL_ODD = 0x8E7B;
pub const GL_FRACTIONAL_EVEN = 0x8E7C;
pub const GL_MAX_PATCH_VERTICES = 0x8E7D;
pub const GL_MAX_TESS_GEN_LEVEL = 0x8E7E;
pub const GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8E7F;
pub const GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8E80;
pub const GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS = 0x8E81;
pub const GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS = 0x8E82;
pub const GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS = 0x8E83;
pub const GL_MAX_TESS_PATCH_COMPONENTS = 0x8E84;
pub const GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS = 0x8E85;
pub const GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS = 0x8E86;
pub const GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS = 0x8E89;
pub const GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS = 0x8E8A;
pub const GL_MAX_TESS_CONTROL_INPUT_COMPONENTS = 0x886C;
pub const GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS = 0x886D;
pub const GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8E1E;
pub const GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8E1F;
pub const GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER = 0x84F0;
pub const GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x84F1;
pub const GL_TESS_EVALUATION_SHADER = 0x8E87;
pub const GL_TESS_CONTROL_SHADER = 0x8E88;
pub const GL_TRANSFORM_FEEDBACK = 0x8E22;
pub const GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED = 0x8E23;
pub const GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE = 0x8E24;
pub const GL_TRANSFORM_FEEDBACK_BINDING = 0x8E25;
pub const GL_MAX_TRANSFORM_FEEDBACK_BUFFERS = 0x8E70;
pub const GL_FIXED = 0x140C;
pub const GL_IMPLEMENTATION_COLOR_READ_TYPE = 0x8B9A;
pub const GL_IMPLEMENTATION_COLOR_READ_FORMAT = 0x8B9B;
pub const GL_LOW_FLOAT = 0x8DF0;
pub const GL_MEDIUM_FLOAT = 0x8DF1;
pub const GL_HIGH_FLOAT = 0x8DF2;
pub const GL_LOW_INT = 0x8DF3;
pub const GL_MEDIUM_INT = 0x8DF4;
pub const GL_HIGH_INT = 0x8DF5;
pub const GL_SHADER_COMPILER = 0x8DFA;
pub const GL_SHADER_BINARY_FORMATS = 0x8DF8;
pub const GL_NUM_SHADER_BINARY_FORMATS = 0x8DF9;
pub const GL_MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB;
pub const GL_MAX_VARYING_VECTORS = 0x8DFC;
pub const GL_MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD;
pub const GL_RGB565 = 0x8D62;
pub const GL_PROGRAM_BINARY_RETRIEVABLE_HINT = 0x8257;
pub const GL_PROGRAM_BINARY_LENGTH = 0x8741;
pub const GL_NUM_PROGRAM_BINARY_FORMATS = 0x87FE;
pub const GL_PROGRAM_BINARY_FORMATS = 0x87FF;
pub const GL_VERTEX_SHADER_BIT = 0x00000001;
pub const GL_FRAGMENT_SHADER_BIT = 0x00000002;
pub const GL_GEOMETRY_SHADER_BIT = 0x00000004;
pub const GL_TESS_CONTROL_SHADER_BIT = 0x00000008;
pub const GL_TESS_EVALUATION_SHADER_BIT = 0x00000010;
pub const GL_ALL_SHADER_BITS = 0xFFFFFFFF;
pub const GL_PROGRAM_SEPARABLE = 0x8258;
pub const GL_ACTIVE_PROGRAM = 0x8259;
pub const GL_PROGRAM_PIPELINE_BINDING = 0x825A;
pub const GL_MAX_VIEWPORTS = 0x825B;
pub const GL_VIEWPORT_SUBPIXEL_BITS = 0x825C;
pub const GL_VIEWPORT_BOUNDS_RANGE = 0x825D;
pub const GL_LAYER_PROVOKING_VERTEX = 0x825E;
pub const GL_VIEWPORT_INDEX_PROVOKING_VERTEX = 0x825F;
pub const GL_UNDEFINED_VERTEX = 0x8260;
pub const GL_COPY_READ_BUFFER_BINDING = 0x8F36;
pub const GL_COPY_WRITE_BUFFER_BINDING = 0x8F37;
pub const GL_TRANSFORM_FEEDBACK_ACTIVE = 0x8E24;
pub const GL_TRANSFORM_FEEDBACK_PAUSED = 0x8E23;
pub const GL_UNPACK_COMPRESSED_BLOCK_WIDTH = 0x9127;
pub const GL_UNPACK_COMPRESSED_BLOCK_HEIGHT = 0x9128;
pub const GL_UNPACK_COMPRESSED_BLOCK_DEPTH = 0x9129;
pub const GL_UNPACK_COMPRESSED_BLOCK_SIZE = 0x912A;
pub const GL_PACK_COMPRESSED_BLOCK_WIDTH = 0x912B;
pub const GL_PACK_COMPRESSED_BLOCK_HEIGHT = 0x912C;
pub const GL_PACK_COMPRESSED_BLOCK_DEPTH = 0x912D;
pub const GL_PACK_COMPRESSED_BLOCK_SIZE = 0x912E;
pub const GL_NUM_SAMPLE_COUNTS = 0x9380;
pub const GL_MIN_MAP_BUFFER_ALIGNMENT = 0x90BC;
pub const GL_ATOMIC_COUNTER_BUFFER = 0x92C0;
pub const GL_ATOMIC_COUNTER_BUFFER_BINDING = 0x92C1;
pub const GL_ATOMIC_COUNTER_BUFFER_START = 0x92C2;
pub const GL_ATOMIC_COUNTER_BUFFER_SIZE = 0x92C3;
pub const GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE = 0x92C4;
pub const GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS = 0x92C5;
pub const GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES = 0x92C6;
pub const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER = 0x92C7;
pub const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER = 0x92C8;
pub const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x92C9;
pub const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER = 0x92CA;
pub const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER = 0x92CB;
pub const GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS = 0x92CC;
pub const GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS = 0x92CD;
pub const GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS = 0x92CE;
pub const GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS = 0x92CF;
pub const GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS = 0x92D0;
pub const GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS = 0x92D1;
pub const GL_MAX_VERTEX_ATOMIC_COUNTERS = 0x92D2;
pub const GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS = 0x92D3;
pub const GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS = 0x92D4;
pub const GL_MAX_GEOMETRY_ATOMIC_COUNTERS = 0x92D5;
pub const GL_MAX_FRAGMENT_ATOMIC_COUNTERS = 0x92D6;
pub const GL_MAX_COMBINED_ATOMIC_COUNTERS = 0x92D7;
pub const GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE = 0x92D8;
pub const GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS = 0x92DC;
pub const GL_ACTIVE_ATOMIC_COUNTER_BUFFERS = 0x92D9;
pub const GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX = 0x92DA;
pub const GL_UNSIGNED_INT_ATOMIC_COUNTER = 0x92DB;
pub const GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT = 0x00000001;
pub const GL_ELEMENT_ARRAY_BARRIER_BIT = 0x00000002;
pub const GL_UNIFORM_BARRIER_BIT = 0x00000004;
pub const GL_TEXTURE_FETCH_BARRIER_BIT = 0x00000008;
pub const GL_SHADER_IMAGE_ACCESS_BARRIER_BIT = 0x00000020;
pub const GL_COMMAND_BARRIER_BIT = 0x00000040;
pub const GL_PIXEL_BUFFER_BARRIER_BIT = 0x00000080;
pub const GL_TEXTURE_UPDATE_BARRIER_BIT = 0x00000100;
pub const GL_BUFFER_UPDATE_BARRIER_BIT = 0x00000200;
pub const GL_FRAMEBUFFER_BARRIER_BIT = 0x00000400;
pub const GL_TRANSFORM_FEEDBACK_BARRIER_BIT = 0x00000800;
pub const GL_ATOMIC_COUNTER_BARRIER_BIT = 0x00001000;
pub const GL_ALL_BARRIER_BITS = 0xFFFFFFFF;
pub const GL_MAX_IMAGE_UNITS = 0x8F38;
pub const GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS = 0x8F39;
pub const GL_IMAGE_BINDING_NAME = 0x8F3A;
pub const GL_IMAGE_BINDING_LEVEL = 0x8F3B;
pub const GL_IMAGE_BINDING_LAYERED = 0x8F3C;
pub const GL_IMAGE_BINDING_LAYER = 0x8F3D;
pub const GL_IMAGE_BINDING_ACCESS = 0x8F3E;
pub const GL_IMAGE_1D = 0x904C;
pub const GL_IMAGE_2D = 0x904D;
pub const GL_IMAGE_3D = 0x904E;
pub const GL_IMAGE_2D_RECT = 0x904F;
pub const GL_IMAGE_CUBE = 0x9050;
pub const GL_IMAGE_BUFFER = 0x9051;
pub const GL_IMAGE_1D_ARRAY = 0x9052;
pub const GL_IMAGE_2D_ARRAY = 0x9053;
pub const GL_IMAGE_CUBE_MAP_ARRAY = 0x9054;
pub const GL_IMAGE_2D_MULTISAMPLE = 0x9055;
pub const GL_IMAGE_2D_MULTISAMPLE_ARRAY = 0x9056;
pub const GL_INT_IMAGE_1D = 0x9057;
pub const GL_INT_IMAGE_2D = 0x9058;
pub const GL_INT_IMAGE_3D = 0x9059;
pub const GL_INT_IMAGE_2D_RECT = 0x905A;
pub const GL_INT_IMAGE_CUBE = 0x905B;
pub const GL_INT_IMAGE_BUFFER = 0x905C;
pub const GL_INT_IMAGE_1D_ARRAY = 0x905D;
pub const GL_INT_IMAGE_2D_ARRAY = 0x905E;
pub const GL_INT_IMAGE_CUBE_MAP_ARRAY = 0x905F;
pub const GL_INT_IMAGE_2D_MULTISAMPLE = 0x9060;
pub const GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY = 0x9061;
pub const GL_UNSIGNED_INT_IMAGE_1D = 0x9062;
pub const GL_UNSIGNED_INT_IMAGE_2D = 0x9063;
pub const GL_UNSIGNED_INT_IMAGE_3D = 0x9064;
pub const GL_UNSIGNED_INT_IMAGE_2D_RECT = 0x9065;
pub const GL_UNSIGNED_INT_IMAGE_CUBE = 0x9066;
pub const GL_UNSIGNED_INT_IMAGE_BUFFER = 0x9067;
pub const GL_UNSIGNED_INT_IMAGE_1D_ARRAY = 0x9068;
pub const GL_UNSIGNED_INT_IMAGE_2D_ARRAY = 0x9069;
pub const GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY = 0x906A;
pub const GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE = 0x906B;
pub const GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY = 0x906C;
pub const GL_MAX_IMAGE_SAMPLES = 0x906D;
pub const GL_IMAGE_BINDING_FORMAT = 0x906E;
pub const GL_IMAGE_FORMAT_COMPATIBILITY_TYPE = 0x90C7;
pub const GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE = 0x90C8;
pub const GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS = 0x90C9;
pub const GL_MAX_VERTEX_IMAGE_UNIFORMS = 0x90CA;
pub const GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS = 0x90CB;
pub const GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS = 0x90CC;
pub const GL_MAX_GEOMETRY_IMAGE_UNIFORMS = 0x90CD;
pub const GL_MAX_FRAGMENT_IMAGE_UNIFORMS = 0x90CE;
pub const GL_MAX_COMBINED_IMAGE_UNIFORMS = 0x90CF;
pub const GL_COMPRESSED_RGBA_BPTC_UNORM = 0x8E8C;
pub const GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM = 0x8E8D;
pub const GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT = 0x8E8E;
pub const GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT = 0x8E8F;
pub const GL_TEXTURE_IMMUTABLE_FORMAT = 0x912F;
pub const GL_NUM_SHADING_LANGUAGE_VERSIONS = 0x82E9;
pub const GL_VERTEX_ATTRIB_ARRAY_LONG = 0x874E;
pub const GL_COMPRESSED_RGB8_ETC2 = 0x9274;
pub const GL_COMPRESSED_SRGB8_ETC2 = 0x9275;
pub const GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9276;
pub const GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9277;
pub const GL_COMPRESSED_RGBA8_ETC2_EAC = 0x9278;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 0x9279;
pub const GL_COMPRESSED_R11_EAC = 0x9270;
pub const GL_COMPRESSED_SIGNED_R11_EAC = 0x9271;
pub const GL_COMPRESSED_RG11_EAC = 0x9272;
pub const GL_COMPRESSED_SIGNED_RG11_EAC = 0x9273;
pub const GL_PRIMITIVE_RESTART_FIXED_INDEX = 0x8D69;
pub const GL_ANY_SAMPLES_PASSED_CONSERVATIVE = 0x8D6A;
pub const GL_MAX_ELEMENT_INDEX = 0x8D6B;
pub const GL_COMPUTE_SHADER = 0x91B9;
pub const GL_MAX_COMPUTE_UNIFORM_BLOCKS = 0x91BB;
pub const GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS = 0x91BC;
pub const GL_MAX_COMPUTE_IMAGE_UNIFORMS = 0x91BD;
pub const GL_MAX_COMPUTE_SHARED_MEMORY_SIZE = 0x8262;
pub const GL_MAX_COMPUTE_UNIFORM_COMPONENTS = 0x8263;
pub const GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS = 0x8264;
pub const GL_MAX_COMPUTE_ATOMIC_COUNTERS = 0x8265;
pub const GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS = 0x8266;
pub const GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS = 0x90EB;
pub const GL_MAX_COMPUTE_WORK_GROUP_COUNT = 0x91BE;
pub const GL_MAX_COMPUTE_WORK_GROUP_SIZE = 0x91BF;
pub const GL_COMPUTE_WORK_GROUP_SIZE = 0x8267;
pub const GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER = 0x90EC;
pub const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER = 0x90ED;
pub const GL_DISPATCH_INDIRECT_BUFFER = 0x90EE;
pub const GL_DISPATCH_INDIRECT_BUFFER_BINDING = 0x90EF;
pub const GL_COMPUTE_SHADER_BIT = 0x00000020;
pub const GL_DEBUG_OUTPUT_SYNCHRONOUS = 0x8242;
pub const GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = 0x8243;
pub const GL_DEBUG_CALLBACK_FUNCTION = 0x8244;
pub const GL_DEBUG_CALLBACK_USER_PARAM = 0x8245;
pub const GL_DEBUG_SOURCE_API = 0x8246;
pub const GL_DEBUG_SOURCE_WINDOW_SYSTEM = 0x8247;
pub const GL_DEBUG_SOURCE_SHADER_COMPILER = 0x8248;
pub const GL_DEBUG_SOURCE_THIRD_PARTY = 0x8249;
pub const GL_DEBUG_SOURCE_APPLICATION = 0x824A;
pub const GL_DEBUG_SOURCE_OTHER = 0x824B;
pub const GL_DEBUG_TYPE_ERROR = 0x824C;
pub const GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR = 0x824D;
pub const GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR = 0x824E;
pub const GL_DEBUG_TYPE_PORTABILITY = 0x824F;
pub const GL_DEBUG_TYPE_PERFORMANCE = 0x8250;
pub const GL_DEBUG_TYPE_OTHER = 0x8251;
pub const GL_MAX_DEBUG_MESSAGE_LENGTH = 0x9143;
pub const GL_MAX_DEBUG_LOGGED_MESSAGES = 0x9144;
pub const GL_DEBUG_LOGGED_MESSAGES = 0x9145;
pub const GL_DEBUG_SEVERITY_HIGH = 0x9146;
pub const GL_DEBUG_SEVERITY_MEDIUM = 0x9147;
pub const GL_DEBUG_SEVERITY_LOW = 0x9148;
pub const GL_DEBUG_TYPE_MARKER = 0x8268;
pub const GL_DEBUG_TYPE_PUSH_GROUP = 0x8269;
pub const GL_DEBUG_TYPE_POP_GROUP = 0x826A;
pub const GL_DEBUG_SEVERITY_NOTIFICATION = 0x826B;
pub const GL_MAX_DEBUG_GROUP_STACK_DEPTH = 0x826C;
pub const GL_DEBUG_GROUP_STACK_DEPTH = 0x826D;
pub const GL_BUFFER = 0x82E0;
pub const GL_SHADER = 0x82E1;
pub const GL_PROGRAM = 0x82E2;
pub const GL_QUERY = 0x82E3;
pub const GL_PROGRAM_PIPELINE = 0x82E4;
pub const GL_SAMPLER = 0x82E6;
pub const GL_MAX_LABEL_LENGTH = 0x82E8;
pub const GL_DEBUG_OUTPUT = 0x92E0;
pub const GL_CONTEXT_FLAG_DEBUG_BIT = 0x00000002;
pub const GL_MAX_UNIFORM_LOCATIONS = 0x826E;
pub const GL_FRAMEBUFFER_DEFAULT_WIDTH = 0x9310;
pub const GL_FRAMEBUFFER_DEFAULT_HEIGHT = 0x9311;
pub const GL_FRAMEBUFFER_DEFAULT_LAYERS = 0x9312;
pub const GL_FRAMEBUFFER_DEFAULT_SAMPLES = 0x9313;
pub const GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS = 0x9314;
pub const GL_MAX_FRAMEBUFFER_WIDTH = 0x9315;
pub const GL_MAX_FRAMEBUFFER_HEIGHT = 0x9316;
pub const GL_MAX_FRAMEBUFFER_LAYERS = 0x9317;
pub const GL_MAX_FRAMEBUFFER_SAMPLES = 0x9318;
pub const GL_INTERNALFORMAT_SUPPORTED = 0x826F;
pub const GL_INTERNALFORMAT_PREFERRED = 0x8270;
pub const GL_INTERNALFORMAT_RED_SIZE = 0x8271;
pub const GL_INTERNALFORMAT_GREEN_SIZE = 0x8272;
pub const GL_INTERNALFORMAT_BLUE_SIZE = 0x8273;
pub const GL_INTERNALFORMAT_ALPHA_SIZE = 0x8274;
pub const GL_INTERNALFORMAT_DEPTH_SIZE = 0x8275;
pub const GL_INTERNALFORMAT_STENCIL_SIZE = 0x8276;
pub const GL_INTERNALFORMAT_SHARED_SIZE = 0x8277;
pub const GL_INTERNALFORMAT_RED_TYPE = 0x8278;
pub const GL_INTERNALFORMAT_GREEN_TYPE = 0x8279;
pub const GL_INTERNALFORMAT_BLUE_TYPE = 0x827A;
pub const GL_INTERNALFORMAT_ALPHA_TYPE = 0x827B;
pub const GL_INTERNALFORMAT_DEPTH_TYPE = 0x827C;
pub const GL_INTERNALFORMAT_STENCIL_TYPE = 0x827D;
pub const GL_MAX_WIDTH = 0x827E;
pub const GL_MAX_HEIGHT = 0x827F;
pub const GL_MAX_DEPTH = 0x8280;
pub const GL_MAX_LAYERS = 0x8281;
pub const GL_MAX_COMBINED_DIMENSIONS = 0x8282;
pub const GL_COLOR_COMPONENTS = 0x8283;
pub const GL_DEPTH_COMPONENTS = 0x8284;
pub const GL_STENCIL_COMPONENTS = 0x8285;
pub const GL_COLOR_RENDERABLE = 0x8286;
pub const GL_DEPTH_RENDERABLE = 0x8287;
pub const GL_STENCIL_RENDERABLE = 0x8288;
pub const GL_FRAMEBUFFER_RENDERABLE = 0x8289;
pub const GL_FRAMEBUFFER_RENDERABLE_LAYERED = 0x828A;
pub const GL_FRAMEBUFFER_BLEND = 0x828B;
pub const GL_READ_PIXELS = 0x828C;
pub const GL_READ_PIXELS_FORMAT = 0x828D;
pub const GL_READ_PIXELS_TYPE = 0x828E;
pub const GL_TEXTURE_IMAGE_FORMAT = 0x828F;
pub const GL_TEXTURE_IMAGE_TYPE = 0x8290;
pub const GL_GET_TEXTURE_IMAGE_FORMAT = 0x8291;
pub const GL_GET_TEXTURE_IMAGE_TYPE = 0x8292;
pub const GL_MIPMAP = 0x8293;
pub const GL_MANUAL_GENERATE_MIPMAP = 0x8294;
pub const GL_AUTO_GENERATE_MIPMAP = 0x8295;
pub const GL_COLOR_ENCODING = 0x8296;
pub const GL_SRGB_READ = 0x8297;
pub const GL_SRGB_WRITE = 0x8298;
pub const GL_FILTER = 0x829A;
pub const GL_VERTEX_TEXTURE = 0x829B;
pub const GL_TESS_CONTROL_TEXTURE = 0x829C;
pub const GL_TESS_EVALUATION_TEXTURE = 0x829D;
pub const GL_GEOMETRY_TEXTURE = 0x829E;
pub const GL_FRAGMENT_TEXTURE = 0x829F;
pub const GL_COMPUTE_TEXTURE = 0x82A0;
pub const GL_TEXTURE_SHADOW = 0x82A1;
pub const GL_TEXTURE_GATHER = 0x82A2;
pub const GL_TEXTURE_GATHER_SHADOW = 0x82A3;
pub const GL_SHADER_IMAGE_LOAD = 0x82A4;
pub const GL_SHADER_IMAGE_STORE = 0x82A5;
pub const GL_SHADER_IMAGE_ATOMIC = 0x82A6;
pub const GL_IMAGE_TEXEL_SIZE = 0x82A7;
pub const GL_IMAGE_COMPATIBILITY_CLASS = 0x82A8;
pub const GL_IMAGE_PIXEL_FORMAT = 0x82A9;
pub const GL_IMAGE_PIXEL_TYPE = 0x82AA;
pub const GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST = 0x82AC;
pub const GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST = 0x82AD;
pub const GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE = 0x82AE;
pub const GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE = 0x82AF;
pub const GL_TEXTURE_COMPRESSED_BLOCK_WIDTH = 0x82B1;
pub const GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT = 0x82B2;
pub const GL_TEXTURE_COMPRESSED_BLOCK_SIZE = 0x82B3;
pub const GL_CLEAR_BUFFER = 0x82B4;
pub const GL_TEXTURE_VIEW = 0x82B5;
pub const GL_VIEW_COMPATIBILITY_CLASS = 0x82B6;
pub const GL_FULL_SUPPORT = 0x82B7;
pub const GL_CAVEAT_SUPPORT = 0x82B8;
pub const GL_IMAGE_CLASS_4_X_32 = 0x82B9;
pub const GL_IMAGE_CLASS_2_X_32 = 0x82BA;
pub const GL_IMAGE_CLASS_1_X_32 = 0x82BB;
pub const GL_IMAGE_CLASS_4_X_16 = 0x82BC;
pub const GL_IMAGE_CLASS_2_X_16 = 0x82BD;
pub const GL_IMAGE_CLASS_1_X_16 = 0x82BE;
pub const GL_IMAGE_CLASS_4_X_8 = 0x82BF;
pub const GL_IMAGE_CLASS_2_X_8 = 0x82C0;
pub const GL_IMAGE_CLASS_1_X_8 = 0x82C1;
pub const GL_IMAGE_CLASS_11_11_10 = 0x82C2;
pub const GL_IMAGE_CLASS_10_10_10_2 = 0x82C3;
pub const GL_VIEW_CLASS_128_BITS = 0x82C4;
pub const GL_VIEW_CLASS_96_BITS = 0x82C5;
pub const GL_VIEW_CLASS_64_BITS = 0x82C6;
pub const GL_VIEW_CLASS_48_BITS = 0x82C7;
pub const GL_VIEW_CLASS_32_BITS = 0x82C8;
pub const GL_VIEW_CLASS_24_BITS = 0x82C9;
pub const GL_VIEW_CLASS_16_BITS = 0x82CA;
pub const GL_VIEW_CLASS_8_BITS = 0x82CB;
pub const GL_VIEW_CLASS_S3TC_DXT1_RGB = 0x82CC;
pub const GL_VIEW_CLASS_S3TC_DXT1_RGBA = 0x82CD;
pub const GL_VIEW_CLASS_S3TC_DXT3_RGBA = 0x82CE;
pub const GL_VIEW_CLASS_S3TC_DXT5_RGBA = 0x82CF;
pub const GL_VIEW_CLASS_RGTC1_RED = 0x82D0;
pub const GL_VIEW_CLASS_RGTC2_RG = 0x82D1;
pub const GL_VIEW_CLASS_BPTC_UNORM = 0x82D2;
pub const GL_VIEW_CLASS_BPTC_FLOAT = 0x82D3;
pub const GL_UNIFORM = 0x92E1;
pub const GL_UNIFORM_BLOCK = 0x92E2;
pub const GL_PROGRAM_INPUT = 0x92E3;
pub const GL_PROGRAM_OUTPUT = 0x92E4;
pub const GL_BUFFER_VARIABLE = 0x92E5;
pub const GL_SHADER_STORAGE_BLOCK = 0x92E6;
pub const GL_VERTEX_SUBROUTINE = 0x92E8;
pub const GL_TESS_CONTROL_SUBROUTINE = 0x92E9;
pub const GL_TESS_EVALUATION_SUBROUTINE = 0x92EA;
pub const GL_GEOMETRY_SUBROUTINE = 0x92EB;
pub const GL_FRAGMENT_SUBROUTINE = 0x92EC;
pub const GL_COMPUTE_SUBROUTINE = 0x92ED;
pub const GL_VERTEX_SUBROUTINE_UNIFORM = 0x92EE;
pub const GL_TESS_CONTROL_SUBROUTINE_UNIFORM = 0x92EF;
pub const GL_TESS_EVALUATION_SUBROUTINE_UNIFORM = 0x92F0;
pub const GL_GEOMETRY_SUBROUTINE_UNIFORM = 0x92F1;
pub const GL_FRAGMENT_SUBROUTINE_UNIFORM = 0x92F2;
pub const GL_COMPUTE_SUBROUTINE_UNIFORM = 0x92F3;
pub const GL_TRANSFORM_FEEDBACK_VARYING = 0x92F4;
pub const GL_ACTIVE_RESOURCES = 0x92F5;
pub const GL_MAX_NAME_LENGTH = 0x92F6;
pub const GL_MAX_NUM_ACTIVE_VARIABLES = 0x92F7;
pub const GL_MAX_NUM_COMPATIBLE_SUBROUTINES = 0x92F8;
pub const GL_NAME_LENGTH = 0x92F9;
pub const GL_TYPE = 0x92FA;
pub const GL_ARRAY_SIZE = 0x92FB;
pub const GL_OFFSET = 0x92FC;
pub const GL_BLOCK_INDEX = 0x92FD;
pub const GL_ARRAY_STRIDE = 0x92FE;
pub const GL_MATRIX_STRIDE = 0x92FF;
pub const GL_IS_ROW_MAJOR = 0x9300;
pub const GL_ATOMIC_COUNTER_BUFFER_INDEX = 0x9301;
pub const GL_BUFFER_BINDING = 0x9302;
pub const GL_BUFFER_DATA_SIZE = 0x9303;
pub const GL_NUM_ACTIVE_VARIABLES = 0x9304;
pub const GL_ACTIVE_VARIABLES = 0x9305;
pub const GL_REFERENCED_BY_VERTEX_SHADER = 0x9306;
pub const GL_REFERENCED_BY_TESS_CONTROL_SHADER = 0x9307;
pub const GL_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x9308;
pub const GL_REFERENCED_BY_GEOMETRY_SHADER = 0x9309;
pub const GL_REFERENCED_BY_FRAGMENT_SHADER = 0x930A;
pub const GL_REFERENCED_BY_COMPUTE_SHADER = 0x930B;
pub const GL_TOP_LEVEL_ARRAY_SIZE = 0x930C;
pub const GL_TOP_LEVEL_ARRAY_STRIDE = 0x930D;
pub const GL_LOCATION = 0x930E;
pub const GL_LOCATION_INDEX = 0x930F;
pub const GL_IS_PER_PATCH = 0x92E7;
pub const GL_SHADER_STORAGE_BUFFER = 0x90D2;
pub const GL_SHADER_STORAGE_BUFFER_BINDING = 0x90D3;
pub const GL_SHADER_STORAGE_BUFFER_START = 0x90D4;
pub const GL_SHADER_STORAGE_BUFFER_SIZE = 0x90D5;
pub const GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS = 0x90D6;
pub const GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS = 0x90D7;
pub const GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS = 0x90D8;
pub const GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS = 0x90D9;
pub const GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS = 0x90DA;
pub const GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS = 0x90DB;
pub const GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS = 0x90DC;
pub const GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS = 0x90DD;
pub const GL_MAX_SHADER_STORAGE_BLOCK_SIZE = 0x90DE;
pub const GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT = 0x90DF;
pub const GL_SHADER_STORAGE_BARRIER_BIT = 0x00002000;
pub const GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES = 0x8F39;
pub const GL_DEPTH_STENCIL_TEXTURE_MODE = 0x90EA;
pub const GL_TEXTURE_BUFFER_OFFSET = 0x919D;
pub const GL_TEXTURE_BUFFER_SIZE = 0x919E;
pub const GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT = 0x919F;
pub const GL_TEXTURE_VIEW_MIN_LEVEL = 0x82DB;
pub const GL_TEXTURE_VIEW_NUM_LEVELS = 0x82DC;
pub const GL_TEXTURE_VIEW_MIN_LAYER = 0x82DD;
pub const GL_TEXTURE_VIEW_NUM_LAYERS = 0x82DE;
pub const GL_TEXTURE_IMMUTABLE_LEVELS = 0x82DF;
pub const GL_VERTEX_ATTRIB_BINDING = 0x82D4;
pub const GL_VERTEX_ATTRIB_RELATIVE_OFFSET = 0x82D5;
pub const GL_VERTEX_BINDING_DIVISOR = 0x82D6;
pub const GL_VERTEX_BINDING_OFFSET = 0x82D7;
pub const GL_VERTEX_BINDING_STRIDE = 0x82D8;
pub const GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET = 0x82D9;
pub const GL_MAX_VERTEX_ATTRIB_BINDINGS = 0x82DA;
pub const GL_VERTEX_BINDING_BUFFER = 0x8F4F;
pub const GL_DISPLAY_LIST = 0x82E7;
pub const GL_MAX_VERTEX_ATTRIB_STRIDE = 0x82E5;
pub const GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED = 0x8221;
pub const GL_TEXTURE_BUFFER_BINDING = 0x8C2A;
pub const GL_MAP_PERSISTENT_BIT = 0x0040;
pub const GL_MAP_COHERENT_BIT = 0x0080;
pub const GL_DYNAMIC_STORAGE_BIT = 0x0100;
pub const GL_CLIENT_STORAGE_BIT = 0x0200;
pub const GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT = 0x00004000;
pub const GL_BUFFER_IMMUTABLE_STORAGE = 0x821F;
pub const GL_BUFFER_STORAGE_FLAGS = 0x8220;
pub const GL_CLEAR_TEXTURE = 0x9365;
pub const GL_LOCATION_COMPONENT = 0x934A;
pub const GL_TRANSFORM_FEEDBACK_BUFFER_INDEX = 0x934B;
pub const GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE = 0x934C;
pub const GL_QUERY_BUFFER = 0x9192;
pub const GL_QUERY_BUFFER_BARRIER_BIT = 0x00008000;
pub const GL_QUERY_BUFFER_BINDING = 0x9193;
pub const GL_QUERY_RESULT_NO_WAIT = 0x9194;
pub const GL_MIRROR_CLAMP_TO_EDGE = 0x8743;
pub const GL_CONTEXT_LOST = 0x0507;
pub const GL_NEGATIVE_ONE_TO_ONE = 0x935E;
pub const GL_ZERO_TO_ONE = 0x935F;
pub const GL_CLIP_ORIGIN = 0x935C;
pub const GL_CLIP_DEPTH_MODE = 0x935D;
pub const GL_QUERY_WAIT_INVERTED = 0x8E17;
pub const GL_QUERY_NO_WAIT_INVERTED = 0x8E18;
pub const GL_QUERY_BY_REGION_WAIT_INVERTED = 0x8E19;
pub const GL_QUERY_BY_REGION_NO_WAIT_INVERTED = 0x8E1A;
pub const GL_MAX_CULL_DISTANCES = 0x82F9;
pub const GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES = 0x82FA;
pub const GL_TEXTURE_TARGET = 0x1006;
pub const GL_QUERY_TARGET = 0x82EA;
pub const GL_GUILTY_CONTEXT_RESET = 0x8253;
pub const GL_INNOCENT_CONTEXT_RESET = 0x8254;
pub const GL_UNKNOWN_CONTEXT_RESET = 0x8255;
pub const GL_RESET_NOTIFICATION_STRATEGY = 0x8256;
pub const GL_LOSE_CONTEXT_ON_RESET = 0x8252;
pub const GL_NO_RESET_NOTIFICATION = 0x8261;
pub const GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT = 0x00000004;
pub const GL_COLOR_TABLE = 0x80D0;
pub const GL_POST_CONVOLUTION_COLOR_TABLE = 0x80D1;
pub const GL_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D2;
pub const GL_PROXY_COLOR_TABLE = 0x80D3;
pub const GL_PROXY_POST_CONVOLUTION_COLOR_TABLE = 0x80D4;
pub const GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D5;
pub const GL_CONVOLUTION_1D = 0x8010;
pub const GL_CONVOLUTION_2D = 0x8011;
pub const GL_SEPARABLE_2D = 0x8012;
pub const GL_HISTOGRAM = 0x8024;
pub const GL_PROXY_HISTOGRAM = 0x8025;
pub const GL_MINMAX = 0x802E;
pub const GL_CONTEXT_RELEASE_BEHAVIOR = 0x82FB;
pub const GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH = 0x82FC;
pub const GL_SHADER_BINARY_FORMAT_SPIR_V = 0x9551;
pub const GL_SPIR_V_BINARY = 0x9552;
pub const GL_PARAMETER_BUFFER = 0x80EE;
pub const GL_PARAMETER_BUFFER_BINDING = 0x80EF;
pub const GL_CONTEXT_FLAG_NO_ERROR_BIT = 0x00000008;
pub const GL_VERTICES_SUBMITTED = 0x82EE;
pub const GL_PRIMITIVES_SUBMITTED = 0x82EF;
pub const GL_VERTEX_SHADER_INVOCATIONS = 0x82F0;
pub const GL_TESS_CONTROL_SHADER_PATCHES = 0x82F1;
pub const GL_TESS_EVALUATION_SHADER_INVOCATIONS = 0x82F2;
pub const GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED = 0x82F3;
pub const GL_FRAGMENT_SHADER_INVOCATIONS = 0x82F4;
pub const GL_COMPUTE_SHADER_INVOCATIONS = 0x82F5;
pub const GL_CLIPPING_INPUT_PRIMITIVES = 0x82F6;
pub const GL_CLIPPING_OUTPUT_PRIMITIVES = 0x82F7;
pub const GL_POLYGON_OFFSET_CLAMP = 0x8E1B;
pub const GL_SPIR_V_EXTENSIONS = 0x9553;
pub const GL_NUM_SPIR_V_EXTENSIONS = 0x9554;
pub const GL_TEXTURE_MAX_ANISOTROPY = 0x84FE;
pub const GL_MAX_TEXTURE_MAX_ANISOTROPY = 0x84FF;
pub const GL_TRANSFORM_FEEDBACK_OVERFLOW = 0x82EC;
pub const GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW = 0x82ED;
pub const GL_VERSION_ES_CL_1_0 = 1;
pub const GL_VERSION_ES_CM_1_1 = 1;
pub const GL_VERSION_ES_CL_1_1 = 1;
pub const GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8CD9;
pub const GL_MULTISAMPLE_LINE_WIDTH_RANGE = 0x9381;
pub const GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY = 0x9382;
pub const GL_MULTIPLY = 0x9294;
pub const GL_SCREEN = 0x9295;
pub const GL_OVERLAY = 0x9296;
pub const GL_DARKEN = 0x9297;
pub const GL_LIGHTEN = 0x9298;
pub const GL_COLORDODGE = 0x9299;
pub const GL_COLORBURN = 0x929A;
pub const GL_HARDLIGHT = 0x929B;
pub const GL_SOFTLIGHT = 0x929C;
pub const GL_DIFFERENCE = 0x929E;
pub const GL_EXCLUSION = 0x92A0;
pub const GL_HSL_HUE = 0x92AD;
pub const GL_HSL_SATURATION = 0x92AE;
pub const GL_HSL_COLOR = 0x92AF;
pub const GL_HSL_LUMINOSITY = 0x92B0;
pub const GL_PRIMITIVE_BOUNDING_BOX = 0x92BE;
pub const GL_COMPRESSED_RGBA_ASTC_4x4 = 0x93B0;
pub const GL_COMPRESSED_RGBA_ASTC_5x4 = 0x93B1;
pub const GL_COMPRESSED_RGBA_ASTC_5x5 = 0x93B2;
pub const GL_COMPRESSED_RGBA_ASTC_6x5 = 0x93B3;
pub const GL_COMPRESSED_RGBA_ASTC_6x6 = 0x93B4;
pub const GL_COMPRESSED_RGBA_ASTC_8x5 = 0x93B5;
pub const GL_COMPRESSED_RGBA_ASTC_8x6 = 0x93B6;
pub const GL_COMPRESSED_RGBA_ASTC_8x8 = 0x93B7;
pub const GL_COMPRESSED_RGBA_ASTC_10x5 = 0x93B8;
pub const GL_COMPRESSED_RGBA_ASTC_10x6 = 0x93B9;
pub const GL_COMPRESSED_RGBA_ASTC_10x8 = 0x93BA;
pub const GL_COMPRESSED_RGBA_ASTC_10x10 = 0x93BB;
pub const GL_COMPRESSED_RGBA_ASTC_12x10 = 0x93BC;
pub const GL_COMPRESSED_RGBA_ASTC_12x12 = 0x93BD;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4 = 0x93D0;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4 = 0x93D1;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5 = 0x93D2;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5 = 0x93D3;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6 = 0x93D4;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5 = 0x93D5;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6 = 0x93D6;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8 = 0x93D7;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5 = 0x93D8;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6 = 0x93D9;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8 = 0x93DA;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10 = 0x93DB;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10 = 0x93DC;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12 = 0x93DD;
pub const GL_CONTEXT_ROBUST_ACCESS = 0x90F3;
pub const GL_VERSION_1_0 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCullFace.xhtml
pub inline fn glCullFace(mode: GLenum) void {
    return glad_glCullFace.?(mode);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFrontFace.xhtml
pub inline fn glFrontFace(mode: GLenum) void {
    return glad_glFrontFace.?(mode);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glHint.xhtml
pub inline fn glHint(target: GLenum, mode: GLenum) void {
    return glad_glHint.?(target, mode);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLineWidth.xhtml
pub inline fn glLineWidth(width: GLfloat) void {
    return glad_glLineWidth.?(width);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPointSize.xhtml
pub inline fn glPointSize(size: GLfloat) void {
    return glad_glPointSize.?(size);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPolygonMode.xhtml
pub inline fn glPolygonMode(face: GLenum, mode: GLenum) void {
    return glad_glPolygonMode.?(face, mode);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glScissor.xhtml
pub inline fn glScissor(x: GLint, y: GLint, width: GLsizei, height: GLsizei) void {
    return glad_glScissor.?(x, y, width, height);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexParameter.xhtml
pub inline fn glTexParameterf(target: GLenum, pnam: GLenum, param: GLfloat) void {
    return glad_glTexParameterf.?(target, pnam, param);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexParameter.xhtml
pub inline fn glTexParameterfv(target: GLenum, pname: GLenum, param: [*c]const GLfloat) void {
    return glad_glTexParameterfv.?(target, pname, param);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexParameter.xhtml
pub inline fn glTexParameteri(target: GLenum, pname: GLenum, param: GLint) void {
    return glad_glTexParameteri.?(target, pname, param);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexParameter.xhtml
pub inline fn glTexParameteriv(target: GLenum, pname: GLenum, param: [*c]const GLint) void {
    return glad_glTexParameteriv.?(target, pname, param);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexImage1D.xhtml
pub inline fn glTexImage1D(target: GLenum, level: GLint, internalFormat: GLint, width: GLsizei, border: GLint, format: GLenum, @"type": GLenum, data: ?*const anyopaque) void {
    return glad_glTexImage1D.?(target, level, internalFormat, width, border, format, @"type", data);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexImage2D.xhtml
pub inline fn glTexImage2D(target: GLenum, level: GLint, internalFormat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, @"type": GLenum, data: ?*const anyopaque) void {
    return glad_glTexImage2D.?(target, level, internalFormat, width, height, border, format, @"type", data);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawBuffer.xhtml
pub inline fn glDrawBuffer(buf: GLenum) void {
    return glad_glDrawBuffer.?(buf);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClear.xhtml
pub inline fn glClear(mask: GLbitfield) void {
    return glad_glClear.?(mask);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearColor.xhtml
pub inline fn glClearColor(red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat) void {
    return glad_glClearColor.?(red, green, blue, alpha);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearStencil.xhtml
pub inline fn glClearStencil(s: GLint) void {
    return glad_glClearStencil.?(s);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearDepth.xhtml
pub inline fn glClearDepth(depth: GLdouble) void {
    return glad_glClearDepth.?(depth);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glStencilMask.xhtml
pub inline fn glStencilMask(mask: GLuint) void {
    return glad_glStencilMask.?(mask);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorMask.xhtml
pub inline fn glColorMask(red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean) void {
    return glad_glColorMask.?(red, green, blue, alpha);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDepthMask.xhtml
pub inline fn glDepthMask(flag: GLboolean) void {
    return glad_glDepthMask.?(flag);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEnable.xhtml
pub inline fn glDisable(cap: GLenum) void {
    return glad_glDisable.?(cap);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEnable.xhtml
pub inline fn glEnable(cap: GLenum) void {
    return glad_glEnable.?(cap);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFinish.xhtml
pub inline fn glFinish() void {
    return glad_glFinish.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFlush.xhtml
pub inline fn glFlush() void {
    return glad_glFlush.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendFunc.xhtml
pub inline fn glBlendFunc(sfactor: GLenum, dfactor: GLenum) void {
    return glad_glBlendFunc.?(sfactor, dfactor);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLogicOp.xhtml
pub inline fn glLogicOp(opcode: GLenum) void {
    return glad_glLogicOp.?(opcode);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glStencilFunc.xhtml
pub inline fn glStencilFunc(func: GLenum, ref: GLint, mask: GLuint) void {
    return glad_glStencilFunc.?(func, ref, mask);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glStencilOp.xhtml
pub inline fn glStencilOp(sfail: GLenum, dpfail: GLenum, dppass: GLenum) void {
    return glad_glStencilOp.?(sfail, dpfail, dppass);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDepthFunc.xhtml
pub inline fn glDepthFunc(func: GLenum) void {
    return glad_glDepthFunc.?(func);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPixelStore.xhtml
pub inline fn glPixelStoref(pname: GLenum, param: GLfloat) void {
    return glad_glPixelStoref.?(pname, param);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPixelStore.xhtml
pub inline fn glPixelStorei(pname: GLenum, param: GLint) void {
    return glad_glPixelStorei.?(pname, param);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReadBuffer.xhtml
pub inline fn glReadBuffer(mode: GLenum) void {
    return glad_glReadBuffer.?(mode);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReadPixels.xhtml
pub inline fn glReadPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, @"type": GLenum, data: ?*anyopaque) void {
    return glad_glReadPixels.?(x, y, width, height, format, @"type", data);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGet.xhtml
pub inline fn glGetBooleanv(pname: GLenum, data: [*c]GLboolean) void {
    return glad_glGetBooleanv.?(pname, data);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGet.xhtml
pub inline fn glGetDoublev(pname: GLenum, data: [*c]GLdouble) void {
    return glad_glGetDoublev.?(pname, data);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetError.xhtml
pub inline fn glGetError() GLenum {
    return glad_glGetError.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFloatv.xhtml
pub inline fn glGetFloatv(pname: GLenum, data: [*c]GLfloat) void {
    return glad_glGetFloatv.?(pname, data);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetIntegerv.xhtml
pub inline fn glGetIntegerv(pname: GLenum, data: [*c]GLint) void {
    return glad_glGetIntegerv.?(pname, data);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetString.xhtml
pub inline fn glGetString(pname: GLenum) [*c]const GLubyte {
    return glad_glGetString.?(pname);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexImage.xhtml
pub inline fn glGetTexImage(target: GLenum, level: GLint, format: GLenum, @"type": GLenum, pixels: ?*anyopaque) void {
    return glad_glGetTexImage.?(target, level, format, @"type", pixels);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexParameter.xhtml
pub inline fn glGetTexParameterfv(target: GLenum, pname: GLenum, params: [*c]GLfloat) void {
    return glad_glGetTexParameterfv.?(target, pname, params);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexParameter.xhtml
pub inline fn glGetTexParameteriv(target: GLenum, pname: GLenum, params: [*c]GLint) void {
    return glad_glGetTexParameteriv.?(target, pname, params);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexLevelParameter.xhtml
pub inline fn glGetTexLevelParameterfv(target: GLenum, level: GLint, pname: GLenum, params: [*c]GLfloat) void {
    return glad_glGetTexLevelParameterfv.?(target, level, pname, params);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexLevelParameter.xhtml
pub inline fn glGetTexLevelParameteriv(target: GLenum, level: GLint, pname: GLenum, params: [*c]GLint) void {
    return glad_glGetTexLevelParameteriv.?(target, level, pname, params);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsEnabled.xhtml
pub inline fn glIsEnabled(cap: GLenum) GLboolean {
    return glad_glIsEnabled.?(cap);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDepthRange.xhtml
pub inline fn glDepthRange(nearVal: GLdouble, farVal: GLdouble) void {
    return glad_glDepthRange.?(nearVal, farVal);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glViewport.xhtml
pub inline fn glViewport(x: GLint, y: GLint, width: GLsizei, height: GLsizei) void {
    return glad_glViewport.?(x, y, width, height);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glNewList.xml
pub inline fn glNewList(list: GLuint, mode: GLenum) void {
    return glad_glNewList.?(list, mode);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glEndList.xml
pub inline fn glEndList() void {
    return glad_glEndList.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glCallList.xml
pub inline fn glCallList(list: GLuint) void {
    return glad_glCallList.?(list);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glCallLists.xml
pub inline fn glCallLists(n: GLsizei, @"type": GLenum, lists: ?*const anyopaque) void {
    return glad_glCallLists.?(n, @"type", lists);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glDeleteLists.xml
pub inline fn glDeleteLists(list: GLuint, range: GLsizei) void {
    return glad_glDeleteLists.?(list, range);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glGenLists.xml
pub inline fn glGenLists(range: GLsizei) GLuint {
    return glad_glGenLists.?(range);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glListBase.xml
pub inline fn glListBase(base: GLuint) void {
    return glad_glListBase.?(base);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glBegin.xml
pub inline fn glBegin(mode: GLenum) void {
    return glad_glBegin.?(mode);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glBitmap.xml
pub inline fn glBitmap(width: GLsizei, height: GLsizei, xorig: GLfloat, yorig: GLfloat, xmove: GLfloat, ymove: GLfloat, bitmap: [*c]const GLubyte) void {
    return glad_glBitmap.?(width, height, xorig, yorig, xmove, ymove, bitmap);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor3b(red: GLbyte, green: GLbyte, blue: GLbyte) void {
    return glad_glColor3b.?(red, green, blue);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor3bv(v: [*c]const GLbyte) void {
    return glad_glColor3bv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor3d(red: GLdouble, green: GLdouble, blue: GLdouble) void {
    return glad_glColor3d.?(red, green, blue);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor3dv(v: [*c]const GLdouble) void {
    return glad_glColor3dv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor3f(red: GLfloat, green: GLfloat, blue: GLfloat) void {
    return glad_glColor3f.?(red, green, blue);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor3fv(v: [*c]const GLfloat) void {
    return glad_glColor3fv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor3i(red: GLint, green: GLint, blue: GLint) void {
    return glad_glColor3i.?(red, green, blue);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor3iv(v: [*c]const GLint) void {
    return glad_glColor3iv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor3s(red: GLshort, green: GLshort, blue: GLshort) void {
    return glad_glColor3s.?(red, green, blue);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor3sv(v: [*c]const GLshort) void {
    return glad_glColor3sv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor3ub(red: GLubyte, green: GLubyte, blue: GLubyte) void {
    return glad_glColor3ub.?(red, green, blue);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor3ubv(v: [*c]const GLubyte) void {
    return glad_glColor3ubv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor3ui(red: GLuint, green: GLuint, blue: GLuint) void {
    return glad_glColor3ui.?(red, green, blue);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor3uiv(v: [*c]const GLuint) void {
    return glad_glColor3uiv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor3us(red: GLushort, green: GLushort, blue: GLushort) void {
    return glad_glColor3us.?(red, green, blue);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor3usv(v: [*c]const GLushort) void {
    return glad_glColor3usv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor4b(red: GLbyte, green: GLbyte, blue: GLbyte, alpha: GLbyte) void {
    return glad_glColor4b.?(red, green, blue, alpha);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor4bv(v: [*c]const GLbyte) void {
    return glad_glColor4bv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor4d(red: GLdouble, green: GLdouble, blue: GLdouble, alpha: GLdouble) void {
    return glad_glColor4d.?(red, green, blue, alpha);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor4dv(v: [*c]const GLdouble) void {
    return glad_glColor4dv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor4f(red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat) void {
    return glad_glColor4f.?(red, green, blue, alpha);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor4fv(v: [*c]const GLfloat) void {
    return glad_glColor4fv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor4i(red: GLint, green: GLint, blue: GLint, alpha: GLint) void {
    return glad_glColor4i.?(red, green, blue, alpha);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor4iv(v: [*c]const GLint) void {
    return glad_glColor4iv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor4s(red: GLshort, green: GLshort, blue: GLshort, alpha: GLshort) void {
    return glad_glColor4s.?(red, green, blue, alpha);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor4sv(v: [*c]const GLshort) void {
    return glad_glColor4sv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor4ub(red: GLubyte, green: GLubyte, blue: GLubyte, alpha: GLubyte) void {
    return glad_glColor4ub.?(red, green, blue, alpha);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor4ubv(v: [*c]const GLubyte) void {
    return glad_glColor4ubv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor4ui(red: GLuint, green: GLuint, blue: GLuint, alpha: GLuint) void {
    return glad_glColor4ui.?(red, green, blue, alpha);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor4uiv(v: [*c]const GLuint) void {
    return glad_glColor4uiv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor4us(red: GLushort, green: GLushort, blue: GLushort, alpha: GLushort) void {
    return glad_glColor4us.?(red, green, blue, alpha);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glColor.xml
pub inline fn glColor4usv(v: [*c]const GLushort) void {
    return glad_glColor4usv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glEdgeFlag.xml
pub inline fn glEdgeFlag(flag: GLboolean) void {
    return glad_glEdgeFlag.?(flag);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glEdgeFlag.xml
pub inline fn glEdgeFlagv(flag: [*c]const GLboolean) void {
    return glad_glEdgeFlagv.?(flag);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glEnd.xml
pub inline fn glEnd() void {
    return glad_glEnd.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glIndex.xml
pub inline fn glIndexd(c: GLdouble) void {
    return glad_glIndexd.?(c);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glIndex.xml
pub inline fn glIndexdv(c: [*c]const GLdouble) void {
    return glad_glIndexdv.?(c);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glIndex.xml
pub inline fn glIndexf(c: GLfloat) void {
    return glad_glIndexf.?(c);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glIndex.xml
pub inline fn glIndexfv(c: [*c]const GLfloat) void {
    return glad_glIndexfv.?(c);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glIndex.xml
pub inline fn glIndexi(c: GLint) void {
    return glad_glIndexi.?(c);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glIndex.xml
pub inline fn glIndexiv(c: [*c]const GLint) void {
    return glad_glIndexiv.?(c);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glIndex.xml
pub inline fn glIndexs(c: GLshort) void {
    return glad_glIndexs.?(c);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glIndex.xml
pub inline fn glIndexsv(c: [*c]const GLshort) void {
    return glad_glIndexsv.?(c);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glNormal.xml
pub inline fn glNormal3b(nx: GLbyte, ny: GLbyte, nz: GLbyte) void {
    return glad_glNormal3b.?(nx, ny, nz);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glNormal.xml
pub inline fn glNormal3bv(v: [*c]const GLbyte) void {
    return glad_glNormal3bv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glNormal.xml
pub inline fn glNormal3d(nx: GLdouble, ny: GLdouble, nz: GLdouble) void {
    return glad_glNormal3d.?(nx, ny, nz);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glNormal.xml
pub inline fn glNormal3dv(v: [*c]const GLdouble) void {
    return glad_glNormal3dv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glNormal.xml
pub inline fn glNormal3f(nx: GLfloat, ny: GLfloat, nz: GLfloat) void {
    return glad_glNormal3f.?(nx, ny, nz);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glNormal.xml
pub inline fn glNormal3fv(v: [*c]const GLfloat) void {
    return glad_glNormal3fv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glNormal.xml
pub inline fn glNormal3i(nx: GLint, ny: GLint, nz: GLint) void {
    return glad_glNormal3i.?(nx, ny, nz);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glNormal.xml
pub inline fn glNormal3iv(v: [*c]const GLint) void {
    return glad_glNormal3iv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glNormal.xml
pub inline fn glNormal3s(nx: GLshort, ny: GLshort, nz: GLshort) void {
    return glad_glNormal3s.?(nx, ny, nz);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glNormal.xml
pub inline fn glNormal3sv(v: [*c]const GLshort) void {
    return glad_glNormal3sv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRasterPos.xml
pub inline fn glRasterPos2d(x: GLdouble, y: GLdouble) void {
    return glad_glRasterPos2d.?(x, y);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRasterPos.xml
pub inline fn glRasterPos2dv(v: [*c]const GLdouble) void {
    return glad_glRasterPos2dv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRasterPos.xml
pub inline fn glRasterPos2f(x: GLfloat, y: GLfloat) void {
    return glad_glRasterPos2f.?(x, y);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRasterPos.xml
pub inline fn glRasterPos2fv(v: [*c]const GLfloat) void {
    return glad_glRasterPos2fv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRasterPos.xml
pub inline fn glRasterPos2i(x: GLint, y: GLint) void {
    return glad_glRasterPos2i.?(x, y);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRasterPos.xml
pub inline fn glRasterPos2iv(v: [*c]const GLint) void {
    return glad_glRasterPos2iv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRasterPos.xml
pub inline fn glRasterPos2s(x: GLshort, y: GLshort) void {
    return glad_glRasterPos2s.?(x, y);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRasterPos.xml
pub inline fn glRasterPos2sv(v: [*c]const GLshort) void {
    return glad_glRasterPos2sv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRasterPos.xml
pub inline fn glRasterPos3d(x: GLdouble, y: GLdouble, z: GLdouble) void {
    return glad_glRasterPos3d.?(x, y, z);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRasterPos.xml
pub inline fn glRasterPos3dv(v: [*c]const GLdouble) void {
    return glad_glRasterPos3dv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRasterPos.xml
pub inline fn glRasterPos3f(x: GLfloat, y: GLfloat, z: GLfloat) void {
    return glad_glRasterPos3f.?(x, y, z);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRasterPos.xml
pub inline fn glRasterPos3fv(v: [*c]const GLfloat) void {
    return glad_glRasterPos3fv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRasterPos.xml
pub inline fn glRasterPos3i(x: GLint, y: GLint, z: GLint) void {
    return glad_glRasterPos3i.?(x, y, z);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRasterPos.xml
pub inline fn glRasterPos3iv(v: [*c]const GLint) void {
    return glad_glRasterPos3iv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRasterPos.xml
pub inline fn glRasterPos3s(x: GLshort, y: GLshort, z: GLshort) void {
    return glad_glRasterPos3s.?(x, y, z);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRasterPos.xml
pub inline fn glRasterPos3sv(v: [*c]const GLshort) void {
    return glad_glRasterPos3sv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRasterPos.xml
pub inline fn glRasterPos4d(x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) void {
    return glad_glRasterPos4d.?(x, y, z, w);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRasterPos.xml
pub inline fn glRasterPos4dv(v: [*c]const GLdouble) void {
    return glad_glRasterPos4dv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRasterPos.xml
pub inline fn glRasterPos4f(x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) void {
    return glad_glRasterPos4f.?(x, y, z, w);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRasterPos.xml
pub inline fn glRasterPos4fv(v: [*c]const GLfloat) void {
    return glad_glRasterPos4fv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRasterPos.xml
pub inline fn glRasterPos4i(x: GLint, y: GLint, z: GLint, w: GLint) void {
    return glad_glRasterPos4i.?(x, y, z, w);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRasterPos.xml
pub inline fn glRasterPos4iv(v: [*c]const GLint) void {
    return glad_glRasterPos4iv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRasterPos.xml
pub inline fn glRasterPos4s(x: GLshort, y: GLshort, z: GLshort, w: GLshort) void {
    return glad_glRasterPos4s.?(x, y, z, w);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRasterPos.xml
pub inline fn glRasterPos4sv(v: [*c]const GLshort) void {
    return glad_glRasterPos4sv.?(v);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRect.xml
pub inline fn glRectd(x1: GLdouble, y1: GLdouble, x2: GLdouble, y2: GLdouble) void {
    return glad_glRectd.?(x1, y1, x2, y2);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRect.xml
pub inline fn glRectdv(v1: [*c]const GLdouble, v2: [*c]const GLdouble) void {
    return glad_glRectdv.?(v1, v2);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRect.xml
pub inline fn glRectf(x1: GLfloat, y1: GLfloat, x2: GLfloat, y2: GLfloat) void {
    return glad_glRectf.?(x1, y1, x2, y2);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRect.xml
pub inline fn glRectfv(v1: [*c]const GLfloat, v2: [*c]const GLfloat) void {
    return glad_glRectfv.?(v1, v2);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRect.xml
pub inline fn glRecti(x1: GLint, y1: GLint, x2: GLint, y2: GLint) void {
    return glad_glRecti.?(x1, y1, x2, y2);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRect.xml
pub inline fn glRectiv(v1: [*c]const GLint, v2: [*c]const GLint) void {
    return glad_glRectiv.?(v1, v2);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRect.xml
pub inline fn glRects(x1: GLshort, y1: GLshort, x2: GLshort, y2: GLshort) void {
    return glad_glRects.?(x1, y1, x2, y2);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glRect.xml
pub inline fn glRectsv(v1: [*c]const GLshort, v2: [*c]const GLshort) void {
    return glad_glRectsv.?(v1, v2);
}
// TODO: i'm lazy, finish that
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord1d.xhtml
pub inline fn glTexCoord1d(arg_307: GLdouble) void {
    return glad_glTexCoord1d.?(arg_307);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord1dv.xhtml
pub inline fn glTexCoord1dv(arg_308: [*c]const GLdouble) void {
    return glad_glTexCoord1dv.?(arg_308);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord1f.xhtml
pub inline fn glTexCoord1f(arg_309: GLfloat) void {
    return glad_glTexCoord1f.?(arg_309);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord1fv.xhtml
pub inline fn glTexCoord1fv(arg_310: [*c]const GLfloat) void {
    return glad_glTexCoord1fv.?(arg_310);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord1i.xhtml
pub inline fn glTexCoord1i(arg_311: GLint) void {
    return glad_glTexCoord1i.?(arg_311);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord1iv.xhtml
pub inline fn glTexCoord1iv(arg_312: [*c]const GLint) void {
    return glad_glTexCoord1iv.?(arg_312);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord1s.xhtml
pub inline fn glTexCoord1s(arg_313: GLshort) void {
    return glad_glTexCoord1s.?(arg_313);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord1sv.xhtml
pub inline fn glTexCoord1sv(arg_314: [*c]const GLshort) void {
    return glad_glTexCoord1sv.?(arg_314);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord2d.xhtml
pub inline fn glTexCoord2d(arg_315: GLdouble, arg_316: GLdouble) void {
    return glad_glTexCoord2d.?(arg_315, arg_316);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord2dv.xhtml
pub inline fn glTexCoord2dv(arg_317: [*c]const GLdouble) void {
    return glad_glTexCoord2dv.?(arg_317);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord2f.xhtml
pub inline fn glTexCoord2f(arg_318: GLfloat, arg_319: GLfloat) void {
    return glad_glTexCoord2f.?(arg_318, arg_319);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord2fv.xhtml
pub inline fn glTexCoord2fv(arg_320: [*c]const GLfloat) void {
    return glad_glTexCoord2fv.?(arg_320);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord2i.xhtml
pub inline fn glTexCoord2i(arg_321: GLint, arg_322: GLint) void {
    return glad_glTexCoord2i.?(arg_321, arg_322);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord2iv.xhtml
pub inline fn glTexCoord2iv(arg_323: [*c]const GLint) void {
    return glad_glTexCoord2iv.?(arg_323);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord2s.xhtml
pub inline fn glTexCoord2s(arg_324: GLshort, arg_325: GLshort) void {
    return glad_glTexCoord2s.?(arg_324, arg_325);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord2sv.xhtml
pub inline fn glTexCoord2sv(arg_326: [*c]const GLshort) void {
    return glad_glTexCoord2sv.?(arg_326);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord3d.xhtml
pub inline fn glTexCoord3d(arg_327: GLdouble, arg_328: GLdouble, arg_329: GLdouble) void {
    return glad_glTexCoord3d.?(arg_327, arg_328, arg_329);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord3dv.xhtml
pub inline fn glTexCoord3dv(arg_330: [*c]const GLdouble) void {
    return glad_glTexCoord3dv.?(arg_330);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord3f.xhtml
pub inline fn glTexCoord3f(arg_331: GLfloat, arg_332: GLfloat, arg_333: GLfloat) void {
    return glad_glTexCoord3f.?(arg_331, arg_332, arg_333);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord3fv.xhtml
pub inline fn glTexCoord3fv(arg_334: [*c]const GLfloat) void {
    return glad_glTexCoord3fv.?(arg_334);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord3i.xhtml
pub inline fn glTexCoord3i(arg_335: GLint, arg_336: GLint, arg_337: GLint) void {
    return glad_glTexCoord3i.?(arg_335, arg_336, arg_337);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord3iv.xhtml
pub inline fn glTexCoord3iv(arg_338: [*c]const GLint) void {
    return glad_glTexCoord3iv.?(arg_338);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord3s.xhtml
pub inline fn glTexCoord3s(arg_339: GLshort, arg_340: GLshort, arg_341: GLshort) void {
    return glad_glTexCoord3s.?(arg_339, arg_340, arg_341);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord3sv.xhtml
pub inline fn glTexCoord3sv(arg_342: [*c]const GLshort) void {
    return glad_glTexCoord3sv.?(arg_342);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord4d.xhtml
pub inline fn glTexCoord4d(arg_343: GLdouble, arg_344: GLdouble, arg_345: GLdouble, arg_346: GLdouble) void {
    return glad_glTexCoord4d.?(arg_343, arg_344, arg_345, arg_346);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord4dv.xhtml
pub inline fn glTexCoord4dv(arg_347: [*c]const GLdouble) void {
    return glad_glTexCoord4dv.?(arg_347);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord4f.xhtml
pub inline fn glTexCoord4f(arg_348: GLfloat, arg_349: GLfloat, arg_350: GLfloat, arg_351: GLfloat) void {
    return glad_glTexCoord4f.?(arg_348, arg_349, arg_350, arg_351);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord4fv.xhtml
pub inline fn glTexCoord4fv(arg_352: [*c]const GLfloat) void {
    return glad_glTexCoord4fv.?(arg_352);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord4i.xhtml
pub inline fn glTexCoord4i(arg_353: GLint, arg_354: GLint, arg_355: GLint, arg_356: GLint) void {
    return glad_glTexCoord4i.?(arg_353, arg_354, arg_355, arg_356);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord4iv.xhtml
pub inline fn glTexCoord4iv(arg_357: [*c]const GLint) void {
    return glad_glTexCoord4iv.?(arg_357);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord4s.xhtml
pub inline fn glTexCoord4s(arg_358: GLshort, arg_359: GLshort, arg_360: GLshort, arg_361: GLshort) void {
    return glad_glTexCoord4s.?(arg_358, arg_359, arg_360, arg_361);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord4sv.xhtml
pub inline fn glTexCoord4sv(arg_362: [*c]const GLshort) void {
    return glad_glTexCoord4sv.?(arg_362);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex2d.xhtml
pub inline fn glVertex2d(arg_363: GLdouble, arg_364: GLdouble) void {
    return glad_glVertex2d.?(arg_363, arg_364);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex2dv.xhtml
pub inline fn glVertex2dv(arg_365: [*c]const GLdouble) void {
    return glad_glVertex2dv.?(arg_365);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex2f.xhtml
pub inline fn glVertex2f(arg_366: GLfloat, arg_367: GLfloat) void {
    return glad_glVertex2f.?(arg_366, arg_367);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex2fv.xhtml
pub inline fn glVertex2fv(arg_368: [*c]const GLfloat) void {
    return glad_glVertex2fv.?(arg_368);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex2i.xhtml
pub inline fn glVertex2i(arg_369: GLint, arg_370: GLint) void {
    return glad_glVertex2i.?(arg_369, arg_370);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex2iv.xhtml
pub inline fn glVertex2iv(arg_371: [*c]const GLint) void {
    return glad_glVertex2iv.?(arg_371);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex2s.xhtml
pub inline fn glVertex2s(arg_372: GLshort, arg_373: GLshort) void {
    return glad_glVertex2s.?(arg_372, arg_373);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex2sv.xhtml
pub inline fn glVertex2sv(arg_374: [*c]const GLshort) void {
    return glad_glVertex2sv.?(arg_374);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex3d.xhtml
pub inline fn glVertex3d(arg_375: GLdouble, arg_376: GLdouble, arg_377: GLdouble) void {
    return glad_glVertex3d.?(arg_375, arg_376, arg_377);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex3dv.xhtml
pub inline fn glVertex3dv(arg_378: [*c]const GLdouble) void {
    return glad_glVertex3dv.?(arg_378);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex3f.xhtml
pub inline fn glVertex3f(arg_379: GLfloat, arg_380: GLfloat, arg_381: GLfloat) void {
    return glad_glVertex3f.?(arg_379, arg_380, arg_381);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex3fv.xhtml
pub inline fn glVertex3fv(arg_382: [*c]const GLfloat) void {
    return glad_glVertex3fv.?(arg_382);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex3i.xhtml
pub inline fn glVertex3i(arg_383: GLint, arg_384: GLint, arg_385: GLint) void {
    return glad_glVertex3i.?(arg_383, arg_384, arg_385);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex3iv.xhtml
pub inline fn glVertex3iv(arg_386: [*c]const GLint) void {
    return glad_glVertex3iv.?(arg_386);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex3s.xhtml
pub inline fn glVertex3s(arg_387: GLshort, arg_388: GLshort, arg_389: GLshort) void {
    return glad_glVertex3s.?(arg_387, arg_388, arg_389);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex3sv.xhtml
pub inline fn glVertex3sv(arg_390: [*c]const GLshort) void {
    return glad_glVertex3sv.?(arg_390);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex4d.xhtml
pub inline fn glVertex4d(arg_391: GLdouble, arg_392: GLdouble, arg_393: GLdouble, arg_394: GLdouble) void {
    return glad_glVertex4d.?(arg_391, arg_392, arg_393, arg_394);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex4dv.xhtml
pub inline fn glVertex4dv(arg_395: [*c]const GLdouble) void {
    return glad_glVertex4dv.?(arg_395);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex4f.xhtml
pub inline fn glVertex4f(arg_396: GLfloat, arg_397: GLfloat, arg_398: GLfloat, arg_399: GLfloat) void {
    return glad_glVertex4f.?(arg_396, arg_397, arg_398, arg_399);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex4fv.xhtml
pub inline fn glVertex4fv(arg_400: [*c]const GLfloat) void {
    return glad_glVertex4fv.?(arg_400);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex4i.xhtml
pub inline fn glVertex4i(arg_401: GLint, arg_402: GLint, arg_403: GLint, arg_404: GLint) void {
    return glad_glVertex4i.?(arg_401, arg_402, arg_403, arg_404);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex4iv.xhtml
pub inline fn glVertex4iv(arg_405: [*c]const GLint) void {
    return glad_glVertex4iv.?(arg_405);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex4s.xhtml
pub inline fn glVertex4s(arg_406: GLshort, arg_407: GLshort, arg_408: GLshort, arg_409: GLshort) void {
    return glad_glVertex4s.?(arg_406, arg_407, arg_408, arg_409);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex4sv.xhtml
pub inline fn glVertex4sv(arg_410: [*c]const GLshort) void {
    return glad_glVertex4sv.?(arg_410);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClipPlane.xhtml
pub inline fn glClipPlane(arg_411: GLenum, arg_412: [*c]const GLdouble) void {
    return glad_glClipPlane.?(arg_411, arg_412);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorMaterial.xhtml
pub inline fn glColorMaterial(arg_413: GLenum, arg_414: GLenum) void {
    return glad_glColorMaterial.?(arg_413, arg_414);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFogf.xhtml
pub inline fn glFogf(arg_415: GLenum, arg_416: GLfloat) void {
    return glad_glFogf.?(arg_415, arg_416);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFogfv.xhtml
pub inline fn glFogfv(arg_417: GLenum, arg_418: [*c]const GLfloat) void {
    return glad_glFogfv.?(arg_417, arg_418);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFogi.xhtml
pub inline fn glFogi(arg_419: GLenum, arg_420: GLint) void {
    return glad_glFogi.?(arg_419, arg_420);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFogiv.xhtml
pub inline fn glFogiv(arg_421: GLenum, arg_422: [*c]const GLint) void {
    return glad_glFogiv.?(arg_421, arg_422);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLightf.xhtml
pub inline fn glLightf(arg_423: GLenum, arg_424: GLenum, arg_425: GLfloat) void {
    return glad_glLightf.?(arg_423, arg_424, arg_425);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLightfv.xhtml
pub inline fn glLightfv(arg_426: GLenum, arg_427: GLenum, arg_428: [*c]const GLfloat) void {
    return glad_glLightfv.?(arg_426, arg_427, arg_428);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLighti.xhtml
pub inline fn glLighti(arg_429: GLenum, arg_430: GLenum, arg_431: GLint) void {
    return glad_glLighti.?(arg_429, arg_430, arg_431);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLightiv.xhtml
pub inline fn glLightiv(arg_432: GLenum, arg_433: GLenum, arg_434: [*c]const GLint) void {
    return glad_glLightiv.?(arg_432, arg_433, arg_434);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLightModelf.xhtml
pub inline fn glLightModelf(arg_435: GLenum, arg_436: GLfloat) void {
    return glad_glLightModelf.?(arg_435, arg_436);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLightModelfv.xhtml
pub inline fn glLightModelfv(arg_437: GLenum, arg_438: [*c]const GLfloat) void {
    return glad_glLightModelfv.?(arg_437, arg_438);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLightModeli.xhtml
pub inline fn glLightModeli(arg_439: GLenum, arg_440: GLint) void {
    return glad_glLightModeli.?(arg_439, arg_440);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLightModeliv.xhtml
pub inline fn glLightModeliv(arg_441: GLenum, arg_442: [*c]const GLint) void {
    return glad_glLightModeliv.?(arg_441, arg_442);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLineStipple.xhtml
pub inline fn glLineStipple(arg_443: GLint, arg_444: GLushort) void {
    return glad_glLineStipple.?(arg_443, arg_444);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMaterialf.xhtml
pub inline fn glMaterialf(arg_445: GLenum, arg_446: GLenum, arg_447: GLfloat) void {
    return glad_glMaterialf.?(arg_445, arg_446, arg_447);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMaterialfv.xhtml
pub inline fn glMaterialfv(arg_448: GLenum, arg_449: GLenum, arg_450: [*c]const GLfloat) void {
    return glad_glMaterialfv.?(arg_448, arg_449, arg_450);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMateriali.xhtml
pub inline fn glMateriali(arg_451: GLenum, arg_452: GLenum, arg_453: GLint) void {
    return glad_glMateriali.?(arg_451, arg_452, arg_453);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMaterialiv.xhtml
pub inline fn glMaterialiv(arg_454: GLenum, arg_455: GLenum, arg_456: [*c]const GLint) void {
    return glad_glMaterialiv.?(arg_454, arg_455, arg_456);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPolygonStipple.xhtml
pub inline fn glPolygonStipple(arg_457: [*c]const GLubyte) void {
    return glad_glPolygonStipple.?(arg_457);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glShadeModel.xhtml
pub inline fn glShadeModel(arg_458: GLenum) void {
    return glad_glShadeModel.?(arg_458);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexEnvf.xhtml
pub inline fn glTexEnvf(arg_459: GLenum, arg_460: GLenum, arg_461: GLfloat) void {
    return glad_glTexEnvf.?(arg_459, arg_460, arg_461);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexEnvfv.xhtml
pub inline fn glTexEnvfv(arg_462: GLenum, arg_463: GLenum, arg_464: [*c]const GLfloat) void {
    return glad_glTexEnvfv.?(arg_462, arg_463, arg_464);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexEnvi.xhtml
pub inline fn glTexEnvi(arg_465: GLenum, arg_466: GLenum, arg_467: GLint) void {
    return glad_glTexEnvi.?(arg_465, arg_466, arg_467);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexEnviv.xhtml
pub inline fn glTexEnviv(arg_468: GLenum, arg_469: GLenum, arg_470: [*c]const GLint) void {
    return glad_glTexEnviv.?(arg_468, arg_469, arg_470);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexGend.xhtml
pub inline fn glTexGend(arg_471: GLenum, arg_472: GLenum, arg_473: GLdouble) void {
    return glad_glTexGend.?(arg_471, arg_472, arg_473);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexGendv.xhtml
pub inline fn glTexGendv(arg_474: GLenum, arg_475: GLenum, arg_476: [*c]const GLdouble) void {
    return glad_glTexGendv.?(arg_474, arg_475, arg_476);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexGenf.xhtml
pub inline fn glTexGenf(arg_477: GLenum, arg_478: GLenum, arg_479: GLfloat) void {
    return glad_glTexGenf.?(arg_477, arg_478, arg_479);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexGenfv.xhtml
pub inline fn glTexGenfv(arg_480: GLenum, arg_481: GLenum, arg_482: [*c]const GLfloat) void {
    return glad_glTexGenfv.?(arg_480, arg_481, arg_482);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexGeni.xhtml
pub inline fn glTexGeni(arg_483: GLenum, arg_484: GLenum, arg_485: GLint) void {
    return glad_glTexGeni.?(arg_483, arg_484, arg_485);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexGeniv.xhtml
pub inline fn glTexGeniv(arg_486: GLenum, arg_487: GLenum, arg_488: [*c]const GLint) void {
    return glad_glTexGeniv.?(arg_486, arg_487, arg_488);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFeedbackBuffer.xhtml
pub inline fn glFeedbackBuffer(arg_489: GLsizei, arg_490: GLenum, arg_491: [*c]GLfloat) void {
    return glad_glFeedbackBuffer.?(arg_489, arg_490, arg_491);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSelectBuffer.xhtml
pub inline fn glSelectBuffer(arg_492: GLsizei, arg_493: [*c]GLuint) void {
    return glad_glSelectBuffer.?(arg_492, arg_493);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRenderMode.xhtml
pub inline fn glRenderMode(arg_494: GLenum) GLint {
    return glad_glRenderMode.?(arg_494);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glInitNames.xhtml
pub inline fn glInitNames() void {
    return glad_glInitNames.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLoadName.xhtml
pub inline fn glLoadName(arg_495: GLuint) void {
    return glad_glLoadName.?(arg_495);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPassThrough.xhtml
pub inline fn glPassThrough(arg_496: GLfloat) void {
    return glad_glPassThrough.?(arg_496);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPopName.xhtml
pub inline fn glPopName() void {
    return glad_glPopName.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPushName.xhtml
pub inline fn glPushName(arg_497: GLuint) void {
    return glad_glPushName.?(arg_497);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearAccum.xhtml
pub inline fn glClearAccum(arg_498: GLfloat, arg_499: GLfloat, arg_500: GLfloat, arg_501: GLfloat) void {
    return glad_glClearAccum.?(arg_498, arg_499, arg_500, arg_501);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearIndex.xhtml
pub inline fn glClearIndex(arg_502: GLfloat) void {
    return glad_glClearIndex.?(arg_502);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIndexMask.xhtml
pub inline fn glIndexMask(arg_503: GLuint) void {
    return glad_glIndexMask.?(arg_503);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glAccum.xhtml
pub inline fn glAccum(arg_504: GLenum, arg_505: GLfloat) void {
    return glad_glAccum.?(arg_504, arg_505);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPopAttrib.xhtml
pub inline fn glPopAttrib() void {
    return glad_glPopAttrib.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPushAttrib.xhtml
pub inline fn glPushAttrib(arg_506: GLbitfield) void {
    return glad_glPushAttrib.?(arg_506);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMap1d.xhtml
pub inline fn glMap1d(arg_507: GLenum, arg_508: GLdouble, arg_509: GLdouble, arg_510: GLint, arg_511: GLint, arg_512: [*c]const GLdouble) void {
    return glad_glMap1d.?(arg_507, arg_508, arg_509, arg_510, arg_511, arg_512);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMap1f.xhtml
pub inline fn glMap1f(arg_513: GLenum, arg_514: GLfloat, arg_515: GLfloat, arg_516: GLint, arg_517: GLint, arg_518: [*c]const GLfloat) void {
    return glad_glMap1f.?(arg_513, arg_514, arg_515, arg_516, arg_517, arg_518);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMap2d.xhtml
pub inline fn glMap2d(arg_519: GLenum, arg_520: GLdouble, arg_521: GLdouble, arg_522: GLint, arg_523: GLint, arg_524: GLdouble, arg_525: GLdouble, arg_526: GLint, arg_527: GLint, arg_528: [*c]const GLdouble) void {
    return glad_glMap2d.?(arg_519, arg_520, arg_521, arg_522, arg_523, arg_524, arg_525, arg_526, arg_527, arg_528);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMap2f.xhtml
pub inline fn glMap2f(arg_529: GLenum, arg_530: GLfloat, arg_531: GLfloat, arg_532: GLint, arg_533: GLint, arg_534: GLfloat, arg_535: GLfloat, arg_536: GLint, arg_537: GLint, arg_538: [*c]const GLfloat) void {
    return glad_glMap2f.?(arg_529, arg_530, arg_531, arg_532, arg_533, arg_534, arg_535, arg_536, arg_537, arg_538);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMapGrid1d.xhtml
pub inline fn glMapGrid1d(arg_539: GLint, arg_540: GLdouble, arg_541: GLdouble) void {
    return glad_glMapGrid1d.?(arg_539, arg_540, arg_541);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMapGrid1f.xhtml
pub inline fn glMapGrid1f(arg_542: GLint, arg_543: GLfloat, arg_544: GLfloat) void {
    return glad_glMapGrid1f.?(arg_542, arg_543, arg_544);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMapGrid2d.xhtml
pub inline fn glMapGrid2d(arg_545: GLint, arg_546: GLdouble, arg_547: GLdouble, arg_548: GLint, arg_549: GLdouble, arg_550: GLdouble) void {
    return glad_glMapGrid2d.?(arg_545, arg_546, arg_547, arg_548, arg_549, arg_550);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMapGrid2f.xhtml
pub inline fn glMapGrid2f(arg_551: GLint, arg_552: GLfloat, arg_553: GLfloat, arg_554: GLint, arg_555: GLfloat, arg_556: GLfloat) void {
    return glad_glMapGrid2f.?(arg_551, arg_552, arg_553, arg_554, arg_555, arg_556);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEvalCoord1d.xhtml
pub inline fn glEvalCoord1d(arg_557: GLdouble) void {
    return glad_glEvalCoord1d.?(arg_557);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEvalCoord1dv.xhtml
pub inline fn glEvalCoord1dv(arg_558: [*c]const GLdouble) void {
    return glad_glEvalCoord1dv.?(arg_558);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEvalCoord1f.xhtml
pub inline fn glEvalCoord1f(arg_559: GLfloat) void {
    return glad_glEvalCoord1f.?(arg_559);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEvalCoord1fv.xhtml
pub inline fn glEvalCoord1fv(arg_560: [*c]const GLfloat) void {
    return glad_glEvalCoord1fv.?(arg_560);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEvalCoord2d.xhtml
pub inline fn glEvalCoord2d(arg_561: GLdouble, arg_562: GLdouble) void {
    return glad_glEvalCoord2d.?(arg_561, arg_562);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEvalCoord2dv.xhtml
pub inline fn glEvalCoord2dv(arg_563: [*c]const GLdouble) void {
    return glad_glEvalCoord2dv.?(arg_563);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEvalCoord2f.xhtml
pub inline fn glEvalCoord2f(arg_564: GLfloat, arg_565: GLfloat) void {
    return glad_glEvalCoord2f.?(arg_564, arg_565);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEvalCoord2fv.xhtml
pub inline fn glEvalCoord2fv(arg_566: [*c]const GLfloat) void {
    return glad_glEvalCoord2fv.?(arg_566);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEvalMesh1.xhtml
pub inline fn glEvalMesh1(arg_567: GLenum, arg_568: GLint, arg_569: GLint) void {
    return glad_glEvalMesh1.?(arg_567, arg_568, arg_569);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEvalPoint1.xhtml
pub inline fn glEvalPoint1(arg_570: GLint) void {
    return glad_glEvalPoint1.?(arg_570);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEvalMesh2.xhtml
pub inline fn glEvalMesh2(arg_571: GLenum, arg_572: GLint, arg_573: GLint, arg_574: GLint, arg_575: GLint) void {
    return glad_glEvalMesh2.?(arg_571, arg_572, arg_573, arg_574, arg_575);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEvalPoint2.xhtml
pub inline fn glEvalPoint2(arg_576: GLint, arg_577: GLint) void {
    return glad_glEvalPoint2.?(arg_576, arg_577);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glAlphaFunc.xhtml
pub inline fn glAlphaFunc(arg_578: GLenum, arg_579: GLfloat) void {
    return glad_glAlphaFunc.?(arg_578, arg_579);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPixelZoom.xhtml
pub inline fn glPixelZoom(arg_580: GLfloat, arg_581: GLfloat) void {
    return glad_glPixelZoom.?(arg_580, arg_581);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPixelTransferf.xhtml
pub inline fn glPixelTransferf(arg_582: GLenum, arg_583: GLfloat) void {
    return glad_glPixelTransferf.?(arg_582, arg_583);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPixelTransferi.xhtml
pub inline fn glPixelTransferi(arg_584: GLenum, arg_585: GLint) void {
    return glad_glPixelTransferi.?(arg_584, arg_585);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPixelMapfv.xhtml
pub inline fn glPixelMapfv(arg_586: GLenum, arg_587: GLsizei, arg_588: [*c]const GLfloat) void {
    return glad_glPixelMapfv.?(arg_586, arg_587, arg_588);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPixelMapuiv.xhtml
pub inline fn glPixelMapuiv(arg_589: GLenum, arg_590: GLsizei, arg_591: [*c]const GLuint) void {
    return glad_glPixelMapuiv.?(arg_589, arg_590, arg_591);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPixelMapusv.xhtml
pub inline fn glPixelMapusv(arg_592: GLenum, arg_593: GLsizei, arg_594: [*c]const GLushort) void {
    return glad_glPixelMapusv.?(arg_592, arg_593, arg_594);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyPixels.xhtml
pub inline fn glCopyPixels(arg_595: GLint, arg_596: GLint, arg_597: GLsizei, arg_598: GLsizei, arg_599: GLenum) void {
    return glad_glCopyPixels.?(arg_595, arg_596, arg_597, arg_598, arg_599);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawPixels.xhtml
pub inline fn glDrawPixels(arg_600: GLsizei, arg_601: GLsizei, arg_602: GLenum, arg_603: GLenum, arg_604: ?*const anyopaque) void {
    return glad_glDrawPixels.?(arg_600, arg_601, arg_602, arg_603, arg_604);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetClipPlane.xhtml
pub inline fn glGetClipPlane(arg_605: GLenum, arg_606: [*c]GLdouble) void {
    return glad_glGetClipPlane.?(arg_605, arg_606);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetLightfv.xhtml
pub inline fn glGetLightfv(arg_607: GLenum, arg_608: GLenum, arg_609: [*c]GLfloat) void {
    return glad_glGetLightfv.?(arg_607, arg_608, arg_609);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetLightiv.xhtml
pub inline fn glGetLightiv(arg_610: GLenum, arg_611: GLenum, arg_612: [*c]GLint) void {
    return glad_glGetLightiv.?(arg_610, arg_611, arg_612);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMapdv.xhtml
pub inline fn glGetMapdv(arg_613: GLenum, arg_614: GLenum, arg_615: [*c]GLdouble) void {
    return glad_glGetMapdv.?(arg_613, arg_614, arg_615);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMapfv.xhtml
pub inline fn glGetMapfv(arg_616: GLenum, arg_617: GLenum, arg_618: [*c]GLfloat) void {
    return glad_glGetMapfv.?(arg_616, arg_617, arg_618);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMapiv.xhtml
pub inline fn glGetMapiv(arg_619: GLenum, arg_620: GLenum, arg_621: [*c]GLint) void {
    return glad_glGetMapiv.?(arg_619, arg_620, arg_621);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMaterialfv.xhtml
pub inline fn glGetMaterialfv(arg_622: GLenum, arg_623: GLenum, arg_624: [*c]GLfloat) void {
    return glad_glGetMaterialfv.?(arg_622, arg_623, arg_624);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMaterialiv.xhtml
pub inline fn glGetMaterialiv(arg_625: GLenum, arg_626: GLenum, arg_627: [*c]GLint) void {
    return glad_glGetMaterialiv.?(arg_625, arg_626, arg_627);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPixelMapfv.xhtml
pub inline fn glGetPixelMapfv(arg_628: GLenum, arg_629: [*c]GLfloat) void {
    return glad_glGetPixelMapfv.?(arg_628, arg_629);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPixelMapuiv.xhtml
pub inline fn glGetPixelMapuiv(arg_630: GLenum, arg_631: [*c]GLuint) void {
    return glad_glGetPixelMapuiv.?(arg_630, arg_631);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPixelMapusv.xhtml
pub inline fn glGetPixelMapusv(arg_632: GLenum, arg_633: [*c]GLushort) void {
    return glad_glGetPixelMapusv.?(arg_632, arg_633);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPolygonStipple.xhtml
pub inline fn glGetPolygonStipple(arg_634: [*c]GLubyte) void {
    return glad_glGetPolygonStipple.?(arg_634);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexEnvfv.xhtml
pub inline fn glGetTexEnvfv(arg_635: GLenum, arg_636: GLenum, arg_637: [*c]GLfloat) void {
    return glad_glGetTexEnvfv.?(arg_635, arg_636, arg_637);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexEnviv.xhtml
pub inline fn glGetTexEnviv(arg_638: GLenum, arg_639: GLenum, arg_640: [*c]GLint) void {
    return glad_glGetTexEnviv.?(arg_638, arg_639, arg_640);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexGendv.xhtml
pub inline fn glGetTexGendv(arg_641: GLenum, arg_642: GLenum, arg_643: [*c]GLdouble) void {
    return glad_glGetTexGendv.?(arg_641, arg_642, arg_643);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexGenfv.xhtml
pub inline fn glGetTexGenfv(arg_644: GLenum, arg_645: GLenum, arg_646: [*c]GLfloat) void {
    return glad_glGetTexGenfv.?(arg_644, arg_645, arg_646);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexGeniv.xhtml
pub inline fn glGetTexGeniv(arg_647: GLenum, arg_648: GLenum, arg_649: [*c]GLint) void {
    return glad_glGetTexGeniv.?(arg_647, arg_648, arg_649);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsList.xhtml
pub inline fn glIsList(arg_650: GLuint) GLboolean {
    return glad_glIsList.?(arg_650);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFrustum.xhtml
pub inline fn glFrustum(arg_651: GLdouble, arg_652: GLdouble, arg_653: GLdouble, arg_654: GLdouble, arg_655: GLdouble, arg_656: GLdouble) void {
    return glad_glFrustum.?(arg_651, arg_652, arg_653, arg_654, arg_655, arg_656);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLoadIdentity.xhtml
pub inline fn glLoadIdentity() void {
    return glad_glLoadIdentity.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLoadMatrixf.xhtml
pub inline fn glLoadMatrixf(arg_657: [*c]const GLfloat) void {
    return glad_glLoadMatrixf.?(arg_657);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLoadMatrixd.xhtml
pub inline fn glLoadMatrixd(arg_658: [*c]const GLdouble) void {
    return glad_glLoadMatrixd.?(arg_658);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixMode.xhtml
pub inline fn glMatrixMode(arg_659: GLenum) void {
    return glad_glMatrixMode.?(arg_659);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultMatrixf.xhtml
pub inline fn glMultMatrixf(arg_660: [*c]const GLfloat) void {
    return glad_glMultMatrixf.?(arg_660);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultMatrixd.xhtml
pub inline fn glMultMatrixd(arg_661: [*c]const GLdouble) void {
    return glad_glMultMatrixd.?(arg_661);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glOrtho.xhtml
pub inline fn glOrtho(arg_662: GLdouble, arg_663: GLdouble, arg_664: GLdouble, arg_665: GLdouble, arg_666: GLdouble, arg_667: GLdouble) void {
    return glad_glOrtho.?(arg_662, arg_663, arg_664, arg_665, arg_666, arg_667);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPopMatrix.xhtml
pub inline fn glPopMatrix() void {
    return glad_glPopMatrix.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPushMatrix.xhtml
pub inline fn glPushMatrix() void {
    return glad_glPushMatrix.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRotated.xhtml
pub inline fn glRotated(arg_668: GLdouble, arg_669: GLdouble, arg_670: GLdouble, arg_671: GLdouble) void {
    return glad_glRotated.?(arg_668, arg_669, arg_670, arg_671);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRotatef.xhtml
pub inline fn glRotatef(arg_672: GLfloat, arg_673: GLfloat, arg_674: GLfloat, arg_675: GLfloat) void {
    return glad_glRotatef.?(arg_672, arg_673, arg_674, arg_675);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glScaled.xhtml
pub inline fn glScaled(arg_676: GLdouble, arg_677: GLdouble, arg_678: GLdouble) void {
    return glad_glScaled.?(arg_676, arg_677, arg_678);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glScalef.xhtml
pub inline fn glScalef(arg_679: GLfloat, arg_680: GLfloat, arg_681: GLfloat) void {
    return glad_glScalef.?(arg_679, arg_680, arg_681);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTranslated.xhtml
pub inline fn glTranslated(arg_682: GLdouble, arg_683: GLdouble, arg_684: GLdouble) void {
    return glad_glTranslated.?(arg_682, arg_683, arg_684);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTranslatef.xhtml
pub inline fn glTranslatef(arg_685: GLfloat, arg_686: GLfloat, arg_687: GLfloat) void {
    return glad_glTranslatef.?(arg_685, arg_686, arg_687);
}
pub const GL_VERSION_1_1 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawArrays.xhtml
pub inline fn glDrawArrays(arg_688: GLenum, arg_689: GLint, arg_690: GLsizei) void {
    return glad_glDrawArrays.?(arg_688, arg_689, arg_690);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawElements.xhtml
pub inline fn glDrawElements(arg_691: GLenum, arg_692: GLsizei, arg_693: GLenum, arg_694: ?*const anyopaque) void {
    return glad_glDrawElements.?(arg_691, arg_692, arg_693, arg_694);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPointerv.xhtml
pub inline fn glGetPointerv(arg_695: GLenum, arg_696: [*c]?*anyopaque) void {
    return glad_glGetPointerv.?(arg_695, arg_696);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPolygonOffset.xhtml
pub inline fn glPolygonOffset(arg_697: GLfloat, arg_698: GLfloat) void {
    return glad_glPolygonOffset.?(arg_697, arg_698);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyTexImage1D.xhtml
pub inline fn glCopyTexImage1D(arg_699: GLenum, arg_700: GLint, arg_701: GLenum, arg_702: GLint, arg_703: GLint, arg_704: GLsizei, arg_705: GLint) void {
    return glad_glCopyTexImage1D.?(arg_699, arg_700, arg_701, arg_702, arg_703, arg_704, arg_705);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyTexImage2D.xhtml
pub inline fn glCopyTexImage2D(arg_706: GLenum, arg_707: GLint, arg_708: GLenum, arg_709: GLint, arg_710: GLint, arg_711: GLsizei, arg_712: GLsizei, arg_713: GLint) void {
    return glad_glCopyTexImage2D.?(arg_706, arg_707, arg_708, arg_709, arg_710, arg_711, arg_712, arg_713);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyTexSubImage1D.xhtml
pub inline fn glCopyTexSubImage1D(arg_714: GLenum, arg_715: GLint, arg_716: GLint, arg_717: GLint, arg_718: GLint, arg_719: GLsizei) void {
    return glad_glCopyTexSubImage1D.?(arg_714, arg_715, arg_716, arg_717, arg_718, arg_719);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyTexSubImage2D.xhtml
pub inline fn glCopyTexSubImage2D(arg_720: GLenum, arg_721: GLint, arg_722: GLint, arg_723: GLint, arg_724: GLint, arg_725: GLint, arg_726: GLsizei, arg_727: GLsizei) void {
    return glad_glCopyTexSubImage2D.?(arg_720, arg_721, arg_722, arg_723, arg_724, arg_725, arg_726, arg_727);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexSubImage1D.xhtml
pub inline fn glTexSubImage1D(arg_728: GLenum, arg_729: GLint, arg_730: GLint, arg_731: GLsizei, arg_732: GLenum, arg_733: GLenum, arg_734: ?*const anyopaque) void {
    return glad_glTexSubImage1D.?(arg_728, arg_729, arg_730, arg_731, arg_732, arg_733, arg_734);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexSubImage2D.xhtml
pub inline fn glTexSubImage2D(arg_735: GLenum, arg_736: GLint, arg_737: GLint, arg_738: GLint, arg_739: GLsizei, arg_740: GLsizei, arg_741: GLenum, arg_742: GLenum, arg_743: ?*const anyopaque) void {
    return glad_glTexSubImage2D.?(arg_735, arg_736, arg_737, arg_738, arg_739, arg_740, arg_741, arg_742, arg_743);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindTexture.xhtml
pub inline fn glBindTexture(arg_744: GLenum, arg_745: GLuint) void {
    return glad_glBindTexture.?(arg_744, arg_745);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteTextures.xhtml
pub inline fn glDeleteTextures(arg_746: GLsizei, arg_747: [*c]const GLuint) void {
    return glad_glDeleteTextures.?(arg_746, arg_747);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenTextures.xhtml
pub inline fn glGenTextures(arg_748: GLsizei, arg_749: [*c]GLuint) void {
    return glad_glGenTextures.?(arg_748, arg_749);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsTexture.xhtml
pub inline fn glIsTexture(arg_750: GLuint) GLboolean {
    return glad_glIsTexture.?(arg_750);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glArrayElement.xhtml
pub inline fn glArrayElement(arg_751: GLint) void {
    return glad_glArrayElement.?(arg_751);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorPointer.xhtml
pub inline fn glColorPointer(arg_752: GLint, arg_753: GLenum, arg_754: GLsizei, arg_755: ?*const anyopaque) void {
    return glad_glColorPointer.?(arg_752, arg_753, arg_754, arg_755);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDisableClientState.xhtml
pub inline fn glDisableClientState(arg_756: GLenum) void {
    return glad_glDisableClientState.?(arg_756);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEdgeFlagPointer.xhtml
pub inline fn glEdgeFlagPointer(arg_757: GLsizei, arg_758: ?*const anyopaque) void {
    return glad_glEdgeFlagPointer.?(arg_757, arg_758);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEnableClientState.xhtml
pub inline fn glEnableClientState(arg_759: GLenum) void {
    return glad_glEnableClientState.?(arg_759);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIndexPointer.xhtml
pub inline fn glIndexPointer(arg_760: GLenum, arg_761: GLsizei, arg_762: ?*const anyopaque) void {
    return glad_glIndexPointer.?(arg_760, arg_761, arg_762);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glInterleavedArrays.xhtml
pub inline fn glInterleavedArrays(arg_763: GLenum, arg_764: GLsizei, arg_765: ?*const anyopaque) void {
    return glad_glInterleavedArrays.?(arg_763, arg_764, arg_765);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNormalPointer.xhtml
pub inline fn glNormalPointer(arg_766: GLenum, arg_767: GLsizei, arg_768: ?*const anyopaque) void {
    return glad_glNormalPointer.?(arg_766, arg_767, arg_768);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoordPointer.xhtml
pub inline fn glTexCoordPointer(arg_769: GLint, arg_770: GLenum, arg_771: GLsizei, arg_772: ?*const anyopaque) void {
    return glad_glTexCoordPointer.?(arg_769, arg_770, arg_771, arg_772);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexPointer.xhtml
pub inline fn glVertexPointer(arg_773: GLint, arg_774: GLenum, arg_775: GLsizei, arg_776: ?*const anyopaque) void {
    return glad_glVertexPointer.?(arg_773, arg_774, arg_775, arg_776);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glAreTexturesResident.xhtml
pub inline fn glAreTexturesResident(arg_777: GLsizei, arg_778: [*c]const GLuint, arg_779: [*c]GLboolean) GLboolean {
    return glad_glAreTexturesResident.?(arg_777, arg_778, arg_779);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPrioritizeTextures.xhtml
pub inline fn glPrioritizeTextures(arg_780: GLsizei, arg_781: [*c]const GLuint, arg_782: [*c]const GLfloat) void {
    return glad_glPrioritizeTextures.?(arg_780, arg_781, arg_782);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIndexub.xhtml
pub inline fn glIndexub(arg_783: GLubyte) void {
    return glad_glIndexub.?(arg_783);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIndexubv.xhtml
pub inline fn glIndexubv(arg_784: [*c]const GLubyte) void {
    return glad_glIndexubv.?(arg_784);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPopClientAttrib.xhtml
pub inline fn glPopClientAttrib() void {
    return glad_glPopClientAttrib.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPushClientAttrib.xhtml
pub inline fn glPushClientAttrib(arg_785: GLbitfield) void {
    return glad_glPushClientAttrib.?(arg_785);
}
pub const GL_VERSION_1_2 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawRangeElements.xhtml
pub inline fn glDrawRangeElements(arg_786: GLenum, arg_787: GLuint, arg_788: GLuint, arg_789: GLsizei, arg_790: GLenum, arg_791: ?*const anyopaque) void {
    return glad_glDrawRangeElements.?(arg_786, arg_787, arg_788, arg_789, arg_790, arg_791);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexImage3D.xhtml
pub inline fn glTexImage3D(arg_792: GLenum, arg_793: GLint, arg_794: GLint, arg_795: GLsizei, arg_796: GLsizei, arg_797: GLsizei, arg_798: GLint, arg_799: GLenum, arg_800: GLenum, arg_801: ?*const anyopaque) void {
    return glad_glTexImage3D.?(arg_792, arg_793, arg_794, arg_795, arg_796, arg_797, arg_798, arg_799, arg_800, arg_801);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexSubImage3D.xhtml
pub inline fn glTexSubImage3D(arg_802: GLenum, arg_803: GLint, arg_804: GLint, arg_805: GLint, arg_806: GLint, arg_807: GLsizei, arg_808: GLsizei, arg_809: GLsizei, arg_810: GLenum, arg_811: GLenum, arg_812: ?*const anyopaque) void {
    return glad_glTexSubImage3D.?(arg_802, arg_803, arg_804, arg_805, arg_806, arg_807, arg_808, arg_809, arg_810, arg_811, arg_812);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyTexSubImage3D.xhtml
pub inline fn glCopyTexSubImage3D(arg_813: GLenum, arg_814: GLint, arg_815: GLint, arg_816: GLint, arg_817: GLint, arg_818: GLint, arg_819: GLint, arg_820: GLsizei, arg_821: GLsizei) void {
    return glad_glCopyTexSubImage3D.?(arg_813, arg_814, arg_815, arg_816, arg_817, arg_818, arg_819, arg_820, arg_821);
}
pub const GL_VERSION_1_3 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glActiveTexture.xhtml
pub inline fn glActiveTexture(arg_822: GLenum) void {
    return glad_glActiveTexture.?(arg_822);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSampleCoverage.xhtml
pub inline fn glSampleCoverage(arg_823: GLfloat, arg_824: GLboolean) void {
    return glad_glSampleCoverage.?(arg_823, arg_824);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedTexImage3D.xhtml
pub inline fn glCompressedTexImage3D(arg_825: GLenum, arg_826: GLint, arg_827: GLenum, arg_828: GLsizei, arg_829: GLsizei, arg_830: GLsizei, arg_831: GLint, arg_832: GLsizei, arg_833: ?*const anyopaque) void {
    return glad_glCompressedTexImage3D.?(arg_825, arg_826, arg_827, arg_828, arg_829, arg_830, arg_831, arg_832, arg_833);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedTexImage2D.xhtml
pub inline fn glCompressedTexImage2D(arg_834: GLenum, arg_835: GLint, arg_836: GLenum, arg_837: GLsizei, arg_838: GLsizei, arg_839: GLint, arg_840: GLsizei, arg_841: ?*const anyopaque) void {
    return glad_glCompressedTexImage2D.?(arg_834, arg_835, arg_836, arg_837, arg_838, arg_839, arg_840, arg_841);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedTexImage1D.xhtml
pub inline fn glCompressedTexImage1D(arg_842: GLenum, arg_843: GLint, arg_844: GLenum, arg_845: GLsizei, arg_846: GLint, arg_847: GLsizei, arg_848: ?*const anyopaque) void {
    return glad_glCompressedTexImage1D.?(arg_842, arg_843, arg_844, arg_845, arg_846, arg_847, arg_848);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedTexSubImage3D.xhtml
pub inline fn glCompressedTexSubImage3D(arg_849: GLenum, arg_850: GLint, arg_851: GLint, arg_852: GLint, arg_853: GLint, arg_854: GLsizei, arg_855: GLsizei, arg_856: GLsizei, arg_857: GLenum, arg_858: GLsizei, arg_859: ?*const anyopaque) void {
    return glad_glCompressedTexSubImage3D.?(arg_849, arg_850, arg_851, arg_852, arg_853, arg_854, arg_855, arg_856, arg_857, arg_858, arg_859);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedTexSubImage2D.xhtml
pub inline fn glCompressedTexSubImage2D(arg_860: GLenum, arg_861: GLint, arg_862: GLint, arg_863: GLint, arg_864: GLsizei, arg_865: GLsizei, arg_866: GLenum, arg_867: GLsizei, arg_868: ?*const anyopaque) void {
    return glad_glCompressedTexSubImage2D.?(arg_860, arg_861, arg_862, arg_863, arg_864, arg_865, arg_866, arg_867, arg_868);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedTexSubImage1D.xhtml
pub inline fn glCompressedTexSubImage1D(arg_869: GLenum, arg_870: GLint, arg_871: GLint, arg_872: GLsizei, arg_873: GLenum, arg_874: GLsizei, arg_875: ?*const anyopaque) void {
    return glad_glCompressedTexSubImage1D.?(arg_869, arg_870, arg_871, arg_872, arg_873, arg_874, arg_875);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetCompressedTexImage.xhtml
pub inline fn glGetCompressedTexImage(arg_876: GLenum, arg_877: GLint, arg_878: ?*anyopaque) void {
    return glad_glGetCompressedTexImage.?(arg_876, arg_877, arg_878);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClientActiveTexture.xhtml
pub inline fn glClientActiveTexture(arg_879: GLenum) void {
    return glad_glClientActiveTexture.?(arg_879);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord1d.xhtml
pub inline fn glMultiTexCoord1d(arg_880: GLenum, arg_881: GLdouble) void {
    return glad_glMultiTexCoord1d.?(arg_880, arg_881);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord1dv.xhtml
pub inline fn glMultiTexCoord1dv(arg_882: GLenum, arg_883: [*c]const GLdouble) void {
    return glad_glMultiTexCoord1dv.?(arg_882, arg_883);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord1f.xhtml
pub inline fn glMultiTexCoord1f(arg_884: GLenum, arg_885: GLfloat) void {
    return glad_glMultiTexCoord1f.?(arg_884, arg_885);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord1fv.xhtml
pub inline fn glMultiTexCoord1fv(arg_886: GLenum, arg_887: [*c]const GLfloat) void {
    return glad_glMultiTexCoord1fv.?(arg_886, arg_887);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord1i.xhtml
pub inline fn glMultiTexCoord1i(arg_888: GLenum, arg_889: GLint) void {
    return glad_glMultiTexCoord1i.?(arg_888, arg_889);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord1iv.xhtml
pub inline fn glMultiTexCoord1iv(arg_890: GLenum, arg_891: [*c]const GLint) void {
    return glad_glMultiTexCoord1iv.?(arg_890, arg_891);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord1s.xhtml
pub inline fn glMultiTexCoord1s(arg_892: GLenum, arg_893: GLshort) void {
    return glad_glMultiTexCoord1s.?(arg_892, arg_893);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord1sv.xhtml
pub inline fn glMultiTexCoord1sv(arg_894: GLenum, arg_895: [*c]const GLshort) void {
    return glad_glMultiTexCoord1sv.?(arg_894, arg_895);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord2d.xhtml
pub inline fn glMultiTexCoord2d(arg_896: GLenum, arg_897: GLdouble, arg_898: GLdouble) void {
    return glad_glMultiTexCoord2d.?(arg_896, arg_897, arg_898);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord2dv.xhtml
pub inline fn glMultiTexCoord2dv(arg_899: GLenum, arg_900: [*c]const GLdouble) void {
    return glad_glMultiTexCoord2dv.?(arg_899, arg_900);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord2f.xhtml
pub inline fn glMultiTexCoord2f(arg_901: GLenum, arg_902: GLfloat, arg_903: GLfloat) void {
    return glad_glMultiTexCoord2f.?(arg_901, arg_902, arg_903);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord2fv.xhtml
pub inline fn glMultiTexCoord2fv(arg_904: GLenum, arg_905: [*c]const GLfloat) void {
    return glad_glMultiTexCoord2fv.?(arg_904, arg_905);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord2i.xhtml
pub inline fn glMultiTexCoord2i(arg_906: GLenum, arg_907: GLint, arg_908: GLint) void {
    return glad_glMultiTexCoord2i.?(arg_906, arg_907, arg_908);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord2iv.xhtml
pub inline fn glMultiTexCoord2iv(arg_909: GLenum, arg_910: [*c]const GLint) void {
    return glad_glMultiTexCoord2iv.?(arg_909, arg_910);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord2s.xhtml
pub inline fn glMultiTexCoord2s(arg_911: GLenum, arg_912: GLshort, arg_913: GLshort) void {
    return glad_glMultiTexCoord2s.?(arg_911, arg_912, arg_913);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord2sv.xhtml
pub inline fn glMultiTexCoord2sv(arg_914: GLenum, arg_915: [*c]const GLshort) void {
    return glad_glMultiTexCoord2sv.?(arg_914, arg_915);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord3d.xhtml
pub inline fn glMultiTexCoord3d(arg_916: GLenum, arg_917: GLdouble, arg_918: GLdouble, arg_919: GLdouble) void {
    return glad_glMultiTexCoord3d.?(arg_916, arg_917, arg_918, arg_919);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord3dv.xhtml
pub inline fn glMultiTexCoord3dv(arg_920: GLenum, arg_921: [*c]const GLdouble) void {
    return glad_glMultiTexCoord3dv.?(arg_920, arg_921);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord3f.xhtml
pub inline fn glMultiTexCoord3f(arg_922: GLenum, arg_923: GLfloat, arg_924: GLfloat, arg_925: GLfloat) void {
    return glad_glMultiTexCoord3f.?(arg_922, arg_923, arg_924, arg_925);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord3fv.xhtml
pub inline fn glMultiTexCoord3fv(arg_926: GLenum, arg_927: [*c]const GLfloat) void {
    return glad_glMultiTexCoord3fv.?(arg_926, arg_927);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord3i.xhtml
pub inline fn glMultiTexCoord3i(arg_928: GLenum, arg_929: GLint, arg_930: GLint, arg_931: GLint) void {
    return glad_glMultiTexCoord3i.?(arg_928, arg_929, arg_930, arg_931);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord3iv.xhtml
pub inline fn glMultiTexCoord3iv(arg_932: GLenum, arg_933: [*c]const GLint) void {
    return glad_glMultiTexCoord3iv.?(arg_932, arg_933);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord3s.xhtml
pub inline fn glMultiTexCoord3s(arg_934: GLenum, arg_935: GLshort, arg_936: GLshort, arg_937: GLshort) void {
    return glad_glMultiTexCoord3s.?(arg_934, arg_935, arg_936, arg_937);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord3sv.xhtml
pub inline fn glMultiTexCoord3sv(arg_938: GLenum, arg_939: [*c]const GLshort) void {
    return glad_glMultiTexCoord3sv.?(arg_938, arg_939);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord4d.xhtml
pub inline fn glMultiTexCoord4d(arg_940: GLenum, arg_941: GLdouble, arg_942: GLdouble, arg_943: GLdouble, arg_944: GLdouble) void {
    return glad_glMultiTexCoord4d.?(arg_940, arg_941, arg_942, arg_943, arg_944);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord4dv.xhtml
pub inline fn glMultiTexCoord4dv(arg_945: GLenum, arg_946: [*c]const GLdouble) void {
    return glad_glMultiTexCoord4dv.?(arg_945, arg_946);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord4f.xhtml
pub inline fn glMultiTexCoord4f(arg_947: GLenum, arg_948: GLfloat, arg_949: GLfloat, arg_950: GLfloat, arg_951: GLfloat) void {
    return glad_glMultiTexCoord4f.?(arg_947, arg_948, arg_949, arg_950, arg_951);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord4fv.xhtml
pub inline fn glMultiTexCoord4fv(arg_952: GLenum, arg_953: [*c]const GLfloat) void {
    return glad_glMultiTexCoord4fv.?(arg_952, arg_953);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord4i.xhtml
pub inline fn glMultiTexCoord4i(arg_954: GLenum, arg_955: GLint, arg_956: GLint, arg_957: GLint, arg_958: GLint) void {
    return glad_glMultiTexCoord4i.?(arg_954, arg_955, arg_956, arg_957, arg_958);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord4iv.xhtml
pub inline fn glMultiTexCoord4iv(arg_959: GLenum, arg_960: [*c]const GLint) void {
    return glad_glMultiTexCoord4iv.?(arg_959, arg_960);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord4s.xhtml
pub inline fn glMultiTexCoord4s(arg_961: GLenum, arg_962: GLshort, arg_963: GLshort, arg_964: GLshort, arg_965: GLshort) void {
    return glad_glMultiTexCoord4s.?(arg_961, arg_962, arg_963, arg_964, arg_965);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord4sv.xhtml
pub inline fn glMultiTexCoord4sv(arg_966: GLenum, arg_967: [*c]const GLshort) void {
    return glad_glMultiTexCoord4sv.?(arg_966, arg_967);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLoadTransposeMatrixf.xhtml
pub inline fn glLoadTransposeMatrixf(arg_968: [*c]const GLfloat) void {
    return glad_glLoadTransposeMatrixf.?(arg_968);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLoadTransposeMatrixd.xhtml
pub inline fn glLoadTransposeMatrixd(arg_969: [*c]const GLdouble) void {
    return glad_glLoadTransposeMatrixd.?(arg_969);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultTransposeMatrixf.xhtml
pub inline fn glMultTransposeMatrixf(arg_970: [*c]const GLfloat) void {
    return glad_glMultTransposeMatrixf.?(arg_970);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultTransposeMatrixd.xhtml
pub inline fn glMultTransposeMatrixd(arg_971: [*c]const GLdouble) void {
    return glad_glMultTransposeMatrixd.?(arg_971);
}
pub const GL_VERSION_1_4 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendFuncSeparate.xhtml
pub inline fn glBlendFuncSeparate(arg_972: GLenum, arg_973: GLenum, arg_974: GLenum, arg_975: GLenum) void {
    return glad_glBlendFuncSeparate.?(arg_972, arg_973, arg_974, arg_975);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiDrawArrays.xhtml
pub inline fn glMultiDrawArrays(arg_976: GLenum, arg_977: [*c]const GLint, arg_978: [*c]const GLsizei, arg_979: GLsizei) void {
    return glad_glMultiDrawArrays.?(arg_976, arg_977, arg_978, arg_979);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiDrawElements.xhtml
pub inline fn glMultiDrawElements(arg_980: GLenum, arg_981: [*c]const GLsizei, arg_982: GLenum, arg_983: [*c]const ?*const anyopaque, arg_984: GLsizei) void {
    return glad_glMultiDrawElements.?(arg_980, arg_981, arg_982, arg_983, arg_984);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPointParameterf.xhtml
pub inline fn glPointParameterf(arg_985: GLenum, arg_986: GLfloat) void {
    return glad_glPointParameterf.?(arg_985, arg_986);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPointParameterfv.xhtml
pub inline fn glPointParameterfv(arg_987: GLenum, arg_988: [*c]const GLfloat) void {
    return glad_glPointParameterfv.?(arg_987, arg_988);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPointParameteri.xhtml
pub inline fn glPointParameteri(arg_989: GLenum, arg_990: GLint) void {
    return glad_glPointParameteri.?(arg_989, arg_990);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPointParameteriv.xhtml
pub inline fn glPointParameteriv(arg_991: GLenum, arg_992: [*c]const GLint) void {
    return glad_glPointParameteriv.?(arg_991, arg_992);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFogCoordf.xhtml
pub inline fn glFogCoordf(arg_993: GLfloat) void {
    return glad_glFogCoordf.?(arg_993);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFogCoordfv.xhtml
pub inline fn glFogCoordfv(arg_994: [*c]const GLfloat) void {
    return glad_glFogCoordfv.?(arg_994);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFogCoordd.xhtml
pub inline fn glFogCoordd(arg_995: GLdouble) void {
    return glad_glFogCoordd.?(arg_995);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFogCoorddv.xhtml
pub inline fn glFogCoorddv(arg_996: [*c]const GLdouble) void {
    return glad_glFogCoorddv.?(arg_996);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFogCoordPointer.xhtml
pub inline fn glFogCoordPointer(arg_997: GLenum, arg_998: GLsizei, arg_999: ?*const anyopaque) void {
    return glad_glFogCoordPointer.?(arg_997, arg_998, arg_999);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3b.xhtml
pub inline fn glSecondaryColor3b(arg_1000: GLbyte, arg_1001: GLbyte, arg_1002: GLbyte) void {
    return glad_glSecondaryColor3b.?(arg_1000, arg_1001, arg_1002);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3bv.xhtml
pub inline fn glSecondaryColor3bv(arg_1003: [*c]const GLbyte) void {
    return glad_glSecondaryColor3bv.?(arg_1003);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3d.xhtml
pub inline fn glSecondaryColor3d(arg_1004: GLdouble, arg_1005: GLdouble, arg_1006: GLdouble) void {
    return glad_glSecondaryColor3d.?(arg_1004, arg_1005, arg_1006);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3dv.xhtml
pub inline fn glSecondaryColor3dv(arg_1007: [*c]const GLdouble) void {
    return glad_glSecondaryColor3dv.?(arg_1007);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3f.xhtml
pub inline fn glSecondaryColor3f(arg_1008: GLfloat, arg_1009: GLfloat, arg_1010: GLfloat) void {
    return glad_glSecondaryColor3f.?(arg_1008, arg_1009, arg_1010);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3fv.xhtml
pub inline fn glSecondaryColor3fv(arg_1011: [*c]const GLfloat) void {
    return glad_glSecondaryColor3fv.?(arg_1011);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3i.xhtml
pub inline fn glSecondaryColor3i(arg_1012: GLint, arg_1013: GLint, arg_1014: GLint) void {
    return glad_glSecondaryColor3i.?(arg_1012, arg_1013, arg_1014);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3iv.xhtml
pub inline fn glSecondaryColor3iv(arg_1015: [*c]const GLint) void {
    return glad_glSecondaryColor3iv.?(arg_1015);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3s.xhtml
pub inline fn glSecondaryColor3s(arg_1016: GLshort, arg_1017: GLshort, arg_1018: GLshort) void {
    return glad_glSecondaryColor3s.?(arg_1016, arg_1017, arg_1018);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3sv.xhtml
pub inline fn glSecondaryColor3sv(arg_1019: [*c]const GLshort) void {
    return glad_glSecondaryColor3sv.?(arg_1019);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3ub.xhtml
pub inline fn glSecondaryColor3ub(arg_1020: GLubyte, arg_1021: GLubyte, arg_1022: GLubyte) void {
    return glad_glSecondaryColor3ub.?(arg_1020, arg_1021, arg_1022);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3ubv.xhtml
pub inline fn glSecondaryColor3ubv(arg_1023: [*c]const GLubyte) void {
    return glad_glSecondaryColor3ubv.?(arg_1023);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3ui.xhtml
pub inline fn glSecondaryColor3ui(arg_1024: GLuint, arg_1025: GLuint, arg_1026: GLuint) void {
    return glad_glSecondaryColor3ui.?(arg_1024, arg_1025, arg_1026);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3uiv.xhtml
pub inline fn glSecondaryColor3uiv(arg_1027: [*c]const GLuint) void {
    return glad_glSecondaryColor3uiv.?(arg_1027);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3us.xhtml
pub inline fn glSecondaryColor3us(arg_1028: GLushort, arg_1029: GLushort, arg_1030: GLushort) void {
    return glad_glSecondaryColor3us.?(arg_1028, arg_1029, arg_1030);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3usv.xhtml
pub inline fn glSecondaryColor3usv(arg_1031: [*c]const GLushort) void {
    return glad_glSecondaryColor3usv.?(arg_1031);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColorPointer.xhtml
pub inline fn glSecondaryColorPointer(arg_1032: GLint, arg_1033: GLenum, arg_1034: GLsizei, arg_1035: ?*const anyopaque) void {
    return glad_glSecondaryColorPointer.?(arg_1032, arg_1033, arg_1034, arg_1035);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos2d.xhtml
pub inline fn glWindowPos2d(arg_1036: GLdouble, arg_1037: GLdouble) void {
    return glad_glWindowPos2d.?(arg_1036, arg_1037);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos2dv.xhtml
pub inline fn glWindowPos2dv(arg_1038: [*c]const GLdouble) void {
    return glad_glWindowPos2dv.?(arg_1038);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos2f.xhtml
pub inline fn glWindowPos2f(arg_1039: GLfloat, arg_1040: GLfloat) void {
    return glad_glWindowPos2f.?(arg_1039, arg_1040);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos2fv.xhtml
pub inline fn glWindowPos2fv(arg_1041: [*c]const GLfloat) void {
    return glad_glWindowPos2fv.?(arg_1041);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos2i.xhtml
pub inline fn glWindowPos2i(arg_1042: GLint, arg_1043: GLint) void {
    return glad_glWindowPos2i.?(arg_1042, arg_1043);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos2iv.xhtml
pub inline fn glWindowPos2iv(arg_1044: [*c]const GLint) void {
    return glad_glWindowPos2iv.?(arg_1044);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos2s.xhtml
pub inline fn glWindowPos2s(arg_1045: GLshort, arg_1046: GLshort) void {
    return glad_glWindowPos2s.?(arg_1045, arg_1046);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos2sv.xhtml
pub inline fn glWindowPos2sv(arg_1047: [*c]const GLshort) void {
    return glad_glWindowPos2sv.?(arg_1047);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos3d.xhtml
pub inline fn glWindowPos3d(arg_1048: GLdouble, arg_1049: GLdouble, arg_1050: GLdouble) void {
    return glad_glWindowPos3d.?(arg_1048, arg_1049, arg_1050);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos3dv.xhtml
pub inline fn glWindowPos3dv(arg_1051: [*c]const GLdouble) void {
    return glad_glWindowPos3dv.?(arg_1051);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos3f.xhtml
pub inline fn glWindowPos3f(arg_1052: GLfloat, arg_1053: GLfloat, arg_1054: GLfloat) void {
    return glad_glWindowPos3f.?(arg_1052, arg_1053, arg_1054);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos3fv.xhtml
pub inline fn glWindowPos3fv(arg_1055: [*c]const GLfloat) void {
    return glad_glWindowPos3fv.?(arg_1055);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos3i.xhtml
pub inline fn glWindowPos3i(arg_1056: GLint, arg_1057: GLint, arg_1058: GLint) void {
    return glad_glWindowPos3i.?(arg_1056, arg_1057, arg_1058);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos3iv.xhtml
pub inline fn glWindowPos3iv(arg_1059: [*c]const GLint) void {
    return glad_glWindowPos3iv.?(arg_1059);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos3s.xhtml
pub inline fn glWindowPos3s(arg_1060: GLshort, arg_1061: GLshort, arg_1062: GLshort) void {
    return glad_glWindowPos3s.?(arg_1060, arg_1061, arg_1062);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos3sv.xhtml
pub inline fn glWindowPos3sv(arg_1063: [*c]const GLshort) void {
    return glad_glWindowPos3sv.?(arg_1063);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendColor.xhtml
pub inline fn glBlendColor(arg_1064: GLfloat, arg_1065: GLfloat, arg_1066: GLfloat, arg_1067: GLfloat) void {
    return glad_glBlendColor.?(arg_1064, arg_1065, arg_1066, arg_1067);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendEquation.xhtml
pub inline fn glBlendEquation(arg_1068: GLenum) void {
    return glad_glBlendEquation.?(arg_1068);
}
pub const GL_VERSION_1_5 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenQueries.xhtml
pub inline fn glGenQueries(arg_1069: GLsizei, arg_1070: [*c]GLuint) void {
    return glad_glGenQueries.?(arg_1069, arg_1070);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteQueries.xhtml
pub inline fn glDeleteQueries(arg_1071: GLsizei, arg_1072: [*c]const GLuint) void {
    return glad_glDeleteQueries.?(arg_1071, arg_1072);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsQuery.xhtml
pub inline fn glIsQuery(arg_1073: GLuint) GLboolean {
    return glad_glIsQuery.?(arg_1073);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBeginQuery.xhtml
pub inline fn glBeginQuery(arg_1074: GLenum, arg_1075: GLuint) void {
    return glad_glBeginQuery.?(arg_1074, arg_1075);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEndQuery.xhtml
pub inline fn glEndQuery(arg_1076: GLenum) void {
    return glad_glEndQuery.?(arg_1076);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetQueryiv.xhtml
pub inline fn glGetQueryiv(arg_1077: GLenum, arg_1078: GLenum, arg_1079: [*c]GLint) void {
    return glad_glGetQueryiv.?(arg_1077, arg_1078, arg_1079);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetQueryObjectiv.xhtml
pub inline fn glGetQueryObjectiv(arg_1080: GLuint, arg_1081: GLenum, arg_1082: [*c]GLint) void {
    return glad_glGetQueryObjectiv.?(arg_1080, arg_1081, arg_1082);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetQueryObjectuiv.xhtml
pub inline fn glGetQueryObjectuiv(arg_1083: GLuint, arg_1084: GLenum, arg_1085: [*c]GLuint) void {
    return glad_glGetQueryObjectuiv.?(arg_1083, arg_1084, arg_1085);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindBuffer.xhtml
pub inline fn glBindBuffer(arg_1086: GLenum, arg_1087: GLuint) void {
    return glad_glBindBuffer.?(arg_1086, arg_1087);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteBuffers.xhtml
pub inline fn glDeleteBuffers(arg_1088: GLsizei, arg_1089: [*c]const GLuint) void {
    return glad_glDeleteBuffers.?(arg_1088, arg_1089);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenBuffers.xhtml
pub inline fn glGenBuffers(arg_1090: GLsizei, arg_1091: [*c]GLuint) void {
    return glad_glGenBuffers.?(arg_1090, arg_1091);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsBuffer.xhtml
pub inline fn glIsBuffer(arg_1092: GLuint) GLboolean {
    return glad_glIsBuffer.?(arg_1092);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBufferData.xhtml
pub inline fn glBufferData(arg_1093: GLenum, arg_1094: GLsizeiptr, arg_1095: ?*const anyopaque, arg_1096: GLenum) void {
    return glad_glBufferData.?(arg_1093, arg_1094, arg_1095, arg_1096);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBufferSubData.xhtml
pub inline fn glBufferSubData(arg_1097: GLenum, arg_1098: GLintptr, arg_1099: GLsizeiptr, arg_1100: ?*const anyopaque) void {
    return glad_glBufferSubData.?(arg_1097, arg_1098, arg_1099, arg_1100);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetBufferSubData.xhtml
pub inline fn glGetBufferSubData(arg_1101: GLenum, arg_1102: GLintptr, arg_1103: GLsizeiptr, arg_1104: ?*anyopaque) void {
    return glad_glGetBufferSubData.?(arg_1101, arg_1102, arg_1103, arg_1104);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMapBuffer.xhtml
pub inline fn glMapBuffer(arg_1105: GLenum, arg_1106: GLenum) ?*anyopaque {
    return glad_glMapBuffer.?(arg_1105, arg_1106);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUnmapBuffer.xhtml
pub inline fn glUnmapBuffer(arg_1107: GLenum) GLboolean {
    return glad_glUnmapBuffer.?(arg_1107);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetBufferParameteriv.xhtml
pub inline fn glGetBufferParameteriv(arg_1108: GLenum, arg_1109: GLenum, arg_1110: [*c]GLint) void {
    return glad_glGetBufferParameteriv.?(arg_1108, arg_1109, arg_1110);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetBufferPointerv.xhtml
pub inline fn glGetBufferPointerv(arg_1111: GLenum, arg_1112: GLenum, arg_1113: [*c]?*anyopaque) void {
    return glad_glGetBufferPointerv.?(arg_1111, arg_1112, arg_1113);
}
pub const GL_VERSION_2_0 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendEquationSeparate.xhtml
pub inline fn glBlendEquationSeparate(arg_1114: GLenum, arg_1115: GLenum) void {
    return glad_glBlendEquationSeparate.?(arg_1114, arg_1115);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawBuffers.xhtml
pub inline fn glDrawBuffers(arg_1116: GLsizei, arg_1117: [*c]const GLenum) void {
    return glad_glDrawBuffers.?(arg_1116, arg_1117);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glStencilOpSeparate.xhtml
pub inline fn glStencilOpSeparate(arg_1118: GLenum, arg_1119: GLenum, arg_1120: GLenum, arg_1121: GLenum) void {
    return glad_glStencilOpSeparate.?(arg_1118, arg_1119, arg_1120, arg_1121);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glStencilFuncSeparate.xhtml
pub inline fn glStencilFuncSeparate(arg_1122: GLenum, arg_1123: GLenum, arg_1124: GLint, arg_1125: GLuint) void {
    return glad_glStencilFuncSeparate.?(arg_1122, arg_1123, arg_1124, arg_1125);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glStencilMaskSeparate.xhtml
pub inline fn glStencilMaskSeparate(arg_1126: GLenum, arg_1127: GLuint) void {
    return glad_glStencilMaskSeparate.?(arg_1126, arg_1127);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glAttachShader.xhtml
pub inline fn glAttachShader(arg_1128: GLuint, arg_1129: GLuint) void {
    return glad_glAttachShader.?(arg_1128, arg_1129);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindAttribLocation.xhtml
pub inline fn glBindAttribLocation(arg_1130: GLuint, arg_1131: GLuint, arg_1132: [*c]const GLchar) void {
    return glad_glBindAttribLocation.?(arg_1130, arg_1131, arg_1132);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompileShader.xhtml
pub inline fn glCompileShader(arg_1133: GLuint) void {
    return glad_glCompileShader.?(arg_1133);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCreateProgram.xhtml
pub inline fn glCreateProgram() GLuint {
    return glad_glCreateProgram.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCreateShader.xhtml
pub inline fn glCreateShader(arg_1134: GLenum) GLuint {
    return glad_glCreateShader.?(arg_1134);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteProgram.xhtml
pub inline fn glDeleteProgram(arg_1135: GLuint) void {
    return glad_glDeleteProgram.?(arg_1135);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteShader.xhtml
pub inline fn glDeleteShader(arg_1136: GLuint) void {
    return glad_glDeleteShader.?(arg_1136);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDetachShader.xhtml
pub inline fn glDetachShader(arg_1137: GLuint, arg_1138: GLuint) void {
    return glad_glDetachShader.?(arg_1137, arg_1138);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDisableVertexAttribArray.xhtml
pub inline fn glDisableVertexAttribArray(arg_1139: GLuint) void {
    return glad_glDisableVertexAttribArray.?(arg_1139);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEnableVertexAttribArray.xhtml
pub inline fn glEnableVertexAttribArray(arg_1140: GLuint) void {
    return glad_glEnableVertexAttribArray.?(arg_1140);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetActiveAttrib.xhtml
pub inline fn glGetActiveAttrib(arg_1141: GLuint, arg_1142: GLuint, arg_1143: GLsizei, arg_1144: [*c]GLsizei, arg_1145: [*c]GLint, arg_1146: [*c]GLenum, arg_1147: [*c]GLchar) void {
    return glad_glGetActiveAttrib.?(arg_1141, arg_1142, arg_1143, arg_1144, arg_1145, arg_1146, arg_1147);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetActiveUniform.xhtml
pub inline fn glGetActiveUniform(arg_1148: GLuint, arg_1149: GLuint, arg_1150: GLsizei, arg_1151: [*c]GLsizei, arg_1152: [*c]GLint, arg_1153: [*c]GLenum, arg_1154: [*c]GLchar) void {
    return glad_glGetActiveUniform.?(arg_1148, arg_1149, arg_1150, arg_1151, arg_1152, arg_1153, arg_1154);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetAttachedShaders.xhtml
pub inline fn glGetAttachedShaders(arg_1155: GLuint, arg_1156: GLsizei, arg_1157: [*c]GLsizei, arg_1158: [*c]GLuint) void {
    return glad_glGetAttachedShaders.?(arg_1155, arg_1156, arg_1157, arg_1158);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetAttribLocation.xhtml
pub inline fn glGetAttribLocation(arg_1159: GLuint, arg_1160: [*c]const GLchar) GLint {
    return glad_glGetAttribLocation.?(arg_1159, arg_1160);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramiv.xhtml
pub inline fn glGetProgramiv(arg_1161: GLuint, arg_1162: GLenum, arg_1163: [*c]GLint) void {
    return glad_glGetProgramiv.?(arg_1161, arg_1162, arg_1163);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramInfoLog.xhtml
pub inline fn glGetProgramInfoLog(arg_1164: GLuint, arg_1165: GLsizei, arg_1166: [*c]GLsizei, arg_1167: [*c]GLchar) void {
    return glad_glGetProgramInfoLog.?(arg_1164, arg_1165, arg_1166, arg_1167);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetShaderiv.xhtml
pub inline fn glGetShaderiv(arg_1168: GLuint, arg_1169: GLenum, arg_1170: [*c]GLint) void {
    return glad_glGetShaderiv.?(arg_1168, arg_1169, arg_1170);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetShaderInfoLog.xhtml
pub inline fn glGetShaderInfoLog(arg_1171: GLuint, arg_1172: GLsizei, arg_1173: [*c]GLsizei, arg_1174: [*c]GLchar) void {
    return glad_glGetShaderInfoLog.?(arg_1171, arg_1172, arg_1173, arg_1174);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetShaderSource.xhtml
pub inline fn glGetShaderSource(arg_1175: GLuint, arg_1176: GLsizei, arg_1177: [*c]GLsizei, arg_1178: [*c]GLchar) void {
    return glad_glGetShaderSource.?(arg_1175, arg_1176, arg_1177, arg_1178);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetUniformLocation.xhtml
pub inline fn glGetUniformLocation(arg_1179: GLuint, arg_1180: [*c]const GLchar) GLint {
    return glad_glGetUniformLocation.?(arg_1179, arg_1180);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetUniformfv.xhtml
pub inline fn glGetUniformfv(arg_1181: GLuint, arg_1182: GLint, arg_1183: [*c]GLfloat) void {
    return glad_glGetUniformfv.?(arg_1181, arg_1182, arg_1183);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetUniformiv.xhtml
pub inline fn glGetUniformiv(arg_1184: GLuint, arg_1185: GLint, arg_1186: [*c]GLint) void {
    return glad_glGetUniformiv.?(arg_1184, arg_1185, arg_1186);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexAttribdv.xhtml
pub inline fn glGetVertexAttribdv(arg_1187: GLuint, arg_1188: GLenum, arg_1189: [*c]GLdouble) void {
    return glad_glGetVertexAttribdv.?(arg_1187, arg_1188, arg_1189);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexAttribfv.xhtml
pub inline fn glGetVertexAttribfv(arg_1190: GLuint, arg_1191: GLenum, arg_1192: [*c]GLfloat) void {
    return glad_glGetVertexAttribfv.?(arg_1190, arg_1191, arg_1192);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexAttribiv.xhtml
pub inline fn glGetVertexAttribiv(arg_1193: GLuint, arg_1194: GLenum, arg_1195: [*c]GLint) void {
    return glad_glGetVertexAttribiv.?(arg_1193, arg_1194, arg_1195);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexAttribPointerv.xhtml
pub inline fn glGetVertexAttribPointerv(arg_1196: GLuint, arg_1197: GLenum, arg_1198: [*c]?*anyopaque) void {
    return glad_glGetVertexAttribPointerv.?(arg_1196, arg_1197, arg_1198);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsProgram.xhtml
pub inline fn glIsProgram(arg_1199: GLuint) GLboolean {
    return glad_glIsProgram.?(arg_1199);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsShader.xhtml
pub inline fn glIsShader(arg_1200: GLuint) GLboolean {
    return glad_glIsShader.?(arg_1200);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLinkProgram.xhtml
pub inline fn glLinkProgram(arg_1201: GLuint) void {
    return glad_glLinkProgram.?(arg_1201);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glShaderSource.xhtml
pub inline fn glShaderSource(arg_1202: GLuint, arg_1203: GLsizei, arg_1204: [*c]const [*c]const GLchar, arg_1205: [*c]const GLint) void {
    return glad_glShaderSource.?(arg_1202, arg_1203, arg_1204, arg_1205);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUseProgram.xhtml
pub inline fn glUseProgram(arg_1206: GLuint) void {
    return glad_glUseProgram.?(arg_1206);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform1f.xhtml
pub inline fn glUniform1f(arg_1207: GLint, arg_1208: GLfloat) void {
    return glad_glUniform1f.?(arg_1207, arg_1208);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform2f.xhtml
pub inline fn glUniform2f(arg_1209: GLint, arg_1210: GLfloat, arg_1211: GLfloat) void {
    return glad_glUniform2f.?(arg_1209, arg_1210, arg_1211);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform3f.xhtml
pub inline fn glUniform3f(arg_1212: GLint, arg_1213: GLfloat, arg_1214: GLfloat, arg_1215: GLfloat) void {
    return glad_glUniform3f.?(arg_1212, arg_1213, arg_1214, arg_1215);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform4f.xhtml
pub inline fn glUniform4f(arg_1216: GLint, arg_1217: GLfloat, arg_1218: GLfloat, arg_1219: GLfloat, arg_1220: GLfloat) void {
    return glad_glUniform4f.?(arg_1216, arg_1217, arg_1218, arg_1219, arg_1220);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform1i.xhtml
pub inline fn glUniform1i(arg_1221: GLint, arg_1222: GLint) void {
    return glad_glUniform1i.?(arg_1221, arg_1222);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform2i.xhtml
pub inline fn glUniform2i(arg_1223: GLint, arg_1224: GLint, arg_1225: GLint) void {
    return glad_glUniform2i.?(arg_1223, arg_1224, arg_1225);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform3i.xhtml
pub inline fn glUniform3i(arg_1226: GLint, arg_1227: GLint, arg_1228: GLint, arg_1229: GLint) void {
    return glad_glUniform3i.?(arg_1226, arg_1227, arg_1228, arg_1229);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform4i.xhtml
pub inline fn glUniform4i(arg_1230: GLint, arg_1231: GLint, arg_1232: GLint, arg_1233: GLint, arg_1234: GLint) void {
    return glad_glUniform4i.?(arg_1230, arg_1231, arg_1232, arg_1233, arg_1234);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform1fv.xhtml
pub inline fn glUniform1fv(arg_1235: GLint, arg_1236: GLsizei, arg_1237: [*c]const GLfloat) void {
    return glad_glUniform1fv.?(arg_1235, arg_1236, arg_1237);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform2fv.xhtml
pub inline fn glUniform2fv(arg_1238: GLint, arg_1239: GLsizei, arg_1240: [*c]const GLfloat) void {
    return glad_glUniform2fv.?(arg_1238, arg_1239, arg_1240);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform3fv.xhtml
pub inline fn glUniform3fv(arg_1241: GLint, arg_1242: GLsizei, arg_1243: [*c]const GLfloat) void {
    return glad_glUniform3fv.?(arg_1241, arg_1242, arg_1243);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform4fv.xhtml
pub inline fn glUniform4fv(arg_1244: GLint, arg_1245: GLsizei, arg_1246: [*c]const GLfloat) void {
    return glad_glUniform4fv.?(arg_1244, arg_1245, arg_1246);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform1iv.xhtml
pub inline fn glUniform1iv(arg_1247: GLint, arg_1248: GLsizei, arg_1249: [*c]const GLint) void {
    return glad_glUniform1iv.?(arg_1247, arg_1248, arg_1249);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform2iv.xhtml
pub inline fn glUniform2iv(arg_1250: GLint, arg_1251: GLsizei, arg_1252: [*c]const GLint) void {
    return glad_glUniform2iv.?(arg_1250, arg_1251, arg_1252);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform3iv.xhtml
pub inline fn glUniform3iv(arg_1253: GLint, arg_1254: GLsizei, arg_1255: [*c]const GLint) void {
    return glad_glUniform3iv.?(arg_1253, arg_1254, arg_1255);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform4iv.xhtml
pub inline fn glUniform4iv(arg_1256: GLint, arg_1257: GLsizei, arg_1258: [*c]const GLint) void {
    return glad_glUniform4iv.?(arg_1256, arg_1257, arg_1258);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix2fv.xhtml
pub inline fn glUniformMatrix2fv(arg_1259: GLint, arg_1260: GLsizei, arg_1261: GLboolean, arg_1262: [*c]const GLfloat) void {
    return glad_glUniformMatrix2fv.?(arg_1259, arg_1260, arg_1261, arg_1262);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix3fv.xhtml
pub inline fn glUniformMatrix3fv(arg_1263: GLint, arg_1264: GLsizei, arg_1265: GLboolean, arg_1266: [*c]const GLfloat) void {
    return glad_glUniformMatrix3fv.?(arg_1263, arg_1264, arg_1265, arg_1266);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix4fv.xhtml
pub inline fn glUniformMatrix4fv(arg_1267: GLint, arg_1268: GLsizei, arg_1269: GLboolean, arg_1270: [*c]const GLfloat) void {
    return glad_glUniformMatrix4fv.?(arg_1267, arg_1268, arg_1269, arg_1270);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glValidateProgram.xhtml
pub inline fn glValidateProgram(arg_1271: GLuint) void {
    return glad_glValidateProgram.?(arg_1271);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib1d.xhtml
pub inline fn glVertexAttrib1d(arg_1272: GLuint, arg_1273: GLdouble) void {
    return glad_glVertexAttrib1d.?(arg_1272, arg_1273);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib1dv.xhtml
pub inline fn glVertexAttrib1dv(arg_1274: GLuint, arg_1275: [*c]const GLdouble) void {
    return glad_glVertexAttrib1dv.?(arg_1274, arg_1275);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib1f.xhtml
pub inline fn glVertexAttrib1f(arg_1276: GLuint, arg_1277: GLfloat) void {
    return glad_glVertexAttrib1f.?(arg_1276, arg_1277);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib1fv.xhtml
pub inline fn glVertexAttrib1fv(arg_1278: GLuint, arg_1279: [*c]const GLfloat) void {
    return glad_glVertexAttrib1fv.?(arg_1278, arg_1279);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib1s.xhtml
pub inline fn glVertexAttrib1s(arg_1280: GLuint, arg_1281: GLshort) void {
    return glad_glVertexAttrib1s.?(arg_1280, arg_1281);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib1sv.xhtml
pub inline fn glVertexAttrib1sv(arg_1282: GLuint, arg_1283: [*c]const GLshort) void {
    return glad_glVertexAttrib1sv.?(arg_1282, arg_1283);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib2d.xhtml
pub inline fn glVertexAttrib2d(arg_1284: GLuint, arg_1285: GLdouble, arg_1286: GLdouble) void {
    return glad_glVertexAttrib2d.?(arg_1284, arg_1285, arg_1286);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib2dv.xhtml
pub inline fn glVertexAttrib2dv(arg_1287: GLuint, arg_1288: [*c]const GLdouble) void {
    return glad_glVertexAttrib2dv.?(arg_1287, arg_1288);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib2f.xhtml
pub inline fn glVertexAttrib2f(arg_1289: GLuint, arg_1290: GLfloat, arg_1291: GLfloat) void {
    return glad_glVertexAttrib2f.?(arg_1289, arg_1290, arg_1291);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib2fv.xhtml
pub inline fn glVertexAttrib2fv(arg_1292: GLuint, arg_1293: [*c]const GLfloat) void {
    return glad_glVertexAttrib2fv.?(arg_1292, arg_1293);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib2s.xhtml
pub inline fn glVertexAttrib2s(arg_1294: GLuint, arg_1295: GLshort, arg_1296: GLshort) void {
    return glad_glVertexAttrib2s.?(arg_1294, arg_1295, arg_1296);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib2sv.xhtml
pub inline fn glVertexAttrib2sv(arg_1297: GLuint, arg_1298: [*c]const GLshort) void {
    return glad_glVertexAttrib2sv.?(arg_1297, arg_1298);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib3d.xhtml
pub inline fn glVertexAttrib3d(arg_1299: GLuint, arg_1300: GLdouble, arg_1301: GLdouble, arg_1302: GLdouble) void {
    return glad_glVertexAttrib3d.?(arg_1299, arg_1300, arg_1301, arg_1302);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib3dv.xhtml
pub inline fn glVertexAttrib3dv(arg_1303: GLuint, arg_1304: [*c]const GLdouble) void {
    return glad_glVertexAttrib3dv.?(arg_1303, arg_1304);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib3f.xhtml
pub inline fn glVertexAttrib3f(arg_1305: GLuint, arg_1306: GLfloat, arg_1307: GLfloat, arg_1308: GLfloat) void {
    return glad_glVertexAttrib3f.?(arg_1305, arg_1306, arg_1307, arg_1308);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib3fv.xhtml
pub inline fn glVertexAttrib3fv(arg_1309: GLuint, arg_1310: [*c]const GLfloat) void {
    return glad_glVertexAttrib3fv.?(arg_1309, arg_1310);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib3s.xhtml
pub inline fn glVertexAttrib3s(arg_1311: GLuint, arg_1312: GLshort, arg_1313: GLshort, arg_1314: GLshort) void {
    return glad_glVertexAttrib3s.?(arg_1311, arg_1312, arg_1313, arg_1314);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib3sv.xhtml
pub inline fn glVertexAttrib3sv(arg_1315: GLuint, arg_1316: [*c]const GLshort) void {
    return glad_glVertexAttrib3sv.?(arg_1315, arg_1316);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4Nbv.xhtml
pub inline fn glVertexAttrib4Nbv(arg_1317: GLuint, arg_1318: [*c]const GLbyte) void {
    return glad_glVertexAttrib4Nbv.?(arg_1317, arg_1318);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4Niv.xhtml
pub inline fn glVertexAttrib4Niv(arg_1319: GLuint, arg_1320: [*c]const GLint) void {
    return glad_glVertexAttrib4Niv.?(arg_1319, arg_1320);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4Nsv.xhtml
pub inline fn glVertexAttrib4Nsv(arg_1321: GLuint, arg_1322: [*c]const GLshort) void {
    return glad_glVertexAttrib4Nsv.?(arg_1321, arg_1322);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4Nub.xhtml
pub inline fn glVertexAttrib4Nub(arg_1323: GLuint, arg_1324: GLubyte, arg_1325: GLubyte, arg_1326: GLubyte, arg_1327: GLubyte) void {
    return glad_glVertexAttrib4Nub.?(arg_1323, arg_1324, arg_1325, arg_1326, arg_1327);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4Nubv.xhtml
pub inline fn glVertexAttrib4Nubv(arg_1328: GLuint, arg_1329: [*c]const GLubyte) void {
    return glad_glVertexAttrib4Nubv.?(arg_1328, arg_1329);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4Nuiv.xhtml
pub inline fn glVertexAttrib4Nuiv(arg_1330: GLuint, arg_1331: [*c]const GLuint) void {
    return glad_glVertexAttrib4Nuiv.?(arg_1330, arg_1331);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4Nusv.xhtml
pub inline fn glVertexAttrib4Nusv(arg_1332: GLuint, arg_1333: [*c]const GLushort) void {
    return glad_glVertexAttrib4Nusv.?(arg_1332, arg_1333);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4bv.xhtml
pub inline fn glVertexAttrib4bv(arg_1334: GLuint, arg_1335: [*c]const GLbyte) void {
    return glad_glVertexAttrib4bv.?(arg_1334, arg_1335);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4d.xhtml
pub inline fn glVertexAttrib4d(arg_1336: GLuint, arg_1337: GLdouble, arg_1338: GLdouble, arg_1339: GLdouble, arg_1340: GLdouble) void {
    return glad_glVertexAttrib4d.?(arg_1336, arg_1337, arg_1338, arg_1339, arg_1340);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4dv.xhtml
pub inline fn glVertexAttrib4dv(arg_1341: GLuint, arg_1342: [*c]const GLdouble) void {
    return glad_glVertexAttrib4dv.?(arg_1341, arg_1342);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4f.xhtml
pub inline fn glVertexAttrib4f(arg_1343: GLuint, arg_1344: GLfloat, arg_1345: GLfloat, arg_1346: GLfloat, arg_1347: GLfloat) void {
    return glad_glVertexAttrib4f.?(arg_1343, arg_1344, arg_1345, arg_1346, arg_1347);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4fv.xhtml
pub inline fn glVertexAttrib4fv(arg_1348: GLuint, arg_1349: [*c]const GLfloat) void {
    return glad_glVertexAttrib4fv.?(arg_1348, arg_1349);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4iv.xhtml
pub inline fn glVertexAttrib4iv(arg_1350: GLuint, arg_1351: [*c]const GLint) void {
    return glad_glVertexAttrib4iv.?(arg_1350, arg_1351);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4s.xhtml
pub inline fn glVertexAttrib4s(arg_1352: GLuint, arg_1353: GLshort, arg_1354: GLshort, arg_1355: GLshort, arg_1356: GLshort) void {
    return glad_glVertexAttrib4s.?(arg_1352, arg_1353, arg_1354, arg_1355, arg_1356);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4sv.xhtml
pub inline fn glVertexAttrib4sv(arg_1357: GLuint, arg_1358: [*c]const GLshort) void {
    return glad_glVertexAttrib4sv.?(arg_1357, arg_1358);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4ubv.xhtml
pub inline fn glVertexAttrib4ubv(arg_1359: GLuint, arg_1360: [*c]const GLubyte) void {
    return glad_glVertexAttrib4ubv.?(arg_1359, arg_1360);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4uiv.xhtml
pub inline fn glVertexAttrib4uiv(arg_1361: GLuint, arg_1362: [*c]const GLuint) void {
    return glad_glVertexAttrib4uiv.?(arg_1361, arg_1362);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4usv.xhtml
pub inline fn glVertexAttrib4usv(arg_1363: GLuint, arg_1364: [*c]const GLushort) void {
    return glad_glVertexAttrib4usv.?(arg_1363, arg_1364);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribPointer.xhtml
pub inline fn glVertexAttribPointer(arg_1365: GLuint, arg_1366: GLint, arg_1367: GLenum, arg_1368: GLboolean, arg_1369: GLsizei, arg_1370: ?*const anyopaque) void {
    return glad_glVertexAttribPointer.?(arg_1365, arg_1366, arg_1367, arg_1368, arg_1369, arg_1370);
}
pub const GL_VERSION_2_1 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix2x3fv.xhtml
pub inline fn glUniformMatrix2x3fv(arg_1371: GLint, arg_1372: GLsizei, arg_1373: GLboolean, arg_1374: [*c]const GLfloat) void {
    return glad_glUniformMatrix2x3fv.?(arg_1371, arg_1372, arg_1373, arg_1374);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix3x2fv.xhtml
pub inline fn glUniformMatrix3x2fv(arg_1375: GLint, arg_1376: GLsizei, arg_1377: GLboolean, arg_1378: [*c]const GLfloat) void {
    return glad_glUniformMatrix3x2fv.?(arg_1375, arg_1376, arg_1377, arg_1378);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix2x4fv.xhtml
pub inline fn glUniformMatrix2x4fv(arg_1379: GLint, arg_1380: GLsizei, arg_1381: GLboolean, arg_1382: [*c]const GLfloat) void {
    return glad_glUniformMatrix2x4fv.?(arg_1379, arg_1380, arg_1381, arg_1382);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix4x2fv.xhtml
pub inline fn glUniformMatrix4x2fv(arg_1383: GLint, arg_1384: GLsizei, arg_1385: GLboolean, arg_1386: [*c]const GLfloat) void {
    return glad_glUniformMatrix4x2fv.?(arg_1383, arg_1384, arg_1385, arg_1386);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix3x4fv.xhtml
pub inline fn glUniformMatrix3x4fv(arg_1387: GLint, arg_1388: GLsizei, arg_1389: GLboolean, arg_1390: [*c]const GLfloat) void {
    return glad_glUniformMatrix3x4fv.?(arg_1387, arg_1388, arg_1389, arg_1390);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix4x3fv.xhtml
pub inline fn glUniformMatrix4x3fv(arg_1391: GLint, arg_1392: GLsizei, arg_1393: GLboolean, arg_1394: [*c]const GLfloat) void {
    return glad_glUniformMatrix4x3fv.?(arg_1391, arg_1392, arg_1393, arg_1394);
}
pub const GL_VERSION_3_0 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorMaski.xhtml
pub inline fn glColorMaski(arg_1395: GLuint, arg_1396: GLboolean, arg_1397: GLboolean, arg_1398: GLboolean, arg_1399: GLboolean) void {
    return glad_glColorMaski.?(arg_1395, arg_1396, arg_1397, arg_1398, arg_1399);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetBooleani_v.xhtml
pub inline fn glGetBooleani_v(arg_1400: GLenum, arg_1401: GLuint, arg_1402: [*c]GLboolean) void {
    return glad_glGetBooleani_v.?(arg_1400, arg_1401, arg_1402);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetIntegeri_v.xhtml
pub inline fn glGetIntegeri_v(arg_1403: GLenum, arg_1404: GLuint, arg_1405: [*c]GLint) void {
    return glad_glGetIntegeri_v.?(arg_1403, arg_1404, arg_1405);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEnablei.xhtml
pub inline fn glEnablei(arg_1406: GLenum, arg_1407: GLuint) void {
    return glad_glEnablei.?(arg_1406, arg_1407);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDisablei.xhtml
pub inline fn glDisablei(arg_1408: GLenum, arg_1409: GLuint) void {
    return glad_glDisablei.?(arg_1408, arg_1409);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsEnabledi.xhtml
pub inline fn glIsEnabledi(arg_1410: GLenum, arg_1411: GLuint) GLboolean {
    return glad_glIsEnabledi.?(arg_1410, arg_1411);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBeginTransformFeedback.xhtml
pub inline fn glBeginTransformFeedback(arg_1412: GLenum) void {
    return glad_glBeginTransformFeedback.?(arg_1412);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEndTransformFeedback.xhtml
pub inline fn glEndTransformFeedback() void {
    return glad_glEndTransformFeedback.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindBufferRange.xhtml
pub inline fn glBindBufferRange(arg_1413: GLenum, arg_1414: GLuint, arg_1415: GLuint, arg_1416: GLintptr, arg_1417: GLsizeiptr) void {
    return glad_glBindBufferRange.?(arg_1413, arg_1414, arg_1415, arg_1416, arg_1417);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindBufferBase.xhtml
pub inline fn glBindBufferBase(arg_1418: GLenum, arg_1419: GLuint, arg_1420: GLuint) void {
    return glad_glBindBufferBase.?(arg_1418, arg_1419, arg_1420);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTransformFeedbackVaryings.xhtml
pub inline fn glTransformFeedbackVaryings(arg_1421: GLuint, arg_1422: GLsizei, arg_1423: [*c]const [*c]const GLchar, arg_1424: GLenum) void {
    return glad_glTransformFeedbackVaryings.?(arg_1421, arg_1422, arg_1423, arg_1424);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTransformFeedbackVarying.xhtml
pub inline fn glGetTransformFeedbackVarying(arg_1425: GLuint, arg_1426: GLuint, arg_1427: GLsizei, arg_1428: [*c]GLsizei, arg_1429: [*c]GLsizei, arg_1430: [*c]GLenum, arg_1431: [*c]GLchar) void {
    return glad_glGetTransformFeedbackVarying.?(arg_1425, arg_1426, arg_1427, arg_1428, arg_1429, arg_1430, arg_1431);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClampColor.xhtml
pub inline fn glClampColor(arg_1432: GLenum, arg_1433: GLenum) void {
    return glad_glClampColor.?(arg_1432, arg_1433);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBeginConditionalRender.xhtml
pub inline fn glBeginConditionalRender(arg_1434: GLuint, arg_1435: GLenum) void {
    return glad_glBeginConditionalRender.?(arg_1434, arg_1435);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEndConditionalRender.xhtml
pub inline fn glEndConditionalRender() void {
    return glad_glEndConditionalRender.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribIPointer.xhtml
pub inline fn glVertexAttribIPointer(arg_1436: GLuint, arg_1437: GLint, arg_1438: GLenum, arg_1439: GLsizei, arg_1440: ?*const anyopaque) void {
    return glad_glVertexAttribIPointer.?(arg_1436, arg_1437, arg_1438, arg_1439, arg_1440);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexAttribIiv.xhtml
pub inline fn glGetVertexAttribIiv(arg_1441: GLuint, arg_1442: GLenum, arg_1443: [*c]GLint) void {
    return glad_glGetVertexAttribIiv.?(arg_1441, arg_1442, arg_1443);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexAttribIuiv.xhtml
pub inline fn glGetVertexAttribIuiv(arg_1444: GLuint, arg_1445: GLenum, arg_1446: [*c]GLuint) void {
    return glad_glGetVertexAttribIuiv.?(arg_1444, arg_1445, arg_1446);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI1i.xhtml
pub inline fn glVertexAttribI1i(arg_1447: GLuint, arg_1448: GLint) void {
    return glad_glVertexAttribI1i.?(arg_1447, arg_1448);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI2i.xhtml
pub inline fn glVertexAttribI2i(arg_1449: GLuint, arg_1450: GLint, arg_1451: GLint) void {
    return glad_glVertexAttribI2i.?(arg_1449, arg_1450, arg_1451);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI3i.xhtml
pub inline fn glVertexAttribI3i(arg_1452: GLuint, arg_1453: GLint, arg_1454: GLint, arg_1455: GLint) void {
    return glad_glVertexAttribI3i.?(arg_1452, arg_1453, arg_1454, arg_1455);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI4i.xhtml
pub inline fn glVertexAttribI4i(arg_1456: GLuint, arg_1457: GLint, arg_1458: GLint, arg_1459: GLint, arg_1460: GLint) void {
    return glad_glVertexAttribI4i.?(arg_1456, arg_1457, arg_1458, arg_1459, arg_1460);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI1ui.xhtml
pub inline fn glVertexAttribI1ui(arg_1461: GLuint, arg_1462: GLuint) void {
    return glad_glVertexAttribI1ui.?(arg_1461, arg_1462);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI2ui.xhtml
pub inline fn glVertexAttribI2ui(arg_1463: GLuint, arg_1464: GLuint, arg_1465: GLuint) void {
    return glad_glVertexAttribI2ui.?(arg_1463, arg_1464, arg_1465);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI3ui.xhtml
pub inline fn glVertexAttribI3ui(arg_1466: GLuint, arg_1467: GLuint, arg_1468: GLuint, arg_1469: GLuint) void {
    return glad_glVertexAttribI3ui.?(arg_1466, arg_1467, arg_1468, arg_1469);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI4ui.xhtml
pub inline fn glVertexAttribI4ui(arg_1470: GLuint, arg_1471: GLuint, arg_1472: GLuint, arg_1473: GLuint, arg_1474: GLuint) void {
    return glad_glVertexAttribI4ui.?(arg_1470, arg_1471, arg_1472, arg_1473, arg_1474);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI1iv.xhtml
pub inline fn glVertexAttribI1iv(arg_1475: GLuint, arg_1476: [*c]const GLint) void {
    return glad_glVertexAttribI1iv.?(arg_1475, arg_1476);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI2iv.xhtml
pub inline fn glVertexAttribI2iv(arg_1477: GLuint, arg_1478: [*c]const GLint) void {
    return glad_glVertexAttribI2iv.?(arg_1477, arg_1478);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI3iv.xhtml
pub inline fn glVertexAttribI3iv(arg_1479: GLuint, arg_1480: [*c]const GLint) void {
    return glad_glVertexAttribI3iv.?(arg_1479, arg_1480);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI4iv.xhtml
pub inline fn glVertexAttribI4iv(arg_1481: GLuint, arg_1482: [*c]const GLint) void {
    return glad_glVertexAttribI4iv.?(arg_1481, arg_1482);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI1uiv.xhtml
pub inline fn glVertexAttribI1uiv(arg_1483: GLuint, arg_1484: [*c]const GLuint) void {
    return glad_glVertexAttribI1uiv.?(arg_1483, arg_1484);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI2uiv.xhtml
pub inline fn glVertexAttribI2uiv(arg_1485: GLuint, arg_1486: [*c]const GLuint) void {
    return glad_glVertexAttribI2uiv.?(arg_1485, arg_1486);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI3uiv.xhtml
pub inline fn glVertexAttribI3uiv(arg_1487: GLuint, arg_1488: [*c]const GLuint) void {
    return glad_glVertexAttribI3uiv.?(arg_1487, arg_1488);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI4uiv.xhtml
pub inline fn glVertexAttribI4uiv(arg_1489: GLuint, arg_1490: [*c]const GLuint) void {
    return glad_glVertexAttribI4uiv.?(arg_1489, arg_1490);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI4bv.xhtml
pub inline fn glVertexAttribI4bv(arg_1491: GLuint, arg_1492: [*c]const GLbyte) void {
    return glad_glVertexAttribI4bv.?(arg_1491, arg_1492);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI4sv.xhtml
pub inline fn glVertexAttribI4sv(arg_1493: GLuint, arg_1494: [*c]const GLshort) void {
    return glad_glVertexAttribI4sv.?(arg_1493, arg_1494);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI4ubv.xhtml
pub inline fn glVertexAttribI4ubv(arg_1495: GLuint, arg_1496: [*c]const GLubyte) void {
    return glad_glVertexAttribI4ubv.?(arg_1495, arg_1496);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI4usv.xhtml
pub inline fn glVertexAttribI4usv(arg_1497: GLuint, arg_1498: [*c]const GLushort) void {
    return glad_glVertexAttribI4usv.?(arg_1497, arg_1498);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetUniformuiv.xhtml
pub inline fn glGetUniformuiv(arg_1499: GLuint, arg_1500: GLint, arg_1501: [*c]GLuint) void {
    return glad_glGetUniformuiv.?(arg_1499, arg_1500, arg_1501);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindFragDataLocation.xhtml
pub inline fn glBindFragDataLocation(arg_1502: GLuint, arg_1503: GLuint, arg_1504: [*c]const GLchar) void {
    return glad_glBindFragDataLocation.?(arg_1502, arg_1503, arg_1504);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFragDataLocation.xhtml
pub inline fn glGetFragDataLocation(arg_1505: GLuint, arg_1506: [*c]const GLchar) GLint {
    return glad_glGetFragDataLocation.?(arg_1505, arg_1506);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform1ui.xhtml
pub inline fn glUniform1ui(arg_1507: GLint, arg_1508: GLuint) void {
    return glad_glUniform1ui.?(arg_1507, arg_1508);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform2ui.xhtml
pub inline fn glUniform2ui(arg_1509: GLint, arg_1510: GLuint, arg_1511: GLuint) void {
    return glad_glUniform2ui.?(arg_1509, arg_1510, arg_1511);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform3ui.xhtml
pub inline fn glUniform3ui(arg_1512: GLint, arg_1513: GLuint, arg_1514: GLuint, arg_1515: GLuint) void {
    return glad_glUniform3ui.?(arg_1512, arg_1513, arg_1514, arg_1515);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform4ui.xhtml
pub inline fn glUniform4ui(arg_1516: GLint, arg_1517: GLuint, arg_1518: GLuint, arg_1519: GLuint, arg_1520: GLuint) void {
    return glad_glUniform4ui.?(arg_1516, arg_1517, arg_1518, arg_1519, arg_1520);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform1uiv.xhtml
pub inline fn glUniform1uiv(arg_1521: GLint, arg_1522: GLsizei, arg_1523: [*c]const GLuint) void {
    return glad_glUniform1uiv.?(arg_1521, arg_1522, arg_1523);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform2uiv.xhtml
pub inline fn glUniform2uiv(arg_1524: GLint, arg_1525: GLsizei, arg_1526: [*c]const GLuint) void {
    return glad_glUniform2uiv.?(arg_1524, arg_1525, arg_1526);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform3uiv.xhtml
pub inline fn glUniform3uiv(arg_1527: GLint, arg_1528: GLsizei, arg_1529: [*c]const GLuint) void {
    return glad_glUniform3uiv.?(arg_1527, arg_1528, arg_1529);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform4uiv.xhtml
pub inline fn glUniform4uiv(arg_1530: GLint, arg_1531: GLsizei, arg_1532: [*c]const GLuint) void {
    return glad_glUniform4uiv.?(arg_1530, arg_1531, arg_1532);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexParameterIiv.xhtml
pub inline fn glTexParameterIiv(arg_1533: GLenum, arg_1534: GLenum, arg_1535: [*c]const GLint) void {
    return glad_glTexParameterIiv.?(arg_1533, arg_1534, arg_1535);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexParameterIuiv.xhtml
pub inline fn glTexParameterIuiv(arg_1536: GLenum, arg_1537: GLenum, arg_1538: [*c]const GLuint) void {
    return glad_glTexParameterIuiv.?(arg_1536, arg_1537, arg_1538);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexParameterIiv.xhtml
pub inline fn glGetTexParameterIiv(arg_1539: GLenum, arg_1540: GLenum, arg_1541: [*c]GLint) void {
    return glad_glGetTexParameterIiv.?(arg_1539, arg_1540, arg_1541);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexParameterIuiv.xhtml
pub inline fn glGetTexParameterIuiv(arg_1542: GLenum, arg_1543: GLenum, arg_1544: [*c]GLuint) void {
    return glad_glGetTexParameterIuiv.?(arg_1542, arg_1543, arg_1544);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearBufferiv.xhtml
pub inline fn glClearBufferiv(arg_1545: GLenum, arg_1546: GLint, arg_1547: [*c]const GLint) void {
    return glad_glClearBufferiv.?(arg_1545, arg_1546, arg_1547);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearBufferuiv.xhtml
pub inline fn glClearBufferuiv(arg_1548: GLenum, arg_1549: GLint, arg_1550: [*c]const GLuint) void {
    return glad_glClearBufferuiv.?(arg_1548, arg_1549, arg_1550);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearBufferfv.xhtml
pub inline fn glClearBufferfv(arg_1551: GLenum, arg_1552: GLint, arg_1553: [*c]const GLfloat) void {
    return glad_glClearBufferfv.?(arg_1551, arg_1552, arg_1553);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearBufferfi.xhtml
pub inline fn glClearBufferfi(arg_1554: GLenum, arg_1555: GLint, arg_1556: GLfloat, arg_1557: GLint) void {
    return glad_glClearBufferfi.?(arg_1554, arg_1555, arg_1556, arg_1557);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetStringi.xhtml
pub inline fn glGetStringi(arg_1558: GLenum, arg_1559: GLuint) [*c]const GLubyte {
    return glad_glGetStringi.?(arg_1558, arg_1559);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsRenderbuffer.xhtml
pub inline fn glIsRenderbuffer(arg_1560: GLuint) GLboolean {
    return glad_glIsRenderbuffer.?(arg_1560);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindRenderbuffer.xhtml
pub inline fn glBindRenderbuffer(arg_1561: GLenum, arg_1562: GLuint) void {
    return glad_glBindRenderbuffer.?(arg_1561, arg_1562);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteRenderbuffers.xhtml
pub inline fn glDeleteRenderbuffers(arg_1563: GLsizei, arg_1564: [*c]const GLuint) void {
    return glad_glDeleteRenderbuffers.?(arg_1563, arg_1564);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenRenderbuffers.xhtml
pub inline fn glGenRenderbuffers(arg_1565: GLsizei, arg_1566: [*c]GLuint) void {
    return glad_glGenRenderbuffers.?(arg_1565, arg_1566);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRenderbufferStorage.xhtml
pub inline fn glRenderbufferStorage(arg_1567: GLenum, arg_1568: GLenum, arg_1569: GLsizei, arg_1570: GLsizei) void {
    return glad_glRenderbufferStorage.?(arg_1567, arg_1568, arg_1569, arg_1570);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetRenderbufferParameteriv.xhtml
pub inline fn glGetRenderbufferParameteriv(arg_1571: GLenum, arg_1572: GLenum, arg_1573: [*c]GLint) void {
    return glad_glGetRenderbufferParameteriv.?(arg_1571, arg_1572, arg_1573);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsFramebuffer.xhtml
pub inline fn glIsFramebuffer(arg_1574: GLuint) GLboolean {
    return glad_glIsFramebuffer.?(arg_1574);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindFramebuffer.xhtml
pub inline fn glBindFramebuffer(arg_1575: GLenum, arg_1576: GLuint) void {
    return glad_glBindFramebuffer.?(arg_1575, arg_1576);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteFramebuffers.xhtml
pub inline fn glDeleteFramebuffers(arg_1577: GLsizei, arg_1578: [*c]const GLuint) void {
    return glad_glDeleteFramebuffers.?(arg_1577, arg_1578);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenFramebuffers.xhtml
pub inline fn glGenFramebuffers(arg_1579: GLsizei, arg_1580: [*c]GLuint) void {
    return glad_glGenFramebuffers.?(arg_1579, arg_1580);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCheckFramebufferStatus.xhtml
pub inline fn glCheckFramebufferStatus(arg_1581: GLenum) GLenum {
    return glad_glCheckFramebufferStatus.?(arg_1581);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferTexture1D.xhtml
pub inline fn glFramebufferTexture1D(arg_1582: GLenum, arg_1583: GLenum, arg_1584: GLenum, arg_1585: GLuint, arg_1586: GLint) void {
    return glad_glFramebufferTexture1D.?(arg_1582, arg_1583, arg_1584, arg_1585, arg_1586);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferTexture2D.xhtml
pub inline fn glFramebufferTexture2D(arg_1587: GLenum, arg_1588: GLenum, arg_1589: GLenum, arg_1590: GLuint, arg_1591: GLint) void {
    return glad_glFramebufferTexture2D.?(arg_1587, arg_1588, arg_1589, arg_1590, arg_1591);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferTexture3D.xhtml
pub inline fn glFramebufferTexture3D(arg_1592: GLenum, arg_1593: GLenum, arg_1594: GLenum, arg_1595: GLuint, arg_1596: GLint, arg_1597: GLint) void {
    return glad_glFramebufferTexture3D.?(arg_1592, arg_1593, arg_1594, arg_1595, arg_1596, arg_1597);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferRenderbuffer.xhtml
pub inline fn glFramebufferRenderbuffer(arg_1598: GLenum, arg_1599: GLenum, arg_1600: GLenum, arg_1601: GLuint) void {
    return glad_glFramebufferRenderbuffer.?(arg_1598, arg_1599, arg_1600, arg_1601);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFramebufferAttachmentParameteriv.xhtml
pub inline fn glGetFramebufferAttachmentParameteriv(arg_1602: GLenum, arg_1603: GLenum, arg_1604: GLenum, arg_1605: [*c]GLint) void {
    return glad_glGetFramebufferAttachmentParameteriv.?(arg_1602, arg_1603, arg_1604, arg_1605);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenerateMipmap.xhtml
pub inline fn glGenerateMipmap(arg_1606: GLenum) void {
    return glad_glGenerateMipmap.?(arg_1606);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlitFramebuffer.xhtml
pub inline fn glBlitFramebuffer(arg_1607: GLint, arg_1608: GLint, arg_1609: GLint, arg_1610: GLint, arg_1611: GLint, arg_1612: GLint, arg_1613: GLint, arg_1614: GLint, arg_1615: GLbitfield, arg_1616: GLenum) void {
    return glad_glBlitFramebuffer.?(arg_1607, arg_1608, arg_1609, arg_1610, arg_1611, arg_1612, arg_1613, arg_1614, arg_1615, arg_1616);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRenderbufferStorageMultisample.xhtml
pub inline fn glRenderbufferStorageMultisample(arg_1617: GLenum, arg_1618: GLsizei, arg_1619: GLenum, arg_1620: GLsizei, arg_1621: GLsizei) void {
    return glad_glRenderbufferStorageMultisample.?(arg_1617, arg_1618, arg_1619, arg_1620, arg_1621);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferTextureLayer.xhtml
pub inline fn glFramebufferTextureLayer(arg_1622: GLenum, arg_1623: GLenum, arg_1624: GLuint, arg_1625: GLint, arg_1626: GLint) void {
    return glad_glFramebufferTextureLayer.?(arg_1622, arg_1623, arg_1624, arg_1625, arg_1626);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMapBufferRange.xhtml
pub inline fn glMapBufferRange(arg_1627: GLenum, arg_1628: GLintptr, arg_1629: GLsizeiptr, arg_1630: GLbitfield) ?*anyopaque {
    return glad_glMapBufferRange.?(arg_1627, arg_1628, arg_1629, arg_1630);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFlushMappedBufferRange.xhtml
pub inline fn glFlushMappedBufferRange(arg_1631: GLenum, arg_1632: GLintptr, arg_1633: GLsizeiptr) void {
    return glad_glFlushMappedBufferRange.?(arg_1631, arg_1632, arg_1633);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindVertexArray.xhtml
pub inline fn glBindVertexArray(arg_1634: GLuint) void {
    return glad_glBindVertexArray.?(arg_1634);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteVertexArrays.xhtml
pub inline fn glDeleteVertexArrays(arg_1635: GLsizei, arg_1636: [*c]const GLuint) void {
    return glad_glDeleteVertexArrays.?(arg_1635, arg_1636);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenVertexArrays.xhtml
pub inline fn glGenVertexArrays(arg_1637: GLsizei, arg_1638: [*c]GLuint) void {
    return glad_glGenVertexArrays.?(arg_1637, arg_1638);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsVertexArray.xhtml
pub inline fn glIsVertexArray(arg_1639: GLuint) GLboolean {
    return glad_glIsVertexArray.?(arg_1639);
}
pub const GL_VERSION_3_1 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawArraysInstanced.xhtml
pub inline fn glDrawArraysInstanced(arg_1640: GLenum, arg_1641: GLint, arg_1642: GLsizei, arg_1643: GLsizei) void {
    return glad_glDrawArraysInstanced.?(arg_1640, arg_1641, arg_1642, arg_1643);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawElementsInstanced.xhtml
pub inline fn glDrawElementsInstanced(arg_1644: GLenum, arg_1645: GLsizei, arg_1646: GLenum, arg_1647: ?*const anyopaque, arg_1648: GLsizei) void {
    return glad_glDrawElementsInstanced.?(arg_1644, arg_1645, arg_1646, arg_1647, arg_1648);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexBuffer.xhtml
pub inline fn glTexBuffer(arg_1649: GLenum, arg_1650: GLenum, arg_1651: GLuint) void {
    return glad_glTexBuffer.?(arg_1649, arg_1650, arg_1651);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPrimitiveRestartIndex.xhtml
pub inline fn glPrimitiveRestartIndex(arg_1652: GLuint) void {
    return glad_glPrimitiveRestartIndex.?(arg_1652);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyBufferSubData.xhtml
pub inline fn glCopyBufferSubData(arg_1653: GLenum, arg_1654: GLenum, arg_1655: GLintptr, arg_1656: GLintptr, arg_1657: GLsizeiptr) void {
    return glad_glCopyBufferSubData.?(arg_1653, arg_1654, arg_1655, arg_1656, arg_1657);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetUniformIndices.xhtml
pub inline fn glGetUniformIndices(arg_1658: GLuint, arg_1659: GLsizei, arg_1660: [*c]const [*c]const GLchar, arg_1661: [*c]GLuint) void {
    return glad_glGetUniformIndices.?(arg_1658, arg_1659, arg_1660, arg_1661);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetActiveUniformsiv.xhtml
pub inline fn glGetActiveUniformsiv(arg_1662: GLuint, arg_1663: GLsizei, arg_1664: [*c]const GLuint, arg_1665: GLenum, arg_1666: [*c]GLint) void {
    return glad_glGetActiveUniformsiv.?(arg_1662, arg_1663, arg_1664, arg_1665, arg_1666);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetActiveUniformName.xhtml
pub inline fn glGetActiveUniformName(arg_1667: GLuint, arg_1668: GLuint, arg_1669: GLsizei, arg_1670: [*c]GLsizei, arg_1671: [*c]GLchar) void {
    return glad_glGetActiveUniformName.?(arg_1667, arg_1668, arg_1669, arg_1670, arg_1671);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetUniformBlockIndex.xhtml
pub inline fn glGetUniformBlockIndex(arg_1672: GLuint, arg_1673: [*c]const GLchar) GLuint {
    return glad_glGetUniformBlockIndex.?(arg_1672, arg_1673);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetActiveUniformBlockiv.xhtml
pub inline fn glGetActiveUniformBlockiv(arg_1674: GLuint, arg_1675: GLuint, arg_1676: GLenum, arg_1677: [*c]GLint) void {
    return glad_glGetActiveUniformBlockiv.?(arg_1674, arg_1675, arg_1676, arg_1677);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetActiveUniformBlockName.xhtml
pub inline fn glGetActiveUniformBlockName(arg_1678: GLuint, arg_1679: GLuint, arg_1680: GLsizei, arg_1681: [*c]GLsizei, arg_1682: [*c]GLchar) void {
    return glad_glGetActiveUniformBlockName.?(arg_1678, arg_1679, arg_1680, arg_1681, arg_1682);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformBlockBinding.xhtml
pub inline fn glUniformBlockBinding(arg_1683: GLuint, arg_1684: GLuint, arg_1685: GLuint) void {
    return glad_glUniformBlockBinding.?(arg_1683, arg_1684, arg_1685);
}
pub const GL_VERSION_3_2 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawElementsBaseVertex.xhtml
pub inline fn glDrawElementsBaseVertex(arg_1686: GLenum, arg_1687: GLsizei, arg_1688: GLenum, arg_1689: ?*const anyopaque, arg_1690: GLint) void {
    return glad_glDrawElementsBaseVertex.?(arg_1686, arg_1687, arg_1688, arg_1689, arg_1690);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawRangeElementsBaseVertex.xhtml
pub inline fn glDrawRangeElementsBaseVertex(arg_1691: GLenum, arg_1692: GLuint, arg_1693: GLuint, arg_1694: GLsizei, arg_1695: GLenum, arg_1696: ?*const anyopaque, arg_1697: GLint) void {
    return glad_glDrawRangeElementsBaseVertex.?(arg_1691, arg_1692, arg_1693, arg_1694, arg_1695, arg_1696, arg_1697);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawElementsInstancedBaseVertex.xhtml
pub inline fn glDrawElementsInstancedBaseVertex(arg_1698: GLenum, arg_1699: GLsizei, arg_1700: GLenum, arg_1701: ?*const anyopaque, arg_1702: GLsizei, arg_1703: GLint) void {
    return glad_glDrawElementsInstancedBaseVertex.?(arg_1698, arg_1699, arg_1700, arg_1701, arg_1702, arg_1703);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiDrawElementsBaseVertex.xhtml
pub inline fn glMultiDrawElementsBaseVertex(arg_1704: GLenum, arg_1705: [*c]const GLsizei, arg_1706: GLenum, arg_1707: [*c]const ?*const anyopaque, arg_1708: GLsizei, arg_1709: [*c]const GLint) void {
    return glad_glMultiDrawElementsBaseVertex.?(arg_1704, arg_1705, arg_1706, arg_1707, arg_1708, arg_1709);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProvokingVertex.xhtml
pub inline fn glProvokingVertex(arg_1710: GLenum) void {
    return glad_glProvokingVertex.?(arg_1710);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFenceSync.xhtml
pub inline fn glFenceSync(arg_1711: GLenum, arg_1712: GLbitfield) GLsync {
    return glad_glFenceSync.?(arg_1711, arg_1712);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsSync.xhtml
pub inline fn glIsSync(arg_1713: GLsync) GLboolean {
    return glad_glIsSync.?(arg_1713);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteSync.xhtml
pub inline fn glDeleteSync(arg_1714: GLsync) void {
    return glad_glDeleteSync.?(arg_1714);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClientWaitSync.xhtml
pub inline fn glClientWaitSync(arg_1715: GLsync, arg_1716: GLbitfield, arg_1717: GLuint64) GLenum {
    return glad_glClientWaitSync.?(arg_1715, arg_1716, arg_1717);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWaitSync.xhtml
pub inline fn glWaitSync(arg_1718: GLsync, arg_1719: GLbitfield, arg_1720: GLuint64) void {
    return glad_glWaitSync.?(arg_1718, arg_1719, arg_1720);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetInteger64v.xhtml
pub inline fn glGetInteger64v(arg_1721: GLenum, arg_1722: [*c]GLint64) void {
    return glad_glGetInteger64v.?(arg_1721, arg_1722);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetSynciv.xhtml
pub inline fn glGetSynciv(arg_1723: GLsync, arg_1724: GLenum, arg_1725: GLsizei, arg_1726: [*c]GLsizei, arg_1727: [*c]GLint) void {
    return glad_glGetSynciv.?(arg_1723, arg_1724, arg_1725, arg_1726, arg_1727);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetInteger64i_v.xhtml
pub inline fn glGetInteger64i_v(arg_1728: GLenum, arg_1729: GLuint, arg_1730: [*c]GLint64) void {
    return glad_glGetInteger64i_v.?(arg_1728, arg_1729, arg_1730);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetBufferParameteri64v.xhtml
pub inline fn glGetBufferParameteri64v(arg_1731: GLenum, arg_1732: GLenum, arg_1733: [*c]GLint64) void {
    return glad_glGetBufferParameteri64v.?(arg_1731, arg_1732, arg_1733);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferTexture.xhtml
pub inline fn glFramebufferTexture(arg_1734: GLenum, arg_1735: GLenum, arg_1736: GLuint, arg_1737: GLint) void {
    return glad_glFramebufferTexture.?(arg_1734, arg_1735, arg_1736, arg_1737);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexImage2DMultisample.xhtml
pub inline fn glTexImage2DMultisample(arg_1738: GLenum, arg_1739: GLsizei, arg_1740: GLenum, arg_1741: GLsizei, arg_1742: GLsizei, arg_1743: GLboolean) void {
    return glad_glTexImage2DMultisample.?(arg_1738, arg_1739, arg_1740, arg_1741, arg_1742, arg_1743);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexImage3DMultisample.xhtml
pub inline fn glTexImage3DMultisample(arg_1744: GLenum, arg_1745: GLsizei, arg_1746: GLenum, arg_1747: GLsizei, arg_1748: GLsizei, arg_1749: GLsizei, arg_1750: GLboolean) void {
    return glad_glTexImage3DMultisample.?(arg_1744, arg_1745, arg_1746, arg_1747, arg_1748, arg_1749, arg_1750);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMultisamplefv.xhtml
pub inline fn glGetMultisamplefv(arg_1751: GLenum, arg_1752: GLuint, arg_1753: [*c]GLfloat) void {
    return glad_glGetMultisamplefv.?(arg_1751, arg_1752, arg_1753);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSampleMaski.xhtml
pub inline fn glSampleMaski(arg_1754: GLuint, arg_1755: GLbitfield) void {
    return glad_glSampleMaski.?(arg_1754, arg_1755);
}
pub const GL_VERSION_3_3 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindFragDataLocationIndexed.xhtml
pub inline fn glBindFragDataLocationIndexed(arg_1756: GLuint, arg_1757: GLuint, arg_1758: GLuint, arg_1759: [*c]const GLchar) void {
    return glad_glBindFragDataLocationIndexed.?(arg_1756, arg_1757, arg_1758, arg_1759);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFragDataIndex.xhtml
pub inline fn glGetFragDataIndex(arg_1760: GLuint, arg_1761: [*c]const GLchar) GLint {
    return glad_glGetFragDataIndex.?(arg_1760, arg_1761);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenSamplers.xhtml
pub inline fn glGenSamplers(arg_1762: GLsizei, arg_1763: [*c]GLuint) void {
    return glad_glGenSamplers.?(arg_1762, arg_1763);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteSamplers.xhtml
pub inline fn glDeleteSamplers(arg_1764: GLsizei, arg_1765: [*c]const GLuint) void {
    return glad_glDeleteSamplers.?(arg_1764, arg_1765);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsSampler.xhtml
pub inline fn glIsSampler(arg_1766: GLuint) GLboolean {
    return glad_glIsSampler.?(arg_1766);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindSampler.xhtml
pub inline fn glBindSampler(arg_1767: GLuint, arg_1768: GLuint) void {
    return glad_glBindSampler.?(arg_1767, arg_1768);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSamplerParameteri.xhtml
pub inline fn glSamplerParameteri(arg_1769: GLuint, arg_1770: GLenum, arg_1771: GLint) void {
    return glad_glSamplerParameteri.?(arg_1769, arg_1770, arg_1771);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSamplerParameteriv.xhtml
pub inline fn glSamplerParameteriv(arg_1772: GLuint, arg_1773: GLenum, arg_1774: [*c]const GLint) void {
    return glad_glSamplerParameteriv.?(arg_1772, arg_1773, arg_1774);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSamplerParameterf.xhtml
pub inline fn glSamplerParameterf(arg_1775: GLuint, arg_1776: GLenum, arg_1777: GLfloat) void {
    return glad_glSamplerParameterf.?(arg_1775, arg_1776, arg_1777);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSamplerParameterfv.xhtml
pub inline fn glSamplerParameterfv(arg_1778: GLuint, arg_1779: GLenum, arg_1780: [*c]const GLfloat) void {
    return glad_glSamplerParameterfv.?(arg_1778, arg_1779, arg_1780);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSamplerParameterIiv.xhtml
pub inline fn glSamplerParameterIiv(arg_1781: GLuint, arg_1782: GLenum, arg_1783: [*c]const GLint) void {
    return glad_glSamplerParameterIiv.?(arg_1781, arg_1782, arg_1783);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSamplerParameterIuiv.xhtml
pub inline fn glSamplerParameterIuiv(arg_1784: GLuint, arg_1785: GLenum, arg_1786: [*c]const GLuint) void {
    return glad_glSamplerParameterIuiv.?(arg_1784, arg_1785, arg_1786);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetSamplerParameteriv.xhtml
pub inline fn glGetSamplerParameteriv(arg_1787: GLuint, arg_1788: GLenum, arg_1789: [*c]GLint) void {
    return glad_glGetSamplerParameteriv.?(arg_1787, arg_1788, arg_1789);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetSamplerParameterIiv.xhtml
pub inline fn glGetSamplerParameterIiv(arg_1790: GLuint, arg_1791: GLenum, arg_1792: [*c]GLint) void {
    return glad_glGetSamplerParameterIiv.?(arg_1790, arg_1791, arg_1792);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetSamplerParameterfv.xhtml
pub inline fn glGetSamplerParameterfv(arg_1793: GLuint, arg_1794: GLenum, arg_1795: [*c]GLfloat) void {
    return glad_glGetSamplerParameterfv.?(arg_1793, arg_1794, arg_1795);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetSamplerParameterIuiv.xhtml
pub inline fn glGetSamplerParameterIuiv(arg_1796: GLuint, arg_1797: GLenum, arg_1798: [*c]GLuint) void {
    return glad_glGetSamplerParameterIuiv.?(arg_1796, arg_1797, arg_1798);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glQueryCounter.xhtml
pub inline fn glQueryCounter(arg_1799: GLuint, arg_1800: GLenum) void {
    return glad_glQueryCounter.?(arg_1799, arg_1800);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetQueryObjecti64v.xhtml
pub inline fn glGetQueryObjecti64v(arg_1801: GLuint, arg_1802: GLenum, arg_1803: [*c]GLint64) void {
    return glad_glGetQueryObjecti64v.?(arg_1801, arg_1802, arg_1803);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetQueryObjectui64v.xhtml
pub inline fn glGetQueryObjectui64v(arg_1804: GLuint, arg_1805: GLenum, arg_1806: [*c]GLuint64) void {
    return glad_glGetQueryObjectui64v.?(arg_1804, arg_1805, arg_1806);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribDivisor.xhtml
pub inline fn glVertexAttribDivisor(arg_1807: GLuint, arg_1808: GLuint) void {
    return glad_glVertexAttribDivisor.?(arg_1807, arg_1808);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribP1ui.xhtml
pub inline fn glVertexAttribP1ui(arg_1809: GLuint, arg_1810: GLenum, arg_1811: GLboolean, arg_1812: GLuint) void {
    return glad_glVertexAttribP1ui.?(arg_1809, arg_1810, arg_1811, arg_1812);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribP1uiv.xhtml
pub inline fn glVertexAttribP1uiv(arg_1813: GLuint, arg_1814: GLenum, arg_1815: GLboolean, arg_1816: [*c]const GLuint) void {
    return glad_glVertexAttribP1uiv.?(arg_1813, arg_1814, arg_1815, arg_1816);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribP2ui.xhtml
pub inline fn glVertexAttribP2ui(arg_1817: GLuint, arg_1818: GLenum, arg_1819: GLboolean, arg_1820: GLuint) void {
    return glad_glVertexAttribP2ui.?(arg_1817, arg_1818, arg_1819, arg_1820);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribP2uiv.xhtml
pub inline fn glVertexAttribP2uiv(arg_1821: GLuint, arg_1822: GLenum, arg_1823: GLboolean, arg_1824: [*c]const GLuint) void {
    return glad_glVertexAttribP2uiv.?(arg_1821, arg_1822, arg_1823, arg_1824);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribP3ui.xhtml
pub inline fn glVertexAttribP3ui(arg_1825: GLuint, arg_1826: GLenum, arg_1827: GLboolean, arg_1828: GLuint) void {
    return glad_glVertexAttribP3ui.?(arg_1825, arg_1826, arg_1827, arg_1828);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribP3uiv.xhtml
pub inline fn glVertexAttribP3uiv(arg_1829: GLuint, arg_1830: GLenum, arg_1831: GLboolean, arg_1832: [*c]const GLuint) void {
    return glad_glVertexAttribP3uiv.?(arg_1829, arg_1830, arg_1831, arg_1832);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribP4ui.xhtml
pub inline fn glVertexAttribP4ui(arg_1833: GLuint, arg_1834: GLenum, arg_1835: GLboolean, arg_1836: GLuint) void {
    return glad_glVertexAttribP4ui.?(arg_1833, arg_1834, arg_1835, arg_1836);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribP4uiv.xhtml
pub inline fn glVertexAttribP4uiv(arg_1837: GLuint, arg_1838: GLenum, arg_1839: GLboolean, arg_1840: [*c]const GLuint) void {
    return glad_glVertexAttribP4uiv.?(arg_1837, arg_1838, arg_1839, arg_1840);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexP2ui.xhtml
pub inline fn glVertexP2ui(arg_1841: GLenum, arg_1842: GLuint) void {
    return glad_glVertexP2ui.?(arg_1841, arg_1842);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexP2uiv.xhtml
pub inline fn glVertexP2uiv(arg_1843: GLenum, arg_1844: [*c]const GLuint) void {
    return glad_glVertexP2uiv.?(arg_1843, arg_1844);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexP3ui.xhtml
pub inline fn glVertexP3ui(arg_1845: GLenum, arg_1846: GLuint) void {
    return glad_glVertexP3ui.?(arg_1845, arg_1846);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexP3uiv.xhtml
pub inline fn glVertexP3uiv(arg_1847: GLenum, arg_1848: [*c]const GLuint) void {
    return glad_glVertexP3uiv.?(arg_1847, arg_1848);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexP4ui.xhtml
pub inline fn glVertexP4ui(arg_1849: GLenum, arg_1850: GLuint) void {
    return glad_glVertexP4ui.?(arg_1849, arg_1850);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexP4uiv.xhtml
pub inline fn glVertexP4uiv(arg_1851: GLenum, arg_1852: [*c]const GLuint) void {
    return glad_glVertexP4uiv.?(arg_1851, arg_1852);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoordP1ui.xhtml
pub inline fn glTexCoordP1ui(arg_1853: GLenum, arg_1854: GLuint) void {
    return glad_glTexCoordP1ui.?(arg_1853, arg_1854);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoordP1uiv.xhtml
pub inline fn glTexCoordP1uiv(arg_1855: GLenum, arg_1856: [*c]const GLuint) void {
    return glad_glTexCoordP1uiv.?(arg_1855, arg_1856);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoordP2ui.xhtml
pub inline fn glTexCoordP2ui(arg_1857: GLenum, arg_1858: GLuint) void {
    return glad_glTexCoordP2ui.?(arg_1857, arg_1858);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoordP2uiv.xhtml
pub inline fn glTexCoordP2uiv(arg_1859: GLenum, arg_1860: [*c]const GLuint) void {
    return glad_glTexCoordP2uiv.?(arg_1859, arg_1860);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoordP3ui.xhtml
pub inline fn glTexCoordP3ui(arg_1861: GLenum, arg_1862: GLuint) void {
    return glad_glTexCoordP3ui.?(arg_1861, arg_1862);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoordP3uiv.xhtml
pub inline fn glTexCoordP3uiv(arg_1863: GLenum, arg_1864: [*c]const GLuint) void {
    return glad_glTexCoordP3uiv.?(arg_1863, arg_1864);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoordP4ui.xhtml
pub inline fn glTexCoordP4ui(arg_1865: GLenum, arg_1866: GLuint) void {
    return glad_glTexCoordP4ui.?(arg_1865, arg_1866);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoordP4uiv.xhtml
pub inline fn glTexCoordP4uiv(arg_1867: GLenum, arg_1868: [*c]const GLuint) void {
    return glad_glTexCoordP4uiv.?(arg_1867, arg_1868);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoordP1ui.xhtml
pub inline fn glMultiTexCoordP1ui(arg_1869: GLenum, arg_1870: GLenum, arg_1871: GLuint) void {
    return glad_glMultiTexCoordP1ui.?(arg_1869, arg_1870, arg_1871);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoordP1uiv.xhtml
pub inline fn glMultiTexCoordP1uiv(arg_1872: GLenum, arg_1873: GLenum, arg_1874: [*c]const GLuint) void {
    return glad_glMultiTexCoordP1uiv.?(arg_1872, arg_1873, arg_1874);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoordP2ui.xhtml
pub inline fn glMultiTexCoordP2ui(arg_1875: GLenum, arg_1876: GLenum, arg_1877: GLuint) void {
    return glad_glMultiTexCoordP2ui.?(arg_1875, arg_1876, arg_1877);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoordP2uiv.xhtml
pub inline fn glMultiTexCoordP2uiv(arg_1878: GLenum, arg_1879: GLenum, arg_1880: [*c]const GLuint) void {
    return glad_glMultiTexCoordP2uiv.?(arg_1878, arg_1879, arg_1880);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoordP3ui.xhtml
pub inline fn glMultiTexCoordP3ui(arg_1881: GLenum, arg_1882: GLenum, arg_1883: GLuint) void {
    return glad_glMultiTexCoordP3ui.?(arg_1881, arg_1882, arg_1883);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoordP3uiv.xhtml
pub inline fn glMultiTexCoordP3uiv(arg_1884: GLenum, arg_1885: GLenum, arg_1886: [*c]const GLuint) void {
    return glad_glMultiTexCoordP3uiv.?(arg_1884, arg_1885, arg_1886);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoordP4ui.xhtml
pub inline fn glMultiTexCoordP4ui(arg_1887: GLenum, arg_1888: GLenum, arg_1889: GLuint) void {
    return glad_glMultiTexCoordP4ui.?(arg_1887, arg_1888, arg_1889);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoordP4uiv.xhtml
pub inline fn glMultiTexCoordP4uiv(arg_1890: GLenum, arg_1891: GLenum, arg_1892: [*c]const GLuint) void {
    return glad_glMultiTexCoordP4uiv.?(arg_1890, arg_1891, arg_1892);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNormalP3ui.xhtml
pub inline fn glNormalP3ui(arg_1893: GLenum, arg_1894: GLuint) void {
    return glad_glNormalP3ui.?(arg_1893, arg_1894);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNormalP3uiv.xhtml
pub inline fn glNormalP3uiv(arg_1895: GLenum, arg_1896: [*c]const GLuint) void {
    return glad_glNormalP3uiv.?(arg_1895, arg_1896);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorP3ui.xhtml
pub inline fn glColorP3ui(arg_1897: GLenum, arg_1898: GLuint) void {
    return glad_glColorP3ui.?(arg_1897, arg_1898);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorP3uiv.xhtml
pub inline fn glColorP3uiv(arg_1899: GLenum, arg_1900: [*c]const GLuint) void {
    return glad_glColorP3uiv.?(arg_1899, arg_1900);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorP4ui.xhtml
pub inline fn glColorP4ui(arg_1901: GLenum, arg_1902: GLuint) void {
    return glad_glColorP4ui.?(arg_1901, arg_1902);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorP4uiv.xhtml
pub inline fn glColorP4uiv(arg_1903: GLenum, arg_1904: [*c]const GLuint) void {
    return glad_glColorP4uiv.?(arg_1903, arg_1904);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColorP3ui.xhtml
pub inline fn glSecondaryColorP3ui(arg_1905: GLenum, arg_1906: GLuint) void {
    return glad_glSecondaryColorP3ui.?(arg_1905, arg_1906);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColorP3uiv.xhtml
pub inline fn glSecondaryColorP3uiv(arg_1907: GLenum, arg_1908: [*c]const GLuint) void {
    return glad_glSecondaryColorP3uiv.?(arg_1907, arg_1908);
}
pub const GL_VERSION_4_0 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMinSampleShading.xhtml
pub inline fn glMinSampleShading(arg_1909: GLfloat) void {
    return glad_glMinSampleShading.?(arg_1909);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendEquationi.xhtml
pub inline fn glBlendEquationi(arg_1910: GLuint, arg_1911: GLenum) void {
    return glad_glBlendEquationi.?(arg_1910, arg_1911);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendEquationSeparatei.xhtml
pub inline fn glBlendEquationSeparatei(arg_1912: GLuint, arg_1913: GLenum, arg_1914: GLenum) void {
    return glad_glBlendEquationSeparatei.?(arg_1912, arg_1913, arg_1914);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendFunci.xhtml
pub inline fn glBlendFunci(arg_1915: GLuint, arg_1916: GLenum, arg_1917: GLenum) void {
    return glad_glBlendFunci.?(arg_1915, arg_1916, arg_1917);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendFuncSeparatei.xhtml
pub inline fn glBlendFuncSeparatei(arg_1918: GLuint, arg_1919: GLenum, arg_1920: GLenum, arg_1921: GLenum, arg_1922: GLenum) void {
    return glad_glBlendFuncSeparatei.?(arg_1918, arg_1919, arg_1920, arg_1921, arg_1922);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawArraysIndirect.xhtml
pub inline fn glDrawArraysIndirect(arg_1923: GLenum, arg_1924: ?*const anyopaque) void {
    return glad_glDrawArraysIndirect.?(arg_1923, arg_1924);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawElementsIndirect.xhtml
pub inline fn glDrawElementsIndirect(arg_1925: GLenum, arg_1926: GLenum, arg_1927: ?*const anyopaque) void {
    return glad_glDrawElementsIndirect.?(arg_1925, arg_1926, arg_1927);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform1d.xhtml
pub inline fn glUniform1d(arg_1928: GLint, arg_1929: GLdouble) void {
    return glad_glUniform1d.?(arg_1928, arg_1929);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform2d.xhtml
pub inline fn glUniform2d(arg_1930: GLint, arg_1931: GLdouble, arg_1932: GLdouble) void {
    return glad_glUniform2d.?(arg_1930, arg_1931, arg_1932);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform3d.xhtml
pub inline fn glUniform3d(arg_1933: GLint, arg_1934: GLdouble, arg_1935: GLdouble, arg_1936: GLdouble) void {
    return glad_glUniform3d.?(arg_1933, arg_1934, arg_1935, arg_1936);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform4d.xhtml
pub inline fn glUniform4d(arg_1937: GLint, arg_1938: GLdouble, arg_1939: GLdouble, arg_1940: GLdouble, arg_1941: GLdouble) void {
    return glad_glUniform4d.?(arg_1937, arg_1938, arg_1939, arg_1940, arg_1941);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform1dv.xhtml
pub inline fn glUniform1dv(arg_1942: GLint, arg_1943: GLsizei, arg_1944: [*c]const GLdouble) void {
    return glad_glUniform1dv.?(arg_1942, arg_1943, arg_1944);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform2dv.xhtml
pub inline fn glUniform2dv(arg_1945: GLint, arg_1946: GLsizei, arg_1947: [*c]const GLdouble) void {
    return glad_glUniform2dv.?(arg_1945, arg_1946, arg_1947);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform3dv.xhtml
pub inline fn glUniform3dv(arg_1948: GLint, arg_1949: GLsizei, arg_1950: [*c]const GLdouble) void {
    return glad_glUniform3dv.?(arg_1948, arg_1949, arg_1950);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform4dv.xhtml
pub inline fn glUniform4dv(arg_1951: GLint, arg_1952: GLsizei, arg_1953: [*c]const GLdouble) void {
    return glad_glUniform4dv.?(arg_1951, arg_1952, arg_1953);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix2dv.xhtml
pub inline fn glUniformMatrix2dv(arg_1954: GLint, arg_1955: GLsizei, arg_1956: GLboolean, arg_1957: [*c]const GLdouble) void {
    return glad_glUniformMatrix2dv.?(arg_1954, arg_1955, arg_1956, arg_1957);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix3dv.xhtml
pub inline fn glUniformMatrix3dv(arg_1958: GLint, arg_1959: GLsizei, arg_1960: GLboolean, arg_1961: [*c]const GLdouble) void {
    return glad_glUniformMatrix3dv.?(arg_1958, arg_1959, arg_1960, arg_1961);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix4dv.xhtml
pub inline fn glUniformMatrix4dv(arg_1962: GLint, arg_1963: GLsizei, arg_1964: GLboolean, arg_1965: [*c]const GLdouble) void {
    return glad_glUniformMatrix4dv.?(arg_1962, arg_1963, arg_1964, arg_1965);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix2x3dv.xhtml
pub inline fn glUniformMatrix2x3dv(arg_1966: GLint, arg_1967: GLsizei, arg_1968: GLboolean, arg_1969: [*c]const GLdouble) void {
    return glad_glUniformMatrix2x3dv.?(arg_1966, arg_1967, arg_1968, arg_1969);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix2x4dv.xhtml
pub inline fn glUniformMatrix2x4dv(arg_1970: GLint, arg_1971: GLsizei, arg_1972: GLboolean, arg_1973: [*c]const GLdouble) void {
    return glad_glUniformMatrix2x4dv.?(arg_1970, arg_1971, arg_1972, arg_1973);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix3x2dv.xhtml
pub inline fn glUniformMatrix3x2dv(arg_1974: GLint, arg_1975: GLsizei, arg_1976: GLboolean, arg_1977: [*c]const GLdouble) void {
    return glad_glUniformMatrix3x2dv.?(arg_1974, arg_1975, arg_1976, arg_1977);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix3x4dv.xhtml
pub inline fn glUniformMatrix3x4dv(arg_1978: GLint, arg_1979: GLsizei, arg_1980: GLboolean, arg_1981: [*c]const GLdouble) void {
    return glad_glUniformMatrix3x4dv.?(arg_1978, arg_1979, arg_1980, arg_1981);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix4x2dv.xhtml
pub inline fn glUniformMatrix4x2dv(arg_1982: GLint, arg_1983: GLsizei, arg_1984: GLboolean, arg_1985: [*c]const GLdouble) void {
    return glad_glUniformMatrix4x2dv.?(arg_1982, arg_1983, arg_1984, arg_1985);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix4x3dv.xhtml
pub inline fn glUniformMatrix4x3dv(arg_1986: GLint, arg_1987: GLsizei, arg_1988: GLboolean, arg_1989: [*c]const GLdouble) void {
    return glad_glUniformMatrix4x3dv.?(arg_1986, arg_1987, arg_1988, arg_1989);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetUniformdv.xhtml
pub inline fn glGetUniformdv(arg_1990: GLuint, arg_1991: GLint, arg_1992: [*c]GLdouble) void {
    return glad_glGetUniformdv.?(arg_1990, arg_1991, arg_1992);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetSubroutineUniformLocation.xhtml
pub inline fn glGetSubroutineUniformLocation(arg_1993: GLuint, arg_1994: GLenum, arg_1995: [*c]const GLchar) GLint {
    return glad_glGetSubroutineUniformLocation.?(arg_1993, arg_1994, arg_1995);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetSubroutineIndex.xhtml
pub inline fn glGetSubroutineIndex(arg_1996: GLuint, arg_1997: GLenum, arg_1998: [*c]const GLchar) GLuint {
    return glad_glGetSubroutineIndex.?(arg_1996, arg_1997, arg_1998);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetActiveSubroutineUniformiv.xhtml
pub inline fn glGetActiveSubroutineUniformiv(arg_1999: GLuint, arg_2000: GLenum, arg_2001: GLuint, arg_2002: GLenum, arg_2003: [*c]GLint) void {
    return glad_glGetActiveSubroutineUniformiv.?(arg_1999, arg_2000, arg_2001, arg_2002, arg_2003);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetActiveSubroutineUniformName.xhtml
pub inline fn glGetActiveSubroutineUniformName(arg_2004: GLuint, arg_2005: GLenum, arg_2006: GLuint, arg_2007: GLsizei, arg_2008: [*c]GLsizei, arg_2009: [*c]GLchar) void {
    return glad_glGetActiveSubroutineUniformName.?(arg_2004, arg_2005, arg_2006, arg_2007, arg_2008, arg_2009);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetActiveSubroutineName.xhtml
pub inline fn glGetActiveSubroutineName(arg_2010: GLuint, arg_2011: GLenum, arg_2012: GLuint, arg_2013: GLsizei, arg_2014: [*c]GLsizei, arg_2015: [*c]GLchar) void {
    return glad_glGetActiveSubroutineName.?(arg_2010, arg_2011, arg_2012, arg_2013, arg_2014, arg_2015);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformSubroutinesuiv.xhtml
pub inline fn glUniformSubroutinesuiv(arg_2016: GLenum, arg_2017: GLsizei, arg_2018: [*c]const GLuint) void {
    return glad_glUniformSubroutinesuiv.?(arg_2016, arg_2017, arg_2018);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetUniformSubroutineuiv.xhtml
pub inline fn glGetUniformSubroutineuiv(arg_2019: GLenum, arg_2020: GLint, arg_2021: [*c]GLuint) void {
    return glad_glGetUniformSubroutineuiv.?(arg_2019, arg_2020, arg_2021);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramStageiv.xhtml
pub inline fn glGetProgramStageiv(arg_2022: GLuint, arg_2023: GLenum, arg_2024: GLenum, arg_2025: [*c]GLint) void {
    return glad_glGetProgramStageiv.?(arg_2022, arg_2023, arg_2024, arg_2025);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPatchParameteri.xhtml
pub inline fn glPatchParameteri(arg_2026: GLenum, arg_2027: GLint) void {
    return glad_glPatchParameteri.?(arg_2026, arg_2027);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPatchParameterfv.xhtml
pub inline fn glPatchParameterfv(arg_2028: GLenum, arg_2029: [*c]const GLfloat) void {
    return glad_glPatchParameterfv.?(arg_2028, arg_2029);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindTransformFeedback.xhtml
pub inline fn glBindTransformFeedback(arg_2030: GLenum, arg_2031: GLuint) void {
    return glad_glBindTransformFeedback.?(arg_2030, arg_2031);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteTransformFeedbacks.xhtml
pub inline fn glDeleteTransformFeedbacks(arg_2032: GLsizei, arg_2033: [*c]const GLuint) void {
    return glad_glDeleteTransformFeedbacks.?(arg_2032, arg_2033);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenTransformFeedbacks.xhtml
pub inline fn glGenTransformFeedbacks(arg_2034: GLsizei, arg_2035: [*c]GLuint) void {
    return glad_glGenTransformFeedbacks.?(arg_2034, arg_2035);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsTransformFeedback.xhtml
pub inline fn glIsTransformFeedback(arg_2036: GLuint) GLboolean {
    return glad_glIsTransformFeedback.?(arg_2036);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPauseTransformFeedback.xhtml
pub inline fn glPauseTransformFeedback() void {
    return glad_glPauseTransformFeedback.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glResumeTransformFeedback.xhtml
pub inline fn glResumeTransformFeedback() void {
    return glad_glResumeTransformFeedback.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawTransformFeedback.xhtml
pub inline fn glDrawTransformFeedback(arg_2037: GLenum, arg_2038: GLuint) void {
    return glad_glDrawTransformFeedback.?(arg_2037, arg_2038);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawTransformFeedbackStream.xhtml
pub inline fn glDrawTransformFeedbackStream(arg_2039: GLenum, arg_2040: GLuint, arg_2041: GLuint) void {
    return glad_glDrawTransformFeedbackStream.?(arg_2039, arg_2040, arg_2041);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBeginQueryIndexed.xhtml
pub inline fn glBeginQueryIndexed(arg_2042: GLenum, arg_2043: GLuint, arg_2044: GLuint) void {
    return glad_glBeginQueryIndexed.?(arg_2042, arg_2043, arg_2044);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEndQueryIndexed.xhtml
pub inline fn glEndQueryIndexed(arg_2045: GLenum, arg_2046: GLuint) void {
    return glad_glEndQueryIndexed.?(arg_2045, arg_2046);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetQueryIndexediv.xhtml
pub inline fn glGetQueryIndexediv(arg_2047: GLenum, arg_2048: GLuint, arg_2049: GLenum, arg_2050: [*c]GLint) void {
    return glad_glGetQueryIndexediv.?(arg_2047, arg_2048, arg_2049, arg_2050);
}
pub const GL_VERSION_4_1 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReleaseShaderCompiler.xhtml
pub inline fn glReleaseShaderCompiler() void {
    return glad_glReleaseShaderCompiler.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glShaderBinary.xhtml
pub inline fn glShaderBinary(arg_2051: GLsizei, arg_2052: [*c]const GLuint, arg_2053: GLenum, arg_2054: ?*const anyopaque, arg_2055: GLsizei) void {
    return glad_glShaderBinary.?(arg_2051, arg_2052, arg_2053, arg_2054, arg_2055);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetShaderPrecisionFormat.xhtml
pub inline fn glGetShaderPrecisionFormat(arg_2056: GLenum, arg_2057: GLenum, arg_2058: [*c]GLint, arg_2059: [*c]GLint) void {
    return glad_glGetShaderPrecisionFormat.?(arg_2056, arg_2057, arg_2058, arg_2059);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDepthRangef.xhtml
pub inline fn glDepthRangef(arg_2060: GLfloat, arg_2061: GLfloat) void {
    return glad_glDepthRangef.?(arg_2060, arg_2061);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearDepthf.xhtml
pub inline fn glClearDepthf(arg_2062: GLfloat) void {
    return glad_glClearDepthf.?(arg_2062);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramBinary.xhtml
pub inline fn glGetProgramBinary(arg_2063: GLuint, arg_2064: GLsizei, arg_2065: [*c]GLsizei, arg_2066: [*c]GLenum, arg_2067: ?*anyopaque) void {
    return glad_glGetProgramBinary.?(arg_2063, arg_2064, arg_2065, arg_2066, arg_2067);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramBinary.xhtml
pub inline fn glProgramBinary(arg_2068: GLuint, arg_2069: GLenum, arg_2070: ?*const anyopaque, arg_2071: GLsizei) void {
    return glad_glProgramBinary.?(arg_2068, arg_2069, arg_2070, arg_2071);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramParameteri.xhtml
pub inline fn glProgramParameteri(arg_2072: GLuint, arg_2073: GLenum, arg_2074: GLint) void {
    return glad_glProgramParameteri.?(arg_2072, arg_2073, arg_2074);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUseProgramStages.xhtml
pub inline fn glUseProgramStages(arg_2075: GLuint, arg_2076: GLbitfield, arg_2077: GLuint) void {
    return glad_glUseProgramStages.?(arg_2075, arg_2076, arg_2077);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glActiveShaderProgram.xhtml
pub inline fn glActiveShaderProgram(arg_2078: GLuint, arg_2079: GLuint) void {
    return glad_glActiveShaderProgram.?(arg_2078, arg_2079);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCreateShaderProgramv.xhtml
pub inline fn glCreateShaderProgramv(arg_2080: GLenum, arg_2081: GLsizei, arg_2082: [*c]const [*c]const GLchar) GLuint {
    return glad_glCreateShaderProgramv.?(arg_2080, arg_2081, arg_2082);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindProgramPipeline.xhtml
pub inline fn glBindProgramPipeline(arg_2083: GLuint) void {
    return glad_glBindProgramPipeline.?(arg_2083);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteProgramPipelines.xhtml
pub inline fn glDeleteProgramPipelines(arg_2084: GLsizei, arg_2085: [*c]const GLuint) void {
    return glad_glDeleteProgramPipelines.?(arg_2084, arg_2085);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenProgramPipelines.xhtml
pub inline fn glGenProgramPipelines(arg_2086: GLsizei, arg_2087: [*c]GLuint) void {
    return glad_glGenProgramPipelines.?(arg_2086, arg_2087);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsProgramPipeline.xhtml
pub inline fn glIsProgramPipeline(arg_2088: GLuint) GLboolean {
    return glad_glIsProgramPipeline.?(arg_2088);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramPipelineiv.xhtml
pub inline fn glGetProgramPipelineiv(arg_2089: GLuint, arg_2090: GLenum, arg_2091: [*c]GLint) void {
    return glad_glGetProgramPipelineiv.?(arg_2089, arg_2090, arg_2091);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform1i.xhtml
pub inline fn glProgramUniform1i(arg_2092: GLuint, arg_2093: GLint, arg_2094: GLint) void {
    return glad_glProgramUniform1i.?(arg_2092, arg_2093, arg_2094);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform1iv.xhtml
pub inline fn glProgramUniform1iv(arg_2095: GLuint, arg_2096: GLint, arg_2097: GLsizei, arg_2098: [*c]const GLint) void {
    return glad_glProgramUniform1iv.?(arg_2095, arg_2096, arg_2097, arg_2098);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform1f.xhtml
pub inline fn glProgramUniform1f(arg_2099: GLuint, arg_2100: GLint, arg_2101: GLfloat) void {
    return glad_glProgramUniform1f.?(arg_2099, arg_2100, arg_2101);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform1fv.xhtml
pub inline fn glProgramUniform1fv(arg_2102: GLuint, arg_2103: GLint, arg_2104: GLsizei, arg_2105: [*c]const GLfloat) void {
    return glad_glProgramUniform1fv.?(arg_2102, arg_2103, arg_2104, arg_2105);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform1d.xhtml
pub inline fn glProgramUniform1d(arg_2106: GLuint, arg_2107: GLint, arg_2108: GLdouble) void {
    return glad_glProgramUniform1d.?(arg_2106, arg_2107, arg_2108);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform1dv.xhtml
pub inline fn glProgramUniform1dv(arg_2109: GLuint, arg_2110: GLint, arg_2111: GLsizei, arg_2112: [*c]const GLdouble) void {
    return glad_glProgramUniform1dv.?(arg_2109, arg_2110, arg_2111, arg_2112);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform1ui.xhtml
pub inline fn glProgramUniform1ui(arg_2113: GLuint, arg_2114: GLint, arg_2115: GLuint) void {
    return glad_glProgramUniform1ui.?(arg_2113, arg_2114, arg_2115);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform1uiv.xhtml
pub inline fn glProgramUniform1uiv(arg_2116: GLuint, arg_2117: GLint, arg_2118: GLsizei, arg_2119: [*c]const GLuint) void {
    return glad_glProgramUniform1uiv.?(arg_2116, arg_2117, arg_2118, arg_2119);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform2i.xhtml
pub inline fn glProgramUniform2i(arg_2120: GLuint, arg_2121: GLint, arg_2122: GLint, arg_2123: GLint) void {
    return glad_glProgramUniform2i.?(arg_2120, arg_2121, arg_2122, arg_2123);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform2iv.xhtml
pub inline fn glProgramUniform2iv(arg_2124: GLuint, arg_2125: GLint, arg_2126: GLsizei, arg_2127: [*c]const GLint) void {
    return glad_glProgramUniform2iv.?(arg_2124, arg_2125, arg_2126, arg_2127);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform2f.xhtml
pub inline fn glProgramUniform2f(arg_2128: GLuint, arg_2129: GLint, arg_2130: GLfloat, arg_2131: GLfloat) void {
    return glad_glProgramUniform2f.?(arg_2128, arg_2129, arg_2130, arg_2131);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform2fv.xhtml
pub inline fn glProgramUniform2fv(arg_2132: GLuint, arg_2133: GLint, arg_2134: GLsizei, arg_2135: [*c]const GLfloat) void {
    return glad_glProgramUniform2fv.?(arg_2132, arg_2133, arg_2134, arg_2135);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform2d.xhtml
pub inline fn glProgramUniform2d(arg_2136: GLuint, arg_2137: GLint, arg_2138: GLdouble, arg_2139: GLdouble) void {
    return glad_glProgramUniform2d.?(arg_2136, arg_2137, arg_2138, arg_2139);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform2dv.xhtml
pub inline fn glProgramUniform2dv(arg_2140: GLuint, arg_2141: GLint, arg_2142: GLsizei, arg_2143: [*c]const GLdouble) void {
    return glad_glProgramUniform2dv.?(arg_2140, arg_2141, arg_2142, arg_2143);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform2ui.xhtml
pub inline fn glProgramUniform2ui(arg_2144: GLuint, arg_2145: GLint, arg_2146: GLuint, arg_2147: GLuint) void {
    return glad_glProgramUniform2ui.?(arg_2144, arg_2145, arg_2146, arg_2147);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform2uiv.xhtml
pub inline fn glProgramUniform2uiv(arg_2148: GLuint, arg_2149: GLint, arg_2150: GLsizei, arg_2151: [*c]const GLuint) void {
    return glad_glProgramUniform2uiv.?(arg_2148, arg_2149, arg_2150, arg_2151);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform3i.xhtml
pub inline fn glProgramUniform3i(arg_2152: GLuint, arg_2153: GLint, arg_2154: GLint, arg_2155: GLint, arg_2156: GLint) void {
    return glad_glProgramUniform3i.?(arg_2152, arg_2153, arg_2154, arg_2155, arg_2156);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform3iv.xhtml
pub inline fn glProgramUniform3iv(arg_2157: GLuint, arg_2158: GLint, arg_2159: GLsizei, arg_2160: [*c]const GLint) void {
    return glad_glProgramUniform3iv.?(arg_2157, arg_2158, arg_2159, arg_2160);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform3f.xhtml
pub inline fn glProgramUniform3f(arg_2161: GLuint, arg_2162: GLint, arg_2163: GLfloat, arg_2164: GLfloat, arg_2165: GLfloat) void {
    return glad_glProgramUniform3f.?(arg_2161, arg_2162, arg_2163, arg_2164, arg_2165);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform3fv.xhtml
pub inline fn glProgramUniform3fv(arg_2166: GLuint, arg_2167: GLint, arg_2168: GLsizei, arg_2169: [*c]const GLfloat) void {
    return glad_glProgramUniform3fv.?(arg_2166, arg_2167, arg_2168, arg_2169);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform3d.xhtml
pub inline fn glProgramUniform3d(arg_2170: GLuint, arg_2171: GLint, arg_2172: GLdouble, arg_2173: GLdouble, arg_2174: GLdouble) void {
    return glad_glProgramUniform3d.?(arg_2170, arg_2171, arg_2172, arg_2173, arg_2174);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform3dv.xhtml
pub inline fn glProgramUniform3dv(arg_2175: GLuint, arg_2176: GLint, arg_2177: GLsizei, arg_2178: [*c]const GLdouble) void {
    return glad_glProgramUniform3dv.?(arg_2175, arg_2176, arg_2177, arg_2178);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform3ui.xhtml
pub inline fn glProgramUniform3ui(arg_2179: GLuint, arg_2180: GLint, arg_2181: GLuint, arg_2182: GLuint, arg_2183: GLuint) void {
    return glad_glProgramUniform3ui.?(arg_2179, arg_2180, arg_2181, arg_2182, arg_2183);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform3uiv.xhtml
pub inline fn glProgramUniform3uiv(arg_2184: GLuint, arg_2185: GLint, arg_2186: GLsizei, arg_2187: [*c]const GLuint) void {
    return glad_glProgramUniform3uiv.?(arg_2184, arg_2185, arg_2186, arg_2187);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform4i.xhtml
pub inline fn glProgramUniform4i(arg_2188: GLuint, arg_2189: GLint, arg_2190: GLint, arg_2191: GLint, arg_2192: GLint, arg_2193: GLint) void {
    return glad_glProgramUniform4i.?(arg_2188, arg_2189, arg_2190, arg_2191, arg_2192, arg_2193);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform4iv.xhtml
pub inline fn glProgramUniform4iv(arg_2194: GLuint, arg_2195: GLint, arg_2196: GLsizei, arg_2197: [*c]const GLint) void {
    return glad_glProgramUniform4iv.?(arg_2194, arg_2195, arg_2196, arg_2197);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform4f.xhtml
pub inline fn glProgramUniform4f(arg_2198: GLuint, arg_2199: GLint, arg_2200: GLfloat, arg_2201: GLfloat, arg_2202: GLfloat, arg_2203: GLfloat) void {
    return glad_glProgramUniform4f.?(arg_2198, arg_2199, arg_2200, arg_2201, arg_2202, arg_2203);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform4fv.xhtml
pub inline fn glProgramUniform4fv(arg_2204: GLuint, arg_2205: GLint, arg_2206: GLsizei, arg_2207: [*c]const GLfloat) void {
    return glad_glProgramUniform4fv.?(arg_2204, arg_2205, arg_2206, arg_2207);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform4d.xhtml
pub inline fn glProgramUniform4d(arg_2208: GLuint, arg_2209: GLint, arg_2210: GLdouble, arg_2211: GLdouble, arg_2212: GLdouble, arg_2213: GLdouble) void {
    return glad_glProgramUniform4d.?(arg_2208, arg_2209, arg_2210, arg_2211, arg_2212, arg_2213);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform4dv.xhtml
pub inline fn glProgramUniform4dv(arg_2214: GLuint, arg_2215: GLint, arg_2216: GLsizei, arg_2217: [*c]const GLdouble) void {
    return glad_glProgramUniform4dv.?(arg_2214, arg_2215, arg_2216, arg_2217);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform4ui.xhtml
pub inline fn glProgramUniform4ui(arg_2218: GLuint, arg_2219: GLint, arg_2220: GLuint, arg_2221: GLuint, arg_2222: GLuint, arg_2223: GLuint) void {
    return glad_glProgramUniform4ui.?(arg_2218, arg_2219, arg_2220, arg_2221, arg_2222, arg_2223);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform4uiv.xhtml
pub inline fn glProgramUniform4uiv(arg_2224: GLuint, arg_2225: GLint, arg_2226: GLsizei, arg_2227: [*c]const GLuint) void {
    return glad_glProgramUniform4uiv.?(arg_2224, arg_2225, arg_2226, arg_2227);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix2fv.xhtml
pub inline fn glProgramUniformMatrix2fv(arg_2228: GLuint, arg_2229: GLint, arg_2230: GLsizei, arg_2231: GLboolean, arg_2232: [*c]const GLfloat) void {
    return glad_glProgramUniformMatrix2fv.?(arg_2228, arg_2229, arg_2230, arg_2231, arg_2232);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix3fv.xhtml
pub inline fn glProgramUniformMatrix3fv(arg_2233: GLuint, arg_2234: GLint, arg_2235: GLsizei, arg_2236: GLboolean, arg_2237: [*c]const GLfloat) void {
    return glad_glProgramUniformMatrix3fv.?(arg_2233, arg_2234, arg_2235, arg_2236, arg_2237);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix4fv.xhtml
pub inline fn glProgramUniformMatrix4fv(arg_2238: GLuint, arg_2239: GLint, arg_2240: GLsizei, arg_2241: GLboolean, arg_2242: [*c]const GLfloat) void {
    return glad_glProgramUniformMatrix4fv.?(arg_2238, arg_2239, arg_2240, arg_2241, arg_2242);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix2dv.xhtml
pub inline fn glProgramUniformMatrix2dv(arg_2243: GLuint, arg_2244: GLint, arg_2245: GLsizei, arg_2246: GLboolean, arg_2247: [*c]const GLdouble) void {
    return glad_glProgramUniformMatrix2dv.?(arg_2243, arg_2244, arg_2245, arg_2246, arg_2247);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix3dv.xhtml
pub inline fn glProgramUniformMatrix3dv(arg_2248: GLuint, arg_2249: GLint, arg_2250: GLsizei, arg_2251: GLboolean, arg_2252: [*c]const GLdouble) void {
    return glad_glProgramUniformMatrix3dv.?(arg_2248, arg_2249, arg_2250, arg_2251, arg_2252);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix4dv.xhtml
pub inline fn glProgramUniformMatrix4dv(arg_2253: GLuint, arg_2254: GLint, arg_2255: GLsizei, arg_2256: GLboolean, arg_2257: [*c]const GLdouble) void {
    return glad_glProgramUniformMatrix4dv.?(arg_2253, arg_2254, arg_2255, arg_2256, arg_2257);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix2x3fv.xhtml
pub inline fn glProgramUniformMatrix2x3fv(arg_2258: GLuint, arg_2259: GLint, arg_2260: GLsizei, arg_2261: GLboolean, arg_2262: [*c]const GLfloat) void {
    return glad_glProgramUniformMatrix2x3fv.?(arg_2258, arg_2259, arg_2260, arg_2261, arg_2262);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix3x2fv.xhtml
pub inline fn glProgramUniformMatrix3x2fv(arg_2263: GLuint, arg_2264: GLint, arg_2265: GLsizei, arg_2266: GLboolean, arg_2267: [*c]const GLfloat) void {
    return glad_glProgramUniformMatrix3x2fv.?(arg_2263, arg_2264, arg_2265, arg_2266, arg_2267);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix2x4fv.xhtml
pub inline fn glProgramUniformMatrix2x4fv(arg_2268: GLuint, arg_2269: GLint, arg_2270: GLsizei, arg_2271: GLboolean, arg_2272: [*c]const GLfloat) void {
    return glad_glProgramUniformMatrix2x4fv.?(arg_2268, arg_2269, arg_2270, arg_2271, arg_2272);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix4x2fv.xhtml
pub inline fn glProgramUniformMatrix4x2fv(arg_2273: GLuint, arg_2274: GLint, arg_2275: GLsizei, arg_2276: GLboolean, arg_2277: [*c]const GLfloat) void {
    return glad_glProgramUniformMatrix4x2fv.?(arg_2273, arg_2274, arg_2275, arg_2276, arg_2277);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix3x4fv.xhtml
pub inline fn glProgramUniformMatrix3x4fv(arg_2278: GLuint, arg_2279: GLint, arg_2280: GLsizei, arg_2281: GLboolean, arg_2282: [*c]const GLfloat) void {
    return glad_glProgramUniformMatrix3x4fv.?(arg_2278, arg_2279, arg_2280, arg_2281, arg_2282);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix4x3fv.xhtml
pub inline fn glProgramUniformMatrix4x3fv(arg_2283: GLuint, arg_2284: GLint, arg_2285: GLsizei, arg_2286: GLboolean, arg_2287: [*c]const GLfloat) void {
    return glad_glProgramUniformMatrix4x3fv.?(arg_2283, arg_2284, arg_2285, arg_2286, arg_2287);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix2x3dv.xhtml
pub inline fn glProgramUniformMatrix2x3dv(arg_2288: GLuint, arg_2289: GLint, arg_2290: GLsizei, arg_2291: GLboolean, arg_2292: [*c]const GLdouble) void {
    return glad_glProgramUniformMatrix2x3dv.?(arg_2288, arg_2289, arg_2290, arg_2291, arg_2292);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix3x2dv.xhtml
pub inline fn glProgramUniformMatrix3x2dv(arg_2293: GLuint, arg_2294: GLint, arg_2295: GLsizei, arg_2296: GLboolean, arg_2297: [*c]const GLdouble) void {
    return glad_glProgramUniformMatrix3x2dv.?(arg_2293, arg_2294, arg_2295, arg_2296, arg_2297);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix2x4dv.xhtml
pub inline fn glProgramUniformMatrix2x4dv(arg_2298: GLuint, arg_2299: GLint, arg_2300: GLsizei, arg_2301: GLboolean, arg_2302: [*c]const GLdouble) void {
    return glad_glProgramUniformMatrix2x4dv.?(arg_2298, arg_2299, arg_2300, arg_2301, arg_2302);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix4x2dv.xhtml
pub inline fn glProgramUniformMatrix4x2dv(arg_2303: GLuint, arg_2304: GLint, arg_2305: GLsizei, arg_2306: GLboolean, arg_2307: [*c]const GLdouble) void {
    return glad_glProgramUniformMatrix4x2dv.?(arg_2303, arg_2304, arg_2305, arg_2306, arg_2307);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix3x4dv.xhtml
pub inline fn glProgramUniformMatrix3x4dv(arg_2308: GLuint, arg_2309: GLint, arg_2310: GLsizei, arg_2311: GLboolean, arg_2312: [*c]const GLdouble) void {
    return glad_glProgramUniformMatrix3x4dv.?(arg_2308, arg_2309, arg_2310, arg_2311, arg_2312);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix4x3dv.xhtml
pub inline fn glProgramUniformMatrix4x3dv(arg_2313: GLuint, arg_2314: GLint, arg_2315: GLsizei, arg_2316: GLboolean, arg_2317: [*c]const GLdouble) void {
    return glad_glProgramUniformMatrix4x3dv.?(arg_2313, arg_2314, arg_2315, arg_2316, arg_2317);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glValidateProgramPipeline.xhtml
pub inline fn glValidateProgramPipeline(arg_2318: GLuint) void {
    return glad_glValidateProgramPipeline.?(arg_2318);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramPipelineInfoLog.xhtml
pub inline fn glGetProgramPipelineInfoLog(arg_2319: GLuint, arg_2320: GLsizei, arg_2321: [*c]GLsizei, arg_2322: [*c]GLchar) void {
    return glad_glGetProgramPipelineInfoLog.?(arg_2319, arg_2320, arg_2321, arg_2322);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL1d.xhtml
pub inline fn glVertexAttribL1d(arg_2323: GLuint, arg_2324: GLdouble) void {
    return glad_glVertexAttribL1d.?(arg_2323, arg_2324);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL2d.xhtml
pub inline fn glVertexAttribL2d(arg_2325: GLuint, arg_2326: GLdouble, arg_2327: GLdouble) void {
    return glad_glVertexAttribL2d.?(arg_2325, arg_2326, arg_2327);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL3d.xhtml
pub inline fn glVertexAttribL3d(arg_2328: GLuint, arg_2329: GLdouble, arg_2330: GLdouble, arg_2331: GLdouble) void {
    return glad_glVertexAttribL3d.?(arg_2328, arg_2329, arg_2330, arg_2331);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL4d.xhtml
pub inline fn glVertexAttribL4d(arg_2332: GLuint, arg_2333: GLdouble, arg_2334: GLdouble, arg_2335: GLdouble, arg_2336: GLdouble) void {
    return glad_glVertexAttribL4d.?(arg_2332, arg_2333, arg_2334, arg_2335, arg_2336);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL1dv.xhtml
pub inline fn glVertexAttribL1dv(arg_2337: GLuint, arg_2338: [*c]const GLdouble) void {
    return glad_glVertexAttribL1dv.?(arg_2337, arg_2338);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL2dv.xhtml
pub inline fn glVertexAttribL2dv(arg_2339: GLuint, arg_2340: [*c]const GLdouble) void {
    return glad_glVertexAttribL2dv.?(arg_2339, arg_2340);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL3dv.xhtml
pub inline fn glVertexAttribL3dv(arg_2341: GLuint, arg_2342: [*c]const GLdouble) void {
    return glad_glVertexAttribL3dv.?(arg_2341, arg_2342);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL4dv.xhtml
pub inline fn glVertexAttribL4dv(arg_2343: GLuint, arg_2344: [*c]const GLdouble) void {
    return glad_glVertexAttribL4dv.?(arg_2343, arg_2344);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribLPointer.xhtml
pub inline fn glVertexAttribLPointer(arg_2345: GLuint, arg_2346: GLint, arg_2347: GLenum, arg_2348: GLsizei, arg_2349: ?*const anyopaque) void {
    return glad_glVertexAttribLPointer.?(arg_2345, arg_2346, arg_2347, arg_2348, arg_2349);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexAttribLdv.xhtml
pub inline fn glGetVertexAttribLdv(arg_2350: GLuint, arg_2351: GLenum, arg_2352: [*c]GLdouble) void {
    return glad_glGetVertexAttribLdv.?(arg_2350, arg_2351, arg_2352);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glViewportArrayv.xhtml
pub inline fn glViewportArrayv(arg_2353: GLuint, arg_2354: GLsizei, arg_2355: [*c]const GLfloat) void {
    return glad_glViewportArrayv.?(arg_2353, arg_2354, arg_2355);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glViewportIndexedf.xhtml
pub inline fn glViewportIndexedf(arg_2356: GLuint, arg_2357: GLfloat, arg_2358: GLfloat, arg_2359: GLfloat, arg_2360: GLfloat) void {
    return glad_glViewportIndexedf.?(arg_2356, arg_2357, arg_2358, arg_2359, arg_2360);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glViewportIndexedfv.xhtml
pub inline fn glViewportIndexedfv(arg_2361: GLuint, arg_2362: [*c]const GLfloat) void {
    return glad_glViewportIndexedfv.?(arg_2361, arg_2362);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glScissorArrayv.xhtml
pub inline fn glScissorArrayv(arg_2363: GLuint, arg_2364: GLsizei, arg_2365: [*c]const GLint) void {
    return glad_glScissorArrayv.?(arg_2363, arg_2364, arg_2365);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glScissorIndexed.xhtml
pub inline fn glScissorIndexed(arg_2366: GLuint, arg_2367: GLint, arg_2368: GLint, arg_2369: GLsizei, arg_2370: GLsizei) void {
    return glad_glScissorIndexed.?(arg_2366, arg_2367, arg_2368, arg_2369, arg_2370);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glScissorIndexedv.xhtml
pub inline fn glScissorIndexedv(arg_2371: GLuint, arg_2372: [*c]const GLint) void {
    return glad_glScissorIndexedv.?(arg_2371, arg_2372);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDepthRangeArrayv.xhtml
pub inline fn glDepthRangeArrayv(arg_2373: GLuint, arg_2374: GLsizei, arg_2375: [*c]const GLdouble) void {
    return glad_glDepthRangeArrayv.?(arg_2373, arg_2374, arg_2375);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDepthRangeIndexed.xhtml
pub inline fn glDepthRangeIndexed(arg_2376: GLuint, arg_2377: GLdouble, arg_2378: GLdouble) void {
    return glad_glDepthRangeIndexed.?(arg_2376, arg_2377, arg_2378);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFloati_v.xhtml
pub inline fn glGetFloati_v(arg_2379: GLenum, arg_2380: GLuint, arg_2381: [*c]GLfloat) void {
    return glad_glGetFloati_v.?(arg_2379, arg_2380, arg_2381);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetDoublei_v.xhtml
pub inline fn glGetDoublei_v(arg_2382: GLenum, arg_2383: GLuint, arg_2384: [*c]GLdouble) void {
    return glad_glGetDoublei_v.?(arg_2382, arg_2383, arg_2384);
}
pub const GL_VERSION_4_2 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawArraysInstancedBaseInstance.xhtml
pub inline fn glDrawArraysInstancedBaseInstance(arg_2385: GLenum, arg_2386: GLint, arg_2387: GLsizei, arg_2388: GLsizei, arg_2389: GLuint) void {
    return glad_glDrawArraysInstancedBaseInstance.?(arg_2385, arg_2386, arg_2387, arg_2388, arg_2389);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawElementsInstancedBaseInstance.xhtml
pub inline fn glDrawElementsInstancedBaseInstance(arg_2390: GLenum, arg_2391: GLsizei, arg_2392: GLenum, arg_2393: ?*const anyopaque, arg_2394: GLsizei, arg_2395: GLuint) void {
    return glad_glDrawElementsInstancedBaseInstance.?(arg_2390, arg_2391, arg_2392, arg_2393, arg_2394, arg_2395);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawElementsInstancedBaseVertexBaseInstance.xhtml
pub inline fn glDrawElementsInstancedBaseVertexBaseInstance(arg_2396: GLenum, arg_2397: GLsizei, arg_2398: GLenum, arg_2399: ?*const anyopaque, arg_2400: GLsizei, arg_2401: GLint, arg_2402: GLuint) void {
    return glad_glDrawElementsInstancedBaseVertexBaseInstance.?(arg_2396, arg_2397, arg_2398, arg_2399, arg_2400, arg_2401, arg_2402);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetInternalformativ.xhtml
pub inline fn glGetInternalformativ(arg_2403: GLenum, arg_2404: GLenum, arg_2405: GLenum, arg_2406: GLsizei, arg_2407: [*c]GLint) void {
    return glad_glGetInternalformativ.?(arg_2403, arg_2404, arg_2405, arg_2406, arg_2407);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetActiveAtomicCounterBufferiv.xhtml
pub inline fn glGetActiveAtomicCounterBufferiv(arg_2408: GLuint, arg_2409: GLuint, arg_2410: GLenum, arg_2411: [*c]GLint) void {
    return glad_glGetActiveAtomicCounterBufferiv.?(arg_2408, arg_2409, arg_2410, arg_2411);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindImageTexture.xhtml
pub inline fn glBindImageTexture(arg_2412: GLuint, arg_2413: GLuint, arg_2414: GLint, arg_2415: GLboolean, arg_2416: GLint, arg_2417: GLenum, arg_2418: GLenum) void {
    return glad_glBindImageTexture.?(arg_2412, arg_2413, arg_2414, arg_2415, arg_2416, arg_2417, arg_2418);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMemoryBarrier.xhtml
pub inline fn glMemoryBarrier(arg_2419: GLbitfield) void {
    return glad_glMemoryBarrier.?(arg_2419);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexStorage1D.xhtml
pub inline fn glTexStorage1D(arg_2420: GLenum, arg_2421: GLsizei, arg_2422: GLenum, arg_2423: GLsizei) void {
    return glad_glTexStorage1D.?(arg_2420, arg_2421, arg_2422, arg_2423);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexStorage2D.xhtml
pub inline fn glTexStorage2D(arg_2424: GLenum, arg_2425: GLsizei, arg_2426: GLenum, arg_2427: GLsizei, arg_2428: GLsizei) void {
    return glad_glTexStorage2D.?(arg_2424, arg_2425, arg_2426, arg_2427, arg_2428);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexStorage3D.xhtml
pub inline fn glTexStorage3D(arg_2429: GLenum, arg_2430: GLsizei, arg_2431: GLenum, arg_2432: GLsizei, arg_2433: GLsizei, arg_2434: GLsizei) void {
    return glad_glTexStorage3D.?(arg_2429, arg_2430, arg_2431, arg_2432, arg_2433, arg_2434);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawTransformFeedbackInstanced.xhtml
pub inline fn glDrawTransformFeedbackInstanced(arg_2435: GLenum, arg_2436: GLuint, arg_2437: GLsizei) void {
    return glad_glDrawTransformFeedbackInstanced.?(arg_2435, arg_2436, arg_2437);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawTransformFeedbackStreamInstanced.xhtml
pub inline fn glDrawTransformFeedbackStreamInstanced(arg_2438: GLenum, arg_2439: GLuint, arg_2440: GLuint, arg_2441: GLsizei) void {
    return glad_glDrawTransformFeedbackStreamInstanced.?(arg_2438, arg_2439, arg_2440, arg_2441);
}
pub const GL_VERSION_4_3 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearBufferData.xhtml
pub inline fn glClearBufferData(arg_2442: GLenum, arg_2443: GLenum, arg_2444: GLenum, arg_2445: GLenum, arg_2446: ?*const anyopaque) void {
    return glad_glClearBufferData.?(arg_2442, arg_2443, arg_2444, arg_2445, arg_2446);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearBufferSubData.xhtml
pub inline fn glClearBufferSubData(arg_2447: GLenum, arg_2448: GLenum, arg_2449: GLintptr, arg_2450: GLsizeiptr, arg_2451: GLenum, arg_2452: GLenum, arg_2453: ?*const anyopaque) void {
    return glad_glClearBufferSubData.?(arg_2447, arg_2448, arg_2449, arg_2450, arg_2451, arg_2452, arg_2453);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDispatchCompute.xhtml
pub inline fn glDispatchCompute(arg_2454: GLuint, arg_2455: GLuint, arg_2456: GLuint) void {
    return glad_glDispatchCompute.?(arg_2454, arg_2455, arg_2456);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDispatchComputeIndirect.xhtml
pub inline fn glDispatchComputeIndirect(arg_2457: GLintptr) void {
    return glad_glDispatchComputeIndirect.?(arg_2457);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyImageSubData.xhtml
pub inline fn glCopyImageSubData(arg_2458: GLuint, arg_2459: GLenum, arg_2460: GLint, arg_2461: GLint, arg_2462: GLint, arg_2463: GLint, arg_2464: GLuint, arg_2465: GLenum, arg_2466: GLint, arg_2467: GLint, arg_2468: GLint, arg_2469: GLint, arg_2470: GLsizei, arg_2471: GLsizei, arg_2472: GLsizei) void {
    return glad_glCopyImageSubData.?(arg_2458, arg_2459, arg_2460, arg_2461, arg_2462, arg_2463, arg_2464, arg_2465, arg_2466, arg_2467, arg_2468, arg_2469, arg_2470, arg_2471, arg_2472);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferParameteri.xhtml
pub inline fn glFramebufferParameteri(arg_2473: GLenum, arg_2474: GLenum, arg_2475: GLint) void {
    return glad_glFramebufferParameteri.?(arg_2473, arg_2474, arg_2475);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFramebufferParameteriv.xhtml
pub inline fn glGetFramebufferParameteriv(arg_2476: GLenum, arg_2477: GLenum, arg_2478: [*c]GLint) void {
    return glad_glGetFramebufferParameteriv.?(arg_2476, arg_2477, arg_2478);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetInternalformati64v.xhtml
pub inline fn glGetInternalformati64v(arg_2479: GLenum, arg_2480: GLenum, arg_2481: GLenum, arg_2482: GLsizei, arg_2483: [*c]GLint64) void {
    return glad_glGetInternalformati64v.?(arg_2479, arg_2480, arg_2481, arg_2482, arg_2483);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glInvalidateTexSubImage.xhtml
pub inline fn glInvalidateTexSubImage(arg_2484: GLuint, arg_2485: GLint, arg_2486: GLint, arg_2487: GLint, arg_2488: GLint, arg_2489: GLsizei, arg_2490: GLsizei, arg_2491: GLsizei) void {
    return glad_glInvalidateTexSubImage.?(arg_2484, arg_2485, arg_2486, arg_2487, arg_2488, arg_2489, arg_2490, arg_2491);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glInvalidateTexImage.xhtml
pub inline fn glInvalidateTexImage(arg_2492: GLuint, arg_2493: GLint) void {
    return glad_glInvalidateTexImage.?(arg_2492, arg_2493);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glInvalidateBufferSubData.xhtml
pub inline fn glInvalidateBufferSubData(arg_2494: GLuint, arg_2495: GLintptr, arg_2496: GLsizeiptr) void {
    return glad_glInvalidateBufferSubData.?(arg_2494, arg_2495, arg_2496);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glInvalidateBufferData.xhtml
pub inline fn glInvalidateBufferData(arg_2497: GLuint) void {
    return glad_glInvalidateBufferData.?(arg_2497);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glInvalidateFramebuffer.xhtml
pub inline fn glInvalidateFramebuffer(arg_2498: GLenum, arg_2499: GLsizei, arg_2500: [*c]const GLenum) void {
    return glad_glInvalidateFramebuffer.?(arg_2498, arg_2499, arg_2500);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glInvalidateSubFramebuffer.xhtml
pub inline fn glInvalidateSubFramebuffer(arg_2501: GLenum, arg_2502: GLsizei, arg_2503: [*c]const GLenum, arg_2504: GLint, arg_2505: GLint, arg_2506: GLsizei, arg_2507: GLsizei) void {
    return glad_glInvalidateSubFramebuffer.?(arg_2501, arg_2502, arg_2503, arg_2504, arg_2505, arg_2506, arg_2507);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiDrawArraysIndirect.xhtml
pub inline fn glMultiDrawArraysIndirect(arg_2508: GLenum, arg_2509: ?*const anyopaque, arg_2510: GLsizei, arg_2511: GLsizei) void {
    return glad_glMultiDrawArraysIndirect.?(arg_2508, arg_2509, arg_2510, arg_2511);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiDrawElementsIndirect.xhtml
pub inline fn glMultiDrawElementsIndirect(arg_2512: GLenum, arg_2513: GLenum, arg_2514: ?*const anyopaque, arg_2515: GLsizei, arg_2516: GLsizei) void {
    return glad_glMultiDrawElementsIndirect.?(arg_2512, arg_2513, arg_2514, arg_2515, arg_2516);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramInterfaceiv.xhtml
pub inline fn glGetProgramInterfaceiv(arg_2517: GLuint, arg_2518: GLenum, arg_2519: GLenum, arg_2520: [*c]GLint) void {
    return glad_glGetProgramInterfaceiv.?(arg_2517, arg_2518, arg_2519, arg_2520);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramResourceIndex.xhtml
pub inline fn glGetProgramResourceIndex(arg_2521: GLuint, arg_2522: GLenum, arg_2523: [*c]const GLchar) GLuint {
    return glad_glGetProgramResourceIndex.?(arg_2521, arg_2522, arg_2523);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramResourceName.xhtml
pub inline fn glGetProgramResourceName(arg_2524: GLuint, arg_2525: GLenum, arg_2526: GLuint, arg_2527: GLsizei, arg_2528: [*c]GLsizei, arg_2529: [*c]GLchar) void {
    return glad_glGetProgramResourceName.?(arg_2524, arg_2525, arg_2526, arg_2527, arg_2528, arg_2529);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramResourceiv.xhtml
pub inline fn glGetProgramResourceiv(arg_2530: GLuint, arg_2531: GLenum, arg_2532: GLuint, arg_2533: GLsizei, arg_2534: [*c]const GLenum, arg_2535: GLsizei, arg_2536: [*c]GLsizei, arg_2537: [*c]GLint) void {
    return glad_glGetProgramResourceiv.?(arg_2530, arg_2531, arg_2532, arg_2533, arg_2534, arg_2535, arg_2536, arg_2537);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramResourceLocation.xhtml
pub inline fn glGetProgramResourceLocation(arg_2538: GLuint, arg_2539: GLenum, arg_2540: [*c]const GLchar) GLint {
    return glad_glGetProgramResourceLocation.?(arg_2538, arg_2539, arg_2540);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramResourceLocationIndex.xhtml
pub inline fn glGetProgramResourceLocationIndex(arg_2541: GLuint, arg_2542: GLenum, arg_2543: [*c]const GLchar) GLint {
    return glad_glGetProgramResourceLocationIndex.?(arg_2541, arg_2542, arg_2543);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glShaderStorageBlockBinding.xhtml
pub inline fn glShaderStorageBlockBinding(arg_2544: GLuint, arg_2545: GLuint, arg_2546: GLuint) void {
    return glad_glShaderStorageBlockBinding.?(arg_2544, arg_2545, arg_2546);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexBufferRange.xhtml
pub inline fn glTexBufferRange(arg_2547: GLenum, arg_2548: GLenum, arg_2549: GLuint, arg_2550: GLintptr, arg_2551: GLsizeiptr) void {
    return glad_glTexBufferRange.?(arg_2547, arg_2548, arg_2549, arg_2550, arg_2551);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexStorage2DMultisample.xhtml
pub inline fn glTexStorage2DMultisample(arg_2552: GLenum, arg_2553: GLsizei, arg_2554: GLenum, arg_2555: GLsizei, arg_2556: GLsizei, arg_2557: GLboolean) void {
    return glad_glTexStorage2DMultisample.?(arg_2552, arg_2553, arg_2554, arg_2555, arg_2556, arg_2557);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexStorage3DMultisample.xhtml
pub inline fn glTexStorage3DMultisample(arg_2558: GLenum, arg_2559: GLsizei, arg_2560: GLenum, arg_2561: GLsizei, arg_2562: GLsizei, arg_2563: GLsizei, arg_2564: GLboolean) void {
    return glad_glTexStorage3DMultisample.?(arg_2558, arg_2559, arg_2560, arg_2561, arg_2562, arg_2563, arg_2564);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureView.xhtml
pub inline fn glTextureView(arg_2565: GLuint, arg_2566: GLenum, arg_2567: GLuint, arg_2568: GLenum, arg_2569: GLuint, arg_2570: GLuint, arg_2571: GLuint, arg_2572: GLuint) void {
    return glad_glTextureView.?(arg_2565, arg_2566, arg_2567, arg_2568, arg_2569, arg_2570, arg_2571, arg_2572);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindVertexBuffer.xhtml
pub inline fn glBindVertexBuffer(arg_2573: GLuint, arg_2574: GLuint, arg_2575: GLintptr, arg_2576: GLsizei) void {
    return glad_glBindVertexBuffer.?(arg_2573, arg_2574, arg_2575, arg_2576);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribFormat.xhtml
pub inline fn glVertexAttribFormat(arg_2577: GLuint, arg_2578: GLint, arg_2579: GLenum, arg_2580: GLboolean, arg_2581: GLuint) void {
    return glad_glVertexAttribFormat.?(arg_2577, arg_2578, arg_2579, arg_2580, arg_2581);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribIFormat.xhtml
pub inline fn glVertexAttribIFormat(arg_2582: GLuint, arg_2583: GLint, arg_2584: GLenum, arg_2585: GLuint) void {
    return glad_glVertexAttribIFormat.?(arg_2582, arg_2583, arg_2584, arg_2585);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribLFormat.xhtml
pub inline fn glVertexAttribLFormat(arg_2586: GLuint, arg_2587: GLint, arg_2588: GLenum, arg_2589: GLuint) void {
    return glad_glVertexAttribLFormat.?(arg_2586, arg_2587, arg_2588, arg_2589);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribBinding.xhtml
pub inline fn glVertexAttribBinding(arg_2590: GLuint, arg_2591: GLuint) void {
    return glad_glVertexAttribBinding.?(arg_2590, arg_2591);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexBindingDivisor.xhtml
pub inline fn glVertexBindingDivisor(arg_2592: GLuint, arg_2593: GLuint) void {
    return glad_glVertexBindingDivisor.?(arg_2592, arg_2593);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDebugMessageControl.xhtml
pub inline fn glDebugMessageControl(arg_2594: GLenum, arg_2595: GLenum, arg_2596: GLenum, arg_2597: GLsizei, arg_2598: [*c]const GLuint, arg_2599: GLboolean) void {
    return glad_glDebugMessageControl.?(arg_2594, arg_2595, arg_2596, arg_2597, arg_2598, arg_2599);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDebugMessageInsert.xhtml
pub inline fn glDebugMessageInsert(arg_2600: GLenum, arg_2601: GLenum, arg_2602: GLuint, arg_2603: GLenum, arg_2604: GLsizei, arg_2605: [*c]const GLchar) void {
    return glad_glDebugMessageInsert.?(arg_2600, arg_2601, arg_2602, arg_2603, arg_2604, arg_2605);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDebugMessageCallback.xhtml
pub inline fn glDebugMessageCallback(arg_2606: GLDEBUGPROC, arg_2607: ?*const anyopaque) void {
    return glad_glDebugMessageCallback.?(arg_2606, arg_2607);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetDebugMessageLog.xhtml
pub inline fn glGetDebugMessageLog(arg_2608: GLuint, arg_2609: GLsizei, arg_2610: [*c]GLenum, arg_2611: [*c]GLenum, arg_2612: [*c]GLuint, arg_2613: [*c]GLenum, arg_2614: [*c]GLsizei, arg_2615: [*c]GLchar) GLuint {
    return glad_glGetDebugMessageLog.?(arg_2608, arg_2609, arg_2610, arg_2611, arg_2612, arg_2613, arg_2614, arg_2615);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPushDebugGroup.xhtml
pub inline fn glPushDebugGroup(arg_2616: GLenum, arg_2617: GLuint, arg_2618: GLsizei, arg_2619: [*c]const GLchar) void {
    return glad_glPushDebugGroup.?(arg_2616, arg_2617, arg_2618, arg_2619);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPopDebugGroup.xhtml
pub inline fn glPopDebugGroup() void {
    return glad_glPopDebugGroup.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glObjectLabel.xhtml
pub inline fn glObjectLabel(arg_2620: GLenum, arg_2621: GLuint, arg_2622: GLsizei, arg_2623: [*c]const GLchar) void {
    return glad_glObjectLabel.?(arg_2620, arg_2621, arg_2622, arg_2623);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetObjectLabel.xhtml
pub inline fn glGetObjectLabel(arg_2624: GLenum, arg_2625: GLuint, arg_2626: GLsizei, arg_2627: [*c]GLsizei, arg_2628: [*c]GLchar) void {
    return glad_glGetObjectLabel.?(arg_2624, arg_2625, arg_2626, arg_2627, arg_2628);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glObjectPtrLabel.xhtml
pub inline fn glObjectPtrLabel(arg_2629: ?*const anyopaque, arg_2630: GLsizei, arg_2631: [*c]const GLchar) void {
    return glad_glObjectPtrLabel.?(arg_2629, arg_2630, arg_2631);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetObjectPtrLabel.xhtml
pub inline fn glGetObjectPtrLabel(arg_2632: ?*const anyopaque, arg_2633: GLsizei, arg_2634: [*c]GLsizei, arg_2635: [*c]GLchar) void {
    return glad_glGetObjectPtrLabel.?(arg_2632, arg_2633, arg_2634, arg_2635);
}
pub const GL_VERSION_4_4 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBufferStorage.xhtml
pub inline fn glBufferStorage(arg_2636: GLenum, arg_2637: GLsizeiptr, arg_2638: ?*const anyopaque, arg_2639: GLbitfield) void {
    return glad_glBufferStorage.?(arg_2636, arg_2637, arg_2638, arg_2639);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearTexImage.xhtml
pub inline fn glClearTexImage(arg_2640: GLuint, arg_2641: GLint, arg_2642: GLenum, arg_2643: GLenum, arg_2644: ?*const anyopaque) void {
    return glad_glClearTexImage.?(arg_2640, arg_2641, arg_2642, arg_2643, arg_2644);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearTexSubImage.xhtml
pub inline fn glClearTexSubImage(arg_2645: GLuint, arg_2646: GLint, arg_2647: GLint, arg_2648: GLint, arg_2649: GLint, arg_2650: GLsizei, arg_2651: GLsizei, arg_2652: GLsizei, arg_2653: GLenum, arg_2654: GLenum, arg_2655: ?*const anyopaque) void {
    return glad_glClearTexSubImage.?(arg_2645, arg_2646, arg_2647, arg_2648, arg_2649, arg_2650, arg_2651, arg_2652, arg_2653, arg_2654, arg_2655);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindBuffersBase.xhtml
pub inline fn glBindBuffersBase(arg_2656: GLenum, arg_2657: GLuint, arg_2658: GLsizei, arg_2659: [*c]const GLuint) void {
    return glad_glBindBuffersBase.?(arg_2656, arg_2657, arg_2658, arg_2659);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindBuffersRange.xhtml
pub inline fn glBindBuffersRange(arg_2660: GLenum, arg_2661: GLuint, arg_2662: GLsizei, arg_2663: [*c]const GLuint, arg_2664: [*c]const GLintptr, arg_2665: [*c]const GLsizeiptr) void {
    return glad_glBindBuffersRange.?(arg_2660, arg_2661, arg_2662, arg_2663, arg_2664, arg_2665);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindTextures.xhtml
pub inline fn glBindTextures(arg_2666: GLuint, arg_2667: GLsizei, arg_2668: [*c]const GLuint) void {
    return glad_glBindTextures.?(arg_2666, arg_2667, arg_2668);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindSamplers.xhtml
pub inline fn glBindSamplers(arg_2669: GLuint, arg_2670: GLsizei, arg_2671: [*c]const GLuint) void {
    return glad_glBindSamplers.?(arg_2669, arg_2670, arg_2671);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindImageTextures.xhtml
pub inline fn glBindImageTextures(arg_2672: GLuint, arg_2673: GLsizei, arg_2674: [*c]const GLuint) void {
    return glad_glBindImageTextures.?(arg_2672, arg_2673, arg_2674);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindVertexBuffers.xhtml
pub inline fn glBindVertexBuffers(arg_2675: GLuint, arg_2676: GLsizei, arg_2677: [*c]const GLuint, arg_2678: [*c]const GLintptr, arg_2679: [*c]const GLsizei) void {
    return glad_glBindVertexBuffers.?(arg_2675, arg_2676, arg_2677, arg_2678, arg_2679);
}
pub const GL_VERSION_4_5 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClipControl.xhtml
pub inline fn glClipControl(arg_2680: GLenum, arg_2681: GLenum) void {
    return glad_glClipControl.?(arg_2680, arg_2681);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCreateTransformFeedbacks.xhtml
pub inline fn glCreateTransformFeedbacks(arg_2682: GLsizei, arg_2683: [*c]GLuint) void {
    return glad_glCreateTransformFeedbacks.?(arg_2682, arg_2683);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTransformFeedbackBufferBase.xhtml
pub inline fn glTransformFeedbackBufferBase(arg_2684: GLuint, arg_2685: GLuint, arg_2686: GLuint) void {
    return glad_glTransformFeedbackBufferBase.?(arg_2684, arg_2685, arg_2686);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTransformFeedbackBufferRange.xhtml
pub inline fn glTransformFeedbackBufferRange(arg_2687: GLuint, arg_2688: GLuint, arg_2689: GLuint, arg_2690: GLintptr, arg_2691: GLsizeiptr) void {
    return glad_glTransformFeedbackBufferRange.?(arg_2687, arg_2688, arg_2689, arg_2690, arg_2691);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTransformFeedbackiv.xhtml
pub inline fn glGetTransformFeedbackiv(arg_2692: GLuint, arg_2693: GLenum, arg_2694: [*c]GLint) void {
    return glad_glGetTransformFeedbackiv.?(arg_2692, arg_2693, arg_2694);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTransformFeedbacki_v.xhtml
pub inline fn glGetTransformFeedbacki_v(arg_2695: GLuint, arg_2696: GLenum, arg_2697: GLuint, arg_2698: [*c]GLint) void {
    return glad_glGetTransformFeedbacki_v.?(arg_2695, arg_2696, arg_2697, arg_2698);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTransformFeedbacki64_v.xhtml
pub inline fn glGetTransformFeedbacki64_v(arg_2699: GLuint, arg_2700: GLenum, arg_2701: GLuint, arg_2702: [*c]GLint64) void {
    return glad_glGetTransformFeedbacki64_v.?(arg_2699, arg_2700, arg_2701, arg_2702);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCreateBuffers.xhtml
pub inline fn glCreateBuffers(arg_2703: GLsizei, arg_2704: [*c]GLuint) void {
    return glad_glCreateBuffers.?(arg_2703, arg_2704);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedBufferStorage.xhtml
pub inline fn glNamedBufferStorage(arg_2705: GLuint, arg_2706: GLsizeiptr, arg_2707: ?*const anyopaque, arg_2708: GLbitfield) void {
    return glad_glNamedBufferStorage.?(arg_2705, arg_2706, arg_2707, arg_2708);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedBufferData.xhtml
pub inline fn glNamedBufferData(arg_2709: GLuint, arg_2710: GLsizeiptr, arg_2711: ?*const anyopaque, arg_2712: GLenum) void {
    return glad_glNamedBufferData.?(arg_2709, arg_2710, arg_2711, arg_2712);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedBufferSubData.xhtml
pub inline fn glNamedBufferSubData(arg_2713: GLuint, arg_2714: GLintptr, arg_2715: GLsizeiptr, arg_2716: ?*const anyopaque) void {
    return glad_glNamedBufferSubData.?(arg_2713, arg_2714, arg_2715, arg_2716);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyNamedBufferSubData.xhtml
pub inline fn glCopyNamedBufferSubData(arg_2717: GLuint, arg_2718: GLuint, arg_2719: GLintptr, arg_2720: GLintptr, arg_2721: GLsizeiptr) void {
    return glad_glCopyNamedBufferSubData.?(arg_2717, arg_2718, arg_2719, arg_2720, arg_2721);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearNamedBufferData.xhtml
pub inline fn glClearNamedBufferData(arg_2722: GLuint, arg_2723: GLenum, arg_2724: GLenum, arg_2725: GLenum, arg_2726: ?*const anyopaque) void {
    return glad_glClearNamedBufferData.?(arg_2722, arg_2723, arg_2724, arg_2725, arg_2726);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearNamedBufferSubData.xhtml
pub inline fn glClearNamedBufferSubData(arg_2727: GLuint, arg_2728: GLenum, arg_2729: GLintptr, arg_2730: GLsizeiptr, arg_2731: GLenum, arg_2732: GLenum, arg_2733: ?*const anyopaque) void {
    return glad_glClearNamedBufferSubData.?(arg_2727, arg_2728, arg_2729, arg_2730, arg_2731, arg_2732, arg_2733);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMapNamedBuffer.xhtml
pub inline fn glMapNamedBuffer(arg_2734: GLuint, arg_2735: GLenum) ?*anyopaque {
    return glad_glMapNamedBuffer.?(arg_2734, arg_2735);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMapNamedBufferRange.xhtml
pub inline fn glMapNamedBufferRange(arg_2736: GLuint, arg_2737: GLintptr, arg_2738: GLsizeiptr, arg_2739: GLbitfield) ?*anyopaque {
    return glad_glMapNamedBufferRange.?(arg_2736, arg_2737, arg_2738, arg_2739);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUnmapNamedBuffer.xhtml
pub inline fn glUnmapNamedBuffer(arg_2740: GLuint) GLboolean {
    return glad_glUnmapNamedBuffer.?(arg_2740);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFlushMappedNamedBufferRange.xhtml
pub inline fn glFlushMappedNamedBufferRange(arg_2741: GLuint, arg_2742: GLintptr, arg_2743: GLsizeiptr) void {
    return glad_glFlushMappedNamedBufferRange.?(arg_2741, arg_2742, arg_2743);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetNamedBufferParameteriv.xhtml
pub inline fn glGetNamedBufferParameteriv(arg_2744: GLuint, arg_2745: GLenum, arg_2746: [*c]GLint) void {
    return glad_glGetNamedBufferParameteriv.?(arg_2744, arg_2745, arg_2746);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetNamedBufferParameteri64v.xhtml
pub inline fn glGetNamedBufferParameteri64v(arg_2747: GLuint, arg_2748: GLenum, arg_2749: [*c]GLint64) void {
    return glad_glGetNamedBufferParameteri64v.?(arg_2747, arg_2748, arg_2749);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetNamedBufferPointerv.xhtml
pub inline fn glGetNamedBufferPointerv(arg_2750: GLuint, arg_2751: GLenum, arg_2752: [*c]?*anyopaque) void {
    return glad_glGetNamedBufferPointerv.?(arg_2750, arg_2751, arg_2752);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetNamedBufferSubData.xhtml
pub inline fn glGetNamedBufferSubData(arg_2753: GLuint, arg_2754: GLintptr, arg_2755: GLsizeiptr, arg_2756: ?*anyopaque) void {
    return glad_glGetNamedBufferSubData.?(arg_2753, arg_2754, arg_2755, arg_2756);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCreateFramebuffers.xhtml
pub inline fn glCreateFramebuffers(arg_2757: GLsizei, arg_2758: [*c]GLuint) void {
    return glad_glCreateFramebuffers.?(arg_2757, arg_2758);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedFramebufferRenderbuffer.xhtml
pub inline fn glNamedFramebufferRenderbuffer(arg_2759: GLuint, arg_2760: GLenum, arg_2761: GLenum, arg_2762: GLuint) void {
    return glad_glNamedFramebufferRenderbuffer.?(arg_2759, arg_2760, arg_2761, arg_2762);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedFramebufferParameteri.xhtml
pub inline fn glNamedFramebufferParameteri(arg_2763: GLuint, arg_2764: GLenum, arg_2765: GLint) void {
    return glad_glNamedFramebufferParameteri.?(arg_2763, arg_2764, arg_2765);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedFramebufferTexture.xhtml
pub inline fn glNamedFramebufferTexture(arg_2766: GLuint, arg_2767: GLenum, arg_2768: GLuint, arg_2769: GLint) void {
    return glad_glNamedFramebufferTexture.?(arg_2766, arg_2767, arg_2768, arg_2769);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedFramebufferTextureLayer.xhtml
pub inline fn glNamedFramebufferTextureLayer(arg_2770: GLuint, arg_2771: GLenum, arg_2772: GLuint, arg_2773: GLint, arg_2774: GLint) void {
    return glad_glNamedFramebufferTextureLayer.?(arg_2770, arg_2771, arg_2772, arg_2773, arg_2774);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedFramebufferDrawBuffer.xhtml
pub inline fn glNamedFramebufferDrawBuffer(arg_2775: GLuint, arg_2776: GLenum) void {
    return glad_glNamedFramebufferDrawBuffer.?(arg_2775, arg_2776);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedFramebufferDrawBuffers.xhtml
pub inline fn glNamedFramebufferDrawBuffers(arg_2777: GLuint, arg_2778: GLsizei, arg_2779: [*c]const GLenum) void {
    return glad_glNamedFramebufferDrawBuffers.?(arg_2777, arg_2778, arg_2779);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedFramebufferReadBuffer.xhtml
pub inline fn glNamedFramebufferReadBuffer(arg_2780: GLuint, arg_2781: GLenum) void {
    return glad_glNamedFramebufferReadBuffer.?(arg_2780, arg_2781);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glInvalidateNamedFramebufferData.xhtml
pub inline fn glInvalidateNamedFramebufferData(arg_2782: GLuint, arg_2783: GLsizei, arg_2784: [*c]const GLenum) void {
    return glad_glInvalidateNamedFramebufferData.?(arg_2782, arg_2783, arg_2784);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glInvalidateNamedFramebufferSubData.xhtml
pub inline fn glInvalidateNamedFramebufferSubData(arg_2785: GLuint, arg_2786: GLsizei, arg_2787: [*c]const GLenum, arg_2788: GLint, arg_2789: GLint, arg_2790: GLsizei, arg_2791: GLsizei) void {
    return glad_glInvalidateNamedFramebufferSubData.?(arg_2785, arg_2786, arg_2787, arg_2788, arg_2789, arg_2790, arg_2791);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearNamedFramebufferiv.xhtml
pub inline fn glClearNamedFramebufferiv(arg_2792: GLuint, arg_2793: GLenum, arg_2794: GLint, arg_2795: [*c]const GLint) void {
    return glad_glClearNamedFramebufferiv.?(arg_2792, arg_2793, arg_2794, arg_2795);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearNamedFramebufferuiv.xhtml
pub inline fn glClearNamedFramebufferuiv(arg_2796: GLuint, arg_2797: GLenum, arg_2798: GLint, arg_2799: [*c]const GLuint) void {
    return glad_glClearNamedFramebufferuiv.?(arg_2796, arg_2797, arg_2798, arg_2799);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearNamedFramebufferfv.xhtml
pub inline fn glClearNamedFramebufferfv(arg_2800: GLuint, arg_2801: GLenum, arg_2802: GLint, arg_2803: [*c]const GLfloat) void {
    return glad_glClearNamedFramebufferfv.?(arg_2800, arg_2801, arg_2802, arg_2803);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearNamedFramebufferfi.xhtml
pub inline fn glClearNamedFramebufferfi(arg_2804: GLuint, arg_2805: GLenum, arg_2806: GLint, arg_2807: GLfloat, arg_2808: GLint) void {
    return glad_glClearNamedFramebufferfi.?(arg_2804, arg_2805, arg_2806, arg_2807, arg_2808);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlitNamedFramebuffer.xhtml
pub inline fn glBlitNamedFramebuffer(arg_2809: GLuint, arg_2810: GLuint, arg_2811: GLint, arg_2812: GLint, arg_2813: GLint, arg_2814: GLint, arg_2815: GLint, arg_2816: GLint, arg_2817: GLint, arg_2818: GLint, arg_2819: GLbitfield, arg_2820: GLenum) void {
    return glad_glBlitNamedFramebuffer.?(arg_2809, arg_2810, arg_2811, arg_2812, arg_2813, arg_2814, arg_2815, arg_2816, arg_2817, arg_2818, arg_2819, arg_2820);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCheckNamedFramebufferStatus.xhtml
pub inline fn glCheckNamedFramebufferStatus(arg_2821: GLuint, arg_2822: GLenum) GLenum {
    return glad_glCheckNamedFramebufferStatus.?(arg_2821, arg_2822);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetNamedFramebufferParameteriv.xhtml
pub inline fn glGetNamedFramebufferParameteriv(arg_2823: GLuint, arg_2824: GLenum, arg_2825: [*c]GLint) void {
    return glad_glGetNamedFramebufferParameteriv.?(arg_2823, arg_2824, arg_2825);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetNamedFramebufferAttachmentParameteriv.xhtml
pub inline fn glGetNamedFramebufferAttachmentParameteriv(arg_2826: GLuint, arg_2827: GLenum, arg_2828: GLenum, arg_2829: [*c]GLint) void {
    return glad_glGetNamedFramebufferAttachmentParameteriv.?(arg_2826, arg_2827, arg_2828, arg_2829);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCreateRenderbuffers.xhtml
pub inline fn glCreateRenderbuffers(arg_2830: GLsizei, arg_2831: [*c]GLuint) void {
    return glad_glCreateRenderbuffers.?(arg_2830, arg_2831);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedRenderbufferStorage.xhtml
pub inline fn glNamedRenderbufferStorage(arg_2832: GLuint, arg_2833: GLenum, arg_2834: GLsizei, arg_2835: GLsizei) void {
    return glad_glNamedRenderbufferStorage.?(arg_2832, arg_2833, arg_2834, arg_2835);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedRenderbufferStorageMultisample.xhtml
pub inline fn glNamedRenderbufferStorageMultisample(arg_2836: GLuint, arg_2837: GLsizei, arg_2838: GLenum, arg_2839: GLsizei, arg_2840: GLsizei) void {
    return glad_glNamedRenderbufferStorageMultisample.?(arg_2836, arg_2837, arg_2838, arg_2839, arg_2840);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetNamedRenderbufferParameteriv.xhtml
pub inline fn glGetNamedRenderbufferParameteriv(arg_2841: GLuint, arg_2842: GLenum, arg_2843: [*c]GLint) void {
    return glad_glGetNamedRenderbufferParameteriv.?(arg_2841, arg_2842, arg_2843);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCreateTextures.xhtml
pub inline fn glCreateTextures(arg_2844: GLenum, arg_2845: GLsizei, arg_2846: [*c]GLuint) void {
    return glad_glCreateTextures.?(arg_2844, arg_2845, arg_2846);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureBuffer.xhtml
pub inline fn glTextureBuffer(arg_2847: GLuint, arg_2848: GLenum, arg_2849: GLuint) void {
    return glad_glTextureBuffer.?(arg_2847, arg_2848, arg_2849);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureBufferRange.xhtml
pub inline fn glTextureBufferRange(arg_2850: GLuint, arg_2851: GLenum, arg_2852: GLuint, arg_2853: GLintptr, arg_2854: GLsizeiptr) void {
    return glad_glTextureBufferRange.?(arg_2850, arg_2851, arg_2852, arg_2853, arg_2854);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureStorage1D.xhtml
pub inline fn glTextureStorage1D(arg_2855: GLuint, arg_2856: GLsizei, arg_2857: GLenum, arg_2858: GLsizei) void {
    return glad_glTextureStorage1D.?(arg_2855, arg_2856, arg_2857, arg_2858);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureStorage2D.xhtml
pub inline fn glTextureStorage2D(arg_2859: GLuint, arg_2860: GLsizei, arg_2861: GLenum, arg_2862: GLsizei, arg_2863: GLsizei) void {
    return glad_glTextureStorage2D.?(arg_2859, arg_2860, arg_2861, arg_2862, arg_2863);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureStorage3D.xhtml
pub inline fn glTextureStorage3D(arg_2864: GLuint, arg_2865: GLsizei, arg_2866: GLenum, arg_2867: GLsizei, arg_2868: GLsizei, arg_2869: GLsizei) void {
    return glad_glTextureStorage3D.?(arg_2864, arg_2865, arg_2866, arg_2867, arg_2868, arg_2869);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureStorage2DMultisample.xhtml
pub inline fn glTextureStorage2DMultisample(arg_2870: GLuint, arg_2871: GLsizei, arg_2872: GLenum, arg_2873: GLsizei, arg_2874: GLsizei, arg_2875: GLboolean) void {
    return glad_glTextureStorage2DMultisample.?(arg_2870, arg_2871, arg_2872, arg_2873, arg_2874, arg_2875);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureStorage3DMultisample.xhtml
pub inline fn glTextureStorage3DMultisample(arg_2876: GLuint, arg_2877: GLsizei, arg_2878: GLenum, arg_2879: GLsizei, arg_2880: GLsizei, arg_2881: GLsizei, arg_2882: GLboolean) void {
    return glad_glTextureStorage3DMultisample.?(arg_2876, arg_2877, arg_2878, arg_2879, arg_2880, arg_2881, arg_2882);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureSubImage1D.xhtml
pub inline fn glTextureSubImage1D(arg_2883: GLuint, arg_2884: GLint, arg_2885: GLint, arg_2886: GLsizei, arg_2887: GLenum, arg_2888: GLenum, arg_2889: ?*const anyopaque) void {
    return glad_glTextureSubImage1D.?(arg_2883, arg_2884, arg_2885, arg_2886, arg_2887, arg_2888, arg_2889);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureSubImage2D.xhtml
pub inline fn glTextureSubImage2D(arg_2890: GLuint, arg_2891: GLint, arg_2892: GLint, arg_2893: GLint, arg_2894: GLsizei, arg_2895: GLsizei, arg_2896: GLenum, arg_2897: GLenum, arg_2898: ?*const anyopaque) void {
    return glad_glTextureSubImage2D.?(arg_2890, arg_2891, arg_2892, arg_2893, arg_2894, arg_2895, arg_2896, arg_2897, arg_2898);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureSubImage3D.xhtml
pub inline fn glTextureSubImage3D(arg_2899: GLuint, arg_2900: GLint, arg_2901: GLint, arg_2902: GLint, arg_2903: GLint, arg_2904: GLsizei, arg_2905: GLsizei, arg_2906: GLsizei, arg_2907: GLenum, arg_2908: GLenum, arg_2909: ?*const anyopaque) void {
    return glad_glTextureSubImage3D.?(arg_2899, arg_2900, arg_2901, arg_2902, arg_2903, arg_2904, arg_2905, arg_2906, arg_2907, arg_2908, arg_2909);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedTextureSubImage1D.xhtml
pub inline fn glCompressedTextureSubImage1D(arg_2910: GLuint, arg_2911: GLint, arg_2912: GLint, arg_2913: GLsizei, arg_2914: GLenum, arg_2915: GLsizei, arg_2916: ?*const anyopaque) void {
    return glad_glCompressedTextureSubImage1D.?(arg_2910, arg_2911, arg_2912, arg_2913, arg_2914, arg_2915, arg_2916);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedTextureSubImage2D.xhtml
pub inline fn glCompressedTextureSubImage2D(arg_2917: GLuint, arg_2918: GLint, arg_2919: GLint, arg_2920: GLint, arg_2921: GLsizei, arg_2922: GLsizei, arg_2923: GLenum, arg_2924: GLsizei, arg_2925: ?*const anyopaque) void {
    return glad_glCompressedTextureSubImage2D.?(arg_2917, arg_2918, arg_2919, arg_2920, arg_2921, arg_2922, arg_2923, arg_2924, arg_2925);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedTextureSubImage3D.xhtml
pub inline fn glCompressedTextureSubImage3D(arg_2926: GLuint, arg_2927: GLint, arg_2928: GLint, arg_2929: GLint, arg_2930: GLint, arg_2931: GLsizei, arg_2932: GLsizei, arg_2933: GLsizei, arg_2934: GLenum, arg_2935: GLsizei, arg_2936: ?*const anyopaque) void {
    return glad_glCompressedTextureSubImage3D.?(arg_2926, arg_2927, arg_2928, arg_2929, arg_2930, arg_2931, arg_2932, arg_2933, arg_2934, arg_2935, arg_2936);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyTextureSubImage1D.xhtml
pub inline fn glCopyTextureSubImage1D(arg_2937: GLuint, arg_2938: GLint, arg_2939: GLint, arg_2940: GLint, arg_2941: GLint, arg_2942: GLsizei) void {
    return glad_glCopyTextureSubImage1D.?(arg_2937, arg_2938, arg_2939, arg_2940, arg_2941, arg_2942);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyTextureSubImage2D.xhtml
pub inline fn glCopyTextureSubImage2D(arg_2943: GLuint, arg_2944: GLint, arg_2945: GLint, arg_2946: GLint, arg_2947: GLint, arg_2948: GLint, arg_2949: GLsizei, arg_2950: GLsizei) void {
    return glad_glCopyTextureSubImage2D.?(arg_2943, arg_2944, arg_2945, arg_2946, arg_2947, arg_2948, arg_2949, arg_2950);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyTextureSubImage3D.xhtml
pub inline fn glCopyTextureSubImage3D(arg_2951: GLuint, arg_2952: GLint, arg_2953: GLint, arg_2954: GLint, arg_2955: GLint, arg_2956: GLint, arg_2957: GLint, arg_2958: GLsizei, arg_2959: GLsizei) void {
    return glad_glCopyTextureSubImage3D.?(arg_2951, arg_2952, arg_2953, arg_2954, arg_2955, arg_2956, arg_2957, arg_2958, arg_2959);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureParameterf.xhtml
pub inline fn glTextureParameterf(arg_2960: GLuint, arg_2961: GLenum, arg_2962: GLfloat) void {
    return glad_glTextureParameterf.?(arg_2960, arg_2961, arg_2962);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureParameterfv.xhtml
pub inline fn glTextureParameterfv(arg_2963: GLuint, arg_2964: GLenum, arg_2965: [*c]const GLfloat) void {
    return glad_glTextureParameterfv.?(arg_2963, arg_2964, arg_2965);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureParameteri.xhtml
pub inline fn glTextureParameteri(arg_2966: GLuint, arg_2967: GLenum, arg_2968: GLint) void {
    return glad_glTextureParameteri.?(arg_2966, arg_2967, arg_2968);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureParameterIiv.xhtml
pub inline fn glTextureParameterIiv(arg_2969: GLuint, arg_2970: GLenum, arg_2971: [*c]const GLint) void {
    return glad_glTextureParameterIiv.?(arg_2969, arg_2970, arg_2971);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureParameterIuiv.xhtml
pub inline fn glTextureParameterIuiv(arg_2972: GLuint, arg_2973: GLenum, arg_2974: [*c]const GLuint) void {
    return glad_glTextureParameterIuiv.?(arg_2972, arg_2973, arg_2974);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureParameteriv.xhtml
pub inline fn glTextureParameteriv(arg_2975: GLuint, arg_2976: GLenum, arg_2977: [*c]const GLint) void {
    return glad_glTextureParameteriv.?(arg_2975, arg_2976, arg_2977);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenerateTextureMipmap.xhtml
pub inline fn glGenerateTextureMipmap(arg_2978: GLuint) void {
    return glad_glGenerateTextureMipmap.?(arg_2978);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindTextureUnit.xhtml
pub inline fn glBindTextureUnit(arg_2979: GLuint, arg_2980: GLuint) void {
    return glad_glBindTextureUnit.?(arg_2979, arg_2980);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTextureImage.xhtml
pub inline fn glGetTextureImage(arg_2981: GLuint, arg_2982: GLint, arg_2983: GLenum, arg_2984: GLenum, arg_2985: GLsizei, arg_2986: ?*anyopaque) void {
    return glad_glGetTextureImage.?(arg_2981, arg_2982, arg_2983, arg_2984, arg_2985, arg_2986);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetCompressedTextureImage.xhtml
pub inline fn glGetCompressedTextureImage(arg_2987: GLuint, arg_2988: GLint, arg_2989: GLsizei, arg_2990: ?*anyopaque) void {
    return glad_glGetCompressedTextureImage.?(arg_2987, arg_2988, arg_2989, arg_2990);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTextureLevelParameterfv.xhtml
pub inline fn glGetTextureLevelParameterfv(arg_2991: GLuint, arg_2992: GLint, arg_2993: GLenum, arg_2994: [*c]GLfloat) void {
    return glad_glGetTextureLevelParameterfv.?(arg_2991, arg_2992, arg_2993, arg_2994);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTextureLevelParameteriv.xhtml
pub inline fn glGetTextureLevelParameteriv(arg_2995: GLuint, arg_2996: GLint, arg_2997: GLenum, arg_2998: [*c]GLint) void {
    return glad_glGetTextureLevelParameteriv.?(arg_2995, arg_2996, arg_2997, arg_2998);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTextureParameterfv.xhtml
pub inline fn glGetTextureParameterfv(arg_2999: GLuint, arg_3000: GLenum, arg_3001: [*c]GLfloat) void {
    return glad_glGetTextureParameterfv.?(arg_2999, arg_3000, arg_3001);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTextureParameterIiv.xhtml
pub inline fn glGetTextureParameterIiv(arg_3002: GLuint, arg_3003: GLenum, arg_3004: [*c]GLint) void {
    return glad_glGetTextureParameterIiv.?(arg_3002, arg_3003, arg_3004);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTextureParameterIuiv.xhtml
pub inline fn glGetTextureParameterIuiv(arg_3005: GLuint, arg_3006: GLenum, arg_3007: [*c]GLuint) void {
    return glad_glGetTextureParameterIuiv.?(arg_3005, arg_3006, arg_3007);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTextureParameteriv.xhtml
pub inline fn glGetTextureParameteriv(arg_3008: GLuint, arg_3009: GLenum, arg_3010: [*c]GLint) void {
    return glad_glGetTextureParameteriv.?(arg_3008, arg_3009, arg_3010);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCreateVertexArrays.xhtml
pub inline fn glCreateVertexArrays(arg_3011: GLsizei, arg_3012: [*c]GLuint) void {
    return glad_glCreateVertexArrays.?(arg_3011, arg_3012);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDisableVertexArrayAttrib.xhtml
pub inline fn glDisableVertexArrayAttrib(arg_3013: GLuint, arg_3014: GLuint) void {
    return glad_glDisableVertexArrayAttrib.?(arg_3013, arg_3014);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEnableVertexArrayAttrib.xhtml
pub inline fn glEnableVertexArrayAttrib(arg_3015: GLuint, arg_3016: GLuint) void {
    return glad_glEnableVertexArrayAttrib.?(arg_3015, arg_3016);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayElementBuffer.xhtml
pub inline fn glVertexArrayElementBuffer(arg_3017: GLuint, arg_3018: GLuint) void {
    return glad_glVertexArrayElementBuffer.?(arg_3017, arg_3018);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayVertexBuffer.xhtml
pub inline fn glVertexArrayVertexBuffer(arg_3019: GLuint, arg_3020: GLuint, arg_3021: GLuint, arg_3022: GLintptr, arg_3023: GLsizei) void {
    return glad_glVertexArrayVertexBuffer.?(arg_3019, arg_3020, arg_3021, arg_3022, arg_3023);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayVertexBuffers.xhtml
pub inline fn glVertexArrayVertexBuffers(arg_3024: GLuint, arg_3025: GLuint, arg_3026: GLsizei, arg_3027: [*c]const GLuint, arg_3028: [*c]const GLintptr, arg_3029: [*c]const GLsizei) void {
    return glad_glVertexArrayVertexBuffers.?(arg_3024, arg_3025, arg_3026, arg_3027, arg_3028, arg_3029);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayAttribBinding.xhtml
pub inline fn glVertexArrayAttribBinding(arg_3030: GLuint, arg_3031: GLuint, arg_3032: GLuint) void {
    return glad_glVertexArrayAttribBinding.?(arg_3030, arg_3031, arg_3032);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayAttribFormat.xhtml
pub inline fn glVertexArrayAttribFormat(arg_3033: GLuint, arg_3034: GLuint, arg_3035: GLint, arg_3036: GLenum, arg_3037: GLboolean, arg_3038: GLuint) void {
    return glad_glVertexArrayAttribFormat.?(arg_3033, arg_3034, arg_3035, arg_3036, arg_3037, arg_3038);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayAttribIFormat.xhtml
pub inline fn glVertexArrayAttribIFormat(arg_3039: GLuint, arg_3040: GLuint, arg_3041: GLint, arg_3042: GLenum, arg_3043: GLuint) void {
    return glad_glVertexArrayAttribIFormat.?(arg_3039, arg_3040, arg_3041, arg_3042, arg_3043);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayAttribLFormat.xhtml
pub inline fn glVertexArrayAttribLFormat(arg_3044: GLuint, arg_3045: GLuint, arg_3046: GLint, arg_3047: GLenum, arg_3048: GLuint) void {
    return glad_glVertexArrayAttribLFormat.?(arg_3044, arg_3045, arg_3046, arg_3047, arg_3048);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayBindingDivisor.xhtml
pub inline fn glVertexArrayBindingDivisor(arg_3049: GLuint, arg_3050: GLuint, arg_3051: GLuint) void {
    return glad_glVertexArrayBindingDivisor.?(arg_3049, arg_3050, arg_3051);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexArrayiv.xhtml
pub inline fn glGetVertexArrayiv(arg_3052: GLuint, arg_3053: GLenum, arg_3054: [*c]GLint) void {
    return glad_glGetVertexArrayiv.?(arg_3052, arg_3053, arg_3054);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexArrayIndexediv.xhtml
pub inline fn glGetVertexArrayIndexediv(arg_3055: GLuint, arg_3056: GLuint, arg_3057: GLenum, arg_3058: [*c]GLint) void {
    return glad_glGetVertexArrayIndexediv.?(arg_3055, arg_3056, arg_3057, arg_3058);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexArrayIndexed64iv.xhtml
pub inline fn glGetVertexArrayIndexed64iv(arg_3059: GLuint, arg_3060: GLuint, arg_3061: GLenum, arg_3062: [*c]GLint64) void {
    return glad_glGetVertexArrayIndexed64iv.?(arg_3059, arg_3060, arg_3061, arg_3062);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCreateSamplers.xhtml
pub inline fn glCreateSamplers(arg_3063: GLsizei, arg_3064: [*c]GLuint) void {
    return glad_glCreateSamplers.?(arg_3063, arg_3064);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCreateProgramPipelines.xhtml
pub inline fn glCreateProgramPipelines(arg_3065: GLsizei, arg_3066: [*c]GLuint) void {
    return glad_glCreateProgramPipelines.?(arg_3065, arg_3066);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCreateQueries.xhtml
pub inline fn glCreateQueries(arg_3067: GLenum, arg_3068: GLsizei, arg_3069: [*c]GLuint) void {
    return glad_glCreateQueries.?(arg_3067, arg_3068, arg_3069);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetQueryBufferObjecti64v.xhtml
pub inline fn glGetQueryBufferObjecti64v(arg_3070: GLuint, arg_3071: GLuint, arg_3072: GLenum, arg_3073: GLintptr) void {
    return glad_glGetQueryBufferObjecti64v.?(arg_3070, arg_3071, arg_3072, arg_3073);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetQueryBufferObjectiv.xhtml
pub inline fn glGetQueryBufferObjectiv(arg_3074: GLuint, arg_3075: GLuint, arg_3076: GLenum, arg_3077: GLintptr) void {
    return glad_glGetQueryBufferObjectiv.?(arg_3074, arg_3075, arg_3076, arg_3077);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetQueryBufferObjectui64v.xhtml
pub inline fn glGetQueryBufferObjectui64v(arg_3078: GLuint, arg_3079: GLuint, arg_3080: GLenum, arg_3081: GLintptr) void {
    return glad_glGetQueryBufferObjectui64v.?(arg_3078, arg_3079, arg_3080, arg_3081);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetQueryBufferObjectuiv.xhtml
pub inline fn glGetQueryBufferObjectuiv(arg_3082: GLuint, arg_3083: GLuint, arg_3084: GLenum, arg_3085: GLintptr) void {
    return glad_glGetQueryBufferObjectuiv.?(arg_3082, arg_3083, arg_3084, arg_3085);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMemoryBarrierByRegion.xhtml
pub inline fn glMemoryBarrierByRegion(arg_3086: GLbitfield) void {
    return glad_glMemoryBarrierByRegion.?(arg_3086);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTextureSubImage.xhtml
pub inline fn glGetTextureSubImage(arg_3087: GLuint, arg_3088: GLint, arg_3089: GLint, arg_3090: GLint, arg_3091: GLint, arg_3092: GLsizei, arg_3093: GLsizei, arg_3094: GLsizei, arg_3095: GLenum, arg_3096: GLenum, arg_3097: GLsizei, arg_3098: ?*anyopaque) void {
    return glad_glGetTextureSubImage.?(arg_3087, arg_3088, arg_3089, arg_3090, arg_3091, arg_3092, arg_3093, arg_3094, arg_3095, arg_3096, arg_3097, arg_3098);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetCompressedTextureSubImage.xhtml
pub inline fn glGetCompressedTextureSubImage(arg_3099: GLuint, arg_3100: GLint, arg_3101: GLint, arg_3102: GLint, arg_3103: GLint, arg_3104: GLsizei, arg_3105: GLsizei, arg_3106: GLsizei, arg_3107: GLsizei, arg_3108: ?*anyopaque) void {
    return glad_glGetCompressedTextureSubImage.?(arg_3099, arg_3100, arg_3101, arg_3102, arg_3103, arg_3104, arg_3105, arg_3106, arg_3107, arg_3108);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetGraphicsResetStatus.xhtml
pub inline fn glGetGraphicsResetStatus() GLenum {
    return glad_glGetGraphicsResetStatus.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnCompressedTexImage.xhtml
pub inline fn glGetnCompressedTexImage(arg_3109: GLenum, arg_3110: GLint, arg_3111: GLsizei, arg_3112: ?*anyopaque) void {
    return glad_glGetnCompressedTexImage.?(arg_3109, arg_3110, arg_3111, arg_3112);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnTexImage.xhtml
pub inline fn glGetnTexImage(arg_3113: GLenum, arg_3114: GLint, arg_3115: GLenum, arg_3116: GLenum, arg_3117: GLsizei, arg_3118: ?*anyopaque) void {
    return glad_glGetnTexImage.?(arg_3113, arg_3114, arg_3115, arg_3116, arg_3117, arg_3118);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnUniformdv.xhtml
pub inline fn glGetnUniformdv(arg_3119: GLuint, arg_3120: GLint, arg_3121: GLsizei, arg_3122: [*c]GLdouble) void {
    return glad_glGetnUniformdv.?(arg_3119, arg_3120, arg_3121, arg_3122);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnUniformfv.xhtml
pub inline fn glGetnUniformfv(arg_3123: GLuint, arg_3124: GLint, arg_3125: GLsizei, arg_3126: [*c]GLfloat) void {
    return glad_glGetnUniformfv.?(arg_3123, arg_3124, arg_3125, arg_3126);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnUniformiv.xhtml
pub inline fn glGetnUniformiv(arg_3127: GLuint, arg_3128: GLint, arg_3129: GLsizei, arg_3130: [*c]GLint) void {
    return glad_glGetnUniformiv.?(arg_3127, arg_3128, arg_3129, arg_3130);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnUniformuiv.xhtml
pub inline fn glGetnUniformuiv(arg_3131: GLuint, arg_3132: GLint, arg_3133: GLsizei, arg_3134: [*c]GLuint) void {
    return glad_glGetnUniformuiv.?(arg_3131, arg_3132, arg_3133, arg_3134);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReadnPixels.xhtml
pub inline fn glReadnPixels(arg_3135: GLint, arg_3136: GLint, arg_3137: GLsizei, arg_3138: GLsizei, arg_3139: GLenum, arg_3140: GLenum, arg_3141: GLsizei, arg_3142: ?*anyopaque) void {
    return glad_glReadnPixels.?(arg_3135, arg_3136, arg_3137, arg_3138, arg_3139, arg_3140, arg_3141, arg_3142);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnMapdv.xhtml
pub inline fn glGetnMapdv(arg_3143: GLenum, arg_3144: GLenum, arg_3145: GLsizei, arg_3146: [*c]GLdouble) void {
    return glad_glGetnMapdv.?(arg_3143, arg_3144, arg_3145, arg_3146);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnMapfv.xhtml
pub inline fn glGetnMapfv(arg_3147: GLenum, arg_3148: GLenum, arg_3149: GLsizei, arg_3150: [*c]GLfloat) void {
    return glad_glGetnMapfv.?(arg_3147, arg_3148, arg_3149, arg_3150);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnMapiv.xhtml
pub inline fn glGetnMapiv(arg_3151: GLenum, arg_3152: GLenum, arg_3153: GLsizei, arg_3154: [*c]GLint) void {
    return glad_glGetnMapiv.?(arg_3151, arg_3152, arg_3153, arg_3154);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnPixelMapfv.xhtml
pub inline fn glGetnPixelMapfv(arg_3155: GLenum, arg_3156: GLsizei, arg_3157: [*c]GLfloat) void {
    return glad_glGetnPixelMapfv.?(arg_3155, arg_3156, arg_3157);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnPixelMapuiv.xhtml
pub inline fn glGetnPixelMapuiv(arg_3158: GLenum, arg_3159: GLsizei, arg_3160: [*c]GLuint) void {
    return glad_glGetnPixelMapuiv.?(arg_3158, arg_3159, arg_3160);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnPixelMapusv.xhtml
pub inline fn glGetnPixelMapusv(arg_3161: GLenum, arg_3162: GLsizei, arg_3163: [*c]GLushort) void {
    return glad_glGetnPixelMapusv.?(arg_3161, arg_3162, arg_3163);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnPolygonStipple.xhtml
pub inline fn glGetnPolygonStipple(arg_3164: GLsizei, arg_3165: [*c]GLubyte) void {
    return glad_glGetnPolygonStipple.?(arg_3164, arg_3165);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnColorTable.xhtml
pub inline fn glGetnColorTable(arg_3166: GLenum, arg_3167: GLenum, arg_3168: GLenum, arg_3169: GLsizei, arg_3170: ?*anyopaque) void {
    return glad_glGetnColorTable.?(arg_3166, arg_3167, arg_3168, arg_3169, arg_3170);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnConvolutionFilter.xhtml
pub inline fn glGetnConvolutionFilter(arg_3171: GLenum, arg_3172: GLenum, arg_3173: GLenum, arg_3174: GLsizei, arg_3175: ?*anyopaque) void {
    return glad_glGetnConvolutionFilter.?(arg_3171, arg_3172, arg_3173, arg_3174, arg_3175);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnSeparableFilter.xhtml
pub inline fn glGetnSeparableFilter(arg_3176: GLenum, arg_3177: GLenum, arg_3178: GLenum, arg_3179: GLsizei, arg_3180: ?*anyopaque, arg_3181: GLsizei, arg_3182: ?*anyopaque, arg_3183: ?*anyopaque) void {
    return glad_glGetnSeparableFilter.?(arg_3176, arg_3177, arg_3178, arg_3179, arg_3180, arg_3181, arg_3182, arg_3183);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnHistogram.xhtml
pub inline fn glGetnHistogram(arg_3184: GLenum, arg_3185: GLboolean, arg_3186: GLenum, arg_3187: GLenum, arg_3188: GLsizei, arg_3189: ?*anyopaque) void {
    return glad_glGetnHistogram.?(arg_3184, arg_3185, arg_3186, arg_3187, arg_3188, arg_3189);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnMinmax.xhtml
pub inline fn glGetnMinmax(arg_3190: GLenum, arg_3191: GLboolean, arg_3192: GLenum, arg_3193: GLenum, arg_3194: GLsizei, arg_3195: ?*anyopaque) void {
    return glad_glGetnMinmax.?(arg_3190, arg_3191, arg_3192, arg_3193, arg_3194, arg_3195);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureBarrier.xhtml
pub inline fn glTextureBarrier() void {
    return glad_glTextureBarrier.?();
}
pub const GL_VERSION_4_6 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSpecializeShader.xhtml
pub inline fn glSpecializeShader(arg_3196: GLuint, arg_3197: [*c]const GLchar, arg_3198: GLuint, arg_3199: [*c]const GLuint, arg_3200: [*c]const GLuint) void {
    return glad_glSpecializeShader.?(arg_3196, arg_3197, arg_3198, arg_3199, arg_3200);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiDrawArraysIndirectCount.xhtml
pub inline fn glMultiDrawArraysIndirectCount(arg_3201: GLenum, arg_3202: ?*const anyopaque, arg_3203: GLintptr, arg_3204: GLsizei, arg_3205: GLsizei) void {
    return glad_glMultiDrawArraysIndirectCount.?(arg_3201, arg_3202, arg_3203, arg_3204, arg_3205);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiDrawElementsIndirectCount.xhtml
pub inline fn glMultiDrawElementsIndirectCount(arg_3206: GLenum, arg_3207: GLenum, arg_3208: ?*const anyopaque, arg_3209: GLintptr, arg_3210: GLsizei, arg_3211: GLsizei) void {
    return glad_glMultiDrawElementsIndirectCount.?(arg_3206, arg_3207, arg_3208, arg_3209, arg_3210, arg_3211);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPolygonOffsetClamp.xhtml
pub inline fn glPolygonOffsetClamp(arg_3212: GLfloat, arg_3213: GLfloat, arg_3214: GLfloat) void {
    return glad_glPolygonOffsetClamp.?(arg_3212, arg_3213, arg_3214);
}
pub const GL_VERSION_ES_CM_1_0 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClipPlanef.xhtml
pub inline fn glClipPlanef(arg_3215: GLenum, arg_3216: [*c]const GLfloat) void {
    return glad_glClipPlanef.?(arg_3215, arg_3216);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFrustumf.xhtml
pub inline fn glFrustumf(arg_3217: GLfloat, arg_3218: GLfloat, arg_3219: GLfloat, arg_3220: GLfloat, arg_3221: GLfloat, arg_3222: GLfloat) void {
    return glad_glFrustumf.?(arg_3217, arg_3218, arg_3219, arg_3220, arg_3221, arg_3222);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetClipPlanef.xhtml
pub inline fn glGetClipPlanef(arg_3223: GLenum, arg_3224: [*c]GLfloat) void {
    return glad_glGetClipPlanef.?(arg_3223, arg_3224);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glOrthof.xhtml
pub inline fn glOrthof(arg_3225: GLfloat, arg_3226: GLfloat, arg_3227: GLfloat, arg_3228: GLfloat, arg_3229: GLfloat, arg_3230: GLfloat) void {
    return glad_glOrthof.?(arg_3225, arg_3226, arg_3227, arg_3228, arg_3229, arg_3230);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glAlphaFuncx.xhtml
pub inline fn glAlphaFuncx(arg_3231: GLenum, arg_3232: GLfixed) void {
    return glad_glAlphaFuncx.?(arg_3231, arg_3232);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearColorx.xhtml
pub inline fn glClearColorx(arg_3233: GLfixed, arg_3234: GLfixed, arg_3235: GLfixed, arg_3236: GLfixed) void {
    return glad_glClearColorx.?(arg_3233, arg_3234, arg_3235, arg_3236);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearDepthx.xhtml
pub inline fn glClearDepthx(arg_3237: GLfixed) void {
    return glad_glClearDepthx.?(arg_3237);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClipPlanex.xhtml
pub inline fn glClipPlanex(arg_3238: GLenum, arg_3239: [*c]const GLfixed) void {
    return glad_glClipPlanex.?(arg_3238, arg_3239);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColor4x.xhtml
pub inline fn glColor4x(arg_3240: GLfixed, arg_3241: GLfixed, arg_3242: GLfixed, arg_3243: GLfixed) void {
    return glad_glColor4x.?(arg_3240, arg_3241, arg_3242, arg_3243);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDepthRangex.xhtml
pub inline fn glDepthRangex(arg_3244: GLfixed, arg_3245: GLfixed) void {
    return glad_glDepthRangex.?(arg_3244, arg_3245);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFogx.xhtml
pub inline fn glFogx(arg_3246: GLenum, arg_3247: GLfixed) void {
    return glad_glFogx.?(arg_3246, arg_3247);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFogxv.xhtml
pub inline fn glFogxv(arg_3248: GLenum, arg_3249: [*c]const GLfixed) void {
    return glad_glFogxv.?(arg_3248, arg_3249);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFrustumx.xhtml
pub inline fn glFrustumx(arg_3250: GLfixed, arg_3251: GLfixed, arg_3252: GLfixed, arg_3253: GLfixed, arg_3254: GLfixed, arg_3255: GLfixed) void {
    return glad_glFrustumx.?(arg_3250, arg_3251, arg_3252, arg_3253, arg_3254, arg_3255);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetClipPlanex.xhtml
pub inline fn glGetClipPlanex(arg_3256: GLenum, arg_3257: [*c]GLfixed) void {
    return glad_glGetClipPlanex.?(arg_3256, arg_3257);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFixedv.xhtml
pub inline fn glGetFixedv(arg_3258: GLenum, arg_3259: [*c]GLfixed) void {
    return glad_glGetFixedv.?(arg_3258, arg_3259);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetLightxv.xhtml
pub inline fn glGetLightxv(arg_3260: GLenum, arg_3261: GLenum, arg_3262: [*c]GLfixed) void {
    return glad_glGetLightxv.?(arg_3260, arg_3261, arg_3262);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMaterialxv.xhtml
pub inline fn glGetMaterialxv(arg_3263: GLenum, arg_3264: GLenum, arg_3265: [*c]GLfixed) void {
    return glad_glGetMaterialxv.?(arg_3263, arg_3264, arg_3265);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexEnvxv.xhtml
pub inline fn glGetTexEnvxv(arg_3266: GLenum, arg_3267: GLenum, arg_3268: [*c]GLfixed) void {
    return glad_glGetTexEnvxv.?(arg_3266, arg_3267, arg_3268);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexParameterxv.xhtml
pub inline fn glGetTexParameterxv(arg_3269: GLenum, arg_3270: GLenum, arg_3271: [*c]GLfixed) void {
    return glad_glGetTexParameterxv.?(arg_3269, arg_3270, arg_3271);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLightModelx.xhtml
pub inline fn glLightModelx(arg_3272: GLenum, arg_3273: GLfixed) void {
    return glad_glLightModelx.?(arg_3272, arg_3273);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLightModelxv.xhtml
pub inline fn glLightModelxv(arg_3274: GLenum, arg_3275: [*c]const GLfixed) void {
    return glad_glLightModelxv.?(arg_3274, arg_3275);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLightx.xhtml
pub inline fn glLightx(arg_3276: GLenum, arg_3277: GLenum, arg_3278: GLfixed) void {
    return glad_glLightx.?(arg_3276, arg_3277, arg_3278);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLightxv.xhtml
pub inline fn glLightxv(arg_3279: GLenum, arg_3280: GLenum, arg_3281: [*c]const GLfixed) void {
    return glad_glLightxv.?(arg_3279, arg_3280, arg_3281);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLineWidthx.xhtml
pub inline fn glLineWidthx(arg_3282: GLfixed) void {
    return glad_glLineWidthx.?(arg_3282);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLoadMatrixx.xhtml
pub inline fn glLoadMatrixx(arg_3283: [*c]const GLfixed) void {
    return glad_glLoadMatrixx.?(arg_3283);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMaterialx.xhtml
pub inline fn glMaterialx(arg_3284: GLenum, arg_3285: GLenum, arg_3286: GLfixed) void {
    return glad_glMaterialx.?(arg_3284, arg_3285, arg_3286);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMaterialxv.xhtml
pub inline fn glMaterialxv(arg_3287: GLenum, arg_3288: GLenum, arg_3289: [*c]const GLfixed) void {
    return glad_glMaterialxv.?(arg_3287, arg_3288, arg_3289);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultMatrixx.xhtml
pub inline fn glMultMatrixx(arg_3290: [*c]const GLfixed) void {
    return glad_glMultMatrixx.?(arg_3290);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord4x.xhtml
pub inline fn glMultiTexCoord4x(arg_3291: GLenum, arg_3292: GLfixed, arg_3293: GLfixed, arg_3294: GLfixed, arg_3295: GLfixed) void {
    return glad_glMultiTexCoord4x.?(arg_3291, arg_3292, arg_3293, arg_3294, arg_3295);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNormal3x.xhtml
pub inline fn glNormal3x(arg_3296: GLfixed, arg_3297: GLfixed, arg_3298: GLfixed) void {
    return glad_glNormal3x.?(arg_3296, arg_3297, arg_3298);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glOrthox.xhtml
pub inline fn glOrthox(arg_3299: GLfixed, arg_3300: GLfixed, arg_3301: GLfixed, arg_3302: GLfixed, arg_3303: GLfixed, arg_3304: GLfixed) void {
    return glad_glOrthox.?(arg_3299, arg_3300, arg_3301, arg_3302, arg_3303, arg_3304);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPointParameterx.xhtml
pub inline fn glPointParameterx(arg_3305: GLenum, arg_3306: GLfixed) void {
    return glad_glPointParameterx.?(arg_3305, arg_3306);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPointParameterxv.xhtml
pub inline fn glPointParameterxv(arg_3307: GLenum, arg_3308: [*c]const GLfixed) void {
    return glad_glPointParameterxv.?(arg_3307, arg_3308);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPointSizex.xhtml
pub inline fn glPointSizex(arg_3309: GLfixed) void {
    return glad_glPointSizex.?(arg_3309);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPolygonOffsetx.xhtml
pub inline fn glPolygonOffsetx(arg_3310: GLfixed, arg_3311: GLfixed) void {
    return glad_glPolygonOffsetx.?(arg_3310, arg_3311);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRotatex.xhtml
pub inline fn glRotatex(arg_3312: GLfixed, arg_3313: GLfixed, arg_3314: GLfixed, arg_3315: GLfixed) void {
    return glad_glRotatex.?(arg_3312, arg_3313, arg_3314, arg_3315);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSampleCoveragex.xhtml
pub inline fn glSampleCoveragex(arg_3316: GLclampx, arg_3317: GLboolean) void {
    return glad_glSampleCoveragex.?(arg_3316, arg_3317);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glScalex.xhtml
pub inline fn glScalex(arg_3318: GLfixed, arg_3319: GLfixed, arg_3320: GLfixed) void {
    return glad_glScalex.?(arg_3318, arg_3319, arg_3320);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexEnvx.xhtml
pub inline fn glTexEnvx(arg_3321: GLenum, arg_3322: GLenum, arg_3323: GLfixed) void {
    return glad_glTexEnvx.?(arg_3321, arg_3322, arg_3323);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexEnvxv.xhtml
pub inline fn glTexEnvxv(arg_3324: GLenum, arg_3325: GLenum, arg_3326: [*c]const GLfixed) void {
    return glad_glTexEnvxv.?(arg_3324, arg_3325, arg_3326);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexParameterx.xhtml
pub inline fn glTexParameterx(arg_3327: GLenum, arg_3328: GLenum, arg_3329: GLfixed) void {
    return glad_glTexParameterx.?(arg_3327, arg_3328, arg_3329);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexParameterxv.xhtml
pub inline fn glTexParameterxv(arg_3330: GLenum, arg_3331: GLenum, arg_3332: [*c]const GLfixed) void {
    return glad_glTexParameterxv.?(arg_3330, arg_3331, arg_3332);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTranslatex.xhtml
pub inline fn glTranslatex(arg_3333: GLfixed, arg_3334: GLfixed, arg_3335: GLfixed) void {
    return glad_glTranslatex.?(arg_3333, arg_3334, arg_3335);
}
pub const GL_ES_VERSION_2_0 = 1;
pub const GL_ES_VERSION_3_0 = 1;
pub const GL_ES_VERSION_3_1 = 1;
pub const GL_ES_VERSION_3_2 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendBarrier.xhtml
pub inline fn glBlendBarrier() void {
    return glad_glBlendBarrier.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPrimitiveBoundingBox.xhtml
pub inline fn glPrimitiveBoundingBox(arg_3336: GLfloat, arg_3337: GLfloat, arg_3338: GLfloat, arg_3339: GLfloat, arg_3340: GLfloat, arg_3341: GLfloat, arg_3342: GLfloat, arg_3343: GLfloat) void {
    return glad_glPrimitiveBoundingBox.?(arg_3336, arg_3337, arg_3338, arg_3339, arg_3340, arg_3341, arg_3342, arg_3343);
}
pub const GL_SC_VERSION_2_0 = 1;
pub const GL_MULTISAMPLE_3DFX = 0x86B2;
pub const GL_SAMPLE_BUFFERS_3DFX = 0x86B3;
pub const GL_SAMPLES_3DFX = 0x86B4;
pub const GL_MULTISAMPLE_BIT_3DFX = 0x20000000;
pub const GL_COMPRESSED_RGB_FXT1_3DFX = 0x86B0;
pub const GL_COMPRESSED_RGBA_FXT1_3DFX = 0x86B1;
pub const GL_FACTOR_MIN_AMD = 0x901C;
pub const GL_FACTOR_MAX_AMD = 0x901D;
pub const GL_MAX_DEBUG_MESSAGE_LENGTH_AMD = 0x9143;
pub const GL_MAX_DEBUG_LOGGED_MESSAGES_AMD = 0x9144;
pub const GL_DEBUG_LOGGED_MESSAGES_AMD = 0x9145;
pub const GL_DEBUG_SEVERITY_HIGH_AMD = 0x9146;
pub const GL_DEBUG_SEVERITY_MEDIUM_AMD = 0x9147;
pub const GL_DEBUG_SEVERITY_LOW_AMD = 0x9148;
pub const GL_DEBUG_CATEGORY_API_ERROR_AMD = 0x9149;
pub const GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD = 0x914A;
pub const GL_DEBUG_CATEGORY_DEPRECATION_AMD = 0x914B;
pub const GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD = 0x914C;
pub const GL_DEBUG_CATEGORY_PERFORMANCE_AMD = 0x914D;
pub const GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD = 0x914E;
pub const GL_DEBUG_CATEGORY_APPLICATION_AMD = 0x914F;
pub const GL_DEBUG_CATEGORY_OTHER_AMD = 0x9150;
pub const GL_DEPTH_CLAMP_NEAR_AMD = 0x901E;
pub const GL_DEPTH_CLAMP_FAR_AMD = 0x901F;
pub const GL_RENDERBUFFER_STORAGE_SAMPLES_AMD = 0x91B2;
pub const GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD = 0x91B3;
pub const GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD = 0x91B4;
pub const GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD = 0x91B5;
pub const GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD = 0x91B6;
pub const GL_SUPPORTED_MULTISAMPLE_MODES_AMD = 0x91B7;
pub const GL_SUBSAMPLE_DISTANCE_AMD = 0x883F;
pub const GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD = 0x91AE;
pub const GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD = 0x91AF;
pub const GL_ALL_PIXELS_AMD = 0xFFFFFFFF;
pub const GL_FLOAT16_NV = 0x8FF8;
pub const GL_FLOAT16_VEC2_NV = 0x8FF9;
pub const GL_FLOAT16_VEC3_NV = 0x8FFA;
pub const GL_FLOAT16_VEC4_NV = 0x8FFB;
pub const GL_FLOAT16_MAT2_AMD = 0x91C5;
pub const GL_FLOAT16_MAT3_AMD = 0x91C6;
pub const GL_FLOAT16_MAT4_AMD = 0x91C7;
pub const GL_FLOAT16_MAT2x3_AMD = 0x91C8;
pub const GL_FLOAT16_MAT2x4_AMD = 0x91C9;
pub const GL_FLOAT16_MAT3x2_AMD = 0x91CA;
pub const GL_FLOAT16_MAT3x4_AMD = 0x91CB;
pub const GL_FLOAT16_MAT4x2_AMD = 0x91CC;
pub const GL_FLOAT16_MAT4x3_AMD = 0x91CD;
pub const GL_INT64_NV = 0x140E;
pub const GL_UNSIGNED_INT64_NV = 0x140F;
pub const GL_INT8_NV = 0x8FE0;
pub const GL_INT8_VEC2_NV = 0x8FE1;
pub const GL_INT8_VEC3_NV = 0x8FE2;
pub const GL_INT8_VEC4_NV = 0x8FE3;
pub const GL_INT16_NV = 0x8FE4;
pub const GL_INT16_VEC2_NV = 0x8FE5;
pub const GL_INT16_VEC3_NV = 0x8FE6;
pub const GL_INT16_VEC4_NV = 0x8FE7;
pub const GL_INT64_VEC2_NV = 0x8FE9;
pub const GL_INT64_VEC3_NV = 0x8FEA;
pub const GL_INT64_VEC4_NV = 0x8FEB;
pub const GL_UNSIGNED_INT8_NV = 0x8FEC;
pub const GL_UNSIGNED_INT8_VEC2_NV = 0x8FED;
pub const GL_UNSIGNED_INT8_VEC3_NV = 0x8FEE;
pub const GL_UNSIGNED_INT8_VEC4_NV = 0x8FEF;
pub const GL_UNSIGNED_INT16_NV = 0x8FF0;
pub const GL_UNSIGNED_INT16_VEC2_NV = 0x8FF1;
pub const GL_UNSIGNED_INT16_VEC3_NV = 0x8FF2;
pub const GL_UNSIGNED_INT16_VEC4_NV = 0x8FF3;
pub const GL_UNSIGNED_INT64_VEC2_NV = 0x8FF5;
pub const GL_UNSIGNED_INT64_VEC3_NV = 0x8FF6;
pub const GL_UNSIGNED_INT64_VEC4_NV = 0x8FF7;
pub const GL_VERTEX_ELEMENT_SWIZZLE_AMD = 0x91A4;
pub const GL_VERTEX_ID_SWIZZLE_AMD = 0x91A5;
pub const GL_DATA_BUFFER_AMD = 0x9151;
pub const GL_PERFORMANCE_MONITOR_AMD = 0x9152;
pub const GL_QUERY_OBJECT_AMD = 0x9153;
pub const GL_VERTEX_ARRAY_OBJECT_AMD = 0x9154;
pub const GL_SAMPLER_OBJECT_AMD = 0x9155;
pub const GL_OCCLUSION_QUERY_EVENT_MASK_AMD = 0x874F;
pub const GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD = 0x00000001;
pub const GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD = 0x00000002;
pub const GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD = 0x00000004;
pub const GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD = 0x00000008;
pub const GL_QUERY_ALL_EVENT_BITS_AMD = 0xFFFFFFFF;
pub const GL_COUNTER_TYPE_AMD = 0x8BC0;
pub const GL_COUNTER_RANGE_AMD = 0x8BC1;
pub const GL_UNSIGNED_INT64_AMD = 0x8BC2;
pub const GL_PERCENTAGE_AMD = 0x8BC3;
pub const GL_PERFMON_RESULT_AVAILABLE_AMD = 0x8BC4;
pub const GL_PERFMON_RESULT_SIZE_AMD = 0x8BC5;
pub const GL_PERFMON_RESULT_AMD = 0x8BC6;
pub const GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD = 0x9160;
pub const GL_QUERY_BUFFER_AMD = 0x9192;
pub const GL_QUERY_BUFFER_BINDING_AMD = 0x9193;
pub const GL_QUERY_RESULT_NO_WAIT_AMD = 0x9194;
pub const GL_VIRTUAL_PAGE_SIZE_X_AMD = 0x9195;
pub const GL_VIRTUAL_PAGE_SIZE_Y_AMD = 0x9196;
pub const GL_VIRTUAL_PAGE_SIZE_Z_AMD = 0x9197;
pub const GL_MAX_SPARSE_TEXTURE_SIZE_AMD = 0x9198;
pub const GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD = 0x9199;
pub const GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS = 0x919A;
pub const GL_MIN_SPARSE_LEVEL_AMD = 0x919B;
pub const GL_MIN_LOD_WARNING_AMD = 0x919C;
pub const GL_TEXTURE_STORAGE_SPARSE_BIT_AMD = 0x00000001;
pub const GL_SET_AMD = 0x874A;
pub const GL_REPLACE_VALUE_AMD = 0x874B;
pub const GL_STENCIL_OP_VALUE_AMD = 0x874C;
pub const GL_STENCIL_BACK_OP_VALUE_AMD = 0x874D;
pub const GL_STREAM_RASTERIZATION_AMD = 0x91A0;
pub const GL_SAMPLER_BUFFER_AMD = 0x9001;
pub const GL_INT_SAMPLER_BUFFER_AMD = 0x9002;
pub const GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD = 0x9003;
pub const GL_TESSELLATION_MODE_AMD = 0x9004;
pub const GL_TESSELLATION_FACTOR_AMD = 0x9005;
pub const GL_DISCRETE_AMD = 0x9006;
pub const GL_CONTINUOUS_AMD = 0x9007;
pub const GL_AUX_DEPTH_STENCIL_APPLE = 0x8A14;
pub const GL_UNPACK_CLIENT_STORAGE_APPLE = 0x85B2;
pub const GL_ELEMENT_ARRAY_APPLE = 0x8A0C;
pub const GL_ELEMENT_ARRAY_TYPE_APPLE = 0x8A0D;
pub const GL_ELEMENT_ARRAY_POINTER_APPLE = 0x8A0E;
pub const GL_DRAW_PIXELS_APPLE = 0x8A0A;
pub const GL_FENCE_APPLE = 0x8A0B;
pub const GL_HALF_APPLE = 0x140B;
pub const GL_RGBA_FLOAT32_APPLE = 0x8814;
pub const GL_RGB_FLOAT32_APPLE = 0x8815;
pub const GL_ALPHA_FLOAT32_APPLE = 0x8816;
pub const GL_INTENSITY_FLOAT32_APPLE = 0x8817;
pub const GL_LUMINANCE_FLOAT32_APPLE = 0x8818;
pub const GL_LUMINANCE_ALPHA_FLOAT32_APPLE = 0x8819;
pub const GL_RGBA_FLOAT16_APPLE = 0x881A;
pub const GL_RGB_FLOAT16_APPLE = 0x881B;
pub const GL_ALPHA_FLOAT16_APPLE = 0x881C;
pub const GL_INTENSITY_FLOAT16_APPLE = 0x881D;
pub const GL_LUMINANCE_FLOAT16_APPLE = 0x881E;
pub const GL_LUMINANCE_ALPHA_FLOAT16_APPLE = 0x881F;
pub const GL_COLOR_FLOAT_APPLE = 0x8A0F;
pub const GL_BUFFER_SERIALIZED_MODIFY_APPLE = 0x8A12;
pub const GL_BUFFER_FLUSHING_UNMAP_APPLE = 0x8A13;
pub const GL_BUFFER_OBJECT_APPLE = 0x85B3;
pub const GL_RELEASED_APPLE = 0x8A19;
pub const GL_VOLATILE_APPLE = 0x8A1A;
pub const GL_RETAINED_APPLE = 0x8A1B;
pub const GL_UNDEFINED_APPLE = 0x8A1C;
pub const GL_PURGEABLE_APPLE = 0x8A1D;
pub const GL_RGB_422_APPLE = 0x8A1F;
pub const GL_UNSIGNED_SHORT_8_8_APPLE = 0x85BA;
pub const GL_UNSIGNED_SHORT_8_8_REV_APPLE = 0x85BB;
pub const GL_RGB_RAW_422_APPLE = 0x8A51;
pub const GL_PACK_ROW_BYTES_APPLE = 0x8A15;
pub const GL_UNPACK_ROW_BYTES_APPLE = 0x8A16;
pub const GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE = 0x85B0;
pub const GL_TEXTURE_RANGE_LENGTH_APPLE = 0x85B7;
pub const GL_TEXTURE_RANGE_POINTER_APPLE = 0x85B8;
pub const GL_TEXTURE_STORAGE_HINT_APPLE = 0x85BC;
pub const GL_STORAGE_PRIVATE_APPLE = 0x85BD;
pub const GL_STORAGE_CACHED_APPLE = 0x85BE;
pub const GL_STORAGE_SHARED_APPLE = 0x85BF;
pub const GL_TRANSFORM_HINT_APPLE = 0x85B1;
pub const GL_VERTEX_ARRAY_BINDING_APPLE = 0x85B5;
pub const GL_VERTEX_ARRAY_RANGE_APPLE = 0x851D;
pub const GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE = 0x851E;
pub const GL_VERTEX_ARRAY_STORAGE_HINT_APPLE = 0x851F;
pub const GL_VERTEX_ARRAY_RANGE_POINTER_APPLE = 0x8521;
pub const GL_STORAGE_CLIENT_APPLE = 0x85B4;
pub const GL_VERTEX_ATTRIB_MAP1_APPLE = 0x8A00;
pub const GL_VERTEX_ATTRIB_MAP2_APPLE = 0x8A01;
pub const GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE = 0x8A02;
pub const GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE = 0x8A03;
pub const GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE = 0x8A04;
pub const GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE = 0x8A05;
pub const GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE = 0x8A06;
pub const GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE = 0x8A07;
pub const GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE = 0x8A08;
pub const GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE = 0x8A09;
pub const GL_YCBCR_422_APPLE = 0x85B9;
pub const GL_PRIMITIVE_BOUNDING_BOX_ARB = 0x92BE;
pub const GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB = 0x9381;
pub const GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB = 0x9382;
pub const GL_UNSIGNED_INT64_ARB = 0x140F;
pub const GL_SYNC_CL_EVENT_ARB = 0x8240;
pub const GL_SYNC_CL_EVENT_COMPLETE_ARB = 0x8241;
pub const GL_RGBA_FLOAT_MODE_ARB = 0x8820;
pub const GL_CLAMP_VERTEX_COLOR_ARB = 0x891A;
pub const GL_CLAMP_FRAGMENT_COLOR_ARB = 0x891B;
pub const GL_CLAMP_READ_COLOR_ARB = 0x891C;
pub const GL_FIXED_ONLY_ARB = 0x891D;
pub const GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB = 0x9344;
pub const GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB = 0x90EB;
pub const GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB = 0x9345;
pub const GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB = 0x91BF;
pub const GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB = 0x8242;
pub const GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB = 0x8243;
pub const GL_DEBUG_CALLBACK_FUNCTION_ARB = 0x8244;
pub const GL_DEBUG_CALLBACK_USER_PARAM_ARB = 0x8245;
pub const GL_DEBUG_SOURCE_API_ARB = 0x8246;
pub const GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB = 0x8247;
pub const GL_DEBUG_SOURCE_SHADER_COMPILER_ARB = 0x8248;
pub const GL_DEBUG_SOURCE_THIRD_PARTY_ARB = 0x8249;
pub const GL_DEBUG_SOURCE_APPLICATION_ARB = 0x824A;
pub const GL_DEBUG_SOURCE_OTHER_ARB = 0x824B;
pub const GL_DEBUG_TYPE_ERROR_ARB = 0x824C;
pub const GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB = 0x824D;
pub const GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB = 0x824E;
pub const GL_DEBUG_TYPE_PORTABILITY_ARB = 0x824F;
pub const GL_DEBUG_TYPE_PERFORMANCE_ARB = 0x8250;
pub const GL_DEBUG_TYPE_OTHER_ARB = 0x8251;
pub const GL_MAX_DEBUG_MESSAGE_LENGTH_ARB = 0x9143;
pub const GL_MAX_DEBUG_LOGGED_MESSAGES_ARB = 0x9144;
pub const GL_DEBUG_LOGGED_MESSAGES_ARB = 0x9145;
pub const GL_DEBUG_SEVERITY_HIGH_ARB = 0x9146;
pub const GL_DEBUG_SEVERITY_MEDIUM_ARB = 0x9147;
pub const GL_DEBUG_SEVERITY_LOW_ARB = 0x9148;
pub const GL_DEPTH_COMPONENT16_ARB = 0x81A5;
pub const GL_DEPTH_COMPONENT24_ARB = 0x81A6;
pub const GL_DEPTH_COMPONENT32_ARB = 0x81A7;
pub const GL_TEXTURE_DEPTH_SIZE_ARB = 0x884A;
pub const GL_DEPTH_TEXTURE_MODE_ARB = 0x884B;
pub const GL_MAX_DRAW_BUFFERS_ARB = 0x8824;
pub const GL_DRAW_BUFFER0_ARB = 0x8825;
pub const GL_DRAW_BUFFER1_ARB = 0x8826;
pub const GL_DRAW_BUFFER2_ARB = 0x8827;
pub const GL_DRAW_BUFFER3_ARB = 0x8828;
pub const GL_DRAW_BUFFER4_ARB = 0x8829;
pub const GL_DRAW_BUFFER5_ARB = 0x882A;
pub const GL_DRAW_BUFFER6_ARB = 0x882B;
pub const GL_DRAW_BUFFER7_ARB = 0x882C;
pub const GL_DRAW_BUFFER8_ARB = 0x882D;
pub const GL_DRAW_BUFFER9_ARB = 0x882E;
pub const GL_DRAW_BUFFER10_ARB = 0x882F;
pub const GL_DRAW_BUFFER11_ARB = 0x8830;
pub const GL_DRAW_BUFFER12_ARB = 0x8831;
pub const GL_DRAW_BUFFER13_ARB = 0x8832;
pub const GL_DRAW_BUFFER14_ARB = 0x8833;
pub const GL_DRAW_BUFFER15_ARB = 0x8834;
pub const GL_FRAGMENT_PROGRAM_ARB = 0x8804;
pub const GL_PROGRAM_FORMAT_ASCII_ARB = 0x8875;
pub const GL_PROGRAM_LENGTH_ARB = 0x8627;
pub const GL_PROGRAM_FORMAT_ARB = 0x8876;
pub const GL_PROGRAM_BINDING_ARB = 0x8677;
pub const GL_PROGRAM_INSTRUCTIONS_ARB = 0x88A0;
pub const GL_MAX_PROGRAM_INSTRUCTIONS_ARB = 0x88A1;
pub const GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB = 0x88A2;
pub const GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB = 0x88A3;
pub const GL_PROGRAM_TEMPORARIES_ARB = 0x88A4;
pub const GL_MAX_PROGRAM_TEMPORARIES_ARB = 0x88A5;
pub const GL_PROGRAM_NATIVE_TEMPORARIES_ARB = 0x88A6;
pub const GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB = 0x88A7;
pub const GL_PROGRAM_PARAMETERS_ARB = 0x88A8;
pub const GL_MAX_PROGRAM_PARAMETERS_ARB = 0x88A9;
pub const GL_PROGRAM_NATIVE_PARAMETERS_ARB = 0x88AA;
pub const GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB = 0x88AB;
pub const GL_PROGRAM_ATTRIBS_ARB = 0x88AC;
pub const GL_MAX_PROGRAM_ATTRIBS_ARB = 0x88AD;
pub const GL_PROGRAM_NATIVE_ATTRIBS_ARB = 0x88AE;
pub const GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB = 0x88AF;
pub const GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB = 0x88B4;
pub const GL_MAX_PROGRAM_ENV_PARAMETERS_ARB = 0x88B5;
pub const GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB = 0x88B6;
pub const GL_PROGRAM_ALU_INSTRUCTIONS_ARB = 0x8805;
pub const GL_PROGRAM_TEX_INSTRUCTIONS_ARB = 0x8806;
pub const GL_PROGRAM_TEX_INDIRECTIONS_ARB = 0x8807;
pub const GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = 0x8808;
pub const GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = 0x8809;
pub const GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = 0x880A;
pub const GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB = 0x880B;
pub const GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB = 0x880C;
pub const GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB = 0x880D;
pub const GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = 0x880E;
pub const GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = 0x880F;
pub const GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = 0x8810;
pub const GL_PROGRAM_STRING_ARB = 0x8628;
pub const GL_PROGRAM_ERROR_POSITION_ARB = 0x864B;
pub const GL_CURRENT_MATRIX_ARB = 0x8641;
pub const GL_TRANSPOSE_CURRENT_MATRIX_ARB = 0x88B7;
pub const GL_CURRENT_MATRIX_STACK_DEPTH_ARB = 0x8640;
pub const GL_MAX_PROGRAM_MATRICES_ARB = 0x862F;
pub const GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB = 0x862E;
pub const GL_MAX_TEXTURE_COORDS_ARB = 0x8871;
pub const GL_MAX_TEXTURE_IMAGE_UNITS_ARB = 0x8872;
pub const GL_PROGRAM_ERROR_STRING_ARB = 0x8874;
pub const GL_MATRIX0_ARB = 0x88C0;
pub const GL_MATRIX1_ARB = 0x88C1;
pub const GL_MATRIX2_ARB = 0x88C2;
pub const GL_MATRIX3_ARB = 0x88C3;
pub const GL_MATRIX4_ARB = 0x88C4;
pub const GL_MATRIX5_ARB = 0x88C5;
pub const GL_MATRIX6_ARB = 0x88C6;
pub const GL_MATRIX7_ARB = 0x88C7;
pub const GL_MATRIX8_ARB = 0x88C8;
pub const GL_MATRIX9_ARB = 0x88C9;
pub const GL_MATRIX10_ARB = 0x88CA;
pub const GL_MATRIX11_ARB = 0x88CB;
pub const GL_MATRIX12_ARB = 0x88CC;
pub const GL_MATRIX13_ARB = 0x88CD;
pub const GL_MATRIX14_ARB = 0x88CE;
pub const GL_MATRIX15_ARB = 0x88CF;
pub const GL_MATRIX16_ARB = 0x88D0;
pub const GL_MATRIX17_ARB = 0x88D1;
pub const GL_MATRIX18_ARB = 0x88D2;
pub const GL_MATRIX19_ARB = 0x88D3;
pub const GL_MATRIX20_ARB = 0x88D4;
pub const GL_MATRIX21_ARB = 0x88D5;
pub const GL_MATRIX22_ARB = 0x88D6;
pub const GL_MATRIX23_ARB = 0x88D7;
pub const GL_MATRIX24_ARB = 0x88D8;
pub const GL_MATRIX25_ARB = 0x88D9;
pub const GL_MATRIX26_ARB = 0x88DA;
pub const GL_MATRIX27_ARB = 0x88DB;
pub const GL_MATRIX28_ARB = 0x88DC;
pub const GL_MATRIX29_ARB = 0x88DD;
pub const GL_MATRIX30_ARB = 0x88DE;
pub const GL_MATRIX31_ARB = 0x88DF;
pub const GL_FRAGMENT_SHADER_ARB = 0x8B30;
pub const GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB = 0x8B49;
pub const GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB = 0x8B8B;
pub const GL_LINES_ADJACENCY_ARB = 0x000A;
pub const GL_LINE_STRIP_ADJACENCY_ARB = 0x000B;
pub const GL_TRIANGLES_ADJACENCY_ARB = 0x000C;
pub const GL_TRIANGLE_STRIP_ADJACENCY_ARB = 0x000D;
pub const GL_PROGRAM_POINT_SIZE_ARB = 0x8642;
pub const GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB = 0x8C29;
pub const GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB = 0x8DA7;
pub const GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB = 0x8DA8;
pub const GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB = 0x8DA9;
pub const GL_GEOMETRY_SHADER_ARB = 0x8DD9;
pub const GL_GEOMETRY_VERTICES_OUT_ARB = 0x8DDA;
pub const GL_GEOMETRY_INPUT_TYPE_ARB = 0x8DDB;
pub const GL_GEOMETRY_OUTPUT_TYPE_ARB = 0x8DDC;
pub const GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB = 0x8DDD;
pub const GL_MAX_VERTEX_VARYING_COMPONENTS_ARB = 0x8DDE;
pub const GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB = 0x8DDF;
pub const GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB = 0x8DE0;
pub const GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB = 0x8DE1;
pub const GL_SHADER_BINARY_FORMAT_SPIR_V_ARB = 0x9551;
pub const GL_SPIR_V_BINARY_ARB = 0x9552;
pub const GL_INT64_ARB = 0x140E;
pub const GL_INT64_VEC2_ARB = 0x8FE9;
pub const GL_INT64_VEC3_ARB = 0x8FEA;
pub const GL_INT64_VEC4_ARB = 0x8FEB;
pub const GL_UNSIGNED_INT64_VEC2_ARB = 0x8FF5;
pub const GL_UNSIGNED_INT64_VEC3_ARB = 0x8FF6;
pub const GL_UNSIGNED_INT64_VEC4_ARB = 0x8FF7;
pub const GL_HALF_FLOAT_ARB = 0x140B;
pub const GL_CONVOLUTION_BORDER_MODE = 0x8013;
pub const GL_CONVOLUTION_FILTER_SCALE = 0x8014;
pub const GL_CONVOLUTION_FILTER_BIAS = 0x8015;
pub const GL_REDUCE = 0x8016;
pub const GL_CONVOLUTION_FORMAT = 0x8017;
pub const GL_CONVOLUTION_WIDTH = 0x8018;
pub const GL_CONVOLUTION_HEIGHT = 0x8019;
pub const GL_MAX_CONVOLUTION_WIDTH = 0x801A;
pub const GL_MAX_CONVOLUTION_HEIGHT = 0x801B;
pub const GL_POST_CONVOLUTION_RED_SCALE = 0x801C;
pub const GL_POST_CONVOLUTION_GREEN_SCALE = 0x801D;
pub const GL_POST_CONVOLUTION_BLUE_SCALE = 0x801E;
pub const GL_POST_CONVOLUTION_ALPHA_SCALE = 0x801F;
pub const GL_POST_CONVOLUTION_RED_BIAS = 0x8020;
pub const GL_POST_CONVOLUTION_GREEN_BIAS = 0x8021;
pub const GL_POST_CONVOLUTION_BLUE_BIAS = 0x8022;
pub const GL_POST_CONVOLUTION_ALPHA_BIAS = 0x8023;
pub const GL_HISTOGRAM_WIDTH = 0x8026;
pub const GL_HISTOGRAM_FORMAT = 0x8027;
pub const GL_HISTOGRAM_RED_SIZE = 0x8028;
pub const GL_HISTOGRAM_GREEN_SIZE = 0x8029;
pub const GL_HISTOGRAM_BLUE_SIZE = 0x802A;
pub const GL_HISTOGRAM_ALPHA_SIZE = 0x802B;
pub const GL_HISTOGRAM_LUMINANCE_SIZE = 0x802C;
pub const GL_HISTOGRAM_SINK = 0x802D;
pub const GL_MINMAX_FORMAT = 0x802F;
pub const GL_MINMAX_SINK = 0x8030;
pub const GL_TABLE_TOO_LARGE = 0x8031;
pub const GL_COLOR_MATRIX = 0x80B1;
pub const GL_COLOR_MATRIX_STACK_DEPTH = 0x80B2;
pub const GL_MAX_COLOR_MATRIX_STACK_DEPTH = 0x80B3;
pub const GL_POST_COLOR_MATRIX_RED_SCALE = 0x80B4;
pub const GL_POST_COLOR_MATRIX_GREEN_SCALE = 0x80B5;
pub const GL_POST_COLOR_MATRIX_BLUE_SCALE = 0x80B6;
pub const GL_POST_COLOR_MATRIX_ALPHA_SCALE = 0x80B7;
pub const GL_POST_COLOR_MATRIX_RED_BIAS = 0x80B8;
pub const GL_POST_COLOR_MATRIX_GREEN_BIAS = 0x80B9;
pub const GL_POST_COLOR_MATRIX_BLUE_BIAS = 0x80BA;
pub const GL_POST_COLOR_MATRIX_ALPHA_BIAS = 0x80BB;
pub const GL_COLOR_TABLE_SCALE = 0x80D6;
pub const GL_COLOR_TABLE_BIAS = 0x80D7;
pub const GL_COLOR_TABLE_FORMAT = 0x80D8;
pub const GL_COLOR_TABLE_WIDTH = 0x80D9;
pub const GL_COLOR_TABLE_RED_SIZE = 0x80DA;
pub const GL_COLOR_TABLE_GREEN_SIZE = 0x80DB;
pub const GL_COLOR_TABLE_BLUE_SIZE = 0x80DC;
pub const GL_COLOR_TABLE_ALPHA_SIZE = 0x80DD;
pub const GL_COLOR_TABLE_LUMINANCE_SIZE = 0x80DE;
pub const GL_COLOR_TABLE_INTENSITY_SIZE = 0x80DF;
pub const GL_CONSTANT_BORDER = 0x8151;
pub const GL_REPLICATE_BORDER = 0x8153;
pub const GL_CONVOLUTION_BORDER_COLOR = 0x8154;
pub const GL_PARAMETER_BUFFER_ARB = 0x80EE;
pub const GL_PARAMETER_BUFFER_BINDING_ARB = 0x80EF;
pub const GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB = 0x88FE;
pub const GL_SRGB_DECODE_ARB = 0x8299;
pub const GL_VIEW_CLASS_EAC_R11 = 0x9383;
pub const GL_VIEW_CLASS_EAC_RG11 = 0x9384;
pub const GL_VIEW_CLASS_ETC2_RGB = 0x9385;
pub const GL_VIEW_CLASS_ETC2_RGBA = 0x9386;
pub const GL_VIEW_CLASS_ETC2_EAC_RGBA = 0x9387;
pub const GL_VIEW_CLASS_ASTC_4x4_RGBA = 0x9388;
pub const GL_VIEW_CLASS_ASTC_5x4_RGBA = 0x9389;
pub const GL_VIEW_CLASS_ASTC_5x5_RGBA = 0x938A;
pub const GL_VIEW_CLASS_ASTC_6x5_RGBA = 0x938B;
pub const GL_VIEW_CLASS_ASTC_6x6_RGBA = 0x938C;
pub const GL_VIEW_CLASS_ASTC_8x5_RGBA = 0x938D;
pub const GL_VIEW_CLASS_ASTC_8x6_RGBA = 0x938E;
pub const GL_VIEW_CLASS_ASTC_8x8_RGBA = 0x938F;
pub const GL_VIEW_CLASS_ASTC_10x5_RGBA = 0x9390;
pub const GL_VIEW_CLASS_ASTC_10x6_RGBA = 0x9391;
pub const GL_VIEW_CLASS_ASTC_10x8_RGBA = 0x9392;
pub const GL_VIEW_CLASS_ASTC_10x10_RGBA = 0x9393;
pub const GL_VIEW_CLASS_ASTC_12x10_RGBA = 0x9394;
pub const GL_VIEW_CLASS_ASTC_12x12_RGBA = 0x9395;
pub const GL_MATRIX_PALETTE_ARB = 0x8840;
pub const GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB = 0x8841;
pub const GL_MAX_PALETTE_MATRICES_ARB = 0x8842;
pub const GL_CURRENT_PALETTE_MATRIX_ARB = 0x8843;
pub const GL_MATRIX_INDEX_ARRAY_ARB = 0x8844;
pub const GL_CURRENT_MATRIX_INDEX_ARB = 0x8845;
pub const GL_MATRIX_INDEX_ARRAY_SIZE_ARB = 0x8846;
pub const GL_MATRIX_INDEX_ARRAY_TYPE_ARB = 0x8847;
pub const GL_MATRIX_INDEX_ARRAY_STRIDE_ARB = 0x8848;
pub const GL_MATRIX_INDEX_ARRAY_POINTER_ARB = 0x8849;
pub const GL_MULTISAMPLE_ARB = 0x809D;
pub const GL_SAMPLE_ALPHA_TO_COVERAGE_ARB = 0x809E;
pub const GL_SAMPLE_ALPHA_TO_ONE_ARB = 0x809F;
pub const GL_SAMPLE_COVERAGE_ARB = 0x80A0;
pub const GL_SAMPLE_BUFFERS_ARB = 0x80A8;
pub const GL_SAMPLES_ARB = 0x80A9;
pub const GL_SAMPLE_COVERAGE_VALUE_ARB = 0x80AA;
pub const GL_SAMPLE_COVERAGE_INVERT_ARB = 0x80AB;
pub const GL_MULTISAMPLE_BIT_ARB = 0x20000000;
pub const GL_TEXTURE0_ARB = 0x84C0;
pub const GL_TEXTURE1_ARB = 0x84C1;
pub const GL_TEXTURE2_ARB = 0x84C2;
pub const GL_TEXTURE3_ARB = 0x84C3;
pub const GL_TEXTURE4_ARB = 0x84C4;
pub const GL_TEXTURE5_ARB = 0x84C5;
pub const GL_TEXTURE6_ARB = 0x84C6;
pub const GL_TEXTURE7_ARB = 0x84C7;
pub const GL_TEXTURE8_ARB = 0x84C8;
pub const GL_TEXTURE9_ARB = 0x84C9;
pub const GL_TEXTURE10_ARB = 0x84CA;
pub const GL_TEXTURE11_ARB = 0x84CB;
pub const GL_TEXTURE12_ARB = 0x84CC;
pub const GL_TEXTURE13_ARB = 0x84CD;
pub const GL_TEXTURE14_ARB = 0x84CE;
pub const GL_TEXTURE15_ARB = 0x84CF;
pub const GL_TEXTURE16_ARB = 0x84D0;
pub const GL_TEXTURE17_ARB = 0x84D1;
pub const GL_TEXTURE18_ARB = 0x84D2;
pub const GL_TEXTURE19_ARB = 0x84D3;
pub const GL_TEXTURE20_ARB = 0x84D4;
pub const GL_TEXTURE21_ARB = 0x84D5;
pub const GL_TEXTURE22_ARB = 0x84D6;
pub const GL_TEXTURE23_ARB = 0x84D7;
pub const GL_TEXTURE24_ARB = 0x84D8;
pub const GL_TEXTURE25_ARB = 0x84D9;
pub const GL_TEXTURE26_ARB = 0x84DA;
pub const GL_TEXTURE27_ARB = 0x84DB;
pub const GL_TEXTURE28_ARB = 0x84DC;
pub const GL_TEXTURE29_ARB = 0x84DD;
pub const GL_TEXTURE30_ARB = 0x84DE;
pub const GL_TEXTURE31_ARB = 0x84DF;
pub const GL_ACTIVE_TEXTURE_ARB = 0x84E0;
pub const GL_CLIENT_ACTIVE_TEXTURE_ARB = 0x84E1;
pub const GL_MAX_TEXTURE_UNITS_ARB = 0x84E2;
pub const GL_QUERY_COUNTER_BITS_ARB = 0x8864;
pub const GL_CURRENT_QUERY_ARB = 0x8865;
pub const GL_QUERY_RESULT_ARB = 0x8866;
pub const GL_QUERY_RESULT_AVAILABLE_ARB = 0x8867;
pub const GL_SAMPLES_PASSED_ARB = 0x8914;
pub const GL_MAX_SHADER_COMPILER_THREADS_ARB = 0x91B0;
pub const GL_COMPLETION_STATUS_ARB = 0x91B1;
pub const GL_VERTICES_SUBMITTED_ARB = 0x82EE;
pub const GL_PRIMITIVES_SUBMITTED_ARB = 0x82EF;
pub const GL_VERTEX_SHADER_INVOCATIONS_ARB = 0x82F0;
pub const GL_TESS_CONTROL_SHADER_PATCHES_ARB = 0x82F1;
pub const GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB = 0x82F2;
pub const GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB = 0x82F3;
pub const GL_FRAGMENT_SHADER_INVOCATIONS_ARB = 0x82F4;
pub const GL_COMPUTE_SHADER_INVOCATIONS_ARB = 0x82F5;
pub const GL_CLIPPING_INPUT_PRIMITIVES_ARB = 0x82F6;
pub const GL_CLIPPING_OUTPUT_PRIMITIVES_ARB = 0x82F7;
pub const GL_PIXEL_PACK_BUFFER_ARB = 0x88EB;
pub const GL_PIXEL_UNPACK_BUFFER_ARB = 0x88EC;
pub const GL_PIXEL_PACK_BUFFER_BINDING_ARB = 0x88ED;
pub const GL_PIXEL_UNPACK_BUFFER_BINDING_ARB = 0x88EF;
pub const GL_POINT_SIZE_MIN_ARB = 0x8126;
pub const GL_POINT_SIZE_MAX_ARB = 0x8127;
pub const GL_POINT_FADE_THRESHOLD_SIZE_ARB = 0x8128;
pub const GL_POINT_DISTANCE_ATTENUATION_ARB = 0x8129;
pub const GL_POINT_SPRITE_ARB = 0x8861;
pub const GL_COORD_REPLACE_ARB = 0x8862;
pub const GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB = 0x00000004;
pub const GL_LOSE_CONTEXT_ON_RESET_ARB = 0x8252;
pub const GL_GUILTY_CONTEXT_RESET_ARB = 0x8253;
pub const GL_INNOCENT_CONTEXT_RESET_ARB = 0x8254;
pub const GL_UNKNOWN_CONTEXT_RESET_ARB = 0x8255;
pub const GL_RESET_NOTIFICATION_STRATEGY_ARB = 0x8256;
pub const GL_NO_RESET_NOTIFICATION_ARB = 0x8261;
pub const GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB = 0x933D;
pub const GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB = 0x933E;
pub const GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB = 0x933F;
pub const GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB = 0x9340;
pub const GL_SAMPLE_LOCATION_ARB = 0x8E50;
pub const GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB = 0x9341;
pub const GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB = 0x9342;
pub const GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB = 0x9343;
pub const GL_SAMPLE_SHADING_ARB = 0x8C36;
pub const GL_MIN_SAMPLE_SHADING_VALUE_ARB = 0x8C37;
pub const GL_PROGRAM_OBJECT_ARB = 0x8B40;
pub const GL_SHADER_OBJECT_ARB = 0x8B48;
pub const GL_OBJECT_TYPE_ARB = 0x8B4E;
pub const GL_OBJECT_SUBTYPE_ARB = 0x8B4F;
pub const GL_FLOAT_VEC2_ARB = 0x8B50;
pub const GL_FLOAT_VEC3_ARB = 0x8B51;
pub const GL_FLOAT_VEC4_ARB = 0x8B52;
pub const GL_INT_VEC2_ARB = 0x8B53;
pub const GL_INT_VEC3_ARB = 0x8B54;
pub const GL_INT_VEC4_ARB = 0x8B55;
pub const GL_BOOL_ARB = 0x8B56;
pub const GL_BOOL_VEC2_ARB = 0x8B57;
pub const GL_BOOL_VEC3_ARB = 0x8B58;
pub const GL_BOOL_VEC4_ARB = 0x8B59;
pub const GL_FLOAT_MAT2_ARB = 0x8B5A;
pub const GL_FLOAT_MAT3_ARB = 0x8B5B;
pub const GL_FLOAT_MAT4_ARB = 0x8B5C;
pub const GL_SAMPLER_1D_ARB = 0x8B5D;
pub const GL_SAMPLER_2D_ARB = 0x8B5E;
pub const GL_SAMPLER_3D_ARB = 0x8B5F;
pub const GL_SAMPLER_CUBE_ARB = 0x8B60;
pub const GL_SAMPLER_1D_SHADOW_ARB = 0x8B61;
pub const GL_SAMPLER_2D_SHADOW_ARB = 0x8B62;
pub const GL_SAMPLER_2D_RECT_ARB = 0x8B63;
pub const GL_SAMPLER_2D_RECT_SHADOW_ARB = 0x8B64;
pub const GL_OBJECT_DELETE_STATUS_ARB = 0x8B80;
pub const GL_OBJECT_COMPILE_STATUS_ARB = 0x8B81;
pub const GL_OBJECT_LINK_STATUS_ARB = 0x8B82;
pub const GL_OBJECT_VALIDATE_STATUS_ARB = 0x8B83;
pub const GL_OBJECT_INFO_LOG_LENGTH_ARB = 0x8B84;
pub const GL_OBJECT_ATTACHED_OBJECTS_ARB = 0x8B85;
pub const GL_OBJECT_ACTIVE_UNIFORMS_ARB = 0x8B86;
pub const GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB = 0x8B87;
pub const GL_OBJECT_SHADER_SOURCE_LENGTH_ARB = 0x8B88;
pub const GL_SHADING_LANGUAGE_VERSION_ARB = 0x8B8C;
pub const GL_SHADER_INCLUDE_ARB = 0x8DAE;
pub const GL_NAMED_STRING_LENGTH_ARB = 0x8DE9;
pub const GL_NAMED_STRING_TYPE_ARB = 0x8DEA;
pub const GL_TEXTURE_COMPARE_MODE_ARB = 0x884C;
pub const GL_TEXTURE_COMPARE_FUNC_ARB = 0x884D;
pub const GL_COMPARE_R_TO_TEXTURE_ARB = 0x884E;
pub const GL_TEXTURE_COMPARE_FAIL_VALUE_ARB = 0x80BF;
pub const GL_SPARSE_STORAGE_BIT_ARB = 0x0400;
pub const GL_SPARSE_BUFFER_PAGE_SIZE_ARB = 0x82F8;
pub const GL_TEXTURE_SPARSE_ARB = 0x91A6;
pub const GL_VIRTUAL_PAGE_SIZE_INDEX_ARB = 0x91A7;
pub const GL_NUM_SPARSE_LEVELS_ARB = 0x91AA;
pub const GL_NUM_VIRTUAL_PAGE_SIZES_ARB = 0x91A8;
pub const GL_VIRTUAL_PAGE_SIZE_X_ARB = 0x9195;
pub const GL_VIRTUAL_PAGE_SIZE_Y_ARB = 0x9196;
pub const GL_VIRTUAL_PAGE_SIZE_Z_ARB = 0x9197;
pub const GL_MAX_SPARSE_TEXTURE_SIZE_ARB = 0x9198;
pub const GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB = 0x9199;
pub const GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB = 0x919A;
pub const GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB = 0x91A9;
pub const GL_CLAMP_TO_BORDER_ARB = 0x812D;
pub const GL_TEXTURE_BUFFER_ARB = 0x8C2A;
pub const GL_MAX_TEXTURE_BUFFER_SIZE_ARB = 0x8C2B;
pub const GL_TEXTURE_BINDING_BUFFER_ARB = 0x8C2C;
pub const GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB = 0x8C2D;
pub const GL_TEXTURE_BUFFER_FORMAT_ARB = 0x8C2E;
pub const GL_COMPRESSED_ALPHA_ARB = 0x84E9;
pub const GL_COMPRESSED_LUMINANCE_ARB = 0x84EA;
pub const GL_COMPRESSED_LUMINANCE_ALPHA_ARB = 0x84EB;
pub const GL_COMPRESSED_INTENSITY_ARB = 0x84EC;
pub const GL_COMPRESSED_RGB_ARB = 0x84ED;
pub const GL_COMPRESSED_RGBA_ARB = 0x84EE;
pub const GL_TEXTURE_COMPRESSION_HINT_ARB = 0x84EF;
pub const GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB = 0x86A0;
pub const GL_TEXTURE_COMPRESSED_ARB = 0x86A1;
pub const GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB = 0x86A2;
pub const GL_COMPRESSED_TEXTURE_FORMATS_ARB = 0x86A3;
pub const GL_COMPRESSED_RGBA_BPTC_UNORM_ARB = 0x8E8C;
pub const GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB = 0x8E8D;
pub const GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB = 0x8E8E;
pub const GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB = 0x8E8F;
pub const GL_NORMAL_MAP_ARB = 0x8511;
pub const GL_REFLECTION_MAP_ARB = 0x8512;
pub const GL_TEXTURE_CUBE_MAP_ARB = 0x8513;
pub const GL_TEXTURE_BINDING_CUBE_MAP_ARB = 0x8514;
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB = 0x8515;
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB = 0x8516;
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB = 0x8517;
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB = 0x8518;
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB = 0x8519;
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB = 0x851A;
pub const GL_PROXY_TEXTURE_CUBE_MAP_ARB = 0x851B;
pub const GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB = 0x851C;
pub const GL_TEXTURE_CUBE_MAP_ARRAY_ARB = 0x9009;
pub const GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB = 0x900A;
pub const GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB = 0x900B;
pub const GL_SAMPLER_CUBE_MAP_ARRAY_ARB = 0x900C;
pub const GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB = 0x900D;
pub const GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB = 0x900E;
pub const GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB = 0x900F;
pub const GL_COMBINE_ARB = 0x8570;
pub const GL_COMBINE_RGB_ARB = 0x8571;
pub const GL_COMBINE_ALPHA_ARB = 0x8572;
pub const GL_SOURCE0_RGB_ARB = 0x8580;
pub const GL_SOURCE1_RGB_ARB = 0x8581;
pub const GL_SOURCE2_RGB_ARB = 0x8582;
pub const GL_SOURCE0_ALPHA_ARB = 0x8588;
pub const GL_SOURCE1_ALPHA_ARB = 0x8589;
pub const GL_SOURCE2_ALPHA_ARB = 0x858A;
pub const GL_OPERAND0_RGB_ARB = 0x8590;
pub const GL_OPERAND1_RGB_ARB = 0x8591;
pub const GL_OPERAND2_RGB_ARB = 0x8592;
pub const GL_OPERAND0_ALPHA_ARB = 0x8598;
pub const GL_OPERAND1_ALPHA_ARB = 0x8599;
pub const GL_OPERAND2_ALPHA_ARB = 0x859A;
pub const GL_RGB_SCALE_ARB = 0x8573;
pub const GL_ADD_SIGNED_ARB = 0x8574;
pub const GL_INTERPOLATE_ARB = 0x8575;
pub const GL_SUBTRACT_ARB = 0x84E7;
pub const GL_CONSTANT_ARB = 0x8576;
pub const GL_PRIMARY_COLOR_ARB = 0x8577;
pub const GL_PREVIOUS_ARB = 0x8578;
pub const GL_DOT3_RGB_ARB = 0x86AE;
pub const GL_DOT3_RGBA_ARB = 0x86AF;
pub const GL_TEXTURE_REDUCTION_MODE_ARB = 0x9366;
pub const GL_WEIGHTED_AVERAGE_ARB = 0x9367;
pub const GL_TEXTURE_RED_TYPE_ARB = 0x8C10;
pub const GL_TEXTURE_GREEN_TYPE_ARB = 0x8C11;
pub const GL_TEXTURE_BLUE_TYPE_ARB = 0x8C12;
pub const GL_TEXTURE_ALPHA_TYPE_ARB = 0x8C13;
pub const GL_TEXTURE_LUMINANCE_TYPE_ARB = 0x8C14;
pub const GL_TEXTURE_INTENSITY_TYPE_ARB = 0x8C15;
pub const GL_TEXTURE_DEPTH_TYPE_ARB = 0x8C16;
pub const GL_UNSIGNED_NORMALIZED_ARB = 0x8C17;
pub const GL_RGBA32F_ARB = 0x8814;
pub const GL_RGB32F_ARB = 0x8815;
pub const GL_ALPHA32F_ARB = 0x8816;
pub const GL_INTENSITY32F_ARB = 0x8817;
pub const GL_LUMINANCE32F_ARB = 0x8818;
pub const GL_LUMINANCE_ALPHA32F_ARB = 0x8819;
pub const GL_RGBA16F_ARB = 0x881A;
pub const GL_RGB16F_ARB = 0x881B;
pub const GL_ALPHA16F_ARB = 0x881C;
pub const GL_INTENSITY16F_ARB = 0x881D;
pub const GL_LUMINANCE16F_ARB = 0x881E;
pub const GL_LUMINANCE_ALPHA16F_ARB = 0x881F;
pub const GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB = 0x8E5E;
pub const GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB = 0x8E5F;
pub const GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB = 0x8F9F;
pub const GL_MIRRORED_REPEAT_ARB = 0x8370;
pub const GL_TEXTURE_RECTANGLE_ARB = 0x84F5;
pub const GL_TEXTURE_BINDING_RECTANGLE_ARB = 0x84F6;
pub const GL_PROXY_TEXTURE_RECTANGLE_ARB = 0x84F7;
pub const GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB = 0x84F8;
pub const GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB = 0x82EC;
pub const GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB = 0x82ED;
pub const GL_TRANSPOSE_MODELVIEW_MATRIX_ARB = 0x84E3;
pub const GL_TRANSPOSE_PROJECTION_MATRIX_ARB = 0x84E4;
pub const GL_TRANSPOSE_TEXTURE_MATRIX_ARB = 0x84E5;
pub const GL_TRANSPOSE_COLOR_MATRIX_ARB = 0x84E6;
pub const GL_MAX_VERTEX_UNITS_ARB = 0x86A4;
pub const GL_ACTIVE_VERTEX_UNITS_ARB = 0x86A5;
pub const GL_WEIGHT_SUM_UNITY_ARB = 0x86A6;
pub const GL_VERTEX_BLEND_ARB = 0x86A7;
pub const GL_CURRENT_WEIGHT_ARB = 0x86A8;
pub const GL_WEIGHT_ARRAY_TYPE_ARB = 0x86A9;
pub const GL_WEIGHT_ARRAY_STRIDE_ARB = 0x86AA;
pub const GL_WEIGHT_ARRAY_SIZE_ARB = 0x86AB;
pub const GL_WEIGHT_ARRAY_POINTER_ARB = 0x86AC;
pub const GL_WEIGHT_ARRAY_ARB = 0x86AD;
pub const GL_MODELVIEW0_ARB = 0x1700;
pub const GL_MODELVIEW1_ARB = 0x850A;
pub const GL_MODELVIEW2_ARB = 0x8722;
pub const GL_MODELVIEW3_ARB = 0x8723;
pub const GL_MODELVIEW4_ARB = 0x8724;
pub const GL_MODELVIEW5_ARB = 0x8725;
pub const GL_MODELVIEW6_ARB = 0x8726;
pub const GL_MODELVIEW7_ARB = 0x8727;
pub const GL_MODELVIEW8_ARB = 0x8728;
pub const GL_MODELVIEW9_ARB = 0x8729;
pub const GL_MODELVIEW10_ARB = 0x872A;
pub const GL_MODELVIEW11_ARB = 0x872B;
pub const GL_MODELVIEW12_ARB = 0x872C;
pub const GL_MODELVIEW13_ARB = 0x872D;
pub const GL_MODELVIEW14_ARB = 0x872E;
pub const GL_MODELVIEW15_ARB = 0x872F;
pub const GL_MODELVIEW16_ARB = 0x8730;
pub const GL_MODELVIEW17_ARB = 0x8731;
pub const GL_MODELVIEW18_ARB = 0x8732;
pub const GL_MODELVIEW19_ARB = 0x8733;
pub const GL_MODELVIEW20_ARB = 0x8734;
pub const GL_MODELVIEW21_ARB = 0x8735;
pub const GL_MODELVIEW22_ARB = 0x8736;
pub const GL_MODELVIEW23_ARB = 0x8737;
pub const GL_MODELVIEW24_ARB = 0x8738;
pub const GL_MODELVIEW25_ARB = 0x8739;
pub const GL_MODELVIEW26_ARB = 0x873A;
pub const GL_MODELVIEW27_ARB = 0x873B;
pub const GL_MODELVIEW28_ARB = 0x873C;
pub const GL_MODELVIEW29_ARB = 0x873D;
pub const GL_MODELVIEW30_ARB = 0x873E;
pub const GL_MODELVIEW31_ARB = 0x873F;
pub const GL_BUFFER_SIZE_ARB = 0x8764;
pub const GL_BUFFER_USAGE_ARB = 0x8765;
pub const GL_ARRAY_BUFFER_ARB = 0x8892;
pub const GL_ELEMENT_ARRAY_BUFFER_ARB = 0x8893;
pub const GL_ARRAY_BUFFER_BINDING_ARB = 0x8894;
pub const GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB = 0x8895;
pub const GL_VERTEX_ARRAY_BUFFER_BINDING_ARB = 0x8896;
pub const GL_NORMAL_ARRAY_BUFFER_BINDING_ARB = 0x8897;
pub const GL_COLOR_ARRAY_BUFFER_BINDING_ARB = 0x8898;
pub const GL_INDEX_ARRAY_BUFFER_BINDING_ARB = 0x8899;
pub const GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB = 0x889A;
pub const GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB = 0x889B;
pub const GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB = 0x889C;
pub const GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB = 0x889D;
pub const GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB = 0x889E;
pub const GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB = 0x889F;
pub const GL_READ_ONLY_ARB = 0x88B8;
pub const GL_WRITE_ONLY_ARB = 0x88B9;
pub const GL_READ_WRITE_ARB = 0x88BA;
pub const GL_BUFFER_ACCESS_ARB = 0x88BB;
pub const GL_BUFFER_MAPPED_ARB = 0x88BC;
pub const GL_BUFFER_MAP_POINTER_ARB = 0x88BD;
pub const GL_STREAM_DRAW_ARB = 0x88E0;
pub const GL_STREAM_READ_ARB = 0x88E1;
pub const GL_STREAM_COPY_ARB = 0x88E2;
pub const GL_STATIC_DRAW_ARB = 0x88E4;
pub const GL_STATIC_READ_ARB = 0x88E5;
pub const GL_STATIC_COPY_ARB = 0x88E6;
pub const GL_DYNAMIC_DRAW_ARB = 0x88E8;
pub const GL_DYNAMIC_READ_ARB = 0x88E9;
pub const GL_DYNAMIC_COPY_ARB = 0x88EA;
pub const GL_COLOR_SUM_ARB = 0x8458;
pub const GL_VERTEX_PROGRAM_ARB = 0x8620;
pub const GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB = 0x8622;
pub const GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB = 0x8623;
pub const GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB = 0x8624;
pub const GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB = 0x8625;
pub const GL_CURRENT_VERTEX_ATTRIB_ARB = 0x8626;
pub const GL_VERTEX_PROGRAM_POINT_SIZE_ARB = 0x8642;
pub const GL_VERTEX_PROGRAM_TWO_SIDE_ARB = 0x8643;
pub const GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB = 0x8645;
pub const GL_MAX_VERTEX_ATTRIBS_ARB = 0x8869;
pub const GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB = 0x886A;
pub const GL_PROGRAM_ADDRESS_REGISTERS_ARB = 0x88B0;
pub const GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB = 0x88B1;
pub const GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = 0x88B2;
pub const GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = 0x88B3;
pub const GL_VERTEX_SHADER_ARB = 0x8B31;
pub const GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB = 0x8B4A;
pub const GL_MAX_VARYING_FLOATS_ARB = 0x8B4B;
pub const GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB = 0x8B4C;
pub const GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB = 0x8B4D;
pub const GL_OBJECT_ACTIVE_ATTRIBUTES_ARB = 0x8B89;
pub const GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB = 0x8B8A;
pub const GL_MAX_DRAW_BUFFERS_ATI = 0x8824;
pub const GL_DRAW_BUFFER0_ATI = 0x8825;
pub const GL_DRAW_BUFFER1_ATI = 0x8826;
pub const GL_DRAW_BUFFER2_ATI = 0x8827;
pub const GL_DRAW_BUFFER3_ATI = 0x8828;
pub const GL_DRAW_BUFFER4_ATI = 0x8829;
pub const GL_DRAW_BUFFER5_ATI = 0x882A;
pub const GL_DRAW_BUFFER6_ATI = 0x882B;
pub const GL_DRAW_BUFFER7_ATI = 0x882C;
pub const GL_DRAW_BUFFER8_ATI = 0x882D;
pub const GL_DRAW_BUFFER9_ATI = 0x882E;
pub const GL_DRAW_BUFFER10_ATI = 0x882F;
pub const GL_DRAW_BUFFER11_ATI = 0x8830;
pub const GL_DRAW_BUFFER12_ATI = 0x8831;
pub const GL_DRAW_BUFFER13_ATI = 0x8832;
pub const GL_DRAW_BUFFER14_ATI = 0x8833;
pub const GL_DRAW_BUFFER15_ATI = 0x8834;
pub const GL_ELEMENT_ARRAY_ATI = 0x8768;
pub const GL_ELEMENT_ARRAY_TYPE_ATI = 0x8769;
pub const GL_ELEMENT_ARRAY_POINTER_ATI = 0x876A;
pub const GL_BUMP_ROT_MATRIX_ATI = 0x8775;
pub const GL_BUMP_ROT_MATRIX_SIZE_ATI = 0x8776;
pub const GL_BUMP_NUM_TEX_UNITS_ATI = 0x8777;
pub const GL_BUMP_TEX_UNITS_ATI = 0x8778;
pub const GL_DUDV_ATI = 0x8779;
pub const GL_DU8DV8_ATI = 0x877A;
pub const GL_BUMP_ENVMAP_ATI = 0x877B;
pub const GL_BUMP_TARGET_ATI = 0x877C;
pub const GL_FRAGMENT_SHADER_ATI = 0x8920;
pub const GL_REG_0_ATI = 0x8921;
pub const GL_REG_1_ATI = 0x8922;
pub const GL_REG_2_ATI = 0x8923;
pub const GL_REG_3_ATI = 0x8924;
pub const GL_REG_4_ATI = 0x8925;
pub const GL_REG_5_ATI = 0x8926;
pub const GL_REG_6_ATI = 0x8927;
pub const GL_REG_7_ATI = 0x8928;
pub const GL_REG_8_ATI = 0x8929;
pub const GL_REG_9_ATI = 0x892A;
pub const GL_REG_10_ATI = 0x892B;
pub const GL_REG_11_ATI = 0x892C;
pub const GL_REG_12_ATI = 0x892D;
pub const GL_REG_13_ATI = 0x892E;
pub const GL_REG_14_ATI = 0x892F;
pub const GL_REG_15_ATI = 0x8930;
pub const GL_REG_16_ATI = 0x8931;
pub const GL_REG_17_ATI = 0x8932;
pub const GL_REG_18_ATI = 0x8933;
pub const GL_REG_19_ATI = 0x8934;
pub const GL_REG_20_ATI = 0x8935;
pub const GL_REG_21_ATI = 0x8936;
pub const GL_REG_22_ATI = 0x8937;
pub const GL_REG_23_ATI = 0x8938;
pub const GL_REG_24_ATI = 0x8939;
pub const GL_REG_25_ATI = 0x893A;
pub const GL_REG_26_ATI = 0x893B;
pub const GL_REG_27_ATI = 0x893C;
pub const GL_REG_28_ATI = 0x893D;
pub const GL_REG_29_ATI = 0x893E;
pub const GL_REG_30_ATI = 0x893F;
pub const GL_REG_31_ATI = 0x8940;
pub const GL_CON_0_ATI = 0x8941;
pub const GL_CON_1_ATI = 0x8942;
pub const GL_CON_2_ATI = 0x8943;
pub const GL_CON_3_ATI = 0x8944;
pub const GL_CON_4_ATI = 0x8945;
pub const GL_CON_5_ATI = 0x8946;
pub const GL_CON_6_ATI = 0x8947;
pub const GL_CON_7_ATI = 0x8948;
pub const GL_CON_8_ATI = 0x8949;
pub const GL_CON_9_ATI = 0x894A;
pub const GL_CON_10_ATI = 0x894B;
pub const GL_CON_11_ATI = 0x894C;
pub const GL_CON_12_ATI = 0x894D;
pub const GL_CON_13_ATI = 0x894E;
pub const GL_CON_14_ATI = 0x894F;
pub const GL_CON_15_ATI = 0x8950;
pub const GL_CON_16_ATI = 0x8951;
pub const GL_CON_17_ATI = 0x8952;
pub const GL_CON_18_ATI = 0x8953;
pub const GL_CON_19_ATI = 0x8954;
pub const GL_CON_20_ATI = 0x8955;
pub const GL_CON_21_ATI = 0x8956;
pub const GL_CON_22_ATI = 0x8957;
pub const GL_CON_23_ATI = 0x8958;
pub const GL_CON_24_ATI = 0x8959;
pub const GL_CON_25_ATI = 0x895A;
pub const GL_CON_26_ATI = 0x895B;
pub const GL_CON_27_ATI = 0x895C;
pub const GL_CON_28_ATI = 0x895D;
pub const GL_CON_29_ATI = 0x895E;
pub const GL_CON_30_ATI = 0x895F;
pub const GL_CON_31_ATI = 0x8960;
pub const GL_MOV_ATI = 0x8961;
pub const GL_ADD_ATI = 0x8963;
pub const GL_MUL_ATI = 0x8964;
pub const GL_SUB_ATI = 0x8965;
pub const GL_DOT3_ATI = 0x8966;
pub const GL_DOT4_ATI = 0x8967;
pub const GL_MAD_ATI = 0x8968;
pub const GL_LERP_ATI = 0x8969;
pub const GL_CND_ATI = 0x896A;
pub const GL_CND0_ATI = 0x896B;
pub const GL_DOT2_ADD_ATI = 0x896C;
pub const GL_SECONDARY_INTERPOLATOR_ATI = 0x896D;
pub const GL_NUM_FRAGMENT_REGISTERS_ATI = 0x896E;
pub const GL_NUM_FRAGMENT_CONSTANTS_ATI = 0x896F;
pub const GL_NUM_PASSES_ATI = 0x8970;
pub const GL_NUM_INSTRUCTIONS_PER_PASS_ATI = 0x8971;
pub const GL_NUM_INSTRUCTIONS_TOTAL_ATI = 0x8972;
pub const GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI = 0x8973;
pub const GL_NUM_LOOPBACK_COMPONENTS_ATI = 0x8974;
pub const GL_COLOR_ALPHA_PAIRING_ATI = 0x8975;
pub const GL_SWIZZLE_STR_ATI = 0x8976;
pub const GL_SWIZZLE_STQ_ATI = 0x8977;
pub const GL_SWIZZLE_STR_DR_ATI = 0x8978;
pub const GL_SWIZZLE_STQ_DQ_ATI = 0x8979;
pub const GL_SWIZZLE_STRQ_ATI = 0x897A;
pub const GL_SWIZZLE_STRQ_DQ_ATI = 0x897B;
pub const GL_RED_BIT_ATI = 0x00000001;
pub const GL_GREEN_BIT_ATI = 0x00000002;
pub const GL_BLUE_BIT_ATI = 0x00000004;
pub const GL_2X_BIT_ATI = 0x00000001;
pub const GL_4X_BIT_ATI = 0x00000002;
pub const GL_8X_BIT_ATI = 0x00000004;
pub const GL_HALF_BIT_ATI = 0x00000008;
pub const GL_QUARTER_BIT_ATI = 0x00000010;
pub const GL_EIGHTH_BIT_ATI = 0x00000020;
pub const GL_SATURATE_BIT_ATI = 0x00000040;
pub const GL_COMP_BIT_ATI = 0x00000002;
pub const GL_NEGATE_BIT_ATI = 0x00000004;
pub const GL_BIAS_BIT_ATI = 0x00000008;
pub const GL_VBO_FREE_MEMORY_ATI = 0x87FB;
pub const GL_TEXTURE_FREE_MEMORY_ATI = 0x87FC;
pub const GL_RENDERBUFFER_FREE_MEMORY_ATI = 0x87FD;
pub const GL_RGBA_FLOAT_MODE_ATI = 0x8820;
pub const GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI = 0x8835;
pub const GL_PN_TRIANGLES_ATI = 0x87F0;
pub const GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI = 0x87F1;
pub const GL_PN_TRIANGLES_POINT_MODE_ATI = 0x87F2;
pub const GL_PN_TRIANGLES_NORMAL_MODE_ATI = 0x87F3;
pub const GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI = 0x87F4;
pub const GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI = 0x87F5;
pub const GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI = 0x87F6;
pub const GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI = 0x87F7;
pub const GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI = 0x87F8;
pub const GL_STENCIL_BACK_FUNC_ATI = 0x8800;
pub const GL_STENCIL_BACK_FAIL_ATI = 0x8801;
pub const GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI = 0x8802;
pub const GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI = 0x8803;
pub const GL_TEXT_FRAGMENT_SHADER_ATI = 0x8200;
pub const GL_MODULATE_ADD_ATI = 0x8744;
pub const GL_MODULATE_SIGNED_ADD_ATI = 0x8745;
pub const GL_MODULATE_SUBTRACT_ATI = 0x8746;
pub const GL_RGBA_FLOAT32_ATI = 0x8814;
pub const GL_RGB_FLOAT32_ATI = 0x8815;
pub const GL_ALPHA_FLOAT32_ATI = 0x8816;
pub const GL_INTENSITY_FLOAT32_ATI = 0x8817;
pub const GL_LUMINANCE_FLOAT32_ATI = 0x8818;
pub const GL_LUMINANCE_ALPHA_FLOAT32_ATI = 0x8819;
pub const GL_RGBA_FLOAT16_ATI = 0x881A;
pub const GL_RGB_FLOAT16_ATI = 0x881B;
pub const GL_ALPHA_FLOAT16_ATI = 0x881C;
pub const GL_INTENSITY_FLOAT16_ATI = 0x881D;
pub const GL_LUMINANCE_FLOAT16_ATI = 0x881E;
pub const GL_LUMINANCE_ALPHA_FLOAT16_ATI = 0x881F;
pub const GL_MIRROR_CLAMP_ATI = 0x8742;
pub const GL_MIRROR_CLAMP_TO_EDGE_ATI = 0x8743;
pub const GL_STATIC_ATI = 0x8760;
pub const GL_DYNAMIC_ATI = 0x8761;
pub const GL_PRESERVE_ATI = 0x8762;
pub const GL_DISCARD_ATI = 0x8763;
pub const GL_OBJECT_BUFFER_SIZE_ATI = 0x8764;
pub const GL_OBJECT_BUFFER_USAGE_ATI = 0x8765;
pub const GL_ARRAY_OBJECT_BUFFER_ATI = 0x8766;
pub const GL_ARRAY_OBJECT_OFFSET_ATI = 0x8767;
pub const GL_MAX_VERTEX_STREAMS_ATI = 0x876B;
pub const GL_VERTEX_STREAM0_ATI = 0x876C;
pub const GL_VERTEX_STREAM1_ATI = 0x876D;
pub const GL_VERTEX_STREAM2_ATI = 0x876E;
pub const GL_VERTEX_STREAM3_ATI = 0x876F;
pub const GL_VERTEX_STREAM4_ATI = 0x8770;
pub const GL_VERTEX_STREAM5_ATI = 0x8771;
pub const GL_VERTEX_STREAM6_ATI = 0x8772;
pub const GL_VERTEX_STREAM7_ATI = 0x8773;
pub const GL_VERTEX_SOURCE_ATI = 0x8774;
pub const GL_422_EXT = 0x80CC;
pub const GL_422_REV_EXT = 0x80CD;
pub const GL_422_AVERAGE_EXT = 0x80CE;
pub const GL_422_REV_AVERAGE_EXT = 0x80CF;
pub const GL_ABGR_EXT = 0x8000;
pub const GL_BGR_EXT = 0x80E0;
pub const GL_BGRA_EXT = 0x80E1;
pub const GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT = 0x8DE2;
pub const GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT = 0x8DE3;
pub const GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT = 0x8DE4;
pub const GL_MAX_BINDABLE_UNIFORM_SIZE_EXT = 0x8DED;
pub const GL_UNIFORM_BUFFER_EXT = 0x8DEE;
pub const GL_UNIFORM_BUFFER_BINDING_EXT = 0x8DEF;
pub const GL_CONSTANT_COLOR_EXT = 0x8001;
pub const GL_ONE_MINUS_CONSTANT_COLOR_EXT = 0x8002;
pub const GL_CONSTANT_ALPHA_EXT = 0x8003;
pub const GL_ONE_MINUS_CONSTANT_ALPHA_EXT = 0x8004;
pub const GL_BLEND_COLOR_EXT = 0x8005;
pub const GL_BLEND_EQUATION_RGB_EXT = 0x8009;
pub const GL_BLEND_EQUATION_ALPHA_EXT = 0x883D;
pub const GL_BLEND_DST_RGB_EXT = 0x80C8;
pub const GL_BLEND_SRC_RGB_EXT = 0x80C9;
pub const GL_BLEND_DST_ALPHA_EXT = 0x80CA;
pub const GL_BLEND_SRC_ALPHA_EXT = 0x80CB;
pub const GL_MIN_EXT = 0x8007;
pub const GL_MAX_EXT = 0x8008;
pub const GL_FUNC_ADD_EXT = 0x8006;
pub const GL_BLEND_EQUATION_EXT = 0x8009;
pub const GL_FUNC_SUBTRACT_EXT = 0x800A;
pub const GL_FUNC_REVERSE_SUBTRACT_EXT = 0x800B;
pub const GL_CLIP_VOLUME_CLIPPING_HINT_EXT = 0x80F0;
pub const GL_CMYK_EXT = 0x800C;
pub const GL_CMYKA_EXT = 0x800D;
pub const GL_PACK_CMYK_HINT_EXT = 0x800E;
pub const GL_UNPACK_CMYK_HINT_EXT = 0x800F;
pub const GL_ARRAY_ELEMENT_LOCK_FIRST_EXT = 0x81A8;
pub const GL_ARRAY_ELEMENT_LOCK_COUNT_EXT = 0x81A9;
pub const GL_CONVOLUTION_1D_EXT = 0x8010;
pub const GL_CONVOLUTION_2D_EXT = 0x8011;
pub const GL_SEPARABLE_2D_EXT = 0x8012;
pub const GL_CONVOLUTION_BORDER_MODE_EXT = 0x8013;
pub const GL_CONVOLUTION_FILTER_SCALE_EXT = 0x8014;
pub const GL_CONVOLUTION_FILTER_BIAS_EXT = 0x8015;
pub const GL_REDUCE_EXT = 0x8016;
pub const GL_CONVOLUTION_FORMAT_EXT = 0x8017;
pub const GL_CONVOLUTION_WIDTH_EXT = 0x8018;
pub const GL_CONVOLUTION_HEIGHT_EXT = 0x8019;
pub const GL_MAX_CONVOLUTION_WIDTH_EXT = 0x801A;
pub const GL_MAX_CONVOLUTION_HEIGHT_EXT = 0x801B;
pub const GL_POST_CONVOLUTION_RED_SCALE_EXT = 0x801C;
pub const GL_POST_CONVOLUTION_GREEN_SCALE_EXT = 0x801D;
pub const GL_POST_CONVOLUTION_BLUE_SCALE_EXT = 0x801E;
pub const GL_POST_CONVOLUTION_ALPHA_SCALE_EXT = 0x801F;
pub const GL_POST_CONVOLUTION_RED_BIAS_EXT = 0x8020;
pub const GL_POST_CONVOLUTION_GREEN_BIAS_EXT = 0x8021;
pub const GL_POST_CONVOLUTION_BLUE_BIAS_EXT = 0x8022;
pub const GL_POST_CONVOLUTION_ALPHA_BIAS_EXT = 0x8023;
pub const GL_TANGENT_ARRAY_EXT = 0x8439;
pub const GL_BINORMAL_ARRAY_EXT = 0x843A;
pub const GL_CURRENT_TANGENT_EXT = 0x843B;
pub const GL_CURRENT_BINORMAL_EXT = 0x843C;
pub const GL_TANGENT_ARRAY_TYPE_EXT = 0x843E;
pub const GL_TANGENT_ARRAY_STRIDE_EXT = 0x843F;
pub const GL_BINORMAL_ARRAY_TYPE_EXT = 0x8440;
pub const GL_BINORMAL_ARRAY_STRIDE_EXT = 0x8441;
pub const GL_TANGENT_ARRAY_POINTER_EXT = 0x8442;
pub const GL_BINORMAL_ARRAY_POINTER_EXT = 0x8443;
pub const GL_MAP1_TANGENT_EXT = 0x8444;
pub const GL_MAP2_TANGENT_EXT = 0x8445;
pub const GL_MAP1_BINORMAL_EXT = 0x8446;
pub const GL_MAP2_BINORMAL_EXT = 0x8447;
pub const GL_CULL_VERTEX_EXT = 0x81AA;
pub const GL_CULL_VERTEX_EYE_POSITION_EXT = 0x81AB;
pub const GL_CULL_VERTEX_OBJECT_POSITION_EXT = 0x81AC;
pub const GL_PROGRAM_PIPELINE_OBJECT_EXT = 0x8A4F;
pub const GL_PROGRAM_OBJECT_EXT = 0x8B40;
pub const GL_SHADER_OBJECT_EXT = 0x8B48;
pub const GL_BUFFER_OBJECT_EXT = 0x9151;
pub const GL_QUERY_OBJECT_EXT = 0x9153;
pub const GL_VERTEX_ARRAY_OBJECT_EXT = 0x9154;
pub const GL_DEPTH_BOUNDS_TEST_EXT = 0x8890;
pub const GL_DEPTH_BOUNDS_EXT = 0x8891;
pub const GL_PROGRAM_MATRIX_EXT = 0x8E2D;
pub const GL_TRANSPOSE_PROGRAM_MATRIX_EXT = 0x8E2E;
pub const GL_PROGRAM_MATRIX_STACK_DEPTH_EXT = 0x8E2F;
pub const GL_MAX_ELEMENTS_VERTICES_EXT = 0x80E8;
pub const GL_MAX_ELEMENTS_INDICES_EXT = 0x80E9;
pub const GL_FOG_COORDINATE_SOURCE_EXT = 0x8450;
pub const GL_FOG_COORDINATE_EXT = 0x8451;
pub const GL_FRAGMENT_DEPTH_EXT = 0x8452;
pub const GL_CURRENT_FOG_COORDINATE_EXT = 0x8453;
pub const GL_FOG_COORDINATE_ARRAY_TYPE_EXT = 0x8454;
pub const GL_FOG_COORDINATE_ARRAY_STRIDE_EXT = 0x8455;
pub const GL_FOG_COORDINATE_ARRAY_POINTER_EXT = 0x8456;
pub const GL_FOG_COORDINATE_ARRAY_EXT = 0x8457;
pub const GL_READ_FRAMEBUFFER_EXT = 0x8CA8;
pub const GL_DRAW_FRAMEBUFFER_EXT = 0x8CA9;
pub const GL_DRAW_FRAMEBUFFER_BINDING_EXT = 0x8CA6;
pub const GL_READ_FRAMEBUFFER_BINDING_EXT = 0x8CAA;
pub const GL_RENDERBUFFER_SAMPLES_EXT = 0x8CAB;
pub const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT = 0x8D56;
pub const GL_MAX_SAMPLES_EXT = 0x8D57;
pub const GL_SCALED_RESOLVE_FASTEST_EXT = 0x90BA;
pub const GL_SCALED_RESOLVE_NICEST_EXT = 0x90BB;
pub const GL_INVALID_FRAMEBUFFER_OPERATION_EXT = 0x0506;
pub const GL_MAX_RENDERBUFFER_SIZE_EXT = 0x84E8;
pub const GL_FRAMEBUFFER_BINDING_EXT = 0x8CA6;
pub const GL_RENDERBUFFER_BINDING_EXT = 0x8CA7;
pub const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT = 0x8CD0;
pub const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT = 0x8CD1;
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT = 0x8CD2;
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT = 0x8CD3;
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT = 0x8CD4;
pub const GL_FRAMEBUFFER_COMPLETE_EXT = 0x8CD5;
pub const GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT = 0x8CD6;
pub const GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT = 0x8CD7;
pub const GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT = 0x8CD9;
pub const GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT = 0x8CDA;
pub const GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT = 0x8CDB;
pub const GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT = 0x8CDC;
pub const GL_FRAMEBUFFER_UNSUPPORTED_EXT = 0x8CDD;
pub const GL_MAX_COLOR_ATTACHMENTS_EXT = 0x8CDF;
pub const GL_COLOR_ATTACHMENT0_EXT = 0x8CE0;
pub const GL_COLOR_ATTACHMENT1_EXT = 0x8CE1;
pub const GL_COLOR_ATTACHMENT2_EXT = 0x8CE2;
pub const GL_COLOR_ATTACHMENT3_EXT = 0x8CE3;
pub const GL_COLOR_ATTACHMENT4_EXT = 0x8CE4;
pub const GL_COLOR_ATTACHMENT5_EXT = 0x8CE5;
pub const GL_COLOR_ATTACHMENT6_EXT = 0x8CE6;
pub const GL_COLOR_ATTACHMENT7_EXT = 0x8CE7;
pub const GL_COLOR_ATTACHMENT8_EXT = 0x8CE8;
pub const GL_COLOR_ATTACHMENT9_EXT = 0x8CE9;
pub const GL_COLOR_ATTACHMENT10_EXT = 0x8CEA;
pub const GL_COLOR_ATTACHMENT11_EXT = 0x8CEB;
pub const GL_COLOR_ATTACHMENT12_EXT = 0x8CEC;
pub const GL_COLOR_ATTACHMENT13_EXT = 0x8CED;
pub const GL_COLOR_ATTACHMENT14_EXT = 0x8CEE;
pub const GL_COLOR_ATTACHMENT15_EXT = 0x8CEF;
pub const GL_DEPTH_ATTACHMENT_EXT = 0x8D00;
pub const GL_STENCIL_ATTACHMENT_EXT = 0x8D20;
pub const GL_FRAMEBUFFER_EXT = 0x8D40;
pub const GL_RENDERBUFFER_EXT = 0x8D41;
pub const GL_RENDERBUFFER_WIDTH_EXT = 0x8D42;
pub const GL_RENDERBUFFER_HEIGHT_EXT = 0x8D43;
pub const GL_RENDERBUFFER_INTERNAL_FORMAT_EXT = 0x8D44;
pub const GL_STENCIL_INDEX1_EXT = 0x8D46;
pub const GL_STENCIL_INDEX4_EXT = 0x8D47;
pub const GL_STENCIL_INDEX8_EXT = 0x8D48;
pub const GL_STENCIL_INDEX16_EXT = 0x8D49;
pub const GL_RENDERBUFFER_RED_SIZE_EXT = 0x8D50;
pub const GL_RENDERBUFFER_GREEN_SIZE_EXT = 0x8D51;
pub const GL_RENDERBUFFER_BLUE_SIZE_EXT = 0x8D52;
pub const GL_RENDERBUFFER_ALPHA_SIZE_EXT = 0x8D53;
pub const GL_RENDERBUFFER_DEPTH_SIZE_EXT = 0x8D54;
pub const GL_RENDERBUFFER_STENCIL_SIZE_EXT = 0x8D55;
pub const GL_FRAMEBUFFER_SRGB_EXT = 0x8DB9;
pub const GL_FRAMEBUFFER_SRGB_CAPABLE_EXT = 0x8DBA;
pub const GL_GEOMETRY_SHADER_EXT = 0x8DD9;
pub const GL_GEOMETRY_VERTICES_OUT_EXT = 0x8DDA;
pub const GL_GEOMETRY_INPUT_TYPE_EXT = 0x8DDB;
pub const GL_GEOMETRY_OUTPUT_TYPE_EXT = 0x8DDC;
pub const GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT = 0x8C29;
pub const GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT = 0x8DDD;
pub const GL_MAX_VERTEX_VARYING_COMPONENTS_EXT = 0x8DDE;
pub const GL_MAX_VARYING_COMPONENTS_EXT = 0x8B4B;
pub const GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT = 0x8DDF;
pub const GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT = 0x8DE0;
pub const GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT = 0x8DE1;
pub const GL_LINES_ADJACENCY_EXT = 0x000A;
pub const GL_LINE_STRIP_ADJACENCY_EXT = 0x000B;
pub const GL_TRIANGLES_ADJACENCY_EXT = 0x000C;
pub const GL_TRIANGLE_STRIP_ADJACENCY_EXT = 0x000D;
pub const GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT = 0x8DA8;
pub const GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT = 0x8DA9;
pub const GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT = 0x8DA7;
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT = 0x8CD4;
pub const GL_PROGRAM_POINT_SIZE_EXT = 0x8642;
pub const GL_SAMPLER_1D_ARRAY_EXT = 0x8DC0;
pub const GL_SAMPLER_2D_ARRAY_EXT = 0x8DC1;
pub const GL_SAMPLER_BUFFER_EXT = 0x8DC2;
pub const GL_SAMPLER_1D_ARRAY_SHADOW_EXT = 0x8DC3;
pub const GL_SAMPLER_2D_ARRAY_SHADOW_EXT = 0x8DC4;
pub const GL_SAMPLER_CUBE_SHADOW_EXT = 0x8DC5;
pub const GL_UNSIGNED_INT_VEC2_EXT = 0x8DC6;
pub const GL_UNSIGNED_INT_VEC3_EXT = 0x8DC7;
pub const GL_UNSIGNED_INT_VEC4_EXT = 0x8DC8;
pub const GL_INT_SAMPLER_1D_EXT = 0x8DC9;
pub const GL_INT_SAMPLER_2D_EXT = 0x8DCA;
pub const GL_INT_SAMPLER_3D_EXT = 0x8DCB;
pub const GL_INT_SAMPLER_CUBE_EXT = 0x8DCC;
pub const GL_INT_SAMPLER_2D_RECT_EXT = 0x8DCD;
pub const GL_INT_SAMPLER_1D_ARRAY_EXT = 0x8DCE;
pub const GL_INT_SAMPLER_2D_ARRAY_EXT = 0x8DCF;
pub const GL_INT_SAMPLER_BUFFER_EXT = 0x8DD0;
pub const GL_UNSIGNED_INT_SAMPLER_1D_EXT = 0x8DD1;
pub const GL_UNSIGNED_INT_SAMPLER_2D_EXT = 0x8DD2;
pub const GL_UNSIGNED_INT_SAMPLER_3D_EXT = 0x8DD3;
pub const GL_UNSIGNED_INT_SAMPLER_CUBE_EXT = 0x8DD4;
pub const GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT = 0x8DD5;
pub const GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT = 0x8DD6;
pub const GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT = 0x8DD7;
pub const GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT = 0x8DD8;
pub const GL_MIN_PROGRAM_TEXEL_OFFSET_EXT = 0x8904;
pub const GL_MAX_PROGRAM_TEXEL_OFFSET_EXT = 0x8905;
pub const GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT = 0x88FD;
pub const GL_HISTOGRAM_EXT = 0x8024;
pub const GL_PROXY_HISTOGRAM_EXT = 0x8025;
pub const GL_HISTOGRAM_WIDTH_EXT = 0x8026;
pub const GL_HISTOGRAM_FORMAT_EXT = 0x8027;
pub const GL_HISTOGRAM_RED_SIZE_EXT = 0x8028;
pub const GL_HISTOGRAM_GREEN_SIZE_EXT = 0x8029;
pub const GL_HISTOGRAM_BLUE_SIZE_EXT = 0x802A;
pub const GL_HISTOGRAM_ALPHA_SIZE_EXT = 0x802B;
pub const GL_HISTOGRAM_LUMINANCE_SIZE_EXT = 0x802C;
pub const GL_HISTOGRAM_SINK_EXT = 0x802D;
pub const GL_MINMAX_EXT = 0x802E;
pub const GL_MINMAX_FORMAT_EXT = 0x802F;
pub const GL_MINMAX_SINK_EXT = 0x8030;
pub const GL_TABLE_TOO_LARGE_EXT = 0x8031;
pub const GL_IUI_V2F_EXT = 0x81AD;
pub const GL_IUI_V3F_EXT = 0x81AE;
pub const GL_IUI_N3F_V2F_EXT = 0x81AF;
pub const GL_IUI_N3F_V3F_EXT = 0x81B0;
pub const GL_T2F_IUI_V2F_EXT = 0x81B1;
pub const GL_T2F_IUI_V3F_EXT = 0x81B2;
pub const GL_T2F_IUI_N3F_V2F_EXT = 0x81B3;
pub const GL_T2F_IUI_N3F_V3F_EXT = 0x81B4;
pub const GL_INDEX_TEST_EXT = 0x81B5;
pub const GL_INDEX_TEST_FUNC_EXT = 0x81B6;
pub const GL_INDEX_TEST_REF_EXT = 0x81B7;
pub const GL_INDEX_MATERIAL_EXT = 0x81B8;
pub const GL_INDEX_MATERIAL_PARAMETER_EXT = 0x81B9;
pub const GL_INDEX_MATERIAL_FACE_EXT = 0x81BA;
pub const GL_FRAGMENT_MATERIAL_EXT = 0x8349;
pub const GL_FRAGMENT_NORMAL_EXT = 0x834A;
pub const GL_FRAGMENT_COLOR_EXT = 0x834C;
pub const GL_ATTENUATION_EXT = 0x834D;
pub const GL_SHADOW_ATTENUATION_EXT = 0x834E;
pub const GL_TEXTURE_APPLICATION_MODE_EXT = 0x834F;
pub const GL_TEXTURE_LIGHT_EXT = 0x8350;
pub const GL_TEXTURE_MATERIAL_FACE_EXT = 0x8351;
pub const GL_TEXTURE_MATERIAL_PARAMETER_EXT = 0x8352;
pub const GL_TEXTURE_TILING_EXT = 0x9580;
pub const GL_DEDICATED_MEMORY_OBJECT_EXT = 0x9581;
pub const GL_PROTECTED_MEMORY_OBJECT_EXT = 0x959B;
pub const GL_NUM_TILING_TYPES_EXT = 0x9582;
pub const GL_TILING_TYPES_EXT = 0x9583;
pub const GL_OPTIMAL_TILING_EXT = 0x9584;
pub const GL_LINEAR_TILING_EXT = 0x9585;
pub const GL_NUM_DEVICE_UUIDS_EXT = 0x9596;
pub const GL_DEVICE_UUID_EXT = 0x9597;
pub const GL_DRIVER_UUID_EXT = 0x9598;
pub const GL_UUID_SIZE_EXT = 16;
pub const GL_HANDLE_TYPE_OPAQUE_FD_EXT = 0x9586;
pub const GL_HANDLE_TYPE_OPAQUE_WIN32_EXT = 0x9587;
pub const GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT = 0x9588;
pub const GL_DEVICE_LUID_EXT = 0x9599;
pub const GL_DEVICE_NODE_MASK_EXT = 0x959A;
pub const GL_LUID_SIZE_EXT = 8;
pub const GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT = 0x9589;
pub const GL_HANDLE_TYPE_D3D12_RESOURCE_EXT = 0x958A;
pub const GL_HANDLE_TYPE_D3D11_IMAGE_EXT = 0x958B;
pub const GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT = 0x958C;
pub const GL_MULTISAMPLE_EXT = 0x809D;
pub const GL_SAMPLE_ALPHA_TO_MASK_EXT = 0x809E;
pub const GL_SAMPLE_ALPHA_TO_ONE_EXT = 0x809F;
pub const GL_SAMPLE_MASK_EXT = 0x80A0;
pub const GL_1PASS_EXT = 0x80A1;
pub const GL_2PASS_0_EXT = 0x80A2;
pub const GL_2PASS_1_EXT = 0x80A3;
pub const GL_4PASS_0_EXT = 0x80A4;
pub const GL_4PASS_1_EXT = 0x80A5;
pub const GL_4PASS_2_EXT = 0x80A6;
pub const GL_4PASS_3_EXT = 0x80A7;
pub const GL_SAMPLE_BUFFERS_EXT = 0x80A8;
pub const GL_SAMPLES_EXT = 0x80A9;
pub const GL_SAMPLE_MASK_VALUE_EXT = 0x80AA;
pub const GL_SAMPLE_MASK_INVERT_EXT = 0x80AB;
pub const GL_SAMPLE_PATTERN_EXT = 0x80AC;
pub const GL_MULTISAMPLE_BIT_EXT = 0x20000000;
pub const GL_DEPTH_STENCIL_EXT = 0x84F9;
pub const GL_UNSIGNED_INT_24_8_EXT = 0x84FA;
pub const GL_DEPTH24_STENCIL8_EXT = 0x88F0;
pub const GL_TEXTURE_STENCIL_SIZE_EXT = 0x88F1;
pub const GL_R11F_G11F_B10F_EXT = 0x8C3A;
pub const GL_UNSIGNED_INT_10F_11F_11F_REV_EXT = 0x8C3B;
pub const GL_RGBA_SIGNED_COMPONENTS_EXT = 0x8C3C;
pub const GL_UNSIGNED_BYTE_3_3_2_EXT = 0x8032;
pub const GL_UNSIGNED_SHORT_4_4_4_4_EXT = 0x8033;
pub const GL_UNSIGNED_SHORT_5_5_5_1_EXT = 0x8034;
pub const GL_UNSIGNED_INT_8_8_8_8_EXT = 0x8035;
pub const GL_UNSIGNED_INT_10_10_10_2_EXT = 0x8036;
pub const GL_COLOR_INDEX1_EXT = 0x80E2;
pub const GL_COLOR_INDEX2_EXT = 0x80E3;
pub const GL_COLOR_INDEX4_EXT = 0x80E4;
pub const GL_COLOR_INDEX8_EXT = 0x80E5;
pub const GL_COLOR_INDEX12_EXT = 0x80E6;
pub const GL_COLOR_INDEX16_EXT = 0x80E7;
pub const GL_TEXTURE_INDEX_SIZE_EXT = 0x80ED;
pub const GL_PIXEL_PACK_BUFFER_EXT = 0x88EB;
pub const GL_PIXEL_UNPACK_BUFFER_EXT = 0x88EC;
pub const GL_PIXEL_PACK_BUFFER_BINDING_EXT = 0x88ED;
pub const GL_PIXEL_UNPACK_BUFFER_BINDING_EXT = 0x88EF;
pub const GL_PIXEL_TRANSFORM_2D_EXT = 0x8330;
pub const GL_PIXEL_MAG_FILTER_EXT = 0x8331;
pub const GL_PIXEL_MIN_FILTER_EXT = 0x8332;
pub const GL_PIXEL_CUBIC_WEIGHT_EXT = 0x8333;
pub const GL_CUBIC_EXT = 0x8334;
pub const GL_AVERAGE_EXT = 0x8335;
pub const GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = 0x8336;
pub const GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = 0x8337;
pub const GL_PIXEL_TRANSFORM_2D_MATRIX_EXT = 0x8338;
pub const GL_POINT_SIZE_MIN_EXT = 0x8126;
pub const GL_POINT_SIZE_MAX_EXT = 0x8127;
pub const GL_POINT_FADE_THRESHOLD_SIZE_EXT = 0x8128;
pub const GL_DISTANCE_ATTENUATION_EXT = 0x8129;
pub const GL_POLYGON_OFFSET_EXT = 0x8037;
pub const GL_POLYGON_OFFSET_FACTOR_EXT = 0x8038;
pub const GL_POLYGON_OFFSET_BIAS_EXT = 0x8039;
pub const GL_POLYGON_OFFSET_CLAMP_EXT = 0x8E1B;
pub const GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT = 0x8E4C;
pub const GL_FIRST_VERTEX_CONVENTION_EXT = 0x8E4D;
pub const GL_LAST_VERTEX_CONVENTION_EXT = 0x8E4E;
pub const GL_PROVOKING_VERTEX_EXT = 0x8E4F;
pub const GL_RASTER_MULTISAMPLE_EXT = 0x9327;
pub const GL_RASTER_SAMPLES_EXT = 0x9328;
pub const GL_MAX_RASTER_SAMPLES_EXT = 0x9329;
pub const GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT = 0x932A;
pub const GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT = 0x932B;
pub const GL_EFFECTIVE_RASTER_SAMPLES_EXT = 0x932C;
pub const GL_RESCALE_NORMAL_EXT = 0x803A;
pub const GL_COLOR_SUM_EXT = 0x8458;
pub const GL_CURRENT_SECONDARY_COLOR_EXT = 0x8459;
pub const GL_SECONDARY_COLOR_ARRAY_SIZE_EXT = 0x845A;
pub const GL_SECONDARY_COLOR_ARRAY_TYPE_EXT = 0x845B;
pub const GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT = 0x845C;
pub const GL_SECONDARY_COLOR_ARRAY_POINTER_EXT = 0x845D;
pub const GL_SECONDARY_COLOR_ARRAY_EXT = 0x845E;
pub const GL_LAYOUT_GENERAL_EXT = 0x958D;
pub const GL_LAYOUT_COLOR_ATTACHMENT_EXT = 0x958E;
pub const GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT = 0x958F;
pub const GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT = 0x9590;
pub const GL_LAYOUT_SHADER_READ_ONLY_EXT = 0x9591;
pub const GL_LAYOUT_TRANSFER_SRC_EXT = 0x9592;
pub const GL_LAYOUT_TRANSFER_DST_EXT = 0x9593;
pub const GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT = 0x9530;
pub const GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT = 0x9531;
pub const GL_HANDLE_TYPE_D3D12_FENCE_EXT = 0x9594;
pub const GL_D3D12_FENCE_VALUE_EXT = 0x9595;
pub const GL_ACTIVE_PROGRAM_EXT = 0x8B8D;
pub const GL_VERTEX_SHADER_BIT_EXT = 0x00000001;
pub const GL_FRAGMENT_SHADER_BIT_EXT = 0x00000002;
pub const GL_ALL_SHADER_BITS_EXT = 0xFFFFFFFF;
pub const GL_PROGRAM_SEPARABLE_EXT = 0x8258;
pub const GL_PROGRAM_PIPELINE_BINDING_EXT = 0x825A;
pub const GL_LIGHT_MODEL_COLOR_CONTROL_EXT = 0x81F8;
pub const GL_SINGLE_COLOR_EXT = 0x81F9;
pub const GL_SEPARATE_SPECULAR_COLOR_EXT = 0x81FA;
pub const GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT = 0x8A52;
pub const GL_MAX_IMAGE_UNITS_EXT = 0x8F38;
pub const GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT = 0x8F39;
pub const GL_IMAGE_BINDING_NAME_EXT = 0x8F3A;
pub const GL_IMAGE_BINDING_LEVEL_EXT = 0x8F3B;
pub const GL_IMAGE_BINDING_LAYERED_EXT = 0x8F3C;
pub const GL_IMAGE_BINDING_LAYER_EXT = 0x8F3D;
pub const GL_IMAGE_BINDING_ACCESS_EXT = 0x8F3E;
pub const GL_IMAGE_1D_EXT = 0x904C;
pub const GL_IMAGE_2D_EXT = 0x904D;
pub const GL_IMAGE_3D_EXT = 0x904E;
pub const GL_IMAGE_2D_RECT_EXT = 0x904F;
pub const GL_IMAGE_CUBE_EXT = 0x9050;
pub const GL_IMAGE_BUFFER_EXT = 0x9051;
pub const GL_IMAGE_1D_ARRAY_EXT = 0x9052;
pub const GL_IMAGE_2D_ARRAY_EXT = 0x9053;
pub const GL_IMAGE_CUBE_MAP_ARRAY_EXT = 0x9054;
pub const GL_IMAGE_2D_MULTISAMPLE_EXT = 0x9055;
pub const GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x9056;
pub const GL_INT_IMAGE_1D_EXT = 0x9057;
pub const GL_INT_IMAGE_2D_EXT = 0x9058;
pub const GL_INT_IMAGE_3D_EXT = 0x9059;
pub const GL_INT_IMAGE_2D_RECT_EXT = 0x905A;
pub const GL_INT_IMAGE_CUBE_EXT = 0x905B;
pub const GL_INT_IMAGE_BUFFER_EXT = 0x905C;
pub const GL_INT_IMAGE_1D_ARRAY_EXT = 0x905D;
pub const GL_INT_IMAGE_2D_ARRAY_EXT = 0x905E;
pub const GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT = 0x905F;
pub const GL_INT_IMAGE_2D_MULTISAMPLE_EXT = 0x9060;
pub const GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x9061;
pub const GL_UNSIGNED_INT_IMAGE_1D_EXT = 0x9062;
pub const GL_UNSIGNED_INT_IMAGE_2D_EXT = 0x9063;
pub const GL_UNSIGNED_INT_IMAGE_3D_EXT = 0x9064;
pub const GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT = 0x9065;
pub const GL_UNSIGNED_INT_IMAGE_CUBE_EXT = 0x9066;
pub const GL_UNSIGNED_INT_IMAGE_BUFFER_EXT = 0x9067;
pub const GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT = 0x9068;
pub const GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT = 0x9069;
pub const GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT = 0x906A;
pub const GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT = 0x906B;
pub const GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x906C;
pub const GL_MAX_IMAGE_SAMPLES_EXT = 0x906D;
pub const GL_IMAGE_BINDING_FORMAT_EXT = 0x906E;
pub const GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT = 0x00000001;
pub const GL_ELEMENT_ARRAY_BARRIER_BIT_EXT = 0x00000002;
pub const GL_UNIFORM_BARRIER_BIT_EXT = 0x00000004;
pub const GL_TEXTURE_FETCH_BARRIER_BIT_EXT = 0x00000008;
pub const GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT = 0x00000020;
pub const GL_COMMAND_BARRIER_BIT_EXT = 0x00000040;
pub const GL_PIXEL_BUFFER_BARRIER_BIT_EXT = 0x00000080;
pub const GL_TEXTURE_UPDATE_BARRIER_BIT_EXT = 0x00000100;
pub const GL_BUFFER_UPDATE_BARRIER_BIT_EXT = 0x00000200;
pub const GL_FRAMEBUFFER_BARRIER_BIT_EXT = 0x00000400;
pub const GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT = 0x00000800;
pub const GL_ATOMIC_COUNTER_BARRIER_BIT_EXT = 0x00001000;
pub const GL_ALL_BARRIER_BITS_EXT = 0xFFFFFFFF;
pub const GL_SHARED_TEXTURE_PALETTE_EXT = 0x81FB;
pub const GL_STENCIL_TAG_BITS_EXT = 0x88F2;
pub const GL_STENCIL_CLEAR_TAG_VALUE_EXT = 0x88F3;
pub const GL_STENCIL_TEST_TWO_SIDE_EXT = 0x8910;
pub const GL_ACTIVE_STENCIL_FACE_EXT = 0x8911;
pub const GL_INCR_WRAP_EXT = 0x8507;
pub const GL_DECR_WRAP_EXT = 0x8508;
pub const GL_ALPHA4_EXT = 0x803B;
pub const GL_ALPHA8_EXT = 0x803C;
pub const GL_ALPHA12_EXT = 0x803D;
pub const GL_ALPHA16_EXT = 0x803E;
pub const GL_LUMINANCE4_EXT = 0x803F;
pub const GL_LUMINANCE8_EXT = 0x8040;
pub const GL_LUMINANCE12_EXT = 0x8041;
pub const GL_LUMINANCE16_EXT = 0x8042;
pub const GL_LUMINANCE4_ALPHA4_EXT = 0x8043;
pub const GL_LUMINANCE6_ALPHA2_EXT = 0x8044;
pub const GL_LUMINANCE8_ALPHA8_EXT = 0x8045;
pub const GL_LUMINANCE12_ALPHA4_EXT = 0x8046;
pub const GL_LUMINANCE12_ALPHA12_EXT = 0x8047;
pub const GL_LUMINANCE16_ALPHA16_EXT = 0x8048;
pub const GL_INTENSITY_EXT = 0x8049;
pub const GL_INTENSITY4_EXT = 0x804A;
pub const GL_INTENSITY8_EXT = 0x804B;
pub const GL_INTENSITY12_EXT = 0x804C;
pub const GL_INTENSITY16_EXT = 0x804D;
pub const GL_RGB2_EXT = 0x804E;
pub const GL_RGB4_EXT = 0x804F;
pub const GL_RGB5_EXT = 0x8050;
pub const GL_RGB8_EXT = 0x8051;
pub const GL_RGB10_EXT = 0x8052;
pub const GL_RGB12_EXT = 0x8053;
pub const GL_RGB16_EXT = 0x8054;
pub const GL_RGBA2_EXT = 0x8055;
pub const GL_RGBA4_EXT = 0x8056;
pub const GL_RGB5_A1_EXT = 0x8057;
pub const GL_RGBA8_EXT = 0x8058;
pub const GL_RGB10_A2_EXT = 0x8059;
pub const GL_RGBA12_EXT = 0x805A;
pub const GL_RGBA16_EXT = 0x805B;
pub const GL_TEXTURE_RED_SIZE_EXT = 0x805C;
pub const GL_TEXTURE_GREEN_SIZE_EXT = 0x805D;
pub const GL_TEXTURE_BLUE_SIZE_EXT = 0x805E;
pub const GL_TEXTURE_ALPHA_SIZE_EXT = 0x805F;
pub const GL_TEXTURE_LUMINANCE_SIZE_EXT = 0x8060;
pub const GL_TEXTURE_INTENSITY_SIZE_EXT = 0x8061;
pub const GL_REPLACE_EXT = 0x8062;
pub const GL_PROXY_TEXTURE_1D_EXT = 0x8063;
pub const GL_PROXY_TEXTURE_2D_EXT = 0x8064;
pub const GL_TEXTURE_TOO_LARGE_EXT = 0x8065;
pub const GL_PACK_SKIP_IMAGES_EXT = 0x806B;
pub const GL_PACK_IMAGE_HEIGHT_EXT = 0x806C;
pub const GL_UNPACK_SKIP_IMAGES_EXT = 0x806D;
pub const GL_UNPACK_IMAGE_HEIGHT_EXT = 0x806E;
pub const GL_TEXTURE_3D_EXT = 0x806F;
pub const GL_PROXY_TEXTURE_3D_EXT = 0x8070;
pub const GL_TEXTURE_DEPTH_EXT = 0x8071;
pub const GL_TEXTURE_WRAP_R_EXT = 0x8072;
pub const GL_MAX_3D_TEXTURE_SIZE_EXT = 0x8073;
pub const GL_TEXTURE_1D_ARRAY_EXT = 0x8C18;
pub const GL_PROXY_TEXTURE_1D_ARRAY_EXT = 0x8C19;
pub const GL_TEXTURE_2D_ARRAY_EXT = 0x8C1A;
pub const GL_PROXY_TEXTURE_2D_ARRAY_EXT = 0x8C1B;
pub const GL_TEXTURE_BINDING_1D_ARRAY_EXT = 0x8C1C;
pub const GL_TEXTURE_BINDING_2D_ARRAY_EXT = 0x8C1D;
pub const GL_MAX_ARRAY_TEXTURE_LAYERS_EXT = 0x88FF;
pub const GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT = 0x884E;
pub const GL_TEXTURE_BUFFER_EXT = 0x8C2A;
pub const GL_MAX_TEXTURE_BUFFER_SIZE_EXT = 0x8C2B;
pub const GL_TEXTURE_BINDING_BUFFER_EXT = 0x8C2C;
pub const GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT = 0x8C2D;
pub const GL_TEXTURE_BUFFER_FORMAT_EXT = 0x8C2E;
pub const GL_COMPRESSED_LUMINANCE_LATC1_EXT = 0x8C70;
pub const GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT = 0x8C71;
pub const GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT = 0x8C72;
pub const GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT = 0x8C73;
pub const GL_COMPRESSED_RED_RGTC1_EXT = 0x8DBB;
pub const GL_COMPRESSED_SIGNED_RED_RGTC1_EXT = 0x8DBC;
pub const GL_COMPRESSED_RED_GREEN_RGTC2_EXT = 0x8DBD;
pub const GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT = 0x8DBE;
pub const GL_COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0;
pub const GL_COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1;
pub const GL_COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2;
pub const GL_COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3;
pub const GL_NORMAL_MAP_EXT = 0x8511;
pub const GL_REFLECTION_MAP_EXT = 0x8512;
pub const GL_TEXTURE_CUBE_MAP_EXT = 0x8513;
pub const GL_TEXTURE_BINDING_CUBE_MAP_EXT = 0x8514;
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT = 0x8515;
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT = 0x8516;
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT = 0x8517;
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT = 0x8518;
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT = 0x8519;
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT = 0x851A;
pub const GL_PROXY_TEXTURE_CUBE_MAP_EXT = 0x851B;
pub const GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT = 0x851C;
pub const GL_COMBINE_EXT = 0x8570;
pub const GL_COMBINE_RGB_EXT = 0x8571;
pub const GL_COMBINE_ALPHA_EXT = 0x8572;
pub const GL_RGB_SCALE_EXT = 0x8573;
pub const GL_ADD_SIGNED_EXT = 0x8574;
pub const GL_INTERPOLATE_EXT = 0x8575;
pub const GL_CONSTANT_EXT = 0x8576;
pub const GL_PRIMARY_COLOR_EXT = 0x8577;
pub const GL_PREVIOUS_EXT = 0x8578;
pub const GL_SOURCE0_RGB_EXT = 0x8580;
pub const GL_SOURCE1_RGB_EXT = 0x8581;
pub const GL_SOURCE2_RGB_EXT = 0x8582;
pub const GL_SOURCE0_ALPHA_EXT = 0x8588;
pub const GL_SOURCE1_ALPHA_EXT = 0x8589;
pub const GL_SOURCE2_ALPHA_EXT = 0x858A;
pub const GL_OPERAND0_RGB_EXT = 0x8590;
pub const GL_OPERAND1_RGB_EXT = 0x8591;
pub const GL_OPERAND2_RGB_EXT = 0x8592;
pub const GL_OPERAND0_ALPHA_EXT = 0x8598;
pub const GL_OPERAND1_ALPHA_EXT = 0x8599;
pub const GL_OPERAND2_ALPHA_EXT = 0x859A;
pub const GL_DOT3_RGB_EXT = 0x8740;
pub const GL_DOT3_RGBA_EXT = 0x8741;
pub const GL_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FE;
pub const GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF;
pub const GL_TEXTURE_REDUCTION_MODE_EXT = 0x9366;
pub const GL_WEIGHTED_AVERAGE_EXT = 0x9367;
pub const GL_RGBA32UI_EXT = 0x8D70;
pub const GL_RGB32UI_EXT = 0x8D71;
pub const GL_ALPHA32UI_EXT = 0x8D72;
pub const GL_INTENSITY32UI_EXT = 0x8D73;
pub const GL_LUMINANCE32UI_EXT = 0x8D74;
pub const GL_LUMINANCE_ALPHA32UI_EXT = 0x8D75;
pub const GL_RGBA16UI_EXT = 0x8D76;
pub const GL_RGB16UI_EXT = 0x8D77;
pub const GL_ALPHA16UI_EXT = 0x8D78;
pub const GL_INTENSITY16UI_EXT = 0x8D79;
pub const GL_LUMINANCE16UI_EXT = 0x8D7A;
pub const GL_LUMINANCE_ALPHA16UI_EXT = 0x8D7B;
pub const GL_RGBA8UI_EXT = 0x8D7C;
pub const GL_RGB8UI_EXT = 0x8D7D;
pub const GL_ALPHA8UI_EXT = 0x8D7E;
pub const GL_INTENSITY8UI_EXT = 0x8D7F;
pub const GL_LUMINANCE8UI_EXT = 0x8D80;
pub const GL_LUMINANCE_ALPHA8UI_EXT = 0x8D81;
pub const GL_RGBA32I_EXT = 0x8D82;
pub const GL_RGB32I_EXT = 0x8D83;
pub const GL_ALPHA32I_EXT = 0x8D84;
pub const GL_INTENSITY32I_EXT = 0x8D85;
pub const GL_LUMINANCE32I_EXT = 0x8D86;
pub const GL_LUMINANCE_ALPHA32I_EXT = 0x8D87;
pub const GL_RGBA16I_EXT = 0x8D88;
pub const GL_RGB16I_EXT = 0x8D89;
pub const GL_ALPHA16I_EXT = 0x8D8A;
pub const GL_INTENSITY16I_EXT = 0x8D8B;
pub const GL_LUMINANCE16I_EXT = 0x8D8C;
pub const GL_LUMINANCE_ALPHA16I_EXT = 0x8D8D;
pub const GL_RGBA8I_EXT = 0x8D8E;
pub const GL_RGB8I_EXT = 0x8D8F;
pub const GL_ALPHA8I_EXT = 0x8D90;
pub const GL_INTENSITY8I_EXT = 0x8D91;
pub const GL_LUMINANCE8I_EXT = 0x8D92;
pub const GL_LUMINANCE_ALPHA8I_EXT = 0x8D93;
pub const GL_RED_INTEGER_EXT = 0x8D94;
pub const GL_GREEN_INTEGER_EXT = 0x8D95;
pub const GL_BLUE_INTEGER_EXT = 0x8D96;
pub const GL_ALPHA_INTEGER_EXT = 0x8D97;
pub const GL_RGB_INTEGER_EXT = 0x8D98;
pub const GL_RGBA_INTEGER_EXT = 0x8D99;
pub const GL_BGR_INTEGER_EXT = 0x8D9A;
pub const GL_BGRA_INTEGER_EXT = 0x8D9B;
pub const GL_LUMINANCE_INTEGER_EXT = 0x8D9C;
pub const GL_LUMINANCE_ALPHA_INTEGER_EXT = 0x8D9D;
pub const GL_RGBA_INTEGER_MODE_EXT = 0x8D9E;
pub const GL_MAX_TEXTURE_LOD_BIAS_EXT = 0x84FD;
pub const GL_TEXTURE_FILTER_CONTROL_EXT = 0x8500;
pub const GL_TEXTURE_LOD_BIAS_EXT = 0x8501;
pub const GL_MIRROR_CLAMP_EXT = 0x8742;
pub const GL_MIRROR_CLAMP_TO_EDGE_EXT = 0x8743;
pub const GL_MIRROR_CLAMP_TO_BORDER_EXT = 0x8912;
pub const GL_TEXTURE_PRIORITY_EXT = 0x8066;
pub const GL_TEXTURE_RESIDENT_EXT = 0x8067;
pub const GL_TEXTURE_1D_BINDING_EXT = 0x8068;
pub const GL_TEXTURE_2D_BINDING_EXT = 0x8069;
pub const GL_TEXTURE_3D_BINDING_EXT = 0x806A;
pub const GL_PERTURB_EXT = 0x85AE;
pub const GL_TEXTURE_NORMAL_EXT = 0x85AF;
pub const GL_SRGB_EXT = 0x8C40;
pub const GL_SRGB8_EXT = 0x8C41;
pub const GL_SRGB_ALPHA_EXT = 0x8C42;
pub const GL_SRGB8_ALPHA8_EXT = 0x8C43;
pub const GL_SLUMINANCE_ALPHA_EXT = 0x8C44;
pub const GL_SLUMINANCE8_ALPHA8_EXT = 0x8C45;
pub const GL_SLUMINANCE_EXT = 0x8C46;
pub const GL_SLUMINANCE8_EXT = 0x8C47;
pub const GL_COMPRESSED_SRGB_EXT = 0x8C48;
pub const GL_COMPRESSED_SRGB_ALPHA_EXT = 0x8C49;
pub const GL_COMPRESSED_SLUMINANCE_EXT = 0x8C4A;
pub const GL_COMPRESSED_SLUMINANCE_ALPHA_EXT = 0x8C4B;
pub const GL_COMPRESSED_SRGB_S3TC_DXT1_EXT = 0x8C4C;
pub const GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT = 0x8C4D;
pub const GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT = 0x8C4E;
pub const GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT = 0x8C4F;
pub const GL_SR8_EXT = 0x8FBD;
pub const GL_SRG8_EXT = 0x8FBE;
pub const GL_TEXTURE_SRGB_DECODE_EXT = 0x8A48;
pub const GL_DECODE_EXT = 0x8A49;
pub const GL_SKIP_DECODE_EXT = 0x8A4A;
pub const GL_RGB9_E5_EXT = 0x8C3D;
pub const GL_UNSIGNED_INT_5_9_9_9_REV_EXT = 0x8C3E;
pub const GL_TEXTURE_SHARED_SIZE_EXT = 0x8C3F;
pub const GL_ALPHA_SNORM = 0x9010;
pub const GL_LUMINANCE_SNORM = 0x9011;
pub const GL_LUMINANCE_ALPHA_SNORM = 0x9012;
pub const GL_INTENSITY_SNORM = 0x9013;
pub const GL_ALPHA8_SNORM = 0x9014;
pub const GL_LUMINANCE8_SNORM = 0x9015;
pub const GL_LUMINANCE8_ALPHA8_SNORM = 0x9016;
pub const GL_INTENSITY8_SNORM = 0x9017;
pub const GL_ALPHA16_SNORM = 0x9018;
pub const GL_LUMINANCE16_SNORM = 0x9019;
pub const GL_LUMINANCE16_ALPHA16_SNORM = 0x901A;
pub const GL_INTENSITY16_SNORM = 0x901B;
pub const GL_RED_SNORM = 0x8F90;
pub const GL_RG_SNORM = 0x8F91;
pub const GL_RGB_SNORM = 0x8F92;
pub const GL_RGBA_SNORM = 0x8F93;
pub const GL_TEXTURE_IMMUTABLE_FORMAT_EXT = 0x912F;
pub const GL_RGBA32F_EXT = 0x8814;
pub const GL_RGB32F_EXT = 0x8815;
pub const GL_ALPHA32F_EXT = 0x8816;
pub const GL_LUMINANCE32F_EXT = 0x8818;
pub const GL_LUMINANCE_ALPHA32F_EXT = 0x8819;
pub const GL_RGBA16F_EXT = 0x881A;
pub const GL_RGB16F_EXT = 0x881B;
pub const GL_ALPHA16F_EXT = 0x881C;
pub const GL_LUMINANCE16F_EXT = 0x881E;
pub const GL_LUMINANCE_ALPHA16F_EXT = 0x881F;
pub const GL_BGRA8_EXT = 0x93A1;
pub const GL_R8_EXT = 0x8229;
pub const GL_RG8_EXT = 0x822B;
pub const GL_R32F_EXT = 0x822E;
pub const GL_RG32F_EXT = 0x8230;
pub const GL_R16F_EXT = 0x822D;
pub const GL_RG16F_EXT = 0x822F;
pub const GL_TEXTURE_SWIZZLE_R_EXT = 0x8E42;
pub const GL_TEXTURE_SWIZZLE_G_EXT = 0x8E43;
pub const GL_TEXTURE_SWIZZLE_B_EXT = 0x8E44;
pub const GL_TEXTURE_SWIZZLE_A_EXT = 0x8E45;
pub const GL_TEXTURE_SWIZZLE_RGBA_EXT = 0x8E46;
pub const GL_TIME_ELAPSED_EXT = 0x88BF;
pub const GL_TRANSFORM_FEEDBACK_BUFFER_EXT = 0x8C8E;
pub const GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT = 0x8C84;
pub const GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT = 0x8C85;
pub const GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT = 0x8C8F;
pub const GL_INTERLEAVED_ATTRIBS_EXT = 0x8C8C;
pub const GL_SEPARATE_ATTRIBS_EXT = 0x8C8D;
pub const GL_PRIMITIVES_GENERATED_EXT = 0x8C87;
pub const GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT = 0x8C88;
pub const GL_RASTERIZER_DISCARD_EXT = 0x8C89;
pub const GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT = 0x8C8A;
pub const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT = 0x8C8B;
pub const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT = 0x8C80;
pub const GL_TRANSFORM_FEEDBACK_VARYINGS_EXT = 0x8C83;
pub const GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT = 0x8C7F;
pub const GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT = 0x8C76;
pub const GL_VERTEX_ARRAY_EXT = 0x8074;
pub const GL_NORMAL_ARRAY_EXT = 0x8075;
pub const GL_COLOR_ARRAY_EXT = 0x8076;
pub const GL_INDEX_ARRAY_EXT = 0x8077;
pub const GL_TEXTURE_COORD_ARRAY_EXT = 0x8078;
pub const GL_EDGE_FLAG_ARRAY_EXT = 0x8079;
pub const GL_VERTEX_ARRAY_SIZE_EXT = 0x807A;
pub const GL_VERTEX_ARRAY_TYPE_EXT = 0x807B;
pub const GL_VERTEX_ARRAY_STRIDE_EXT = 0x807C;
pub const GL_VERTEX_ARRAY_COUNT_EXT = 0x807D;
pub const GL_NORMAL_ARRAY_TYPE_EXT = 0x807E;
pub const GL_NORMAL_ARRAY_STRIDE_EXT = 0x807F;
pub const GL_NORMAL_ARRAY_COUNT_EXT = 0x8080;
pub const GL_COLOR_ARRAY_SIZE_EXT = 0x8081;
pub const GL_COLOR_ARRAY_TYPE_EXT = 0x8082;
pub const GL_COLOR_ARRAY_STRIDE_EXT = 0x8083;
pub const GL_COLOR_ARRAY_COUNT_EXT = 0x8084;
pub const GL_INDEX_ARRAY_TYPE_EXT = 0x8085;
pub const GL_INDEX_ARRAY_STRIDE_EXT = 0x8086;
pub const GL_INDEX_ARRAY_COUNT_EXT = 0x8087;
pub const GL_TEXTURE_COORD_ARRAY_SIZE_EXT = 0x8088;
pub const GL_TEXTURE_COORD_ARRAY_TYPE_EXT = 0x8089;
pub const GL_TEXTURE_COORD_ARRAY_STRIDE_EXT = 0x808A;
pub const GL_TEXTURE_COORD_ARRAY_COUNT_EXT = 0x808B;
pub const GL_EDGE_FLAG_ARRAY_STRIDE_EXT = 0x808C;
pub const GL_EDGE_FLAG_ARRAY_COUNT_EXT = 0x808D;
pub const GL_VERTEX_ARRAY_POINTER_EXT = 0x808E;
pub const GL_NORMAL_ARRAY_POINTER_EXT = 0x808F;
pub const GL_COLOR_ARRAY_POINTER_EXT = 0x8090;
pub const GL_INDEX_ARRAY_POINTER_EXT = 0x8091;
pub const GL_TEXTURE_COORD_ARRAY_POINTER_EXT = 0x8092;
pub const GL_EDGE_FLAG_ARRAY_POINTER_EXT = 0x8093;
pub const GL_DOUBLE_VEC2_EXT = 0x8FFC;
pub const GL_DOUBLE_VEC3_EXT = 0x8FFD;
pub const GL_DOUBLE_VEC4_EXT = 0x8FFE;
pub const GL_DOUBLE_MAT2_EXT = 0x8F46;
pub const GL_DOUBLE_MAT3_EXT = 0x8F47;
pub const GL_DOUBLE_MAT4_EXT = 0x8F48;
pub const GL_DOUBLE_MAT2x3_EXT = 0x8F49;
pub const GL_DOUBLE_MAT2x4_EXT = 0x8F4A;
pub const GL_DOUBLE_MAT3x2_EXT = 0x8F4B;
pub const GL_DOUBLE_MAT3x4_EXT = 0x8F4C;
pub const GL_DOUBLE_MAT4x2_EXT = 0x8F4D;
pub const GL_DOUBLE_MAT4x3_EXT = 0x8F4E;
pub const GL_VERTEX_SHADER_EXT = 0x8780;
pub const GL_VERTEX_SHADER_BINDING_EXT = 0x8781;
pub const GL_OP_INDEX_EXT = 0x8782;
pub const GL_OP_NEGATE_EXT = 0x8783;
pub const GL_OP_DOT3_EXT = 0x8784;
pub const GL_OP_DOT4_EXT = 0x8785;
pub const GL_OP_MUL_EXT = 0x8786;
pub const GL_OP_ADD_EXT = 0x8787;
pub const GL_OP_MADD_EXT = 0x8788;
pub const GL_OP_FRAC_EXT = 0x8789;
pub const GL_OP_MAX_EXT = 0x878A;
pub const GL_OP_MIN_EXT = 0x878B;
pub const GL_OP_SET_GE_EXT = 0x878C;
pub const GL_OP_SET_LT_EXT = 0x878D;
pub const GL_OP_CLAMP_EXT = 0x878E;
pub const GL_OP_FLOOR_EXT = 0x878F;
pub const GL_OP_ROUND_EXT = 0x8790;
pub const GL_OP_EXP_BASE_2_EXT = 0x8791;
pub const GL_OP_LOG_BASE_2_EXT = 0x8792;
pub const GL_OP_POWER_EXT = 0x8793;
pub const GL_OP_RECIP_EXT = 0x8794;
pub const GL_OP_RECIP_SQRT_EXT = 0x8795;
pub const GL_OP_SUB_EXT = 0x8796;
pub const GL_OP_CROSS_PRODUCT_EXT = 0x8797;
pub const GL_OP_MULTIPLY_MATRIX_EXT = 0x8798;
pub const GL_OP_MOV_EXT = 0x8799;
pub const GL_OUTPUT_VERTEX_EXT = 0x879A;
pub const GL_OUTPUT_COLOR0_EXT = 0x879B;
pub const GL_OUTPUT_COLOR1_EXT = 0x879C;
pub const GL_OUTPUT_TEXTURE_COORD0_EXT = 0x879D;
pub const GL_OUTPUT_TEXTURE_COORD1_EXT = 0x879E;
pub const GL_OUTPUT_TEXTURE_COORD2_EXT = 0x879F;
pub const GL_OUTPUT_TEXTURE_COORD3_EXT = 0x87A0;
pub const GL_OUTPUT_TEXTURE_COORD4_EXT = 0x87A1;
pub const GL_OUTPUT_TEXTURE_COORD5_EXT = 0x87A2;
pub const GL_OUTPUT_TEXTURE_COORD6_EXT = 0x87A3;
pub const GL_OUTPUT_TEXTURE_COORD7_EXT = 0x87A4;
pub const GL_OUTPUT_TEXTURE_COORD8_EXT = 0x87A5;
pub const GL_OUTPUT_TEXTURE_COORD9_EXT = 0x87A6;
pub const GL_OUTPUT_TEXTURE_COORD10_EXT = 0x87A7;
pub const GL_OUTPUT_TEXTURE_COORD11_EXT = 0x87A8;
pub const GL_OUTPUT_TEXTURE_COORD12_EXT = 0x87A9;
pub const GL_OUTPUT_TEXTURE_COORD13_EXT = 0x87AA;
pub const GL_OUTPUT_TEXTURE_COORD14_EXT = 0x87AB;
pub const GL_OUTPUT_TEXTURE_COORD15_EXT = 0x87AC;
pub const GL_OUTPUT_TEXTURE_COORD16_EXT = 0x87AD;
pub const GL_OUTPUT_TEXTURE_COORD17_EXT = 0x87AE;
pub const GL_OUTPUT_TEXTURE_COORD18_EXT = 0x87AF;
pub const GL_OUTPUT_TEXTURE_COORD19_EXT = 0x87B0;
pub const GL_OUTPUT_TEXTURE_COORD20_EXT = 0x87B1;
pub const GL_OUTPUT_TEXTURE_COORD21_EXT = 0x87B2;
pub const GL_OUTPUT_TEXTURE_COORD22_EXT = 0x87B3;
pub const GL_OUTPUT_TEXTURE_COORD23_EXT = 0x87B4;
pub const GL_OUTPUT_TEXTURE_COORD24_EXT = 0x87B5;
pub const GL_OUTPUT_TEXTURE_COORD25_EXT = 0x87B6;
pub const GL_OUTPUT_TEXTURE_COORD26_EXT = 0x87B7;
pub const GL_OUTPUT_TEXTURE_COORD27_EXT = 0x87B8;
pub const GL_OUTPUT_TEXTURE_COORD28_EXT = 0x87B9;
pub const GL_OUTPUT_TEXTURE_COORD29_EXT = 0x87BA;
pub const GL_OUTPUT_TEXTURE_COORD30_EXT = 0x87BB;
pub const GL_OUTPUT_TEXTURE_COORD31_EXT = 0x87BC;
pub const GL_OUTPUT_FOG_EXT = 0x87BD;
pub const GL_SCALAR_EXT = 0x87BE;
pub const GL_VECTOR_EXT = 0x87BF;
pub const GL_MATRIX_EXT = 0x87C0;
pub const GL_VARIANT_EXT = 0x87C1;
pub const GL_INVARIANT_EXT = 0x87C2;
pub const GL_LOCAL_CONSTANT_EXT = 0x87C3;
pub const GL_LOCAL_EXT = 0x87C4;
pub const GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87C5;
pub const GL_MAX_VERTEX_SHADER_VARIANTS_EXT = 0x87C6;
pub const GL_MAX_VERTEX_SHADER_INVARIANTS_EXT = 0x87C7;
pub const GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87C8;
pub const GL_MAX_VERTEX_SHADER_LOCALS_EXT = 0x87C9;
pub const GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CA;
pub const GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT = 0x87CB;
pub const GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87CC;
pub const GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT = 0x87CD;
pub const GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT = 0x87CE;
pub const GL_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CF;
pub const GL_VERTEX_SHADER_VARIANTS_EXT = 0x87D0;
pub const GL_VERTEX_SHADER_INVARIANTS_EXT = 0x87D1;
pub const GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87D2;
pub const GL_VERTEX_SHADER_LOCALS_EXT = 0x87D3;
pub const GL_VERTEX_SHADER_OPTIMIZED_EXT = 0x87D4;
pub const GL_X_EXT = 0x87D5;
pub const GL_Y_EXT = 0x87D6;
pub const GL_Z_EXT = 0x87D7;
pub const GL_W_EXT = 0x87D8;
pub const GL_NEGATIVE_X_EXT = 0x87D9;
pub const GL_NEGATIVE_Y_EXT = 0x87DA;
pub const GL_NEGATIVE_Z_EXT = 0x87DB;
pub const GL_NEGATIVE_W_EXT = 0x87DC;
pub const GL_ZERO_EXT = 0x87DD;
pub const GL_ONE_EXT = 0x87DE;
pub const GL_NEGATIVE_ONE_EXT = 0x87DF;
pub const GL_NORMALIZED_RANGE_EXT = 0x87E0;
pub const GL_FULL_RANGE_EXT = 0x87E1;
pub const GL_CURRENT_VERTEX_EXT = 0x87E2;
pub const GL_MVP_MATRIX_EXT = 0x87E3;
pub const GL_VARIANT_VALUE_EXT = 0x87E4;
pub const GL_VARIANT_DATATYPE_EXT = 0x87E5;
pub const GL_VARIANT_ARRAY_STRIDE_EXT = 0x87E6;
pub const GL_VARIANT_ARRAY_TYPE_EXT = 0x87E7;
pub const GL_VARIANT_ARRAY_EXT = 0x87E8;
pub const GL_VARIANT_ARRAY_POINTER_EXT = 0x87E9;
pub const GL_INVARIANT_VALUE_EXT = 0x87EA;
pub const GL_INVARIANT_DATATYPE_EXT = 0x87EB;
pub const GL_LOCAL_CONSTANT_VALUE_EXT = 0x87EC;
pub const GL_LOCAL_CONSTANT_DATATYPE_EXT = 0x87ED;
pub const GL_MODELVIEW0_STACK_DEPTH_EXT = 0x0BA3;
pub const GL_MODELVIEW1_STACK_DEPTH_EXT = 0x8502;
pub const GL_MODELVIEW0_MATRIX_EXT = 0x0BA6;
pub const GL_MODELVIEW1_MATRIX_EXT = 0x8506;
pub const GL_VERTEX_WEIGHTING_EXT = 0x8509;
pub const GL_MODELVIEW0_EXT = 0x1700;
pub const GL_MODELVIEW1_EXT = 0x850A;
pub const GL_CURRENT_VERTEX_WEIGHT_EXT = 0x850B;
pub const GL_VERTEX_WEIGHT_ARRAY_EXT = 0x850C;
pub const GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT = 0x850D;
pub const GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT = 0x850E;
pub const GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT = 0x850F;
pub const GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT = 0x8510;
pub const GL_INCLUSIVE_EXT = 0x8F10;
pub const GL_EXCLUSIVE_EXT = 0x8F11;
pub const GL_WINDOW_RECTANGLE_EXT = 0x8F12;
pub const GL_WINDOW_RECTANGLE_MODE_EXT = 0x8F13;
pub const GL_MAX_WINDOW_RECTANGLES_EXT = 0x8F14;
pub const GL_NUM_WINDOW_RECTANGLES_EXT = 0x8F15;
pub const GL_SYNC_X11_FENCE_EXT = 0x90E1;
pub const GL_IGNORE_BORDER_HP = 0x8150;
pub const GL_CONSTANT_BORDER_HP = 0x8151;
pub const GL_REPLICATE_BORDER_HP = 0x8153;
pub const GL_CONVOLUTION_BORDER_COLOR_HP = 0x8154;
pub const GL_IMAGE_SCALE_X_HP = 0x8155;
pub const GL_IMAGE_SCALE_Y_HP = 0x8156;
pub const GL_IMAGE_TRANSLATE_X_HP = 0x8157;
pub const GL_IMAGE_TRANSLATE_Y_HP = 0x8158;
pub const GL_IMAGE_ROTATE_ANGLE_HP = 0x8159;
pub const GL_IMAGE_ROTATE_ORIGIN_X_HP = 0x815A;
pub const GL_IMAGE_ROTATE_ORIGIN_Y_HP = 0x815B;
pub const GL_IMAGE_MAG_FILTER_HP = 0x815C;
pub const GL_IMAGE_MIN_FILTER_HP = 0x815D;
pub const GL_IMAGE_CUBIC_WEIGHT_HP = 0x815E;
pub const GL_CUBIC_HP = 0x815F;
pub const GL_AVERAGE_HP = 0x8160;
pub const GL_IMAGE_TRANSFORM_2D_HP = 0x8161;
pub const GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = 0x8162;
pub const GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = 0x8163;
pub const GL_OCCLUSION_TEST_HP = 0x8165;
pub const GL_OCCLUSION_TEST_RESULT_HP = 0x8166;
pub const GL_TEXTURE_LIGHTING_MODE_HP = 0x8167;
pub const GL_TEXTURE_POST_SPECULAR_HP = 0x8168;
pub const GL_TEXTURE_PRE_SPECULAR_HP = 0x8169;
pub const GL_CULL_VERTEX_IBM = 103050;
pub const GL_RASTER_POSITION_UNCLIPPED_IBM = 0x19262;
pub const GL_ALL_STATIC_DATA_IBM = 103060;
pub const GL_STATIC_VERTEX_ARRAY_IBM = 103061;
pub const GL_MIRRORED_REPEAT_IBM = 0x8370;
pub const GL_VERTEX_ARRAY_LIST_IBM = 103070;
pub const GL_NORMAL_ARRAY_LIST_IBM = 103071;
pub const GL_COLOR_ARRAY_LIST_IBM = 103072;
pub const GL_INDEX_ARRAY_LIST_IBM = 103073;
pub const GL_TEXTURE_COORD_ARRAY_LIST_IBM = 103074;
pub const GL_EDGE_FLAG_ARRAY_LIST_IBM = 103075;
pub const GL_FOG_COORDINATE_ARRAY_LIST_IBM = 103076;
pub const GL_SECONDARY_COLOR_ARRAY_LIST_IBM = 103077;
pub const GL_VERTEX_ARRAY_LIST_STRIDE_IBM = 103080;
pub const GL_NORMAL_ARRAY_LIST_STRIDE_IBM = 103081;
pub const GL_COLOR_ARRAY_LIST_STRIDE_IBM = 103082;
pub const GL_INDEX_ARRAY_LIST_STRIDE_IBM = 103083;
pub const GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM = 103084;
pub const GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM = 103085;
pub const GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM = 103086;
pub const GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM = 103087;
pub const GL_RED_MIN_CLAMP_INGR = 0x8560;
pub const GL_GREEN_MIN_CLAMP_INGR = 0x8561;
pub const GL_BLUE_MIN_CLAMP_INGR = 0x8562;
pub const GL_ALPHA_MIN_CLAMP_INGR = 0x8563;
pub const GL_RED_MAX_CLAMP_INGR = 0x8564;
pub const GL_GREEN_MAX_CLAMP_INGR = 0x8565;
pub const GL_BLUE_MAX_CLAMP_INGR = 0x8566;
pub const GL_ALPHA_MAX_CLAMP_INGR = 0x8567;
pub const GL_INTERLACE_READ_INGR = 0x8568;
pub const GL_BLACKHOLE_RENDER_INTEL = 0x83FC;
pub const GL_CONSERVATIVE_RASTERIZATION_INTEL = 0x83FE;
pub const GL_TEXTURE_MEMORY_LAYOUT_INTEL = 0x83FF;
pub const GL_LAYOUT_DEFAULT_INTEL = 0;
pub const GL_LAYOUT_LINEAR_INTEL = 1;
pub const GL_LAYOUT_LINEAR_CPU_CACHED_INTEL = 2;
pub const GL_PARALLEL_ARRAYS_INTEL = 0x83F4;
pub const GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F5;
pub const GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F6;
pub const GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F7;
pub const GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F8;
pub const GL_PERFQUERY_SINGLE_CONTEXT_INTEL = 0x00000000;
pub const GL_PERFQUERY_GLOBAL_CONTEXT_INTEL = 0x00000001;
pub const GL_PERFQUERY_WAIT_INTEL = 0x83FB;
pub const GL_PERFQUERY_FLUSH_INTEL = 0x83FA;
pub const GL_PERFQUERY_DONOT_FLUSH_INTEL = 0x83F9;
pub const GL_PERFQUERY_COUNTER_EVENT_INTEL = 0x94F0;
pub const GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL = 0x94F1;
pub const GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL = 0x94F2;
pub const GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL = 0x94F3;
pub const GL_PERFQUERY_COUNTER_RAW_INTEL = 0x94F4;
pub const GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL = 0x94F5;
pub const GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL = 0x94F8;
pub const GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL = 0x94F9;
pub const GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL = 0x94FA;
pub const GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL = 0x94FB;
pub const GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL = 0x94FC;
pub const GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL = 0x94FD;
pub const GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL = 0x94FE;
pub const GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL = 0x94FF;
pub const GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL = 0x9500;
pub const GL_MULTIPLY_KHR = 0x9294;
pub const GL_SCREEN_KHR = 0x9295;
pub const GL_OVERLAY_KHR = 0x9296;
pub const GL_DARKEN_KHR = 0x9297;
pub const GL_LIGHTEN_KHR = 0x9298;
pub const GL_COLORDODGE_KHR = 0x9299;
pub const GL_COLORBURN_KHR = 0x929A;
pub const GL_HARDLIGHT_KHR = 0x929B;
pub const GL_SOFTLIGHT_KHR = 0x929C;
pub const GL_DIFFERENCE_KHR = 0x929E;
pub const GL_EXCLUSION_KHR = 0x92A0;
pub const GL_HSL_HUE_KHR = 0x92AD;
pub const GL_HSL_SATURATION_KHR = 0x92AE;
pub const GL_HSL_COLOR_KHR = 0x92AF;
pub const GL_HSL_LUMINOSITY_KHR = 0x92B0;
pub const GL_BLEND_ADVANCED_COHERENT_KHR = 0x9285;
pub const GL_CONTEXT_RELEASE_BEHAVIOR_KHR = 0x82FB;
pub const GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR = 0x82FC;
pub const GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR = 0x8242;
pub const GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR = 0x8243;
pub const GL_DEBUG_CALLBACK_FUNCTION_KHR = 0x8244;
pub const GL_DEBUG_CALLBACK_USER_PARAM_KHR = 0x8245;
pub const GL_DEBUG_SOURCE_API_KHR = 0x8246;
pub const GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR = 0x8247;
pub const GL_DEBUG_SOURCE_SHADER_COMPILER_KHR = 0x8248;
pub const GL_DEBUG_SOURCE_THIRD_PARTY_KHR = 0x8249;
pub const GL_DEBUG_SOURCE_APPLICATION_KHR = 0x824A;
pub const GL_DEBUG_SOURCE_OTHER_KHR = 0x824B;
pub const GL_DEBUG_TYPE_ERROR_KHR = 0x824C;
pub const GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR = 0x824D;
pub const GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR = 0x824E;
pub const GL_DEBUG_TYPE_PORTABILITY_KHR = 0x824F;
pub const GL_DEBUG_TYPE_PERFORMANCE_KHR = 0x8250;
pub const GL_DEBUG_TYPE_OTHER_KHR = 0x8251;
pub const GL_DEBUG_TYPE_MARKER_KHR = 0x8268;
pub const GL_DEBUG_TYPE_PUSH_GROUP_KHR = 0x8269;
pub const GL_DEBUG_TYPE_POP_GROUP_KHR = 0x826A;
pub const GL_DEBUG_SEVERITY_NOTIFICATION_KHR = 0x826B;
pub const GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR = 0x826C;
pub const GL_DEBUG_GROUP_STACK_DEPTH_KHR = 0x826D;
pub const GL_BUFFER_KHR = 0x82E0;
pub const GL_SHADER_KHR = 0x82E1;
pub const GL_PROGRAM_KHR = 0x82E2;
pub const GL_VERTEX_ARRAY_KHR = 0x8074;
pub const GL_QUERY_KHR = 0x82E3;
pub const GL_PROGRAM_PIPELINE_KHR = 0x82E4;
pub const GL_SAMPLER_KHR = 0x82E6;
pub const GL_MAX_LABEL_LENGTH_KHR = 0x82E8;
pub const GL_MAX_DEBUG_MESSAGE_LENGTH_KHR = 0x9143;
pub const GL_MAX_DEBUG_LOGGED_MESSAGES_KHR = 0x9144;
pub const GL_DEBUG_LOGGED_MESSAGES_KHR = 0x9145;
pub const GL_DEBUG_SEVERITY_HIGH_KHR = 0x9146;
pub const GL_DEBUG_SEVERITY_MEDIUM_KHR = 0x9147;
pub const GL_DEBUG_SEVERITY_LOW_KHR = 0x9148;
pub const GL_DEBUG_OUTPUT_KHR = 0x92E0;
pub const GL_CONTEXT_FLAG_DEBUG_BIT_KHR = 0x00000002;
pub const GL_STACK_OVERFLOW_KHR = 0x0503;
pub const GL_STACK_UNDERFLOW_KHR = 0x0504;
pub const GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR = 0x00000008;
pub const GL_MAX_SHADER_COMPILER_THREADS_KHR = 0x91B0;
pub const GL_COMPLETION_STATUS_KHR = 0x91B1;
pub const GL_CONTEXT_ROBUST_ACCESS_KHR = 0x90F3;
pub const GL_LOSE_CONTEXT_ON_RESET_KHR = 0x8252;
pub const GL_GUILTY_CONTEXT_RESET_KHR = 0x8253;
pub const GL_INNOCENT_CONTEXT_RESET_KHR = 0x8254;
pub const GL_UNKNOWN_CONTEXT_RESET_KHR = 0x8255;
pub const GL_RESET_NOTIFICATION_STRATEGY_KHR = 0x8256;
pub const GL_NO_RESET_NOTIFICATION_KHR = 0x8261;
pub const GL_CONTEXT_LOST_KHR = 0x0507;
pub const GL_SUBGROUP_SIZE_KHR = 0x9532;
pub const GL_SUBGROUP_SUPPORTED_STAGES_KHR = 0x9533;
pub const GL_SUBGROUP_SUPPORTED_FEATURES_KHR = 0x9534;
pub const GL_SUBGROUP_QUAD_ALL_STAGES_KHR = 0x9535;
pub const GL_SUBGROUP_FEATURE_BASIC_BIT_KHR = 0x00000001;
pub const GL_SUBGROUP_FEATURE_VOTE_BIT_KHR = 0x00000002;
pub const GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR = 0x00000004;
pub const GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR = 0x00000008;
pub const GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR = 0x00000010;
pub const GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR = 0x00000020;
pub const GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR = 0x00000040;
pub const GL_SUBGROUP_FEATURE_QUAD_BIT_KHR = 0x00000080;
pub const GL_COMPRESSED_RGBA_ASTC_4x4_KHR = 0x93B0;
pub const GL_COMPRESSED_RGBA_ASTC_5x4_KHR = 0x93B1;
pub const GL_COMPRESSED_RGBA_ASTC_5x5_KHR = 0x93B2;
pub const GL_COMPRESSED_RGBA_ASTC_6x5_KHR = 0x93B3;
pub const GL_COMPRESSED_RGBA_ASTC_6x6_KHR = 0x93B4;
pub const GL_COMPRESSED_RGBA_ASTC_8x5_KHR = 0x93B5;
pub const GL_COMPRESSED_RGBA_ASTC_8x6_KHR = 0x93B6;
pub const GL_COMPRESSED_RGBA_ASTC_8x8_KHR = 0x93B7;
pub const GL_COMPRESSED_RGBA_ASTC_10x5_KHR = 0x93B8;
pub const GL_COMPRESSED_RGBA_ASTC_10x6_KHR = 0x93B9;
pub const GL_COMPRESSED_RGBA_ASTC_10x8_KHR = 0x93BA;
pub const GL_COMPRESSED_RGBA_ASTC_10x10_KHR = 0x93BB;
pub const GL_COMPRESSED_RGBA_ASTC_12x10_KHR = 0x93BC;
pub const GL_COMPRESSED_RGBA_ASTC_12x12_KHR = 0x93BD;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR = 0x93D0;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR = 0x93D1;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR = 0x93D2;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR = 0x93D3;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR = 0x93D4;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR = 0x93D5;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR = 0x93D6;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR = 0x93D7;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR = 0x93D8;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR = 0x93D9;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR = 0x93DA;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR = 0x93DB;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR = 0x93DC;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR = 0x93DD;
pub const GL_TEXTURE_1D_STACK_MESAX = 0x8759;
pub const GL_TEXTURE_2D_STACK_MESAX = 0x875A;
pub const GL_PROXY_TEXTURE_1D_STACK_MESAX = 0x875B;
pub const GL_PROXY_TEXTURE_2D_STACK_MESAX = 0x875C;
pub const GL_TEXTURE_1D_STACK_BINDING_MESAX = 0x875D;
pub const GL_TEXTURE_2D_STACK_BINDING_MESAX = 0x875E;
pub const GL_FRAMEBUFFER_FLIP_X_MESA = 0x8BBC;
pub const GL_FRAMEBUFFER_FLIP_Y_MESA = 0x8BBB;
pub const GL_FRAMEBUFFER_SWAP_XY_MESA = 0x8BBD;
pub const GL_PACK_INVERT_MESA = 0x8758;
pub const GL_PROGRAM_BINARY_FORMAT_MESA = 0x875F;
pub const GL_TILE_RASTER_ORDER_FIXED_MESA = 0x8BB8;
pub const GL_TILE_RASTER_ORDER_INCREASING_X_MESA = 0x8BB9;
pub const GL_TILE_RASTER_ORDER_INCREASING_Y_MESA = 0x8BBA;
pub const GL_UNSIGNED_SHORT_8_8_MESA = 0x85BA;
pub const GL_UNSIGNED_SHORT_8_8_REV_MESA = 0x85BB;
pub const GL_YCBCR_MESA = 0x8757;
pub const GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX = 0x9047;
pub const GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX = 0x9048;
pub const GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX = 0x9049;
pub const GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX = 0x904A;
pub const GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX = 0x904B;
pub const GL_UPLOAD_GPU_MASK_NVX = 0x954A;
pub const GL_LGPU_SEPARATE_STORAGE_BIT_NVX = 0x0800;
pub const GL_MAX_LGPU_GPUS_NVX = 0x92BA;
pub const GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV = 0x934D;
pub const GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV = 0x934E;
pub const GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV = 0x934F;
pub const GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV = 0x92BF;
pub const GL_BLEND_OVERLAP_NV = 0x9281;
pub const GL_BLEND_PREMULTIPLIED_SRC_NV = 0x9280;
pub const GL_BLUE_NV = 0x1905;
pub const GL_COLORBURN_NV = 0x929A;
pub const GL_COLORDODGE_NV = 0x9299;
pub const GL_CONJOINT_NV = 0x9284;
pub const GL_CONTRAST_NV = 0x92A1;
pub const GL_DARKEN_NV = 0x9297;
pub const GL_DIFFERENCE_NV = 0x929E;
pub const GL_DISJOINT_NV = 0x9283;
pub const GL_DST_ATOP_NV = 0x928F;
pub const GL_DST_IN_NV = 0x928B;
pub const GL_DST_NV = 0x9287;
pub const GL_DST_OUT_NV = 0x928D;
pub const GL_DST_OVER_NV = 0x9289;
pub const GL_EXCLUSION_NV = 0x92A0;
pub const GL_GREEN_NV = 0x1904;
pub const GL_HARDLIGHT_NV = 0x929B;
pub const GL_HARDMIX_NV = 0x92A9;
pub const GL_HSL_COLOR_NV = 0x92AF;
pub const GL_HSL_HUE_NV = 0x92AD;
pub const GL_HSL_LUMINOSITY_NV = 0x92B0;
pub const GL_HSL_SATURATION_NV = 0x92AE;
pub const GL_INVERT_OVG_NV = 0x92B4;
pub const GL_INVERT_RGB_NV = 0x92A3;
pub const GL_LIGHTEN_NV = 0x9298;
pub const GL_LINEARBURN_NV = 0x92A5;
pub const GL_LINEARDODGE_NV = 0x92A4;
pub const GL_LINEARLIGHT_NV = 0x92A7;
pub const GL_MINUS_CLAMPED_NV = 0x92B3;
pub const GL_MINUS_NV = 0x929F;
pub const GL_MULTIPLY_NV = 0x9294;
pub const GL_OVERLAY_NV = 0x9296;
pub const GL_PINLIGHT_NV = 0x92A8;
pub const GL_PLUS_CLAMPED_ALPHA_NV = 0x92B2;
pub const GL_PLUS_CLAMPED_NV = 0x92B1;
pub const GL_PLUS_DARKER_NV = 0x9292;
pub const GL_PLUS_NV = 0x9291;
pub const GL_RED_NV = 0x1903;
pub const GL_SCREEN_NV = 0x9295;
pub const GL_SOFTLIGHT_NV = 0x929C;
pub const GL_SRC_ATOP_NV = 0x928E;
pub const GL_SRC_IN_NV = 0x928A;
pub const GL_SRC_NV = 0x9286;
pub const GL_SRC_OUT_NV = 0x928C;
pub const GL_SRC_OVER_NV = 0x9288;
pub const GL_UNCORRELATED_NV = 0x9282;
pub const GL_VIVIDLIGHT_NV = 0x92A6;
pub const GL_XOR_NV = 0x1506;
pub const GL_BLEND_ADVANCED_COHERENT_NV = 0x9285;
pub const GL_VIEWPORT_POSITION_W_SCALE_NV = 0x937C;
pub const GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV = 0x937D;
pub const GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV = 0x937E;
pub const GL_TERMINATE_SEQUENCE_COMMAND_NV = 0x0000;
pub const GL_NOP_COMMAND_NV = 0x0001;
pub const GL_DRAW_ELEMENTS_COMMAND_NV = 0x0002;
pub const GL_DRAW_ARRAYS_COMMAND_NV = 0x0003;
pub const GL_DRAW_ELEMENTS_STRIP_COMMAND_NV = 0x0004;
pub const GL_DRAW_ARRAYS_STRIP_COMMAND_NV = 0x0005;
pub const GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV = 0x0006;
pub const GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV = 0x0007;
pub const GL_ELEMENT_ADDRESS_COMMAND_NV = 0x0008;
pub const GL_ATTRIBUTE_ADDRESS_COMMAND_NV = 0x0009;
pub const GL_UNIFORM_ADDRESS_COMMAND_NV = 0x000A;
pub const GL_BLEND_COLOR_COMMAND_NV = 0x000B;
pub const GL_STENCIL_REF_COMMAND_NV = 0x000C;
pub const GL_LINE_WIDTH_COMMAND_NV = 0x000D;
pub const GL_POLYGON_OFFSET_COMMAND_NV = 0x000E;
pub const GL_ALPHA_REF_COMMAND_NV = 0x000F;
pub const GL_VIEWPORT_COMMAND_NV = 0x0010;
pub const GL_SCISSOR_COMMAND_NV = 0x0011;
pub const GL_FRONT_FACE_COMMAND_NV = 0x0012;
pub const GL_COMPUTE_PROGRAM_NV = 0x90FB;
pub const GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV = 0x90FC;
pub const GL_QUERY_WAIT_NV = 0x8E13;
pub const GL_QUERY_NO_WAIT_NV = 0x8E14;
pub const GL_QUERY_BY_REGION_WAIT_NV = 0x8E15;
pub const GL_QUERY_BY_REGION_NO_WAIT_NV = 0x8E16;
pub const GL_CONSERVATIVE_RASTERIZATION_NV = 0x9346;
pub const GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV = 0x9347;
pub const GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV = 0x9348;
pub const GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV = 0x9349;
pub const GL_CONSERVATIVE_RASTER_DILATE_NV = 0x9379;
pub const GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV = 0x937A;
pub const GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV = 0x937B;
pub const GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV = 0x9550;
pub const GL_CONSERVATIVE_RASTER_MODE_NV = 0x954D;
pub const GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV = 0x954E;
pub const GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV = 0x954F;
pub const GL_DEPTH_STENCIL_TO_RGBA_NV = 0x886E;
pub const GL_DEPTH_STENCIL_TO_BGRA_NV = 0x886F;
pub const GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV = 0x90D0;
pub const GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV = 0x90D1;
pub const GL_DEPTH_COMPONENT32F_NV = 0x8DAB;
pub const GL_DEPTH32F_STENCIL8_NV = 0x8DAC;
pub const GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV = 0x8DAD;
pub const GL_DEPTH_BUFFER_FLOAT_MODE_NV = 0x8DAF;
pub const GL_DEPTH_CLAMP_NV = 0x864F;
pub const GL_EVAL_2D_NV = 0x86C0;
pub const GL_EVAL_TRIANGULAR_2D_NV = 0x86C1;
pub const GL_MAP_TESSELLATION_NV = 0x86C2;
pub const GL_MAP_ATTRIB_U_ORDER_NV = 0x86C3;
pub const GL_MAP_ATTRIB_V_ORDER_NV = 0x86C4;
pub const GL_EVAL_FRACTIONAL_TESSELLATION_NV = 0x86C5;
pub const GL_EVAL_VERTEX_ATTRIB0_NV = 0x86C6;
pub const GL_EVAL_VERTEX_ATTRIB1_NV = 0x86C7;
pub const GL_EVAL_VERTEX_ATTRIB2_NV = 0x86C8;
pub const GL_EVAL_VERTEX_ATTRIB3_NV = 0x86C9;
pub const GL_EVAL_VERTEX_ATTRIB4_NV = 0x86CA;
pub const GL_EVAL_VERTEX_ATTRIB5_NV = 0x86CB;
pub const GL_EVAL_VERTEX_ATTRIB6_NV = 0x86CC;
pub const GL_EVAL_VERTEX_ATTRIB7_NV = 0x86CD;
pub const GL_EVAL_VERTEX_ATTRIB8_NV = 0x86CE;
pub const GL_EVAL_VERTEX_ATTRIB9_NV = 0x86CF;
pub const GL_EVAL_VERTEX_ATTRIB10_NV = 0x86D0;
pub const GL_EVAL_VERTEX_ATTRIB11_NV = 0x86D1;
pub const GL_EVAL_VERTEX_ATTRIB12_NV = 0x86D2;
pub const GL_EVAL_VERTEX_ATTRIB13_NV = 0x86D3;
pub const GL_EVAL_VERTEX_ATTRIB14_NV = 0x86D4;
pub const GL_EVAL_VERTEX_ATTRIB15_NV = 0x86D5;
pub const GL_MAX_MAP_TESSELLATION_NV = 0x86D6;
pub const GL_MAX_RATIONAL_EVAL_ORDER_NV = 0x86D7;
pub const GL_SAMPLE_POSITION_NV = 0x8E50;
pub const GL_SAMPLE_MASK_NV = 0x8E51;
pub const GL_SAMPLE_MASK_VALUE_NV = 0x8E52;
pub const GL_TEXTURE_BINDING_RENDERBUFFER_NV = 0x8E53;
pub const GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV = 0x8E54;
pub const GL_TEXTURE_RENDERBUFFER_NV = 0x8E55;
pub const GL_SAMPLER_RENDERBUFFER_NV = 0x8E56;
pub const GL_INT_SAMPLER_RENDERBUFFER_NV = 0x8E57;
pub const GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV = 0x8E58;
pub const GL_MAX_SAMPLE_MASK_WORDS_NV = 0x8E59;
pub const GL_ALL_COMPLETED_NV = 0x84F2;
pub const GL_FENCE_STATUS_NV = 0x84F3;
pub const GL_FENCE_CONDITION_NV = 0x84F4;
pub const GL_FILL_RECTANGLE_NV = 0x933C;
pub const GL_FLOAT_R_NV = 0x8880;
pub const GL_FLOAT_RG_NV = 0x8881;
pub const GL_FLOAT_RGB_NV = 0x8882;
pub const GL_FLOAT_RGBA_NV = 0x8883;
pub const GL_FLOAT_R16_NV = 0x8884;
pub const GL_FLOAT_R32_NV = 0x8885;
pub const GL_FLOAT_RG16_NV = 0x8886;
pub const GL_FLOAT_RG32_NV = 0x8887;
pub const GL_FLOAT_RGB16_NV = 0x8888;
pub const GL_FLOAT_RGB32_NV = 0x8889;
pub const GL_FLOAT_RGBA16_NV = 0x888A;
pub const GL_FLOAT_RGBA32_NV = 0x888B;
pub const GL_TEXTURE_FLOAT_COMPONENTS_NV = 0x888C;
pub const GL_FLOAT_CLEAR_COLOR_VALUE_NV = 0x888D;
pub const GL_FLOAT_RGBA_MODE_NV = 0x888E;
pub const GL_FOG_DISTANCE_MODE_NV = 0x855A;
pub const GL_EYE_RADIAL_NV = 0x855B;
pub const GL_EYE_PLANE_ABSOLUTE_NV = 0x855C;
pub const GL_FRAGMENT_COVERAGE_TO_COLOR_NV = 0x92DD;
pub const GL_FRAGMENT_COVERAGE_COLOR_NV = 0x92DE;
pub const GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV = 0x8868;
pub const GL_FRAGMENT_PROGRAM_NV = 0x8870;
pub const GL_MAX_TEXTURE_COORDS_NV = 0x8871;
pub const GL_MAX_TEXTURE_IMAGE_UNITS_NV = 0x8872;
pub const GL_FRAGMENT_PROGRAM_BINDING_NV = 0x8873;
pub const GL_PROGRAM_ERROR_STRING_NV = 0x8874;
pub const GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV = 0x88F4;
pub const GL_MAX_PROGRAM_CALL_DEPTH_NV = 0x88F5;
pub const GL_MAX_PROGRAM_IF_DEPTH_NV = 0x88F6;
pub const GL_MAX_PROGRAM_LOOP_DEPTH_NV = 0x88F7;
pub const GL_MAX_PROGRAM_LOOP_COUNT_NV = 0x88F8;
pub const GL_COVERAGE_MODULATION_TABLE_NV = 0x9331;
pub const GL_COLOR_SAMPLES_NV = 0x8E20;
pub const GL_DEPTH_SAMPLES_NV = 0x932D;
pub const GL_STENCIL_SAMPLES_NV = 0x932E;
pub const GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV = 0x932F;
pub const GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV = 0x9330;
pub const GL_COVERAGE_MODULATION_NV = 0x9332;
pub const GL_COVERAGE_MODULATION_TABLE_SIZE_NV = 0x9333;
pub const GL_RENDERBUFFER_COVERAGE_SAMPLES_NV = 0x8CAB;
pub const GL_RENDERBUFFER_COLOR_SAMPLES_NV = 0x8E10;
pub const GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV = 0x8E11;
pub const GL_MULTISAMPLE_COVERAGE_MODES_NV = 0x8E12;
pub const GL_GEOMETRY_PROGRAM_NV = 0x8C26;
pub const GL_MAX_PROGRAM_OUTPUT_VERTICES_NV = 0x8C27;
pub const GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV = 0x8C28;
pub const GL_PER_GPU_STORAGE_BIT_NV = 0x0800;
pub const GL_MULTICAST_GPUS_NV = 0x92BA;
pub const GL_RENDER_GPU_MASK_NV = 0x9558;
pub const GL_PER_GPU_STORAGE_NV = 0x9548;
pub const GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV = 0x9549;
pub const GL_MIN_PROGRAM_TEXEL_OFFSET_NV = 0x8904;
pub const GL_MAX_PROGRAM_TEXEL_OFFSET_NV = 0x8905;
pub const GL_PROGRAM_ATTRIB_COMPONENTS_NV = 0x8906;
pub const GL_PROGRAM_RESULT_COMPONENTS_NV = 0x8907;
pub const GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV = 0x8908;
pub const GL_MAX_PROGRAM_RESULT_COMPONENTS_NV = 0x8909;
pub const GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV = 0x8DA5;
pub const GL_MAX_PROGRAM_GENERIC_RESULTS_NV = 0x8DA6;
pub const GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV = 0x8E5A;
pub const GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV = 0x8E5B;
pub const GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV = 0x8E5C;
pub const GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV = 0x8E5D;
pub const GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV = 0x8E5E;
pub const GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV = 0x8E5F;
pub const GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV = 0x8F44;
pub const GL_MAX_PROGRAM_SUBROUTINE_NUM_NV = 0x8F45;
pub const GL_HALF_FLOAT_NV = 0x140B;
pub const GL_MULTISAMPLES_NV = 0x9371;
pub const GL_SUPERSAMPLE_SCALE_X_NV = 0x9372;
pub const GL_SUPERSAMPLE_SCALE_Y_NV = 0x9373;
pub const GL_CONFORMANT_NV = 0x9374;
pub const GL_MAX_SHININESS_NV = 0x8504;
pub const GL_MAX_SPOT_EXPONENT_NV = 0x8505;
pub const GL_ATTACHED_MEMORY_OBJECT_NV = 0x95A4;
pub const GL_ATTACHED_MEMORY_OFFSET_NV = 0x95A5;
pub const GL_MEMORY_ATTACHABLE_ALIGNMENT_NV = 0x95A6;
pub const GL_MEMORY_ATTACHABLE_SIZE_NV = 0x95A7;
pub const GL_MEMORY_ATTACHABLE_NV = 0x95A8;
pub const GL_DETACHED_MEMORY_INCARNATION_NV = 0x95A9;
pub const GL_DETACHED_TEXTURES_NV = 0x95AA;
pub const GL_DETACHED_BUFFERS_NV = 0x95AB;
pub const GL_MAX_DETACHED_TEXTURES_NV = 0x95AC;
pub const GL_MAX_DETACHED_BUFFERS_NV = 0x95AD;
pub const GL_MESH_SHADER_NV = 0x9559;
pub const GL_TASK_SHADER_NV = 0x955A;
pub const GL_MAX_MESH_UNIFORM_BLOCKS_NV = 0x8E60;
pub const GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV = 0x8E61;
pub const GL_MAX_MESH_IMAGE_UNIFORMS_NV = 0x8E62;
pub const GL_MAX_MESH_UNIFORM_COMPONENTS_NV = 0x8E63;
pub const GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV = 0x8E64;
pub const GL_MAX_MESH_ATOMIC_COUNTERS_NV = 0x8E65;
pub const GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV = 0x8E66;
pub const GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV = 0x8E67;
pub const GL_MAX_TASK_UNIFORM_BLOCKS_NV = 0x8E68;
pub const GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV = 0x8E69;
pub const GL_MAX_TASK_IMAGE_UNIFORMS_NV = 0x8E6A;
pub const GL_MAX_TASK_UNIFORM_COMPONENTS_NV = 0x8E6B;
pub const GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV = 0x8E6C;
pub const GL_MAX_TASK_ATOMIC_COUNTERS_NV = 0x8E6D;
pub const GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV = 0x8E6E;
pub const GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV = 0x8E6F;
pub const GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV = 0x95A2;
pub const GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV = 0x95A3;
pub const GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV = 0x9536;
pub const GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV = 0x9537;
pub const GL_MAX_MESH_OUTPUT_VERTICES_NV = 0x9538;
pub const GL_MAX_MESH_OUTPUT_PRIMITIVES_NV = 0x9539;
pub const GL_MAX_TASK_OUTPUT_COUNT_NV = 0x953A;
pub const GL_MAX_DRAW_MESH_TASKS_COUNT_NV = 0x953D;
pub const GL_MAX_MESH_VIEWS_NV = 0x9557;
pub const GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV = 0x92DF;
pub const GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV = 0x9543;
pub const GL_MAX_MESH_WORK_GROUP_SIZE_NV = 0x953B;
pub const GL_MAX_TASK_WORK_GROUP_SIZE_NV = 0x953C;
pub const GL_MESH_WORK_GROUP_SIZE_NV = 0x953E;
pub const GL_TASK_WORK_GROUP_SIZE_NV = 0x953F;
pub const GL_MESH_VERTICES_OUT_NV = 0x9579;
pub const GL_MESH_PRIMITIVES_OUT_NV = 0x957A;
pub const GL_MESH_OUTPUT_TYPE_NV = 0x957B;
pub const GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV = 0x959C;
pub const GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV = 0x959D;
pub const GL_REFERENCED_BY_MESH_SHADER_NV = 0x95A0;
pub const GL_REFERENCED_BY_TASK_SHADER_NV = 0x95A1;
pub const GL_MESH_SHADER_BIT_NV = 0x00000040;
pub const GL_TASK_SHADER_BIT_NV = 0x00000080;
pub const GL_MESH_SUBROUTINE_NV = 0x957C;
pub const GL_TASK_SUBROUTINE_NV = 0x957D;
pub const GL_MESH_SUBROUTINE_UNIFORM_NV = 0x957E;
pub const GL_TASK_SUBROUTINE_UNIFORM_NV = 0x957F;
pub const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV = 0x959E;
pub const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV = 0x959F;
pub const GL_MULTISAMPLE_FILTER_HINT_NV = 0x8534;
pub const GL_PIXEL_COUNTER_BITS_NV = 0x8864;
pub const GL_CURRENT_OCCLUSION_QUERY_ID_NV = 0x8865;
pub const GL_PIXEL_COUNT_NV = 0x8866;
pub const GL_PIXEL_COUNT_AVAILABLE_NV = 0x8867;
pub const GL_DEPTH_STENCIL_NV = 0x84F9;
pub const GL_UNSIGNED_INT_24_8_NV = 0x84FA;
pub const GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV = 0x8DA0;
pub const GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV = 0x8DA1;
pub const GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA2;
pub const GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA3;
pub const GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA4;
pub const GL_PATH_FORMAT_SVG_NV = 0x9070;
pub const GL_PATH_FORMAT_PS_NV = 0x9071;
pub const GL_STANDARD_FONT_NAME_NV = 0x9072;
pub const GL_SYSTEM_FONT_NAME_NV = 0x9073;
pub const GL_FILE_NAME_NV = 0x9074;
pub const GL_PATH_STROKE_WIDTH_NV = 0x9075;
pub const GL_PATH_END_CAPS_NV = 0x9076;
pub const GL_PATH_INITIAL_END_CAP_NV = 0x9077;
pub const GL_PATH_TERMINAL_END_CAP_NV = 0x9078;
pub const GL_PATH_JOIN_STYLE_NV = 0x9079;
pub const GL_PATH_MITER_LIMIT_NV = 0x907A;
pub const GL_PATH_DASH_CAPS_NV = 0x907B;
pub const GL_PATH_INITIAL_DASH_CAP_NV = 0x907C;
pub const GL_PATH_TERMINAL_DASH_CAP_NV = 0x907D;
pub const GL_PATH_DASH_OFFSET_NV = 0x907E;
pub const GL_PATH_CLIENT_LENGTH_NV = 0x907F;
pub const GL_PATH_FILL_MODE_NV = 0x9080;
pub const GL_PATH_FILL_MASK_NV = 0x9081;
pub const GL_PATH_FILL_COVER_MODE_NV = 0x9082;
pub const GL_PATH_STROKE_COVER_MODE_NV = 0x9083;
pub const GL_PATH_STROKE_MASK_NV = 0x9084;
pub const GL_COUNT_UP_NV = 0x9088;
pub const GL_COUNT_DOWN_NV = 0x9089;
pub const GL_PATH_OBJECT_BOUNDING_BOX_NV = 0x908A;
pub const GL_CONVEX_HULL_NV = 0x908B;
pub const GL_BOUNDING_BOX_NV = 0x908D;
pub const GL_TRANSLATE_X_NV = 0x908E;
pub const GL_TRANSLATE_Y_NV = 0x908F;
pub const GL_TRANSLATE_2D_NV = 0x9090;
pub const GL_TRANSLATE_3D_NV = 0x9091;
pub const GL_AFFINE_2D_NV = 0x9092;
pub const GL_AFFINE_3D_NV = 0x9094;
pub const GL_TRANSPOSE_AFFINE_2D_NV = 0x9096;
pub const GL_TRANSPOSE_AFFINE_3D_NV = 0x9098;
pub const GL_UTF8_NV = 0x909A;
pub const GL_UTF16_NV = 0x909B;
pub const GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV = 0x909C;
pub const GL_PATH_COMMAND_COUNT_NV = 0x909D;
pub const GL_PATH_COORD_COUNT_NV = 0x909E;
pub const GL_PATH_DASH_ARRAY_COUNT_NV = 0x909F;
pub const GL_PATH_COMPUTED_LENGTH_NV = 0x90A0;
pub const GL_PATH_FILL_BOUNDING_BOX_NV = 0x90A1;
pub const GL_PATH_STROKE_BOUNDING_BOX_NV = 0x90A2;
pub const GL_SQUARE_NV = 0x90A3;
pub const GL_ROUND_NV = 0x90A4;
pub const GL_TRIANGULAR_NV = 0x90A5;
pub const GL_BEVEL_NV = 0x90A6;
pub const GL_MITER_REVERT_NV = 0x90A7;
pub const GL_MITER_TRUNCATE_NV = 0x90A8;
pub const GL_SKIP_MISSING_GLYPH_NV = 0x90A9;
pub const GL_USE_MISSING_GLYPH_NV = 0x90AA;
pub const GL_PATH_ERROR_POSITION_NV = 0x90AB;
pub const GL_ACCUM_ADJACENT_PAIRS_NV = 0x90AD;
pub const GL_ADJACENT_PAIRS_NV = 0x90AE;
pub const GL_FIRST_TO_REST_NV = 0x90AF;
pub const GL_PATH_GEN_MODE_NV = 0x90B0;
pub const GL_PATH_GEN_COEFF_NV = 0x90B1;
pub const GL_PATH_GEN_COMPONENTS_NV = 0x90B3;
pub const GL_PATH_STENCIL_FUNC_NV = 0x90B7;
pub const GL_PATH_STENCIL_REF_NV = 0x90B8;
pub const GL_PATH_STENCIL_VALUE_MASK_NV = 0x90B9;
pub const GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV = 0x90BD;
pub const GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV = 0x90BE;
pub const GL_PATH_COVER_DEPTH_FUNC_NV = 0x90BF;
pub const GL_PATH_DASH_OFFSET_RESET_NV = 0x90B4;
pub const GL_MOVE_TO_RESETS_NV = 0x90B5;
pub const GL_MOVE_TO_CONTINUES_NV = 0x90B6;
pub const GL_CLOSE_PATH_NV = 0x00;
pub const GL_MOVE_TO_NV = 0x02;
pub const GL_RELATIVE_MOVE_TO_NV = 0x03;
pub const GL_LINE_TO_NV = 0x04;
pub const GL_RELATIVE_LINE_TO_NV = 0x05;
pub const GL_HORIZONTAL_LINE_TO_NV = 0x06;
pub const GL_RELATIVE_HORIZONTAL_LINE_TO_NV = 0x07;
pub const GL_VERTICAL_LINE_TO_NV = 0x08;
pub const GL_RELATIVE_VERTICAL_LINE_TO_NV = 0x09;
pub const GL_QUADRATIC_CURVE_TO_NV = 0x0A;
pub const GL_RELATIVE_QUADRATIC_CURVE_TO_NV = 0x0B;
pub const GL_CUBIC_CURVE_TO_NV = 0x0C;
pub const GL_RELATIVE_CUBIC_CURVE_TO_NV = 0x0D;
pub const GL_SMOOTH_QUADRATIC_CURVE_TO_NV = 0x0E;
pub const GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV = 0x0F;
pub const GL_SMOOTH_CUBIC_CURVE_TO_NV = 0x10;
pub const GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV = 0x11;
pub const GL_SMALL_CCW_ARC_TO_NV = 0x12;
pub const GL_RELATIVE_SMALL_CCW_ARC_TO_NV = 0x13;
pub const GL_SMALL_CW_ARC_TO_NV = 0x14;
pub const GL_RELATIVE_SMALL_CW_ARC_TO_NV = 0x15;
pub const GL_LARGE_CCW_ARC_TO_NV = 0x16;
pub const GL_RELATIVE_LARGE_CCW_ARC_TO_NV = 0x17;
pub const GL_LARGE_CW_ARC_TO_NV = 0x18;
pub const GL_RELATIVE_LARGE_CW_ARC_TO_NV = 0x19;
pub const GL_RESTART_PATH_NV = 0xF0;
pub const GL_DUP_FIRST_CUBIC_CURVE_TO_NV = 0xF2;
pub const GL_DUP_LAST_CUBIC_CURVE_TO_NV = 0xF4;
pub const GL_RECT_NV = 0xF6;
pub const GL_CIRCULAR_CCW_ARC_TO_NV = 0xF8;
pub const GL_CIRCULAR_CW_ARC_TO_NV = 0xFA;
pub const GL_CIRCULAR_TANGENT_ARC_TO_NV = 0xFC;
pub const GL_ARC_TO_NV = 0xFE;
pub const GL_RELATIVE_ARC_TO_NV = 0xFF;
pub const GL_BOLD_BIT_NV = 0x01;
pub const GL_ITALIC_BIT_NV = 0x02;
pub const GL_GLYPH_WIDTH_BIT_NV = 0x01;
pub const GL_GLYPH_HEIGHT_BIT_NV = 0x02;
pub const GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV = 0x04;
pub const GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV = 0x08;
pub const GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV = 0x10;
pub const GL_GLYPH_VERTICAL_BEARING_X_BIT_NV = 0x20;
pub const GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV = 0x40;
pub const GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV = 0x80;
pub const GL_GLYPH_HAS_KERNING_BIT_NV = 0x100;
pub const GL_FONT_X_MIN_BOUNDS_BIT_NV = 0x00010000;
pub const GL_FONT_Y_MIN_BOUNDS_BIT_NV = 0x00020000;
pub const GL_FONT_X_MAX_BOUNDS_BIT_NV = 0x00040000;
pub const GL_FONT_Y_MAX_BOUNDS_BIT_NV = 0x00080000;
pub const GL_FONT_UNITS_PER_EM_BIT_NV = 0x00100000;
pub const GL_FONT_ASCENDER_BIT_NV = 0x00200000;
pub const GL_FONT_DESCENDER_BIT_NV = 0x00400000;
pub const GL_FONT_HEIGHT_BIT_NV = 0x00800000;
pub const GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV = 0x01000000;
pub const GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV = 0x02000000;
pub const GL_FONT_UNDERLINE_POSITION_BIT_NV = 0x04000000;
pub const GL_FONT_UNDERLINE_THICKNESS_BIT_NV = 0x08000000;
pub const GL_FONT_HAS_KERNING_BIT_NV = 0x10000000;
pub const GL_ROUNDED_RECT_NV = 0xE8;
pub const GL_RELATIVE_ROUNDED_RECT_NV = 0xE9;
pub const GL_ROUNDED_RECT2_NV = 0xEA;
pub const GL_RELATIVE_ROUNDED_RECT2_NV = 0xEB;
pub const GL_ROUNDED_RECT4_NV = 0xEC;
pub const GL_RELATIVE_ROUNDED_RECT4_NV = 0xED;
pub const GL_ROUNDED_RECT8_NV = 0xEE;
pub const GL_RELATIVE_ROUNDED_RECT8_NV = 0xEF;
pub const GL_RELATIVE_RECT_NV = 0xF7;
pub const GL_FONT_GLYPHS_AVAILABLE_NV = 0x9368;
pub const GL_FONT_TARGET_UNAVAILABLE_NV = 0x9369;
pub const GL_FONT_UNAVAILABLE_NV = 0x936A;
pub const GL_FONT_UNINTELLIGIBLE_NV = 0x936B;
pub const GL_CONIC_CURVE_TO_NV = 0x1A;
pub const GL_RELATIVE_CONIC_CURVE_TO_NV = 0x1B;
pub const GL_FONT_NUM_GLYPH_INDICES_BIT_NV = 0x20000000;
pub const GL_STANDARD_FONT_FORMAT_NV = 0x936C;
pub const GL_2_BYTES_NV = 0x1407;
pub const GL_3_BYTES_NV = 0x1408;
pub const GL_4_BYTES_NV = 0x1409;
pub const GL_EYE_LINEAR_NV = 0x2400;
pub const GL_OBJECT_LINEAR_NV = 0x2401;
pub const GL_CONSTANT_NV = 0x8576;
pub const GL_PATH_FOG_GEN_MODE_NV = 0x90AC;
pub const GL_PRIMARY_COLOR_NV = 0x852C;
pub const GL_SECONDARY_COLOR_NV = 0x852D;
pub const GL_PATH_GEN_COLOR_FORMAT_NV = 0x90B2;
pub const GL_PATH_PROJECTION_NV = 0x1701;
pub const GL_PATH_MODELVIEW_NV = 0x1700;
pub const GL_PATH_MODELVIEW_STACK_DEPTH_NV = 0x0BA3;
pub const GL_PATH_MODELVIEW_MATRIX_NV = 0x0BA6;
pub const GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV = 0x0D36;
pub const GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV = 0x84E3;
pub const GL_PATH_PROJECTION_STACK_DEPTH_NV = 0x0BA4;
pub const GL_PATH_PROJECTION_MATRIX_NV = 0x0BA7;
pub const GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV = 0x0D38;
pub const GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV = 0x84E4;
pub const GL_FRAGMENT_INPUT_NV = 0x936D;
pub const GL_SHARED_EDGE_NV = 0xC0;
pub const GL_WRITE_PIXEL_DATA_RANGE_NV = 0x8878;
pub const GL_READ_PIXEL_DATA_RANGE_NV = 0x8879;
pub const GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV = 0x887A;
pub const GL_READ_PIXEL_DATA_RANGE_LENGTH_NV = 0x887B;
pub const GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV = 0x887C;
pub const GL_READ_PIXEL_DATA_RANGE_POINTER_NV = 0x887D;
pub const GL_POINT_SPRITE_NV = 0x8861;
pub const GL_COORD_REPLACE_NV = 0x8862;
pub const GL_POINT_SPRITE_R_MODE_NV = 0x8863;
pub const GL_FRAME_NV = 0x8E26;
pub const GL_FIELDS_NV = 0x8E27;
pub const GL_CURRENT_TIME_NV = 0x8E28;
pub const GL_NUM_FILL_STREAMS_NV = 0x8E29;
pub const GL_PRESENT_TIME_NV = 0x8E2A;
pub const GL_PRESENT_DURATION_NV = 0x8E2B;
pub const GL_PRIMITIVE_RESTART_NV = 0x8558;
pub const GL_PRIMITIVE_RESTART_INDEX_NV = 0x8559;
pub const GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV = 0x95B1;
pub const GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV = 0x95B2;
pub const GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV = 0x9540;
pub const GL_QUERY_RESOURCE_MEMTYPE_VIDMEM_NV = 0x9542;
pub const GL_QUERY_RESOURCE_SYS_RESERVED_NV = 0x9544;
pub const GL_QUERY_RESOURCE_TEXTURE_NV = 0x9545;
pub const GL_QUERY_RESOURCE_RENDERBUFFER_NV = 0x9546;
pub const GL_QUERY_RESOURCE_BUFFEROBJECT_NV = 0x9547;
pub const GL_REGISTER_COMBINERS_NV = 0x8522;
pub const GL_VARIABLE_A_NV = 0x8523;
pub const GL_VARIABLE_B_NV = 0x8524;
pub const GL_VARIABLE_C_NV = 0x8525;
pub const GL_VARIABLE_D_NV = 0x8526;
pub const GL_VARIABLE_E_NV = 0x8527;
pub const GL_VARIABLE_F_NV = 0x8528;
pub const GL_VARIABLE_G_NV = 0x8529;
pub const GL_CONSTANT_COLOR0_NV = 0x852A;
pub const GL_CONSTANT_COLOR1_NV = 0x852B;
pub const GL_SPARE0_NV = 0x852E;
pub const GL_SPARE1_NV = 0x852F;
pub const GL_DISCARD_NV = 0x8530;
pub const GL_E_TIMES_F_NV = 0x8531;
pub const GL_SPARE0_PLUS_SECONDARY_COLOR_NV = 0x8532;
pub const GL_UNSIGNED_IDENTITY_NV = 0x8536;
pub const GL_UNSIGNED_INVERT_NV = 0x8537;
pub const GL_EXPAND_NORMAL_NV = 0x8538;
pub const GL_EXPAND_NEGATE_NV = 0x8539;
pub const GL_HALF_BIAS_NORMAL_NV = 0x853A;
pub const GL_HALF_BIAS_NEGATE_NV = 0x853B;
pub const GL_SIGNED_IDENTITY_NV = 0x853C;
pub const GL_SIGNED_NEGATE_NV = 0x853D;
pub const GL_SCALE_BY_TWO_NV = 0x853E;
pub const GL_SCALE_BY_FOUR_NV = 0x853F;
pub const GL_SCALE_BY_ONE_HALF_NV = 0x8540;
pub const GL_BIAS_BY_NEGATIVE_ONE_HALF_NV = 0x8541;
pub const GL_COMBINER_INPUT_NV = 0x8542;
pub const GL_COMBINER_MAPPING_NV = 0x8543;
pub const GL_COMBINER_COMPONENT_USAGE_NV = 0x8544;
pub const GL_COMBINER_AB_DOT_PRODUCT_NV = 0x8545;
pub const GL_COMBINER_CD_DOT_PRODUCT_NV = 0x8546;
pub const GL_COMBINER_MUX_SUM_NV = 0x8547;
pub const GL_COMBINER_SCALE_NV = 0x8548;
pub const GL_COMBINER_BIAS_NV = 0x8549;
pub const GL_COMBINER_AB_OUTPUT_NV = 0x854A;
pub const GL_COMBINER_CD_OUTPUT_NV = 0x854B;
pub const GL_COMBINER_SUM_OUTPUT_NV = 0x854C;
pub const GL_MAX_GENERAL_COMBINERS_NV = 0x854D;
pub const GL_NUM_GENERAL_COMBINERS_NV = 0x854E;
pub const GL_COLOR_SUM_CLAMP_NV = 0x854F;
pub const GL_COMBINER0_NV = 0x8550;
pub const GL_COMBINER1_NV = 0x8551;
pub const GL_COMBINER2_NV = 0x8552;
pub const GL_COMBINER3_NV = 0x8553;
pub const GL_COMBINER4_NV = 0x8554;
pub const GL_COMBINER5_NV = 0x8555;
pub const GL_COMBINER6_NV = 0x8556;
pub const GL_COMBINER7_NV = 0x8557;
pub const GL_PER_STAGE_CONSTANTS_NV = 0x8535;
pub const GL_REPRESENTATIVE_FRAGMENT_TEST_NV = 0x937F;
pub const GL_PURGED_CONTEXT_RESET_NV = 0x92BB;
pub const GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV = 0x933D;
pub const GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV = 0x933E;
pub const GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV = 0x933F;
pub const GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV = 0x9340;
pub const GL_SAMPLE_LOCATION_NV = 0x8E50;
pub const GL_PROGRAMMABLE_SAMPLE_LOCATION_NV = 0x9341;
pub const GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV = 0x9342;
pub const GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV = 0x9343;
pub const GL_SCISSOR_TEST_EXCLUSIVE_NV = 0x9555;
pub const GL_SCISSOR_BOX_EXCLUSIVE_NV = 0x9556;
pub const GL_BUFFER_GPU_ADDRESS_NV = 0x8F1D;
pub const GL_GPU_ADDRESS_NV = 0x8F34;
pub const GL_MAX_SHADER_BUFFER_ADDRESS_NV = 0x8F35;
pub const GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV = 0x00000010;
pub const GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV = 0x00000100;
pub const GL_WARP_SIZE_NV = 0x9339;
pub const GL_WARPS_PER_SM_NV = 0x933A;
pub const GL_SM_COUNT_NV = 0x933B;
pub const GL_SHADING_RATE_IMAGE_NV = 0x9563;
pub const GL_SHADING_RATE_NO_INVOCATIONS_NV = 0x9564;
pub const GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV = 0x9565;
pub const GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV = 0x9566;
pub const GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV = 0x9567;
pub const GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV = 0x9568;
pub const GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV = 0x9569;
pub const GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV = 0x956A;
pub const GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV = 0x956B;
pub const GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV = 0x956C;
pub const GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV = 0x956D;
pub const GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV = 0x956E;
pub const GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV = 0x956F;
pub const GL_SHADING_RATE_IMAGE_BINDING_NV = 0x955B;
pub const GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV = 0x955C;
pub const GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV = 0x955D;
pub const GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV = 0x955E;
pub const GL_MAX_COARSE_FRAGMENT_SAMPLES_NV = 0x955F;
pub const GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV = 0x95AE;
pub const GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV = 0x95AF;
pub const GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV = 0x95B0;
pub const GL_MAX_PROGRAM_PATCH_ATTRIBS_NV = 0x86D8;
pub const GL_TESS_CONTROL_PROGRAM_NV = 0x891E;
pub const GL_TESS_EVALUATION_PROGRAM_NV = 0x891F;
pub const GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV = 0x8C74;
pub const GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV = 0x8C75;
pub const GL_EMBOSS_LIGHT_NV = 0x855D;
pub const GL_EMBOSS_CONSTANT_NV = 0x855E;
pub const GL_EMBOSS_MAP_NV = 0x855F;
pub const GL_NORMAL_MAP_NV = 0x8511;
pub const GL_REFLECTION_MAP_NV = 0x8512;
pub const GL_COMBINE4_NV = 0x8503;
pub const GL_SOURCE3_RGB_NV = 0x8583;
pub const GL_SOURCE3_ALPHA_NV = 0x858B;
pub const GL_OPERAND3_RGB_NV = 0x8593;
pub const GL_OPERAND3_ALPHA_NV = 0x859B;
pub const GL_TEXTURE_UNSIGNED_REMAP_MODE_NV = 0x888F;
pub const GL_TEXTURE_COVERAGE_SAMPLES_NV = 0x9045;
pub const GL_TEXTURE_COLOR_SAMPLES_NV = 0x9046;
pub const GL_TEXTURE_RECTANGLE_NV = 0x84F5;
pub const GL_TEXTURE_BINDING_RECTANGLE_NV = 0x84F6;
pub const GL_PROXY_TEXTURE_RECTANGLE_NV = 0x84F7;
pub const GL_MAX_RECTANGLE_TEXTURE_SIZE_NV = 0x84F8;
pub const GL_OFFSET_TEXTURE_RECTANGLE_NV = 0x864C;
pub const GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV = 0x864D;
pub const GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV = 0x864E;
pub const GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV = 0x86D9;
pub const GL_UNSIGNED_INT_S8_S8_8_8_NV = 0x86DA;
pub const GL_UNSIGNED_INT_8_8_S8_S8_REV_NV = 0x86DB;
pub const GL_DSDT_MAG_INTENSITY_NV = 0x86DC;
pub const GL_SHADER_CONSISTENT_NV = 0x86DD;
pub const GL_TEXTURE_SHADER_NV = 0x86DE;
pub const GL_SHADER_OPERATION_NV = 0x86DF;
pub const GL_CULL_MODES_NV = 0x86E0;
pub const GL_OFFSET_TEXTURE_MATRIX_NV = 0x86E1;
pub const GL_OFFSET_TEXTURE_SCALE_NV = 0x86E2;
pub const GL_OFFSET_TEXTURE_BIAS_NV = 0x86E3;
pub const GL_OFFSET_TEXTURE_2D_MATRIX_NV = 0x86E1;
pub const GL_OFFSET_TEXTURE_2D_SCALE_NV = 0x86E2;
pub const GL_OFFSET_TEXTURE_2D_BIAS_NV = 0x86E3;
pub const GL_PREVIOUS_TEXTURE_INPUT_NV = 0x86E4;
pub const GL_CONST_EYE_NV = 0x86E5;
pub const GL_PASS_THROUGH_NV = 0x86E6;
pub const GL_CULL_FRAGMENT_NV = 0x86E7;
pub const GL_OFFSET_TEXTURE_2D_NV = 0x86E8;
pub const GL_DEPENDENT_AR_TEXTURE_2D_NV = 0x86E9;
pub const GL_DEPENDENT_GB_TEXTURE_2D_NV = 0x86EA;
pub const GL_DOT_PRODUCT_NV = 0x86EC;
pub const GL_DOT_PRODUCT_DEPTH_REPLACE_NV = 0x86ED;
pub const GL_DOT_PRODUCT_TEXTURE_2D_NV = 0x86EE;
pub const GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV = 0x86F0;
pub const GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV = 0x86F1;
pub const GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV = 0x86F2;
pub const GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV = 0x86F3;
pub const GL_HILO_NV = 0x86F4;
pub const GL_DSDT_NV = 0x86F5;
pub const GL_DSDT_MAG_NV = 0x86F6;
pub const GL_DSDT_MAG_VIB_NV = 0x86F7;
pub const GL_HILO16_NV = 0x86F8;
pub const GL_SIGNED_HILO_NV = 0x86F9;
pub const GL_SIGNED_HILO16_NV = 0x86FA;
pub const GL_SIGNED_RGBA_NV = 0x86FB;
pub const GL_SIGNED_RGBA8_NV = 0x86FC;
pub const GL_SIGNED_RGB_NV = 0x86FE;
pub const GL_SIGNED_RGB8_NV = 0x86FF;
pub const GL_SIGNED_LUMINANCE_NV = 0x8701;
pub const GL_SIGNED_LUMINANCE8_NV = 0x8702;
pub const GL_SIGNED_LUMINANCE_ALPHA_NV = 0x8703;
pub const GL_SIGNED_LUMINANCE8_ALPHA8_NV = 0x8704;
pub const GL_SIGNED_ALPHA_NV = 0x8705;
pub const GL_SIGNED_ALPHA8_NV = 0x8706;
pub const GL_SIGNED_INTENSITY_NV = 0x8707;
pub const GL_SIGNED_INTENSITY8_NV = 0x8708;
pub const GL_DSDT8_NV = 0x8709;
pub const GL_DSDT8_MAG8_NV = 0x870A;
pub const GL_DSDT8_MAG8_INTENSITY8_NV = 0x870B;
pub const GL_SIGNED_RGB_UNSIGNED_ALPHA_NV = 0x870C;
pub const GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV = 0x870D;
pub const GL_HI_SCALE_NV = 0x870E;
pub const GL_LO_SCALE_NV = 0x870F;
pub const GL_DS_SCALE_NV = 0x8710;
pub const GL_DT_SCALE_NV = 0x8711;
pub const GL_MAGNITUDE_SCALE_NV = 0x8712;
pub const GL_VIBRANCE_SCALE_NV = 0x8713;
pub const GL_HI_BIAS_NV = 0x8714;
pub const GL_LO_BIAS_NV = 0x8715;
pub const GL_DS_BIAS_NV = 0x8716;
pub const GL_DT_BIAS_NV = 0x8717;
pub const GL_MAGNITUDE_BIAS_NV = 0x8718;
pub const GL_VIBRANCE_BIAS_NV = 0x8719;
pub const GL_TEXTURE_BORDER_VALUES_NV = 0x871A;
pub const GL_TEXTURE_HI_SIZE_NV = 0x871B;
pub const GL_TEXTURE_LO_SIZE_NV = 0x871C;
pub const GL_TEXTURE_DS_SIZE_NV = 0x871D;
pub const GL_TEXTURE_DT_SIZE_NV = 0x871E;
pub const GL_TEXTURE_MAG_SIZE_NV = 0x871F;
pub const GL_DOT_PRODUCT_TEXTURE_3D_NV = 0x86EF;
pub const GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV = 0x8850;
pub const GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV = 0x8851;
pub const GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV = 0x8852;
pub const GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV = 0x8853;
pub const GL_OFFSET_HILO_TEXTURE_2D_NV = 0x8854;
pub const GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV = 0x8855;
pub const GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV = 0x8856;
pub const GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV = 0x8857;
pub const GL_DEPENDENT_HILO_TEXTURE_2D_NV = 0x8858;
pub const GL_DEPENDENT_RGB_TEXTURE_3D_NV = 0x8859;
pub const GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV = 0x885A;
pub const GL_DOT_PRODUCT_PASS_THROUGH_NV = 0x885B;
pub const GL_DOT_PRODUCT_TEXTURE_1D_NV = 0x885C;
pub const GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV = 0x885D;
pub const GL_HILO8_NV = 0x885E;
pub const GL_SIGNED_HILO8_NV = 0x885F;
pub const GL_FORCE_BLUE_TO_ONE_NV = 0x8860;
pub const GL_TIMELINE_SEMAPHORE_VALUE_NV = 0x9595;
pub const GL_SEMAPHORE_TYPE_NV = 0x95B3;
pub const GL_SEMAPHORE_TYPE_BINARY_NV = 0x95B4;
pub const GL_SEMAPHORE_TYPE_TIMELINE_NV = 0x95B5;
pub const GL_MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV = 0x95B6;
pub const GL_BACK_PRIMARY_COLOR_NV = 0x8C77;
pub const GL_BACK_SECONDARY_COLOR_NV = 0x8C78;
pub const GL_TEXTURE_COORD_NV = 0x8C79;
pub const GL_CLIP_DISTANCE_NV = 0x8C7A;
pub const GL_VERTEX_ID_NV = 0x8C7B;
pub const GL_PRIMITIVE_ID_NV = 0x8C7C;
pub const GL_GENERIC_ATTRIB_NV = 0x8C7D;
pub const GL_TRANSFORM_FEEDBACK_ATTRIBS_NV = 0x8C7E;
pub const GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV = 0x8C7F;
pub const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV = 0x8C80;
pub const GL_ACTIVE_VARYINGS_NV = 0x8C81;
pub const GL_ACTIVE_VARYING_MAX_LENGTH_NV = 0x8C82;
pub const GL_TRANSFORM_FEEDBACK_VARYINGS_NV = 0x8C83;
pub const GL_TRANSFORM_FEEDBACK_BUFFER_START_NV = 0x8C84;
pub const GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV = 0x8C85;
pub const GL_TRANSFORM_FEEDBACK_RECORD_NV = 0x8C86;
pub const GL_PRIMITIVES_GENERATED_NV = 0x8C87;
pub const GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV = 0x8C88;
pub const GL_RASTERIZER_DISCARD_NV = 0x8C89;
pub const GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV = 0x8C8A;
pub const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV = 0x8C8B;
pub const GL_INTERLEAVED_ATTRIBS_NV = 0x8C8C;
pub const GL_SEPARATE_ATTRIBS_NV = 0x8C8D;
pub const GL_TRANSFORM_FEEDBACK_BUFFER_NV = 0x8C8E;
pub const GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV = 0x8C8F;
pub const GL_LAYER_NV = 0x8DAA;
pub const GL_NEXT_BUFFER_NV = -2;
pub const GL_SKIP_COMPONENTS4_NV = -3;
pub const GL_SKIP_COMPONENTS3_NV = -4;
pub const GL_SKIP_COMPONENTS2_NV = -5;
pub const GL_SKIP_COMPONENTS1_NV = -6;
pub const GL_TRANSFORM_FEEDBACK_NV = 0x8E22;
pub const GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV = 0x8E23;
pub const GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV = 0x8E24;
pub const GL_TRANSFORM_FEEDBACK_BINDING_NV = 0x8E25;
pub const GL_UNIFORM_BUFFER_UNIFIED_NV = 0x936E;
pub const GL_UNIFORM_BUFFER_ADDRESS_NV = 0x936F;
pub const GL_UNIFORM_BUFFER_LENGTH_NV = 0x9370;
pub const GL_SURFACE_STATE_NV = 0x86EB;
pub const GL_SURFACE_REGISTERED_NV = 0x86FD;
pub const GL_SURFACE_MAPPED_NV = 0x8700;
pub const GL_WRITE_DISCARD_NV = 0x88BE;
pub const GL_VERTEX_ARRAY_RANGE_NV = 0x851D;
pub const GL_VERTEX_ARRAY_RANGE_LENGTH_NV = 0x851E;
pub const GL_VERTEX_ARRAY_RANGE_VALID_NV = 0x851F;
pub const GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV = 0x8520;
pub const GL_VERTEX_ARRAY_RANGE_POINTER_NV = 0x8521;
pub const GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV = 0x8533;
pub const GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV = 0x8F1E;
pub const GL_ELEMENT_ARRAY_UNIFIED_NV = 0x8F1F;
pub const GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV = 0x8F20;
pub const GL_VERTEX_ARRAY_ADDRESS_NV = 0x8F21;
pub const GL_NORMAL_ARRAY_ADDRESS_NV = 0x8F22;
pub const GL_COLOR_ARRAY_ADDRESS_NV = 0x8F23;
pub const GL_INDEX_ARRAY_ADDRESS_NV = 0x8F24;
pub const GL_TEXTURE_COORD_ARRAY_ADDRESS_NV = 0x8F25;
pub const GL_EDGE_FLAG_ARRAY_ADDRESS_NV = 0x8F26;
pub const GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV = 0x8F27;
pub const GL_FOG_COORD_ARRAY_ADDRESS_NV = 0x8F28;
pub const GL_ELEMENT_ARRAY_ADDRESS_NV = 0x8F29;
pub const GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV = 0x8F2A;
pub const GL_VERTEX_ARRAY_LENGTH_NV = 0x8F2B;
pub const GL_NORMAL_ARRAY_LENGTH_NV = 0x8F2C;
pub const GL_COLOR_ARRAY_LENGTH_NV = 0x8F2D;
pub const GL_INDEX_ARRAY_LENGTH_NV = 0x8F2E;
pub const GL_TEXTURE_COORD_ARRAY_LENGTH_NV = 0x8F2F;
pub const GL_EDGE_FLAG_ARRAY_LENGTH_NV = 0x8F30;
pub const GL_SECONDARY_COLOR_ARRAY_LENGTH_NV = 0x8F31;
pub const GL_FOG_COORD_ARRAY_LENGTH_NV = 0x8F32;
pub const GL_ELEMENT_ARRAY_LENGTH_NV = 0x8F33;
pub const GL_DRAW_INDIRECT_UNIFIED_NV = 0x8F40;
pub const GL_DRAW_INDIRECT_ADDRESS_NV = 0x8F41;
pub const GL_DRAW_INDIRECT_LENGTH_NV = 0x8F42;
pub const GL_VERTEX_PROGRAM_NV = 0x8620;
pub const GL_VERTEX_STATE_PROGRAM_NV = 0x8621;
pub const GL_ATTRIB_ARRAY_SIZE_NV = 0x8623;
pub const GL_ATTRIB_ARRAY_STRIDE_NV = 0x8624;
pub const GL_ATTRIB_ARRAY_TYPE_NV = 0x8625;
pub const GL_CURRENT_ATTRIB_NV = 0x8626;
pub const GL_PROGRAM_LENGTH_NV = 0x8627;
pub const GL_PROGRAM_STRING_NV = 0x8628;
pub const GL_MODELVIEW_PROJECTION_NV = 0x8629;
pub const GL_IDENTITY_NV = 0x862A;
pub const GL_INVERSE_NV = 0x862B;
pub const GL_TRANSPOSE_NV = 0x862C;
pub const GL_INVERSE_TRANSPOSE_NV = 0x862D;
pub const GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV = 0x862E;
pub const GL_MAX_TRACK_MATRICES_NV = 0x862F;
pub const GL_MATRIX0_NV = 0x8630;
pub const GL_MATRIX1_NV = 0x8631;
pub const GL_MATRIX2_NV = 0x8632;
pub const GL_MATRIX3_NV = 0x8633;
pub const GL_MATRIX4_NV = 0x8634;
pub const GL_MATRIX5_NV = 0x8635;
pub const GL_MATRIX6_NV = 0x8636;
pub const GL_MATRIX7_NV = 0x8637;
pub const GL_CURRENT_MATRIX_STACK_DEPTH_NV = 0x8640;
pub const GL_CURRENT_MATRIX_NV = 0x8641;
pub const GL_VERTEX_PROGRAM_POINT_SIZE_NV = 0x8642;
pub const GL_VERTEX_PROGRAM_TWO_SIDE_NV = 0x8643;
pub const GL_PROGRAM_PARAMETER_NV = 0x8644;
pub const GL_ATTRIB_ARRAY_POINTER_NV = 0x8645;
pub const GL_PROGRAM_TARGET_NV = 0x8646;
pub const GL_PROGRAM_RESIDENT_NV = 0x8647;
pub const GL_TRACK_MATRIX_NV = 0x8648;
pub const GL_TRACK_MATRIX_TRANSFORM_NV = 0x8649;
pub const GL_VERTEX_PROGRAM_BINDING_NV = 0x864A;
pub const GL_PROGRAM_ERROR_POSITION_NV = 0x864B;
pub const GL_VERTEX_ATTRIB_ARRAY0_NV = 0x8650;
pub const GL_VERTEX_ATTRIB_ARRAY1_NV = 0x8651;
pub const GL_VERTEX_ATTRIB_ARRAY2_NV = 0x8652;
pub const GL_VERTEX_ATTRIB_ARRAY3_NV = 0x8653;
pub const GL_VERTEX_ATTRIB_ARRAY4_NV = 0x8654;
pub const GL_VERTEX_ATTRIB_ARRAY5_NV = 0x8655;
pub const GL_VERTEX_ATTRIB_ARRAY6_NV = 0x8656;
pub const GL_VERTEX_ATTRIB_ARRAY7_NV = 0x8657;
pub const GL_VERTEX_ATTRIB_ARRAY8_NV = 0x8658;
pub const GL_VERTEX_ATTRIB_ARRAY9_NV = 0x8659;
pub const GL_VERTEX_ATTRIB_ARRAY10_NV = 0x865A;
pub const GL_VERTEX_ATTRIB_ARRAY11_NV = 0x865B;
pub const GL_VERTEX_ATTRIB_ARRAY12_NV = 0x865C;
pub const GL_VERTEX_ATTRIB_ARRAY13_NV = 0x865D;
pub const GL_VERTEX_ATTRIB_ARRAY14_NV = 0x865E;
pub const GL_VERTEX_ATTRIB_ARRAY15_NV = 0x865F;
pub const GL_MAP1_VERTEX_ATTRIB0_4_NV = 0x8660;
pub const GL_MAP1_VERTEX_ATTRIB1_4_NV = 0x8661;
pub const GL_MAP1_VERTEX_ATTRIB2_4_NV = 0x8662;
pub const GL_MAP1_VERTEX_ATTRIB3_4_NV = 0x8663;
pub const GL_MAP1_VERTEX_ATTRIB4_4_NV = 0x8664;
pub const GL_MAP1_VERTEX_ATTRIB5_4_NV = 0x8665;
pub const GL_MAP1_VERTEX_ATTRIB6_4_NV = 0x8666;
pub const GL_MAP1_VERTEX_ATTRIB7_4_NV = 0x8667;
pub const GL_MAP1_VERTEX_ATTRIB8_4_NV = 0x8668;
pub const GL_MAP1_VERTEX_ATTRIB9_4_NV = 0x8669;
pub const GL_MAP1_VERTEX_ATTRIB10_4_NV = 0x866A;
pub const GL_MAP1_VERTEX_ATTRIB11_4_NV = 0x866B;
pub const GL_MAP1_VERTEX_ATTRIB12_4_NV = 0x866C;
pub const GL_MAP1_VERTEX_ATTRIB13_4_NV = 0x866D;
pub const GL_MAP1_VERTEX_ATTRIB14_4_NV = 0x866E;
pub const GL_MAP1_VERTEX_ATTRIB15_4_NV = 0x866F;
pub const GL_MAP2_VERTEX_ATTRIB0_4_NV = 0x8670;
pub const GL_MAP2_VERTEX_ATTRIB1_4_NV = 0x8671;
pub const GL_MAP2_VERTEX_ATTRIB2_4_NV = 0x8672;
pub const GL_MAP2_VERTEX_ATTRIB3_4_NV = 0x8673;
pub const GL_MAP2_VERTEX_ATTRIB4_4_NV = 0x8674;
pub const GL_MAP2_VERTEX_ATTRIB5_4_NV = 0x8675;
pub const GL_MAP2_VERTEX_ATTRIB6_4_NV = 0x8676;
pub const GL_MAP2_VERTEX_ATTRIB7_4_NV = 0x8677;
pub const GL_MAP2_VERTEX_ATTRIB8_4_NV = 0x8678;
pub const GL_MAP2_VERTEX_ATTRIB9_4_NV = 0x8679;
pub const GL_MAP2_VERTEX_ATTRIB10_4_NV = 0x867A;
pub const GL_MAP2_VERTEX_ATTRIB11_4_NV = 0x867B;
pub const GL_MAP2_VERTEX_ATTRIB12_4_NV = 0x867C;
pub const GL_MAP2_VERTEX_ATTRIB13_4_NV = 0x867D;
pub const GL_MAP2_VERTEX_ATTRIB14_4_NV = 0x867E;
pub const GL_MAP2_VERTEX_ATTRIB15_4_NV = 0x867F;
pub const GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV = 0x88FD;
pub const GL_VIDEO_BUFFER_NV = 0x9020;
pub const GL_VIDEO_BUFFER_BINDING_NV = 0x9021;
pub const GL_FIELD_UPPER_NV = 0x9022;
pub const GL_FIELD_LOWER_NV = 0x9023;
pub const GL_NUM_VIDEO_CAPTURE_STREAMS_NV = 0x9024;
pub const GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV = 0x9025;
pub const GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV = 0x9026;
pub const GL_LAST_VIDEO_CAPTURE_STATUS_NV = 0x9027;
pub const GL_VIDEO_BUFFER_PITCH_NV = 0x9028;
pub const GL_VIDEO_COLOR_CONVERSION_MATRIX_NV = 0x9029;
pub const GL_VIDEO_COLOR_CONVERSION_MAX_NV = 0x902A;
pub const GL_VIDEO_COLOR_CONVERSION_MIN_NV = 0x902B;
pub const GL_VIDEO_COLOR_CONVERSION_OFFSET_NV = 0x902C;
pub const GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV = 0x902D;
pub const GL_PARTIAL_SUCCESS_NV = 0x902E;
pub const GL_SUCCESS_NV = 0x902F;
pub const GL_FAILURE_NV = 0x9030;
pub const GL_YCBYCR8_422_NV = 0x9031;
pub const GL_YCBAYCR8A_4224_NV = 0x9032;
pub const GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV = 0x9033;
pub const GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV = 0x9034;
pub const GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV = 0x9035;
pub const GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV = 0x9036;
pub const GL_Z4Y12Z4CB12Z4CR12_444_NV = 0x9037;
pub const GL_VIDEO_CAPTURE_FRAME_WIDTH_NV = 0x9038;
pub const GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV = 0x9039;
pub const GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV = 0x903A;
pub const GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV = 0x903B;
pub const GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV = 0x903C;
pub const GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV = 0x9350;
pub const GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV = 0x9351;
pub const GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV = 0x9352;
pub const GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV = 0x9353;
pub const GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV = 0x9354;
pub const GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV = 0x9355;
pub const GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV = 0x9356;
pub const GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV = 0x9357;
pub const GL_VIEWPORT_SWIZZLE_X_NV = 0x9358;
pub const GL_VIEWPORT_SWIZZLE_Y_NV = 0x9359;
pub const GL_VIEWPORT_SWIZZLE_Z_NV = 0x935A;
pub const GL_VIEWPORT_SWIZZLE_W_NV = 0x935B;
pub const GL_PALETTE4_RGB8_OES = 0x8B90;
pub const GL_PALETTE4_RGBA8_OES = 0x8B91;
pub const GL_PALETTE4_R5_G6_B5_OES = 0x8B92;
pub const GL_PALETTE4_RGBA4_OES = 0x8B93;
pub const GL_PALETTE4_RGB5_A1_OES = 0x8B94;
pub const GL_PALETTE8_RGB8_OES = 0x8B95;
pub const GL_PALETTE8_RGBA8_OES = 0x8B96;
pub const GL_PALETTE8_R5_G6_B5_OES = 0x8B97;
pub const GL_PALETTE8_RGBA4_OES = 0x8B98;
pub const GL_PALETTE8_RGB5_A1_OES = 0x8B99;
pub const GL_FIXED_OES = 0x140C;
pub const GL_IMPLEMENTATION_COLOR_READ_TYPE_OES = 0x8B9A;
pub const GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES = 0x8B9B;
pub const GL_INTERLACE_OML = 0x8980;
pub const GL_INTERLACE_READ_OML = 0x8981;
pub const GL_PACK_RESAMPLE_OML = 0x8984;
pub const GL_UNPACK_RESAMPLE_OML = 0x8985;
pub const GL_RESAMPLE_REPLICATE_OML = 0x8986;
pub const GL_RESAMPLE_ZERO_FILL_OML = 0x8987;
pub const GL_RESAMPLE_AVERAGE_OML = 0x8988;
pub const GL_RESAMPLE_DECIMATE_OML = 0x8989;
pub const GL_FORMAT_SUBSAMPLE_24_24_OML = 0x8982;
pub const GL_FORMAT_SUBSAMPLE_244_244_OML = 0x8983;
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR = 0x9630;
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR = 0x9632;
pub const GL_MAX_VIEWS_OVR = 0x9631;
pub const GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR = 0x9633;
pub const GL_PREFER_DOUBLEBUFFER_HINT_PGI = 0x1A1F8;
pub const GL_CONSERVE_MEMORY_HINT_PGI = 0x1A1FD;
pub const GL_RECLAIM_MEMORY_HINT_PGI = 0x1A1FE;
pub const GL_NATIVE_GRAPHICS_HANDLE_PGI = 0x1A202;
pub const GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI = 0x1A203;
pub const GL_NATIVE_GRAPHICS_END_HINT_PGI = 0x1A204;
pub const GL_ALWAYS_FAST_HINT_PGI = 0x1A20C;
pub const GL_ALWAYS_SOFT_HINT_PGI = 0x1A20D;
pub const GL_ALLOW_DRAW_OBJ_HINT_PGI = 0x1A20E;
pub const GL_ALLOW_DRAW_WIN_HINT_PGI = 0x1A20F;
pub const GL_ALLOW_DRAW_FRG_HINT_PGI = 0x1A210;
pub const GL_ALLOW_DRAW_MEM_HINT_PGI = 0x1A211;
pub const GL_STRICT_DEPTHFUNC_HINT_PGI = 0x1A216;
pub const GL_STRICT_LIGHTING_HINT_PGI = 0x1A217;
pub const GL_STRICT_SCISSOR_HINT_PGI = 0x1A218;
pub const GL_FULL_STIPPLE_HINT_PGI = 0x1A219;
pub const GL_CLIP_NEAR_HINT_PGI = 0x1A220;
pub const GL_CLIP_FAR_HINT_PGI = 0x1A221;
pub const GL_WIDE_LINE_HINT_PGI = 0x1A222;
pub const GL_BACK_NORMALS_HINT_PGI = 0x1A223;
pub const GL_VERTEX_DATA_HINT_PGI = 0x1A22A;
pub const GL_VERTEX_CONSISTENT_HINT_PGI = 0x1A22B;
pub const GL_MATERIAL_SIDE_HINT_PGI = 0x1A22C;
pub const GL_MAX_VERTEX_HINT_PGI = 0x1A22D;
pub const GL_COLOR3_BIT_PGI = 0x00010000;
pub const GL_COLOR4_BIT_PGI = 0x00020000;
pub const GL_EDGEFLAG_BIT_PGI = 0x00040000;
pub const GL_INDEX_BIT_PGI = 0x00080000;
pub const GL_MAT_AMBIENT_BIT_PGI = 0x00100000;
pub const GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI = 0x00200000;
pub const GL_MAT_DIFFUSE_BIT_PGI = 0x00400000;
pub const GL_MAT_EMISSION_BIT_PGI = 0x00800000;
pub const GL_MAT_COLOR_INDEXES_BIT_PGI = 0x01000000;
pub const GL_MAT_SHININESS_BIT_PGI = 0x02000000;
pub const GL_MAT_SPECULAR_BIT_PGI = 0x04000000;
pub const GL_NORMAL_BIT_PGI = 0x08000000;
pub const GL_TEXCOORD1_BIT_PGI = 0x10000000;
pub const GL_TEXCOORD2_BIT_PGI = 0x20000000;
pub const GL_TEXCOORD3_BIT_PGI = 0x40000000;
pub const GL_TEXCOORD4_BIT_PGI = 0x80000000;
pub const GL_VERTEX23_BIT_PGI = 0x00000004;
pub const GL_VERTEX4_BIT_PGI = 0x00000008;
pub const GL_SCREEN_COORDINATES_REND = 0x8490;
pub const GL_INVERTED_SCREEN_W_REND = 0x8491;
pub const GL_RGB_S3TC = 0x83A0;
pub const GL_RGB4_S3TC = 0x83A1;
pub const GL_RGBA_S3TC = 0x83A2;
pub const GL_RGBA4_S3TC = 0x83A3;
pub const GL_RGBA_DXT5_S3TC = 0x83A4;
pub const GL_RGBA4_DXT5_S3TC = 0x83A5;
pub const GL_DETAIL_TEXTURE_2D_SGIS = 0x8095;
pub const GL_DETAIL_TEXTURE_2D_BINDING_SGIS = 0x8096;
pub const GL_LINEAR_DETAIL_SGIS = 0x8097;
pub const GL_LINEAR_DETAIL_ALPHA_SGIS = 0x8098;
pub const GL_LINEAR_DETAIL_COLOR_SGIS = 0x8099;
pub const GL_DETAIL_TEXTURE_LEVEL_SGIS = 0x809A;
pub const GL_DETAIL_TEXTURE_MODE_SGIS = 0x809B;
pub const GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS = 0x809C;
pub const GL_FOG_FUNC_SGIS = 0x812A;
pub const GL_FOG_FUNC_POINTS_SGIS = 0x812B;
pub const GL_MAX_FOG_FUNC_POINTS_SGIS = 0x812C;
pub const GL_GENERATE_MIPMAP_SGIS = 0x8191;
pub const GL_GENERATE_MIPMAP_HINT_SGIS = 0x8192;
pub const GL_MULTISAMPLE_SGIS = 0x809D;
pub const GL_SAMPLE_ALPHA_TO_MASK_SGIS = 0x809E;
pub const GL_SAMPLE_ALPHA_TO_ONE_SGIS = 0x809F;
pub const GL_SAMPLE_MASK_SGIS = 0x80A0;
pub const GL_1PASS_SGIS = 0x80A1;
pub const GL_2PASS_0_SGIS = 0x80A2;
pub const GL_2PASS_1_SGIS = 0x80A3;
pub const GL_4PASS_0_SGIS = 0x80A4;
pub const GL_4PASS_1_SGIS = 0x80A5;
pub const GL_4PASS_2_SGIS = 0x80A6;
pub const GL_4PASS_3_SGIS = 0x80A7;
pub const GL_SAMPLE_BUFFERS_SGIS = 0x80A8;
pub const GL_SAMPLES_SGIS = 0x80A9;
pub const GL_SAMPLE_MASK_VALUE_SGIS = 0x80AA;
pub const GL_SAMPLE_MASK_INVERT_SGIS = 0x80AB;
pub const GL_SAMPLE_PATTERN_SGIS = 0x80AC;
pub const GL_PIXEL_TEXTURE_SGIS = 0x8353;
pub const GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS = 0x8354;
pub const GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS = 0x8355;
pub const GL_PIXEL_GROUP_COLOR_SGIS = 0x8356;
pub const GL_EYE_DISTANCE_TO_POINT_SGIS = 0x81F0;
pub const GL_OBJECT_DISTANCE_TO_POINT_SGIS = 0x81F1;
pub const GL_EYE_DISTANCE_TO_LINE_SGIS = 0x81F2;
pub const GL_OBJECT_DISTANCE_TO_LINE_SGIS = 0x81F3;
pub const GL_EYE_POINT_SGIS = 0x81F4;
pub const GL_OBJECT_POINT_SGIS = 0x81F5;
pub const GL_EYE_LINE_SGIS = 0x81F6;
pub const GL_OBJECT_LINE_SGIS = 0x81F7;
pub const GL_POINT_SIZE_MIN_SGIS = 0x8126;
pub const GL_POINT_SIZE_MAX_SGIS = 0x8127;
pub const GL_POINT_FADE_THRESHOLD_SIZE_SGIS = 0x8128;
pub const GL_DISTANCE_ATTENUATION_SGIS = 0x8129;
pub const GL_LINEAR_SHARPEN_SGIS = 0x80AD;
pub const GL_LINEAR_SHARPEN_ALPHA_SGIS = 0x80AE;
pub const GL_LINEAR_SHARPEN_COLOR_SGIS = 0x80AF;
pub const GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS = 0x80B0;
pub const GL_PACK_SKIP_VOLUMES_SGIS = 0x8130;
pub const GL_PACK_IMAGE_DEPTH_SGIS = 0x8131;
pub const GL_UNPACK_SKIP_VOLUMES_SGIS = 0x8132;
pub const GL_UNPACK_IMAGE_DEPTH_SGIS = 0x8133;
pub const GL_TEXTURE_4D_SGIS = 0x8134;
pub const GL_PROXY_TEXTURE_4D_SGIS = 0x8135;
pub const GL_TEXTURE_4DSIZE_SGIS = 0x8136;
pub const GL_TEXTURE_WRAP_Q_SGIS = 0x8137;
pub const GL_MAX_4D_TEXTURE_SIZE_SGIS = 0x8138;
pub const GL_TEXTURE_4D_BINDING_SGIS = 0x814F;
pub const GL_CLAMP_TO_BORDER_SGIS = 0x812D;
pub const GL_TEXTURE_COLOR_WRITEMASK_SGIS = 0x81EF;
pub const GL_CLAMP_TO_EDGE_SGIS = 0x812F;
pub const GL_FILTER4_SGIS = 0x8146;
pub const GL_TEXTURE_FILTER4_SIZE_SGIS = 0x8147;
pub const GL_TEXTURE_MIN_LOD_SGIS = 0x813A;
pub const GL_TEXTURE_MAX_LOD_SGIS = 0x813B;
pub const GL_TEXTURE_BASE_LEVEL_SGIS = 0x813C;
pub const GL_TEXTURE_MAX_LEVEL_SGIS = 0x813D;
pub const GL_DUAL_ALPHA4_SGIS = 0x8110;
pub const GL_DUAL_ALPHA8_SGIS = 0x8111;
pub const GL_DUAL_ALPHA12_SGIS = 0x8112;
pub const GL_DUAL_ALPHA16_SGIS = 0x8113;
pub const GL_DUAL_LUMINANCE4_SGIS = 0x8114;
pub const GL_DUAL_LUMINANCE8_SGIS = 0x8115;
pub const GL_DUAL_LUMINANCE12_SGIS = 0x8116;
pub const GL_DUAL_LUMINANCE16_SGIS = 0x8117;
pub const GL_DUAL_INTENSITY4_SGIS = 0x8118;
pub const GL_DUAL_INTENSITY8_SGIS = 0x8119;
pub const GL_DUAL_INTENSITY12_SGIS = 0x811A;
pub const GL_DUAL_INTENSITY16_SGIS = 0x811B;
pub const GL_DUAL_LUMINANCE_ALPHA4_SGIS = 0x811C;
pub const GL_DUAL_LUMINANCE_ALPHA8_SGIS = 0x811D;
pub const GL_QUAD_ALPHA4_SGIS = 0x811E;
pub const GL_QUAD_ALPHA8_SGIS = 0x811F;
pub const GL_QUAD_LUMINANCE4_SGIS = 0x8120;
pub const GL_QUAD_LUMINANCE8_SGIS = 0x8121;
pub const GL_QUAD_INTENSITY4_SGIS = 0x8122;
pub const GL_QUAD_INTENSITY8_SGIS = 0x8123;
pub const GL_DUAL_TEXTURE_SELECT_SGIS = 0x8124;
pub const GL_QUAD_TEXTURE_SELECT_SGIS = 0x8125;
pub const GL_ASYNC_MARKER_SGIX = 0x8329;
pub const GL_ASYNC_HISTOGRAM_SGIX = 0x832C;
pub const GL_MAX_ASYNC_HISTOGRAM_SGIX = 0x832D;
pub const GL_ASYNC_TEX_IMAGE_SGIX = 0x835C;
pub const GL_ASYNC_DRAW_PIXELS_SGIX = 0x835D;
pub const GL_ASYNC_READ_PIXELS_SGIX = 0x835E;
pub const GL_MAX_ASYNC_TEX_IMAGE_SGIX = 0x835F;
pub const GL_MAX_ASYNC_DRAW_PIXELS_SGIX = 0x8360;
pub const GL_MAX_ASYNC_READ_PIXELS_SGIX = 0x8361;
pub const GL_ALPHA_MIN_SGIX = 0x8320;
pub const GL_ALPHA_MAX_SGIX = 0x8321;
pub const GL_CALLIGRAPHIC_FRAGMENT_SGIX = 0x8183;
pub const GL_LINEAR_CLIPMAP_LINEAR_SGIX = 0x8170;
pub const GL_TEXTURE_CLIPMAP_CENTER_SGIX = 0x8171;
pub const GL_TEXTURE_CLIPMAP_FRAME_SGIX = 0x8172;
pub const GL_TEXTURE_CLIPMAP_OFFSET_SGIX = 0x8173;
pub const GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX = 0x8174;
pub const GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX = 0x8175;
pub const GL_TEXTURE_CLIPMAP_DEPTH_SGIX = 0x8176;
pub const GL_MAX_CLIPMAP_DEPTH_SGIX = 0x8177;
pub const GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX = 0x8178;
pub const GL_NEAREST_CLIPMAP_NEAREST_SGIX = 0x844D;
pub const GL_NEAREST_CLIPMAP_LINEAR_SGIX = 0x844E;
pub const GL_LINEAR_CLIPMAP_NEAREST_SGIX = 0x844F;
pub const GL_CONVOLUTION_HINT_SGIX = 0x8316;
pub const GL_DEPTH_COMPONENT16_SGIX = 0x81A5;
pub const GL_DEPTH_COMPONENT24_SGIX = 0x81A6;
pub const GL_DEPTH_COMPONENT32_SGIX = 0x81A7;
pub const GL_FOG_OFFSET_SGIX = 0x8198;
pub const GL_FOG_OFFSET_VALUE_SGIX = 0x8199;
pub const GL_FRAGMENT_LIGHTING_SGIX = 0x8400;
pub const GL_FRAGMENT_COLOR_MATERIAL_SGIX = 0x8401;
pub const GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX = 0x8402;
pub const GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX = 0x8403;
pub const GL_MAX_FRAGMENT_LIGHTS_SGIX = 0x8404;
pub const GL_MAX_ACTIVE_LIGHTS_SGIX = 0x8405;
pub const GL_CURRENT_RASTER_NORMAL_SGIX = 0x8406;
pub const GL_LIGHT_ENV_MODE_SGIX = 0x8407;
pub const GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX = 0x8408;
pub const GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX = 0x8409;
pub const GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX = 0x840A;
pub const GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX = 0x840B;
pub const GL_FRAGMENT_LIGHT0_SGIX = 0x840C;
pub const GL_FRAGMENT_LIGHT1_SGIX = 0x840D;
pub const GL_FRAGMENT_LIGHT2_SGIX = 0x840E;
pub const GL_FRAGMENT_LIGHT3_SGIX = 0x840F;
pub const GL_FRAGMENT_LIGHT4_SGIX = 0x8410;
pub const GL_FRAGMENT_LIGHT5_SGIX = 0x8411;
pub const GL_FRAGMENT_LIGHT6_SGIX = 0x8412;
pub const GL_FRAGMENT_LIGHT7_SGIX = 0x8413;
pub const GL_FRAMEZOOM_SGIX = 0x818B;
pub const GL_FRAMEZOOM_FACTOR_SGIX = 0x818C;
pub const GL_MAX_FRAMEZOOM_FACTOR_SGIX = 0x818D;
pub const GL_INSTRUMENT_BUFFER_POINTER_SGIX = 0x8180;
pub const GL_INSTRUMENT_MEASUREMENTS_SGIX = 0x8181;
pub const GL_INTERLACE_SGIX = 0x8094;
pub const GL_IR_INSTRUMENT1_SGIX = 0x817F;
pub const GL_LIST_PRIORITY_SGIX = 0x8182;
pub const GL_PIXEL_TEX_GEN_SGIX = 0x8139;
pub const GL_PIXEL_TEX_GEN_MODE_SGIX = 0x832B;
pub const GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX = 0x813E;
pub const GL_PIXEL_TILE_CACHE_INCREMENT_SGIX = 0x813F;
pub const GL_PIXEL_TILE_WIDTH_SGIX = 0x8140;
pub const GL_PIXEL_TILE_HEIGHT_SGIX = 0x8141;
pub const GL_PIXEL_TILE_GRID_WIDTH_SGIX = 0x8142;
pub const GL_PIXEL_TILE_GRID_HEIGHT_SGIX = 0x8143;
pub const GL_PIXEL_TILE_GRID_DEPTH_SGIX = 0x8144;
pub const GL_PIXEL_TILE_CACHE_SIZE_SGIX = 0x8145;
pub const GL_TEXTURE_DEFORMATION_BIT_SGIX = 0x00000001;
pub const GL_GEOMETRY_DEFORMATION_BIT_SGIX = 0x00000002;
pub const GL_GEOMETRY_DEFORMATION_SGIX = 0x8194;
pub const GL_TEXTURE_DEFORMATION_SGIX = 0x8195;
pub const GL_DEFORMATIONS_MASK_SGIX = 0x8196;
pub const GL_MAX_DEFORMATION_ORDER_SGIX = 0x8197;
pub const GL_REFERENCE_PLANE_SGIX = 0x817D;
pub const GL_REFERENCE_PLANE_EQUATION_SGIX = 0x817E;
pub const GL_PACK_RESAMPLE_SGIX = 0x842E;
pub const GL_UNPACK_RESAMPLE_SGIX = 0x842F;
pub const GL_RESAMPLE_REPLICATE_SGIX = 0x8433;
pub const GL_RESAMPLE_ZERO_FILL_SGIX = 0x8434;
pub const GL_RESAMPLE_DECIMATE_SGIX = 0x8430;
pub const GL_SCALEBIAS_HINT_SGIX = 0x8322;
pub const GL_TEXTURE_COMPARE_SGIX = 0x819A;
pub const GL_TEXTURE_COMPARE_OPERATOR_SGIX = 0x819B;
pub const GL_TEXTURE_LEQUAL_R_SGIX = 0x819C;
pub const GL_TEXTURE_GEQUAL_R_SGIX = 0x819D;
pub const GL_SHADOW_AMBIENT_SGIX = 0x80BF;
pub const GL_SPRITE_SGIX = 0x8148;
pub const GL_SPRITE_MODE_SGIX = 0x8149;
pub const GL_SPRITE_AXIS_SGIX = 0x814A;
pub const GL_SPRITE_TRANSLATION_SGIX = 0x814B;
pub const GL_SPRITE_AXIAL_SGIX = 0x814C;
pub const GL_SPRITE_OBJECT_ALIGNED_SGIX = 0x814D;
pub const GL_SPRITE_EYE_ALIGNED_SGIX = 0x814E;
pub const GL_PACK_SUBSAMPLE_RATE_SGIX = 0x85A0;
pub const GL_UNPACK_SUBSAMPLE_RATE_SGIX = 0x85A1;
pub const GL_PIXEL_SUBSAMPLE_4444_SGIX = 0x85A2;
pub const GL_PIXEL_SUBSAMPLE_2424_SGIX = 0x85A3;
pub const GL_PIXEL_SUBSAMPLE_4242_SGIX = 0x85A4;
pub const GL_TEXTURE_ENV_BIAS_SGIX = 0x80BE;
pub const GL_TEXTURE_MAX_CLAMP_S_SGIX = 0x8369;
pub const GL_TEXTURE_MAX_CLAMP_T_SGIX = 0x836A;
pub const GL_TEXTURE_MAX_CLAMP_R_SGIX = 0x836B;
pub const GL_TEXTURE_LOD_BIAS_S_SGIX = 0x818E;
pub const GL_TEXTURE_LOD_BIAS_T_SGIX = 0x818F;
pub const GL_TEXTURE_LOD_BIAS_R_SGIX = 0x8190;
pub const GL_TEXTURE_MULTI_BUFFER_HINT_SGIX = 0x812E;
pub const GL_POST_TEXTURE_FILTER_BIAS_SGIX = 0x8179;
pub const GL_POST_TEXTURE_FILTER_SCALE_SGIX = 0x817A;
pub const GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX = 0x817B;
pub const GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX = 0x817C;
pub const GL_VERTEX_PRECLIP_SGIX = 0x83EE;
pub const GL_VERTEX_PRECLIP_HINT_SGIX = 0x83EF;
pub const GL_YCRCB_422_SGIX = 0x81BB;
pub const GL_YCRCB_444_SGIX = 0x81BC;
pub const GL_YCRCB_SGIX = 0x8318;
pub const GL_YCRCBA_SGIX = 0x8319;
pub const GL_COLOR_MATRIX_SGI = 0x80B1;
pub const GL_COLOR_MATRIX_STACK_DEPTH_SGI = 0x80B2;
pub const GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI = 0x80B3;
pub const GL_POST_COLOR_MATRIX_RED_SCALE_SGI = 0x80B4;
pub const GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI = 0x80B5;
pub const GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI = 0x80B6;
pub const GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI = 0x80B7;
pub const GL_POST_COLOR_MATRIX_RED_BIAS_SGI = 0x80B8;
pub const GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI = 0x80B9;
pub const GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI = 0x80BA;
pub const GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI = 0x80BB;
pub const GL_COLOR_TABLE_SGI = 0x80D0;
pub const GL_POST_CONVOLUTION_COLOR_TABLE_SGI = 0x80D1;
pub const GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI = 0x80D2;
pub const GL_PROXY_COLOR_TABLE_SGI = 0x80D3;
pub const GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI = 0x80D4;
pub const GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI = 0x80D5;
pub const GL_COLOR_TABLE_SCALE_SGI = 0x80D6;
pub const GL_COLOR_TABLE_BIAS_SGI = 0x80D7;
pub const GL_COLOR_TABLE_FORMAT_SGI = 0x80D8;
pub const GL_COLOR_TABLE_WIDTH_SGI = 0x80D9;
pub const GL_COLOR_TABLE_RED_SIZE_SGI = 0x80DA;
pub const GL_COLOR_TABLE_GREEN_SIZE_SGI = 0x80DB;
pub const GL_COLOR_TABLE_BLUE_SIZE_SGI = 0x80DC;
pub const GL_COLOR_TABLE_ALPHA_SIZE_SGI = 0x80DD;
pub const GL_COLOR_TABLE_LUMINANCE_SIZE_SGI = 0x80DE;
pub const GL_COLOR_TABLE_INTENSITY_SIZE_SGI = 0x80DF;
pub const GL_TEXTURE_COLOR_TABLE_SGI = 0x80BC;
pub const GL_PROXY_TEXTURE_COLOR_TABLE_SGI = 0x80BD;
pub const GL_UNPACK_CONSTANT_DATA_SUNX = 0x81D5;
pub const GL_TEXTURE_CONSTANT_DATA_SUNX = 0x81D6;
pub const GL_WRAP_BORDER_SUN = 0x81D4;
pub const GL_GLOBAL_ALPHA_SUN = 0x81D9;
pub const GL_GLOBAL_ALPHA_FACTOR_SUN = 0x81DA;
pub const GL_QUAD_MESH_SUN = 0x8614;
pub const GL_TRIANGLE_MESH_SUN = 0x8615;
pub const GL_SLICE_ACCUM_SUN = 0x85CC;
pub const GL_RESTART_SUN = 0x0001;
pub const GL_REPLACE_MIDDLE_SUN = 0x0002;
pub const GL_REPLACE_OLDEST_SUN = 0x0003;
pub const GL_TRIANGLE_LIST_SUN = 0x81D7;
pub const GL_REPLACEMENT_CODE_SUN = 0x81D8;
pub const GL_REPLACEMENT_CODE_ARRAY_SUN = 0x85C0;
pub const GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN = 0x85C1;
pub const GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN = 0x85C2;
pub const GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN = 0x85C3;
pub const GL_R1UI_V3F_SUN = 0x85C4;
pub const GL_R1UI_C4UB_V3F_SUN = 0x85C5;
pub const GL_R1UI_C3F_V3F_SUN = 0x85C6;
pub const GL_R1UI_N3F_V3F_SUN = 0x85C7;
pub const GL_R1UI_C4F_N3F_V3F_SUN = 0x85C8;
pub const GL_R1UI_T2F_V3F_SUN = 0x85C9;
pub const GL_R1UI_T2F_N3F_V3F_SUN = 0x85CA;
pub const GL_R1UI_T2F_C4F_N3F_V3F_SUN = 0x85CB;
pub const GL_PHONG_WIN = 0x80EA;
pub const GL_PHONG_HINT_WIN = 0x80EB;
pub const GL_FOG_SPECULAR_TEXTURE_WIN = 0x80EC;
pub const GL_3DC_X_AMD = 0x87F9;
pub const GL_3DC_XY_AMD = 0x87FA;
pub const GL_ATC_RGB_AMD = 0x8C92;
pub const GL_ATC_RGBA_EXPLICIT_ALPHA_AMD = 0x8C93;
pub const GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD = 0x87EE;
pub const GL_RENDERBUFFER_SAMPLES_APPLE = 0x8CAB;
pub const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE = 0x8D56;
pub const GL_MAX_SAMPLES_APPLE = 0x8D57;
pub const GL_READ_FRAMEBUFFER_APPLE = 0x8CA8;
pub const GL_DRAW_FRAMEBUFFER_APPLE = 0x8CA9;
pub const GL_DRAW_FRAMEBUFFER_BINDING_APPLE = 0x8CA6;
pub const GL_READ_FRAMEBUFFER_BINDING_APPLE = 0x8CAA;
pub const GL_SYNC_OBJECT_APPLE = 0x8A53;
pub const GL_MAX_SERVER_WAIT_TIMEOUT_APPLE = 0x9111;
pub const GL_OBJECT_TYPE_APPLE = 0x9112;
pub const GL_SYNC_CONDITION_APPLE = 0x9113;
pub const GL_SYNC_STATUS_APPLE = 0x9114;
pub const GL_SYNC_FLAGS_APPLE = 0x9115;
pub const GL_SYNC_FENCE_APPLE = 0x9116;
pub const GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE = 0x9117;
pub const GL_UNSIGNALED_APPLE = 0x9118;
pub const GL_SIGNALED_APPLE = 0x9119;
pub const GL_ALREADY_SIGNALED_APPLE = 0x911A;
pub const GL_TIMEOUT_EXPIRED_APPLE = 0x911B;
pub const GL_CONDITION_SATISFIED_APPLE = 0x911C;
pub const GL_WAIT_FAILED_APPLE = 0x911D;
pub const GL_SYNC_FLUSH_COMMANDS_BIT_APPLE = 0x00000001;
pub const GL_TIMEOUT_IGNORED_APPLE = 0xFFFFFFFFFFFFFFFF;
pub const GL_TEXTURE_MAX_LEVEL_APPLE = 0x813D;
pub const GL_COLOR_EXT = 0x1800;
pub const GL_DEPTH_EXT = 0x1801;
pub const GL_STENCIL_EXT = 0x1802;
pub const GL_MAP_READ_BIT_EXT = 0x0001;
pub const GL_MAP_WRITE_BIT_EXT = 0x0002;
pub const GL_MAP_INVALIDATE_RANGE_BIT_EXT = 0x0004;
pub const GL_MAP_INVALIDATE_BUFFER_BIT_EXT = 0x0008;
pub const GL_MAP_FLUSH_EXPLICIT_BIT_EXT = 0x0010;
pub const GL_MAP_UNSYNCHRONIZED_BIT_EXT = 0x0020;
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT = 0x8D6C;
pub const GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT = 0x8365;
pub const GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT = 0x8366;
pub const GL_GUILTY_CONTEXT_RESET_EXT = 0x8253;
pub const GL_INNOCENT_CONTEXT_RESET_EXT = 0x8254;
pub const GL_UNKNOWN_CONTEXT_RESET_EXT = 0x8255;
pub const GL_CONTEXT_ROBUST_ACCESS_EXT = 0x90F3;
pub const GL_RESET_NOTIFICATION_STRATEGY_EXT = 0x8256;
pub const GL_LOSE_CONTEXT_ON_RESET_EXT = 0x8252;
pub const GL_NO_RESET_NOTIFICATION_EXT = 0x8261;
pub const GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT = 0x8210;
pub const GL_RENDERBUFFER_SAMPLES_IMG = 0x9133;
pub const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG = 0x9134;
pub const GL_MAX_SAMPLES_IMG = 0x9135;
pub const GL_TEXTURE_SAMPLES_IMG = 0x9136;
pub const GL_BGRA_IMG = 0x80E1;
pub const GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG = 0x8365;
pub const GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 0x8C00;
pub const GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 0x8C01;
pub const GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 0x8C02;
pub const GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 0x8C03;
pub const GL_MODULATE_COLOR_IMG = 0x8C04;
pub const GL_RECIP_ADD_SIGNED_ALPHA_IMG = 0x8C05;
pub const GL_TEXTURE_ALPHA_MODULATE_IMG = 0x8C06;
pub const GL_FACTOR_ALPHA_MODULATE_IMG = 0x8C07;
pub const GL_FRAGMENT_ALPHA_MODULATE_IMG = 0x8C08;
pub const GL_ADD_BLEND_IMG = 0x8C09;
pub const GL_DOT3_RGBA_IMG = 0x86AF;
pub const GL_CLIP_PLANE0_IMG = 0x3000;
pub const GL_CLIP_PLANE1_IMG = 0x3001;
pub const GL_CLIP_PLANE2_IMG = 0x3002;
pub const GL_CLIP_PLANE3_IMG = 0x3003;
pub const GL_CLIP_PLANE4_IMG = 0x3004;
pub const GL_CLIP_PLANE5_IMG = 0x3005;
pub const GL_MAX_CLIP_PLANES_IMG = 0x0D32;
pub const GL_TEXTURE_EXTERNAL_OES = 0x8D65;
pub const GL_TEXTURE_BINDING_EXTERNAL_OES = 0x8D67;
pub const GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES = 0x8D68;
pub const GL_SAMPLER_EXTERNAL_OES = 0x8D66;
pub const GL_BLEND_EQUATION_RGB_OES = 0x8009;
pub const GL_BLEND_EQUATION_ALPHA_OES = 0x883D;
pub const GL_BLEND_DST_RGB_OES = 0x80C8;
pub const GL_BLEND_SRC_RGB_OES = 0x80C9;
pub const GL_BLEND_DST_ALPHA_OES = 0x80CA;
pub const GL_BLEND_SRC_ALPHA_OES = 0x80CB;
pub const GL_BLEND_EQUATION_OES = 0x8009;
pub const GL_FUNC_ADD_OES = 0x8006;
pub const GL_FUNC_SUBTRACT_OES = 0x800A;
pub const GL_FUNC_REVERSE_SUBTRACT_OES = 0x800B;
pub const GL_ETC1_RGB8_OES = 0x8D64;
pub const GL_DEPTH_COMPONENT24_OES = 0x81A6;
pub const GL_DEPTH_COMPONENT32_OES = 0x81A7;
pub const GL_TEXTURE_CROP_RECT_OES = 0x8B9D;
pub const GL_NONE_OES = 0;
pub const GL_FRAMEBUFFER_OES = 0x8D40;
pub const GL_RENDERBUFFER_OES = 0x8D41;
pub const GL_RGBA4_OES = 0x8056;
pub const GL_RGB5_A1_OES = 0x8057;
pub const GL_RGB565_OES = 0x8D62;
pub const GL_DEPTH_COMPONENT16_OES = 0x81A5;
pub const GL_RENDERBUFFER_WIDTH_OES = 0x8D42;
pub const GL_RENDERBUFFER_HEIGHT_OES = 0x8D43;
pub const GL_RENDERBUFFER_INTERNAL_FORMAT_OES = 0x8D44;
pub const GL_RENDERBUFFER_RED_SIZE_OES = 0x8D50;
pub const GL_RENDERBUFFER_GREEN_SIZE_OES = 0x8D51;
pub const GL_RENDERBUFFER_BLUE_SIZE_OES = 0x8D52;
pub const GL_RENDERBUFFER_ALPHA_SIZE_OES = 0x8D53;
pub const GL_RENDERBUFFER_DEPTH_SIZE_OES = 0x8D54;
pub const GL_RENDERBUFFER_STENCIL_SIZE_OES = 0x8D55;
pub const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES = 0x8CD0;
pub const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES = 0x8CD1;
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES = 0x8CD2;
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES = 0x8CD3;
pub const GL_COLOR_ATTACHMENT0_OES = 0x8CE0;
pub const GL_DEPTH_ATTACHMENT_OES = 0x8D00;
pub const GL_STENCIL_ATTACHMENT_OES = 0x8D20;
pub const GL_FRAMEBUFFER_COMPLETE_OES = 0x8CD5;
pub const GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES = 0x8CD6;
pub const GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES = 0x8CD7;
pub const GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES = 0x8CD9;
pub const GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES = 0x8CDA;
pub const GL_FRAMEBUFFER_UNSUPPORTED_OES = 0x8CDD;
pub const GL_FRAMEBUFFER_BINDING_OES = 0x8CA6;
pub const GL_RENDERBUFFER_BINDING_OES = 0x8CA7;
pub const GL_MAX_RENDERBUFFER_SIZE_OES = 0x84E8;
pub const GL_INVALID_FRAMEBUFFER_OPERATION_OES = 0x0506;
pub const GL_WRITE_ONLY_OES = 0x88B9;
pub const GL_BUFFER_ACCESS_OES = 0x88BB;
pub const GL_BUFFER_MAPPED_OES = 0x88BC;
pub const GL_BUFFER_MAP_POINTER_OES = 0x88BD;
pub const GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES = 0x898D;
pub const GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES = 0x898E;
pub const GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES = 0x898F;
pub const GL_MAX_VERTEX_UNITS_OES = 0x86A4;
pub const GL_MAX_PALETTE_MATRICES_OES = 0x8842;
pub const GL_MATRIX_PALETTE_OES = 0x8840;
pub const GL_MATRIX_INDEX_ARRAY_OES = 0x8844;
pub const GL_WEIGHT_ARRAY_OES = 0x86AD;
pub const GL_CURRENT_PALETTE_MATRIX_OES = 0x8843;
pub const GL_MATRIX_INDEX_ARRAY_SIZE_OES = 0x8846;
pub const GL_MATRIX_INDEX_ARRAY_TYPE_OES = 0x8847;
pub const GL_MATRIX_INDEX_ARRAY_STRIDE_OES = 0x8848;
pub const GL_MATRIX_INDEX_ARRAY_POINTER_OES = 0x8849;
pub const GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES = 0x8B9E;
pub const GL_WEIGHT_ARRAY_SIZE_OES = 0x86AB;
pub const GL_WEIGHT_ARRAY_TYPE_OES = 0x86A9;
pub const GL_WEIGHT_ARRAY_STRIDE_OES = 0x86AA;
pub const GL_WEIGHT_ARRAY_POINTER_OES = 0x86AC;
pub const GL_WEIGHT_ARRAY_BUFFER_BINDING_OES = 0x889E;
pub const GL_DEPTH_STENCIL_OES = 0x84F9;
pub const GL_UNSIGNED_INT_24_8_OES = 0x84FA;
pub const GL_DEPTH24_STENCIL8_OES = 0x88F0;
pub const GL_POINT_SIZE_ARRAY_OES = 0x8B9C;
pub const GL_POINT_SIZE_ARRAY_TYPE_OES = 0x898A;
pub const GL_POINT_SIZE_ARRAY_STRIDE_OES = 0x898B;
pub const GL_POINT_SIZE_ARRAY_POINTER_OES = 0x898C;
pub const GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES = 0x8B9F;
pub const GL_POINT_SPRITE_OES = 0x8861;
pub const GL_COORD_REPLACE_OES = 0x8862;
pub const GL_ALPHA8_OES = 0x803C;
pub const GL_LUMINANCE4_ALPHA4_OES = 0x8043;
pub const GL_LUMINANCE8_ALPHA8_OES = 0x8045;
pub const GL_LUMINANCE8_OES = 0x8040;
pub const GL_RGB8_OES = 0x8051;
pub const GL_RGBA8_OES = 0x8058;
pub const GL_STENCIL_INDEX1_OES = 0x8D46;
pub const GL_STENCIL_INDEX4_OES = 0x8D47;
pub const GL_STENCIL_INDEX8_OES = 0x8D48;
pub const GL_INCR_WRAP_OES = 0x8507;
pub const GL_DECR_WRAP_OES = 0x8508;
pub const GL_FRAMEBUFFER_UNDEFINED_OES = 0x8219;
pub const GL_NORMAL_MAP_OES = 0x8511;
pub const GL_REFLECTION_MAP_OES = 0x8512;
pub const GL_TEXTURE_CUBE_MAP_OES = 0x8513;
pub const GL_TEXTURE_BINDING_CUBE_MAP_OES = 0x8514;
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES = 0x8515;
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES = 0x8516;
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES = 0x8517;
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES = 0x8518;
pub const GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES = 0x8519;
pub const GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES = 0x851A;
pub const GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES = 0x851C;
pub const GL_TEXTURE_GEN_MODE_OES = 0x2500;
pub const GL_TEXTURE_GEN_STR_OES = 0x8D60;
pub const GL_MIRRORED_REPEAT_OES = 0x8370;
pub const GL_VERTEX_ARRAY_BINDING_OES = 0x85B5;
pub const GL_TEXTURE_WIDTH_QCOM = 0x8BD2;
pub const GL_TEXTURE_HEIGHT_QCOM = 0x8BD3;
pub const GL_TEXTURE_DEPTH_QCOM = 0x8BD4;
pub const GL_TEXTURE_INTERNAL_FORMAT_QCOM = 0x8BD5;
pub const GL_TEXTURE_FORMAT_QCOM = 0x8BD6;
pub const GL_TEXTURE_TYPE_QCOM = 0x8BD7;
pub const GL_TEXTURE_IMAGE_VALID_QCOM = 0x8BD8;
pub const GL_TEXTURE_NUM_LEVELS_QCOM = 0x8BD9;
pub const GL_TEXTURE_TARGET_QCOM = 0x8BDA;
pub const GL_TEXTURE_OBJECT_VALID_QCOM = 0x8BDB;
pub const GL_STATE_RESTORE = 0x8BDC;
pub const GL_PERFMON_GLOBAL_MODE_QCOM = 0x8FA0;
pub const GL_COLOR_BUFFER_BIT0_QCOM = 0x00000001;
pub const GL_COLOR_BUFFER_BIT1_QCOM = 0x00000002;
pub const GL_COLOR_BUFFER_BIT2_QCOM = 0x00000004;
pub const GL_COLOR_BUFFER_BIT3_QCOM = 0x00000008;
pub const GL_COLOR_BUFFER_BIT4_QCOM = 0x00000010;
pub const GL_COLOR_BUFFER_BIT5_QCOM = 0x00000020;
pub const GL_COLOR_BUFFER_BIT6_QCOM = 0x00000040;
pub const GL_COLOR_BUFFER_BIT7_QCOM = 0x00000080;
pub const GL_DEPTH_BUFFER_BIT0_QCOM = 0x00000100;
pub const GL_DEPTH_BUFFER_BIT1_QCOM = 0x00000200;
pub const GL_DEPTH_BUFFER_BIT2_QCOM = 0x00000400;
pub const GL_DEPTH_BUFFER_BIT3_QCOM = 0x00000800;
pub const GL_DEPTH_BUFFER_BIT4_QCOM = 0x00001000;
pub const GL_DEPTH_BUFFER_BIT5_QCOM = 0x00002000;
pub const GL_DEPTH_BUFFER_BIT6_QCOM = 0x00004000;
pub const GL_DEPTH_BUFFER_BIT7_QCOM = 0x00008000;
pub const GL_STENCIL_BUFFER_BIT0_QCOM = 0x00010000;
pub const GL_STENCIL_BUFFER_BIT1_QCOM = 0x00020000;
pub const GL_STENCIL_BUFFER_BIT2_QCOM = 0x00040000;
pub const GL_STENCIL_BUFFER_BIT3_QCOM = 0x00080000;
pub const GL_STENCIL_BUFFER_BIT4_QCOM = 0x00100000;
pub const GL_STENCIL_BUFFER_BIT5_QCOM = 0x00200000;
pub const GL_STENCIL_BUFFER_BIT6_QCOM = 0x00400000;
pub const GL_STENCIL_BUFFER_BIT7_QCOM = 0x00800000;
pub const GL_MULTISAMPLE_BUFFER_BIT0_QCOM = 0x01000000;
pub const GL_MULTISAMPLE_BUFFER_BIT1_QCOM = 0x02000000;
pub const GL_MULTISAMPLE_BUFFER_BIT2_QCOM = 0x04000000;
pub const GL_MULTISAMPLE_BUFFER_BIT3_QCOM = 0x08000000;
pub const GL_MULTISAMPLE_BUFFER_BIT4_QCOM = 0x10000000;
pub const GL_MULTISAMPLE_BUFFER_BIT5_QCOM = 0x20000000;
pub const GL_MULTISAMPLE_BUFFER_BIT6_QCOM = 0x40000000;
pub const GL_MULTISAMPLE_BUFFER_BIT7_QCOM = 0x80000000;
pub const GL_WRITEONLY_RENDERING_QCOM = 0x8823;
pub const GL_Z400_BINARY_AMD = 0x8740;
pub const GL_READ_FRAMEBUFFER_ANGLE = 0x8CA8;
pub const GL_DRAW_FRAMEBUFFER_ANGLE = 0x8CA9;
pub const GL_DRAW_FRAMEBUFFER_BINDING_ANGLE = 0x8CA6;
pub const GL_READ_FRAMEBUFFER_BINDING_ANGLE = 0x8CAA;
pub const GL_RENDERBUFFER_SAMPLES_ANGLE = 0x8CAB;
pub const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE = 0x8D56;
pub const GL_MAX_SAMPLES_ANGLE = 0x8D57;
pub const GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE = 0x88FE;
pub const GL_PACK_REVERSE_ROW_ORDER_ANGLE = 0x93A4;
pub const GL_PROGRAM_BINARY_ANGLE = 0x93A6;
pub const GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE = 0x83F2;
pub const GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE = 0x83F3;
pub const GL_TEXTURE_USAGE_ANGLE = 0x93A2;
pub const GL_FRAMEBUFFER_ATTACHMENT_ANGLE = 0x93A3;
pub const GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE = 0x93A0;
pub const GL_MAX_CLIP_DISTANCES_APPLE = 0x0D32;
pub const GL_CLIP_DISTANCE0_APPLE = 0x3000;
pub const GL_CLIP_DISTANCE1_APPLE = 0x3001;
pub const GL_CLIP_DISTANCE2_APPLE = 0x3002;
pub const GL_CLIP_DISTANCE3_APPLE = 0x3003;
pub const GL_CLIP_DISTANCE4_APPLE = 0x3004;
pub const GL_CLIP_DISTANCE5_APPLE = 0x3005;
pub const GL_CLIP_DISTANCE6_APPLE = 0x3006;
pub const GL_CLIP_DISTANCE7_APPLE = 0x3007;
pub const GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE = 0x8C3B;
pub const GL_UNSIGNED_INT_5_9_9_9_REV_APPLE = 0x8C3E;
pub const GL_R11F_G11F_B10F_APPLE = 0x8C3A;
pub const GL_RGB9_E5_APPLE = 0x8C3D;
pub const GL_MALI_PROGRAM_BINARY_ARM = 0x8F61;
pub const GL_MALI_SHADER_BINARY_ARM = 0x8F60;
pub const GL_SHADER_CORE_COUNT_ARM = 0x96F0;
pub const GL_SHADER_CORE_ACTIVE_COUNT_ARM = 0x96F1;
pub const GL_SHADER_CORE_PRESENT_MASK_ARM = 0x96F2;
pub const GL_SHADER_CORE_MAX_WARP_COUNT_ARM = 0x96F3;
pub const GL_SHADER_CORE_PIXEL_RATE_ARM = 0x96F4;
pub const GL_SHADER_CORE_TEXEL_RATE_ARM = 0x96F5;
pub const GL_SHADER_CORE_FMA_RATE_ARM = 0x96F6;
pub const GL_FETCH_PER_SAMPLE_ARM = 0x8F65;
pub const GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM = 0x8F66;
pub const GL_TEXTURE_UNNORMALIZED_COORDINATES_ARM = 0x8F6A;
pub const GL_SMAPHS30_PROGRAM_BINARY_DMP = 0x9251;
pub const GL_SMAPHS_PROGRAM_BINARY_DMP = 0x9252;
pub const GL_DMP_PROGRAM_BINARY_DMP = 0x9253;
pub const GL_SHADER_BINARY_DMP = 0x9250;
pub const GL_SURFACE_COMPRESSION_EXT = 0x96C0;
pub const GL_SURFACE_COMPRESSION_FIXED_RATE_NONE_EXT = 0x96C1;
pub const GL_SURFACE_COMPRESSION_FIXED_RATE_DEFAULT_EXT = 0x96C2;
pub const GL_SAMPLER_EXTERNAL_2D_Y2Y_EXT = 0x8BE7;
pub const GL_SRC1_COLOR_EXT = 0x88F9;
pub const GL_SRC1_ALPHA_EXT = 0x8589;
pub const GL_ONE_MINUS_SRC1_COLOR_EXT = 0x88FA;
pub const GL_ONE_MINUS_SRC1_ALPHA_EXT = 0x88FB;
pub const GL_SRC_ALPHA_SATURATE_EXT = 0x0308;
pub const GL_LOCATION_INDEX_EXT = 0x930F;
pub const GL_MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT = 0x88FC;
pub const GL_MAP_PERSISTENT_BIT_EXT = 0x0040;
pub const GL_MAP_COHERENT_BIT_EXT = 0x0080;
pub const GL_DYNAMIC_STORAGE_BIT_EXT = 0x0100;
pub const GL_CLIENT_STORAGE_BIT_EXT = 0x0200;
pub const GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT = 0x00004000;
pub const GL_BUFFER_IMMUTABLE_STORAGE_EXT = 0x821F;
pub const GL_BUFFER_STORAGE_FLAGS_EXT = 0x8220;
pub const GL_LOWER_LEFT_EXT = 0x8CA1;
pub const GL_UPPER_LEFT_EXT = 0x8CA2;
pub const GL_NEGATIVE_ONE_TO_ONE_EXT = 0x935E;
pub const GL_ZERO_TO_ONE_EXT = 0x935F;
pub const GL_CLIP_ORIGIN_EXT = 0x935C;
pub const GL_CLIP_DEPTH_MODE_EXT = 0x935D;
pub const GL_MAX_CLIP_DISTANCES_EXT = 0x0D32;
pub const GL_MAX_CULL_DISTANCES_EXT = 0x82F9;
pub const GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES_EXT = 0x82FA;
pub const GL_CLIP_DISTANCE0_EXT = 0x3000;
pub const GL_CLIP_DISTANCE1_EXT = 0x3001;
pub const GL_CLIP_DISTANCE2_EXT = 0x3002;
pub const GL_CLIP_DISTANCE3_EXT = 0x3003;
pub const GL_CLIP_DISTANCE4_EXT = 0x3004;
pub const GL_CLIP_DISTANCE5_EXT = 0x3005;
pub const GL_CLIP_DISTANCE6_EXT = 0x3006;
pub const GL_CLIP_DISTANCE7_EXT = 0x3007;
pub const GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT = 0x8211;
pub const GL_UNSIGNED_NORMALIZED_EXT = 0x8C17;
pub const GL_DEPTH_CLAMP_EXT = 0x864F;
pub const GL_QUERY_COUNTER_BITS_EXT = 0x8864;
pub const GL_CURRENT_QUERY_EXT = 0x8865;
pub const GL_QUERY_RESULT_EXT = 0x8866;
pub const GL_QUERY_RESULT_AVAILABLE_EXT = 0x8867;
pub const GL_TIMESTAMP_EXT = 0x8E28;
pub const GL_GPU_DISJOINT_EXT = 0x8FBB;
pub const GL_MAX_DRAW_BUFFERS_EXT = 0x8824;
pub const GL_DRAW_BUFFER0_EXT = 0x8825;
pub const GL_DRAW_BUFFER1_EXT = 0x8826;
pub const GL_DRAW_BUFFER2_EXT = 0x8827;
pub const GL_DRAW_BUFFER3_EXT = 0x8828;
pub const GL_DRAW_BUFFER4_EXT = 0x8829;
pub const GL_DRAW_BUFFER5_EXT = 0x882A;
pub const GL_DRAW_BUFFER6_EXT = 0x882B;
pub const GL_DRAW_BUFFER7_EXT = 0x882C;
pub const GL_DRAW_BUFFER8_EXT = 0x882D;
pub const GL_DRAW_BUFFER9_EXT = 0x882E;
pub const GL_DRAW_BUFFER10_EXT = 0x882F;
pub const GL_DRAW_BUFFER11_EXT = 0x8830;
pub const GL_DRAW_BUFFER12_EXT = 0x8831;
pub const GL_DRAW_BUFFER13_EXT = 0x8832;
pub const GL_DRAW_BUFFER14_EXT = 0x8833;
pub const GL_DRAW_BUFFER15_EXT = 0x8834;
pub const GL_SHADING_RATE_1X1_PIXELS_EXT = 0x96A6;
pub const GL_SHADING_RATE_1X2_PIXELS_EXT = 0x96A7;
pub const GL_SHADING_RATE_2X1_PIXELS_EXT = 0x96A8;
pub const GL_SHADING_RATE_2X2_PIXELS_EXT = 0x96A9;
pub const GL_SHADING_RATE_1X4_PIXELS_EXT = 0x96AA;
pub const GL_SHADING_RATE_4X1_PIXELS_EXT = 0x96AB;
pub const GL_SHADING_RATE_4X2_PIXELS_EXT = 0x96AC;
pub const GL_SHADING_RATE_2X4_PIXELS_EXT = 0x96AD;
pub const GL_SHADING_RATE_4X4_PIXELS_EXT = 0x96AE;
pub const GL_SHADING_RATE_EXT = 0x96D0;
pub const GL_SHADING_RATE_ATTACHMENT_EXT = 0x96D1;
pub const GL_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_EXT = 0x96D2;
pub const GL_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_EXT = 0x96D3;
pub const GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_EXT = 0x96D4;
pub const GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_EXT = 0x96D5;
pub const GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_EXT = 0x96D6;
pub const GL_MIN_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_WIDTH_EXT = 0x96D7;
pub const GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_WIDTH_EXT = 0x96D8;
pub const GL_MIN_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_HEIGHT_EXT = 0x96D9;
pub const GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_HEIGHT_EXT = 0x96DA;
pub const GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_ASPECT_RATIO_EXT = 0x96DB;
pub const GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_LAYERS_EXT = 0x96DC;
pub const GL_FRAGMENT_SHADING_RATE_WITH_SHADER_DEPTH_STENCIL_WRITES_SUPPORTED_EXT = 0x96DD;
pub const GL_FRAGMENT_SHADING_RATE_WITH_SAMPLE_MASK_SUPPORTED_EXT = 0x96DE;
pub const GL_FRAGMENT_SHADING_RATE_ATTACHMENT_WITH_DEFAULT_FRAMEBUFFER_SUPPORTED_EXT = 0x96DF;
pub const GL_FRAGMENT_SHADING_RATE_NON_TRIVIAL_COMBINERS_SUPPORTED_EXT = 0x8F6F;
pub const GL_GEOMETRY_SHADER_BIT_EXT = 0x00000004;
pub const GL_GEOMETRY_LINKED_VERTICES_OUT_EXT = 0x8916;
pub const GL_GEOMETRY_LINKED_INPUT_TYPE_EXT = 0x8917;
pub const GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT = 0x8918;
pub const GL_GEOMETRY_SHADER_INVOCATIONS_EXT = 0x887F;
pub const GL_LAYER_PROVOKING_VERTEX_EXT = 0x825E;
pub const GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT = 0x8A2C;
pub const GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT = 0x8A32;
pub const GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT = 0x9123;
pub const GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT = 0x9124;
pub const GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT = 0x8E5A;
pub const GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT = 0x92CF;
pub const GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT = 0x92D5;
pub const GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT = 0x90CD;
pub const GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT = 0x90D7;
pub const GL_UNDEFINED_VERTEX_EXT = 0x8260;
pub const GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT = 0x9312;
pub const GL_MAX_FRAMEBUFFER_LAYERS_EXT = 0x9317;
pub const GL_REFERENCED_BY_GEOMETRY_SHADER_EXT = 0x9309;
pub const GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT = 0x88FE;
pub const GL_COLOR_ATTACHMENT_EXT = 0x90F0;
pub const GL_MULTIVIEW_EXT = 0x90F1;
pub const GL_DRAW_BUFFER_EXT = 0x0C01;
pub const GL_READ_BUFFER_EXT = 0x0C02;
pub const GL_MAX_MULTIVIEW_BUFFERS_EXT = 0x90F2;
pub const GL_ANY_SAMPLES_PASSED_EXT = 0x8C2F;
pub const GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT = 0x8D6A;
pub const GL_PRIMITIVE_BOUNDING_BOX_EXT = 0x92BE;
pub const GL_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT = 0x00000010;
pub const GL_TEXTURE_PROTECTED_EXT = 0x8BFA;
pub const GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT = 0x8A54;
pub const GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT = 0x8A55;
pub const GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT = 0x8A56;
pub const GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT = 0x8A57;
pub const GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG = 0x93F0;
pub const GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG = 0x93F1;
pub const GL_R16_SNORM_EXT = 0x8F98;
pub const GL_RG16_SNORM_EXT = 0x8F99;
pub const GL_RGBA16_SNORM_EXT = 0x8F9B;
pub const GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT = 0x8F63;
pub const GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT = 0x8F67;
pub const GL_SHADER_PIXEL_LOCAL_STORAGE_EXT = 0x8F64;
pub const GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_FAST_SIZE_EXT = 0x9650;
pub const GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT = 0x9651;
pub const GL_FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT = 0x9652;
pub const GL_TEXTURE_COMPARE_MODE_EXT = 0x884C;
pub const GL_TEXTURE_COMPARE_FUNC_EXT = 0x884D;
pub const GL_COMPARE_REF_TO_TEXTURE_EXT = 0x884E;
pub const GL_SAMPLER_2D_SHADOW_EXT = 0x8B62;
pub const GL_TEXTURE_SPARSE_EXT = 0x91A6;
pub const GL_VIRTUAL_PAGE_SIZE_INDEX_EXT = 0x91A7;
pub const GL_NUM_SPARSE_LEVELS_EXT = 0x91AA;
pub const GL_NUM_VIRTUAL_PAGE_SIZES_EXT = 0x91A8;
pub const GL_VIRTUAL_PAGE_SIZE_X_EXT = 0x9195;
pub const GL_VIRTUAL_PAGE_SIZE_Y_EXT = 0x9196;
pub const GL_VIRTUAL_PAGE_SIZE_Z_EXT = 0x9197;
pub const GL_TEXTURE_CUBE_MAP_ARRAY_OES = 0x9009;
pub const GL_MAX_SPARSE_TEXTURE_SIZE_EXT = 0x9198;
pub const GL_MAX_SPARSE_3D_TEXTURE_SIZE_EXT = 0x9199;
pub const GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT = 0x919A;
pub const GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT = 0x91A9;
pub const GL_PATCHES_EXT = 0x000E;
pub const GL_PATCH_VERTICES_EXT = 0x8E72;
pub const GL_TESS_CONTROL_OUTPUT_VERTICES_EXT = 0x8E75;
pub const GL_TESS_GEN_MODE_EXT = 0x8E76;
pub const GL_TESS_GEN_SPACING_EXT = 0x8E77;
pub const GL_TESS_GEN_VERTEX_ORDER_EXT = 0x8E78;
pub const GL_TESS_GEN_POINT_MODE_EXT = 0x8E79;
pub const GL_ISOLINES_EXT = 0x8E7A;
pub const GL_QUADS_EXT = 0x0007;
pub const GL_FRACTIONAL_ODD_EXT = 0x8E7B;
pub const GL_FRACTIONAL_EVEN_EXT = 0x8E7C;
pub const GL_MAX_PATCH_VERTICES_EXT = 0x8E7D;
pub const GL_MAX_TESS_GEN_LEVEL_EXT = 0x8E7E;
pub const GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT = 0x8E7F;
pub const GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT = 0x8E80;
pub const GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT = 0x8E81;
pub const GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT = 0x8E82;
pub const GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT = 0x8E83;
pub const GL_MAX_TESS_PATCH_COMPONENTS_EXT = 0x8E84;
pub const GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT = 0x8E85;
pub const GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT = 0x8E86;
pub const GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT = 0x8E89;
pub const GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT = 0x8E8A;
pub const GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT = 0x886C;
pub const GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT = 0x886D;
pub const GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT = 0x8E1E;
pub const GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT = 0x8E1F;
pub const GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT = 0x92CD;
pub const GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT = 0x92CE;
pub const GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT = 0x92D3;
pub const GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT = 0x92D4;
pub const GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT = 0x90CB;
pub const GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT = 0x90CC;
pub const GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT = 0x90D8;
pub const GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT = 0x90D9;
pub const GL_IS_PER_PATCH_EXT = 0x92E7;
pub const GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT = 0x9307;
pub const GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT = 0x9308;
pub const GL_TESS_CONTROL_SHADER_EXT = 0x8E88;
pub const GL_TESS_EVALUATION_SHADER_EXT = 0x8E87;
pub const GL_TESS_CONTROL_SHADER_BIT_EXT = 0x00000008;
pub const GL_TESS_EVALUATION_SHADER_BIT_EXT = 0x00000010;
pub const GL_TEXTURE_BORDER_COLOR_EXT = 0x1004;
pub const GL_CLAMP_TO_BORDER_EXT = 0x812D;
pub const GL_TEXTURE_BUFFER_BINDING_EXT = 0x8C2A;
pub const GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT = 0x919F;
pub const GL_TEXTURE_BUFFER_OFFSET_EXT = 0x919D;
pub const GL_TEXTURE_BUFFER_SIZE_EXT = 0x919E;
pub const GL_TEXTURE_ASTC_DECODE_PRECISION_EXT = 0x8F69;
pub const GL_COMPRESSED_RGBA_BPTC_UNORM_EXT = 0x8E8C;
pub const GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT = 0x8E8D;
pub const GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT = 0x8E8E;
pub const GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT = 0x8E8F;
pub const GL_TEXTURE_CUBE_MAP_ARRAY_EXT = 0x9009;
pub const GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT = 0x900A;
pub const GL_SAMPLER_CUBE_MAP_ARRAY_EXT = 0x900C;
pub const GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT = 0x900D;
pub const GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT = 0x900E;
pub const GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT = 0x900F;
pub const GL_TEXTURE_FORMAT_SRGB_OVERRIDE_EXT = 0x8FBF;
pub const GL_R16_EXT = 0x822A;
pub const GL_RG16_EXT = 0x822C;
pub const GL_RGB16_SNORM_EXT = 0x8F9A;
pub const GL_RED_EXT = 0x1903;
pub const GL_RG_EXT = 0x8227;
pub const GL_NUM_SURFACE_COMPRESSION_FIXED_RATES_EXT = 0x8F6E;
pub const GL_SURFACE_COMPRESSION_FIXED_RATE_1BPC_EXT = 0x96C4;
pub const GL_SURFACE_COMPRESSION_FIXED_RATE_2BPC_EXT = 0x96C5;
pub const GL_SURFACE_COMPRESSION_FIXED_RATE_3BPC_EXT = 0x96C6;
pub const GL_SURFACE_COMPRESSION_FIXED_RATE_4BPC_EXT = 0x96C7;
pub const GL_SURFACE_COMPRESSION_FIXED_RATE_5BPC_EXT = 0x96C8;
pub const GL_SURFACE_COMPRESSION_FIXED_RATE_6BPC_EXT = 0x96C9;
pub const GL_SURFACE_COMPRESSION_FIXED_RATE_7BPC_EXT = 0x96CA;
pub const GL_SURFACE_COMPRESSION_FIXED_RATE_8BPC_EXT = 0x96CB;
pub const GL_SURFACE_COMPRESSION_FIXED_RATE_9BPC_EXT = 0x96CC;
pub const GL_SURFACE_COMPRESSION_FIXED_RATE_10BPC_EXT = 0x96CD;
pub const GL_SURFACE_COMPRESSION_FIXED_RATE_11BPC_EXT = 0x96CE;
pub const GL_SURFACE_COMPRESSION_FIXED_RATE_12BPC_EXT = 0x96CF;
pub const GL_UNSIGNED_INT_2_10_10_10_REV_EXT = 0x8368;
pub const GL_TEXTURE_VIEW_MIN_LEVEL_EXT = 0x82DB;
pub const GL_TEXTURE_VIEW_NUM_LEVELS_EXT = 0x82DC;
pub const GL_TEXTURE_VIEW_MIN_LAYER_EXT = 0x82DD;
pub const GL_TEXTURE_VIEW_NUM_LAYERS_EXT = 0x82DE;
pub const GL_UNPACK_ROW_LENGTH_EXT = 0x0CF2;
pub const GL_UNPACK_SKIP_ROWS_EXT = 0x0CF3;
pub const GL_UNPACK_SKIP_PIXELS_EXT = 0x0CF4;
pub const GL_GCCSO_SHADER_BINARY_FJ = 0x9260;
pub const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_AND_DOWNSAMPLE_IMG = 0x913C;
pub const GL_NUM_DOWNSAMPLE_SCALES_IMG = 0x913D;
pub const GL_DOWNSAMPLE_SCALES_IMG = 0x913E;
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG = 0x913F;
pub const GL_SGX_PROGRAM_BINARY_IMG = 0x9130;
pub const GL_SGX_BINARY_IMG = 0x8C0A;
pub const GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG = 0x9137;
pub const GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG = 0x9138;
pub const GL_CUBIC_IMG = 0x9139;
pub const GL_CUBIC_MIPMAP_NEAREST_IMG = 0x913A;
pub const GL_CUBIC_MIPMAP_LINEAR_IMG = 0x913B;
pub const GL_COPY_READ_BUFFER_NV = 0x8F36;
pub const GL_COPY_WRITE_BUFFER_NV = 0x8F37;
pub const GL_COVERAGE_COMPONENT_NV = 0x8ED0;
pub const GL_COVERAGE_COMPONENT4_NV = 0x8ED1;
pub const GL_COVERAGE_ATTACHMENT_NV = 0x8ED2;
pub const GL_COVERAGE_BUFFERS_NV = 0x8ED3;
pub const GL_COVERAGE_SAMPLES_NV = 0x8ED4;
pub const GL_COVERAGE_ALL_FRAGMENTS_NV = 0x8ED5;
pub const GL_COVERAGE_EDGE_FRAGMENTS_NV = 0x8ED6;
pub const GL_COVERAGE_AUTOMATIC_NV = 0x8ED7;
pub const GL_COVERAGE_BUFFER_BIT_NV = 0x00008000;
pub const GL_DEPTH_COMPONENT16_NONLINEAR_NV = 0x8E2C;
pub const GL_MAX_DRAW_BUFFERS_NV = 0x8824;
pub const GL_DRAW_BUFFER0_NV = 0x8825;
pub const GL_DRAW_BUFFER1_NV = 0x8826;
pub const GL_DRAW_BUFFER2_NV = 0x8827;
pub const GL_DRAW_BUFFER3_NV = 0x8828;
pub const GL_DRAW_BUFFER4_NV = 0x8829;
pub const GL_DRAW_BUFFER5_NV = 0x882A;
pub const GL_DRAW_BUFFER6_NV = 0x882B;
pub const GL_DRAW_BUFFER7_NV = 0x882C;
pub const GL_DRAW_BUFFER8_NV = 0x882D;
pub const GL_DRAW_BUFFER9_NV = 0x882E;
pub const GL_DRAW_BUFFER10_NV = 0x882F;
pub const GL_DRAW_BUFFER11_NV = 0x8830;
pub const GL_DRAW_BUFFER12_NV = 0x8831;
pub const GL_DRAW_BUFFER13_NV = 0x8832;
pub const GL_DRAW_BUFFER14_NV = 0x8833;
pub const GL_DRAW_BUFFER15_NV = 0x8834;
pub const GL_COLOR_ATTACHMENT0_NV = 0x8CE0;
pub const GL_COLOR_ATTACHMENT1_NV = 0x8CE1;
pub const GL_COLOR_ATTACHMENT2_NV = 0x8CE2;
pub const GL_COLOR_ATTACHMENT3_NV = 0x8CE3;
pub const GL_COLOR_ATTACHMENT4_NV = 0x8CE4;
pub const GL_COLOR_ATTACHMENT5_NV = 0x8CE5;
pub const GL_COLOR_ATTACHMENT6_NV = 0x8CE6;
pub const GL_COLOR_ATTACHMENT7_NV = 0x8CE7;
pub const GL_COLOR_ATTACHMENT8_NV = 0x8CE8;
pub const GL_COLOR_ATTACHMENT9_NV = 0x8CE9;
pub const GL_COLOR_ATTACHMENT10_NV = 0x8CEA;
pub const GL_COLOR_ATTACHMENT11_NV = 0x8CEB;
pub const GL_COLOR_ATTACHMENT12_NV = 0x8CEC;
pub const GL_COLOR_ATTACHMENT13_NV = 0x8CED;
pub const GL_COLOR_ATTACHMENT14_NV = 0x8CEE;
pub const GL_COLOR_ATTACHMENT15_NV = 0x8CEF;
pub const GL_MAX_COLOR_ATTACHMENTS_NV = 0x8CDF;
pub const GL_READ_FRAMEBUFFER_NV = 0x8CA8;
pub const GL_DRAW_FRAMEBUFFER_NV = 0x8CA9;
pub const GL_DRAW_FRAMEBUFFER_BINDING_NV = 0x8CA6;
pub const GL_READ_FRAMEBUFFER_BINDING_NV = 0x8CAA;
pub const GL_RENDERBUFFER_SAMPLES_NV = 0x8CAB;
pub const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV = 0x8D56;
pub const GL_MAX_SAMPLES_NV = 0x8D57;
pub const GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV = 0x88FE;
pub const GL_FLOAT_MAT2x3_NV = 0x8B65;
pub const GL_FLOAT_MAT2x4_NV = 0x8B66;
pub const GL_FLOAT_MAT3x2_NV = 0x8B67;
pub const GL_FLOAT_MAT3x4_NV = 0x8B68;
pub const GL_FLOAT_MAT4x2_NV = 0x8B69;
pub const GL_FLOAT_MAT4x3_NV = 0x8B6A;
pub const GL_PACK_ROW_LENGTH_NV = 0x0D02;
pub const GL_PACK_SKIP_ROWS_NV = 0x0D03;
pub const GL_PACK_SKIP_PIXELS_NV = 0x0D04;
pub const GL_PIXEL_PACK_BUFFER_NV = 0x88EB;
pub const GL_PIXEL_UNPACK_BUFFER_NV = 0x88EC;
pub const GL_PIXEL_PACK_BUFFER_BINDING_NV = 0x88ED;
pub const GL_PIXEL_UNPACK_BUFFER_BINDING_NV = 0x88EF;
pub const GL_POLYGON_MODE_NV = 0x0B40;
pub const GL_POLYGON_OFFSET_POINT_NV = 0x2A01;
pub const GL_POLYGON_OFFSET_LINE_NV = 0x2A02;
pub const GL_POINT_NV = 0x1B00;
pub const GL_LINE_NV = 0x1B01;
pub const GL_FILL_NV = 0x1B02;
pub const GL_READ_BUFFER_NV = 0x0C02;
pub const GL_SLUMINANCE_NV = 0x8C46;
pub const GL_SLUMINANCE_ALPHA_NV = 0x8C44;
pub const GL_SRGB8_NV = 0x8C41;
pub const GL_SLUMINANCE8_NV = 0x8C47;
pub const GL_SLUMINANCE8_ALPHA8_NV = 0x8C45;
pub const GL_COMPRESSED_SRGB_S3TC_DXT1_NV = 0x8C4C;
pub const GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV = 0x8C4D;
pub const GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV = 0x8C4E;
pub const GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV = 0x8C4F;
pub const GL_ETC1_SRGB8_NV = 0x88EE;
pub const GL_SAMPLER_2D_ARRAY_SHADOW_NV = 0x8DC4;
pub const GL_SAMPLER_CUBE_SHADOW_NV = 0x8DC5;
pub const GL_TEXTURE_BORDER_COLOR_NV = 0x1004;
pub const GL_CLAMP_TO_BORDER_NV = 0x812D;
pub const GL_MAX_VIEWPORTS_NV = 0x825B;
pub const GL_VIEWPORT_SUBPIXEL_BITS_NV = 0x825C;
pub const GL_VIEWPORT_BOUNDS_RANGE_NV = 0x825D;
pub const GL_VIEWPORT_INDEX_PROVOKING_VERTEX_NV = 0x825F;
pub const GL_GEOMETRY_SHADER_OES = 0x8DD9;
pub const GL_GEOMETRY_SHADER_BIT_OES = 0x00000004;
pub const GL_GEOMETRY_LINKED_VERTICES_OUT_OES = 0x8916;
pub const GL_GEOMETRY_LINKED_INPUT_TYPE_OES = 0x8917;
pub const GL_GEOMETRY_LINKED_OUTPUT_TYPE_OES = 0x8918;
pub const GL_GEOMETRY_SHADER_INVOCATIONS_OES = 0x887F;
pub const GL_LAYER_PROVOKING_VERTEX_OES = 0x825E;
pub const GL_LINES_ADJACENCY_OES = 0x000A;
pub const GL_LINE_STRIP_ADJACENCY_OES = 0x000B;
pub const GL_TRIANGLES_ADJACENCY_OES = 0x000C;
pub const GL_TRIANGLE_STRIP_ADJACENCY_OES = 0x000D;
pub const GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_OES = 0x8DDF;
pub const GL_MAX_GEOMETRY_UNIFORM_BLOCKS_OES = 0x8A2C;
pub const GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES = 0x8A32;
pub const GL_MAX_GEOMETRY_INPUT_COMPONENTS_OES = 0x9123;
pub const GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_OES = 0x9124;
pub const GL_MAX_GEOMETRY_OUTPUT_VERTICES_OES = 0x8DE0;
pub const GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES = 0x8DE1;
pub const GL_MAX_GEOMETRY_SHADER_INVOCATIONS_OES = 0x8E5A;
pub const GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES = 0x8C29;
pub const GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES = 0x92CF;
pub const GL_MAX_GEOMETRY_ATOMIC_COUNTERS_OES = 0x92D5;
pub const GL_MAX_GEOMETRY_IMAGE_UNIFORMS_OES = 0x90CD;
pub const GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES = 0x90D7;
pub const GL_FIRST_VERTEX_CONVENTION_OES = 0x8E4D;
pub const GL_LAST_VERTEX_CONVENTION_OES = 0x8E4E;
pub const GL_UNDEFINED_VERTEX_OES = 0x8260;
pub const GL_PRIMITIVES_GENERATED_OES = 0x8C87;
pub const GL_FRAMEBUFFER_DEFAULT_LAYERS_OES = 0x9312;
pub const GL_MAX_FRAMEBUFFER_LAYERS_OES = 0x9317;
pub const GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES = 0x8DA8;
pub const GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES = 0x8DA7;
pub const GL_REFERENCED_BY_GEOMETRY_SHADER_OES = 0x9309;
pub const GL_PROGRAM_BINARY_LENGTH_OES = 0x8741;
pub const GL_NUM_PROGRAM_BINARY_FORMATS_OES = 0x87FE;
pub const GL_PROGRAM_BINARY_FORMATS_OES = 0x87FF;
pub const GL_PRIMITIVE_BOUNDING_BOX_OES = 0x92BE;
pub const GL_SAMPLE_SHADING_OES = 0x8C36;
pub const GL_MIN_SAMPLE_SHADING_VALUE_OES = 0x8C37;
pub const GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES = 0x8E5B;
pub const GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES = 0x8E5C;
pub const GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES = 0x8E5D;
pub const GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES = 0x8B8B;
pub const GL_PATCHES_OES = 0x000E;
pub const GL_PATCH_VERTICES_OES = 0x8E72;
pub const GL_TESS_CONTROL_OUTPUT_VERTICES_OES = 0x8E75;
pub const GL_TESS_GEN_MODE_OES = 0x8E76;
pub const GL_TESS_GEN_SPACING_OES = 0x8E77;
pub const GL_TESS_GEN_VERTEX_ORDER_OES = 0x8E78;
pub const GL_TESS_GEN_POINT_MODE_OES = 0x8E79;
pub const GL_ISOLINES_OES = 0x8E7A;
pub const GL_QUADS_OES = 0x0007;
pub const GL_FRACTIONAL_ODD_OES = 0x8E7B;
pub const GL_FRACTIONAL_EVEN_OES = 0x8E7C;
pub const GL_MAX_PATCH_VERTICES_OES = 0x8E7D;
pub const GL_MAX_TESS_GEN_LEVEL_OES = 0x8E7E;
pub const GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES = 0x8E7F;
pub const GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES = 0x8E80;
pub const GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES = 0x8E81;
pub const GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES = 0x8E82;
pub const GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES = 0x8E83;
pub const GL_MAX_TESS_PATCH_COMPONENTS_OES = 0x8E84;
pub const GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES = 0x8E85;
pub const GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES = 0x8E86;
pub const GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES = 0x8E89;
pub const GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES = 0x8E8A;
pub const GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_OES = 0x886C;
pub const GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES = 0x886D;
pub const GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES = 0x8E1E;
pub const GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES = 0x8E1F;
pub const GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES = 0x92CD;
pub const GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES = 0x92CE;
pub const GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES = 0x92D3;
pub const GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES = 0x92D4;
pub const GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES = 0x90CB;
pub const GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES = 0x90CC;
pub const GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES = 0x90D8;
pub const GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES = 0x90D9;
pub const GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES = 0x8221;
pub const GL_IS_PER_PATCH_OES = 0x92E7;
pub const GL_REFERENCED_BY_TESS_CONTROL_SHADER_OES = 0x9307;
pub const GL_REFERENCED_BY_TESS_EVALUATION_SHADER_OES = 0x9308;
pub const GL_TESS_CONTROL_SHADER_OES = 0x8E88;
pub const GL_TESS_EVALUATION_SHADER_OES = 0x8E87;
pub const GL_TESS_CONTROL_SHADER_BIT_OES = 0x00000008;
pub const GL_TESS_EVALUATION_SHADER_BIT_OES = 0x00000010;
pub const GL_TEXTURE_WRAP_R_OES = 0x8072;
pub const GL_TEXTURE_3D_OES = 0x806F;
pub const GL_TEXTURE_BINDING_3D_OES = 0x806A;
pub const GL_MAX_3D_TEXTURE_SIZE_OES = 0x8073;
pub const GL_SAMPLER_3D_OES = 0x8B5F;
pub const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES = 0x8CD4;
pub const GL_TEXTURE_BORDER_COLOR_OES = 0x1004;
pub const GL_CLAMP_TO_BORDER_OES = 0x812D;
pub const GL_TEXTURE_BUFFER_OES = 0x8C2A;
pub const GL_TEXTURE_BUFFER_BINDING_OES = 0x8C2A;
pub const GL_MAX_TEXTURE_BUFFER_SIZE_OES = 0x8C2B;
pub const GL_TEXTURE_BINDING_BUFFER_OES = 0x8C2C;
pub const GL_TEXTURE_BUFFER_DATA_STORE_BINDING_OES = 0x8C2D;
pub const GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES = 0x919F;
pub const GL_SAMPLER_BUFFER_OES = 0x8DC2;
pub const GL_INT_SAMPLER_BUFFER_OES = 0x8DD0;
pub const GL_UNSIGNED_INT_SAMPLER_BUFFER_OES = 0x8DD8;
pub const GL_IMAGE_BUFFER_OES = 0x9051;
pub const GL_INT_IMAGE_BUFFER_OES = 0x905C;
pub const GL_UNSIGNED_INT_IMAGE_BUFFER_OES = 0x9067;
pub const GL_TEXTURE_BUFFER_OFFSET_OES = 0x919D;
pub const GL_TEXTURE_BUFFER_SIZE_OES = 0x919E;
pub const GL_COMPRESSED_RGBA_ASTC_3x3x3_OES = 0x93C0;
pub const GL_COMPRESSED_RGBA_ASTC_4x3x3_OES = 0x93C1;
pub const GL_COMPRESSED_RGBA_ASTC_4x4x3_OES = 0x93C2;
pub const GL_COMPRESSED_RGBA_ASTC_4x4x4_OES = 0x93C3;
pub const GL_COMPRESSED_RGBA_ASTC_5x4x4_OES = 0x93C4;
pub const GL_COMPRESSED_RGBA_ASTC_5x5x4_OES = 0x93C5;
pub const GL_COMPRESSED_RGBA_ASTC_5x5x5_OES = 0x93C6;
pub const GL_COMPRESSED_RGBA_ASTC_6x5x5_OES = 0x93C7;
pub const GL_COMPRESSED_RGBA_ASTC_6x6x5_OES = 0x93C8;
pub const GL_COMPRESSED_RGBA_ASTC_6x6x6_OES = 0x93C9;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES = 0x93E0;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES = 0x93E1;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES = 0x93E2;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES = 0x93E3;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES = 0x93E4;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES = 0x93E5;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES = 0x93E6;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES = 0x93E7;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES = 0x93E8;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES = 0x93E9;
pub const GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_OES = 0x900A;
pub const GL_SAMPLER_CUBE_MAP_ARRAY_OES = 0x900C;
pub const GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES = 0x900D;
pub const GL_INT_SAMPLER_CUBE_MAP_ARRAY_OES = 0x900E;
pub const GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES = 0x900F;
pub const GL_IMAGE_CUBE_MAP_ARRAY_OES = 0x9054;
pub const GL_INT_IMAGE_CUBE_MAP_ARRAY_OES = 0x905F;
pub const GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES = 0x906A;
pub const GL_HALF_FLOAT_OES = 0x8D61;
pub const GL_STENCIL_INDEX_OES = 0x1901;
pub const GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES = 0x9102;
pub const GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES = 0x9105;
pub const GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES = 0x910B;
pub const GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES = 0x910C;
pub const GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES = 0x910D;
pub const GL_TEXTURE_VIEW_MIN_LEVEL_OES = 0x82DB;
pub const GL_TEXTURE_VIEW_NUM_LEVELS_OES = 0x82DC;
pub const GL_TEXTURE_VIEW_MIN_LAYER_OES = 0x82DD;
pub const GL_TEXTURE_VIEW_NUM_LAYERS_OES = 0x82DE;
pub const GL_UNSIGNED_INT_10_10_10_2_OES = 0x8DF6;
pub const GL_INT_10_10_10_2_OES = 0x8DF7;
pub const GL_MAX_VIEWPORTS_OES = 0x825B;
pub const GL_VIEWPORT_SUBPIXEL_BITS_OES = 0x825C;
pub const GL_VIEWPORT_BOUNDS_RANGE_OES = 0x825D;
pub const GL_VIEWPORT_INDEX_PROVOKING_VERTEX_OES = 0x825F;
pub const GL_ALPHA_TEST_QCOM = 0x0BC0;
pub const GL_ALPHA_TEST_FUNC_QCOM = 0x0BC1;
pub const GL_ALPHA_TEST_REF_QCOM = 0x0BC2;
pub const GL_BINNING_CONTROL_HINT_QCOM = 0x8FB0;
pub const GL_CPU_OPTIMIZED_QCOM = 0x8FB1;
pub const GL_GPU_OPTIMIZED_QCOM = 0x8FB2;
pub const GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM = 0x8FB3;
pub const GL_FOVEATION_ENABLE_BIT_QCOM = 0x00000001;
pub const GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM = 0x00000002;
pub const GL_MOTION_ESTIMATION_SEARCH_BLOCK_X_QCOM = 0x8C90;
pub const GL_MOTION_ESTIMATION_SEARCH_BLOCK_Y_QCOM = 0x8C91;
pub const GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM = 0x96A2;
pub const GL_SHADING_RATE_QCOM = 0x96A4;
pub const GL_SHADING_RATE_PRESERVE_ASPECT_RATIO_QCOM = 0x96A5;
pub const GL_SHADING_RATE_1X1_PIXELS_QCOM = 0x96A6;
pub const GL_SHADING_RATE_1X2_PIXELS_QCOM = 0x96A7;
pub const GL_SHADING_RATE_2X1_PIXELS_QCOM = 0x96A8;
pub const GL_SHADING_RATE_2X2_PIXELS_QCOM = 0x96A9;
pub const GL_SHADING_RATE_4X2_PIXELS_QCOM = 0x96AC;
pub const GL_SHADING_RATE_4X4_PIXELS_QCOM = 0x96AE;
pub const GL_TEXTURE_FOVEATED_FEATURE_BITS_QCOM = 0x8BFB;
pub const GL_TEXTURE_FOVEATED_MIN_PIXEL_DENSITY_QCOM = 0x8BFC;
pub const GL_TEXTURE_FOVEATED_FEATURE_QUERY_QCOM = 0x8BFD;
pub const GL_TEXTURE_FOVEATED_NUM_FOCAL_POINTS_QUERY_QCOM = 0x8BFE;
pub const GL_FRAMEBUFFER_INCOMPLETE_FOVEATION_QCOM = 0x8BFF;
pub const GL_TEXTURE_FOVEATED_CUTOFF_DENSITY_QCOM = 0x96A0;
pub const GL_FOVEATION_SUBSAMPLED_LAYOUT_METHOD_BIT_QCOM = 0x00000004;
pub const GL_MAX_SHADER_SUBSAMPLED_IMAGE_UNITS_QCOM = 0x8FA1;
pub const GL_TEXTURE_LOD_BIAS_QCOM = 0x8C96;
pub const GL_SHADER_BINARY_VIV = 0x8FC4;
pub const GL_PVRIC_SIGNATURE_MISMATCH_IMG = 0x8EA3;
pub const GL_TRP_IMG = 0x8EA0;
pub const GL_TRP_ERROR_CONTEXT_RESET_IMG = 0x8EA1;
pub const GL_TRP_UNSUPPORTED_CONTEXT_IMG = 0x8EA2;
pub const GL_3DFX_multisample = 1;
pub const GL_3DFX_tbuffer = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTbufferMask3DFX.xhtml
pub inline fn glTbufferMask3DFX(arg_3344: GLuint) void {
    return glad_glTbufferMask3DFX.?(arg_3344);
}
pub const GL_3DFX_texture_compression_FXT1 = 1;
pub const GL_AMD_blend_minmax_factor = 1;
pub const GL_AMD_conservative_depth = 1;
pub const GL_AMD_debug_output = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDebugMessageEnableAMD.xhtml
pub inline fn glDebugMessageEnableAMD(arg_3345: GLenum, arg_3346: GLenum, arg_3347: GLsizei, arg_3348: [*c]const GLuint, arg_3349: GLboolean) void {
    return glad_glDebugMessageEnableAMD.?(arg_3345, arg_3346, arg_3347, arg_3348, arg_3349);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDebugMessageInsertAMD.xhtml
pub inline fn glDebugMessageInsertAMD(arg_3350: GLenum, arg_3351: GLenum, arg_3352: GLuint, arg_3353: GLsizei, arg_3354: [*c]const GLchar) void {
    return glad_glDebugMessageInsertAMD.?(arg_3350, arg_3351, arg_3352, arg_3353, arg_3354);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDebugMessageCallbackAMD.xhtml
pub inline fn glDebugMessageCallbackAMD(arg_3355: GLDEBUGPROCAMD, arg_3356: ?*anyopaque) void {
    return glad_glDebugMessageCallbackAMD.?(arg_3355, arg_3356);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetDebugMessageLogAMD.xhtml
pub inline fn glGetDebugMessageLogAMD(arg_3357: GLuint, arg_3358: GLsizei, arg_3359: [*c]GLenum, arg_3360: [*c]GLenum, arg_3361: [*c]GLuint, arg_3362: [*c]GLsizei, arg_3363: [*c]GLchar) GLuint {
    return glad_glGetDebugMessageLogAMD.?(arg_3357, arg_3358, arg_3359, arg_3360, arg_3361, arg_3362, arg_3363);
}
pub const GL_AMD_depth_clamp_separate = 1;
pub const GL_AMD_draw_buffers_blend = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendFuncIndexedAMD.xhtml
pub inline fn glBlendFuncIndexedAMD(arg_3364: GLuint, arg_3365: GLenum, arg_3366: GLenum) void {
    return glad_glBlendFuncIndexedAMD.?(arg_3364, arg_3365, arg_3366);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendFuncSeparateIndexedAMD.xhtml
pub inline fn glBlendFuncSeparateIndexedAMD(arg_3367: GLuint, arg_3368: GLenum, arg_3369: GLenum, arg_3370: GLenum, arg_3371: GLenum) void {
    return glad_glBlendFuncSeparateIndexedAMD.?(arg_3367, arg_3368, arg_3369, arg_3370, arg_3371);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendEquationIndexedAMD.xhtml
pub inline fn glBlendEquationIndexedAMD(arg_3372: GLuint, arg_3373: GLenum) void {
    return glad_glBlendEquationIndexedAMD.?(arg_3372, arg_3373);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendEquationSeparateIndexedAMD.xhtml
pub inline fn glBlendEquationSeparateIndexedAMD(arg_3374: GLuint, arg_3375: GLenum, arg_3376: GLenum) void {
    return glad_glBlendEquationSeparateIndexedAMD.?(arg_3374, arg_3375, arg_3376);
}
pub const GL_AMD_framebuffer_multisample_advanced = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRenderbufferStorageMultisampleAdvancedAMD.xhtml
pub inline fn glRenderbufferStorageMultisampleAdvancedAMD(arg_3377: GLenum, arg_3378: GLsizei, arg_3379: GLsizei, arg_3380: GLenum, arg_3381: GLsizei, arg_3382: GLsizei) void {
    return glad_glRenderbufferStorageMultisampleAdvancedAMD.?(arg_3377, arg_3378, arg_3379, arg_3380, arg_3381, arg_3382);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedRenderbufferStorageMultisampleAdvancedAMD.xhtml
pub inline fn glNamedRenderbufferStorageMultisampleAdvancedAMD(arg_3383: GLuint, arg_3384: GLsizei, arg_3385: GLsizei, arg_3386: GLenum, arg_3387: GLsizei, arg_3388: GLsizei) void {
    return glad_glNamedRenderbufferStorageMultisampleAdvancedAMD.?(arg_3383, arg_3384, arg_3385, arg_3386, arg_3387, arg_3388);
}
pub const GL_AMD_framebuffer_sample_positions = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferSamplePositionsfvAMD.xhtml
pub inline fn glFramebufferSamplePositionsfvAMD(arg_3389: GLenum, arg_3390: GLuint, arg_3391: GLuint, arg_3392: [*c]const GLfloat) void {
    return glad_glFramebufferSamplePositionsfvAMD.?(arg_3389, arg_3390, arg_3391, arg_3392);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedFramebufferSamplePositionsfvAMD.xhtml
pub inline fn glNamedFramebufferSamplePositionsfvAMD(arg_3393: GLuint, arg_3394: GLuint, arg_3395: GLuint, arg_3396: [*c]const GLfloat) void {
    return glad_glNamedFramebufferSamplePositionsfvAMD.?(arg_3393, arg_3394, arg_3395, arg_3396);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFramebufferParameterfvAMD.xhtml
pub inline fn glGetFramebufferParameterfvAMD(arg_3397: GLenum, arg_3398: GLenum, arg_3399: GLuint, arg_3400: GLuint, arg_3401: GLsizei, arg_3402: [*c]GLfloat) void {
    return glad_glGetFramebufferParameterfvAMD.?(arg_3397, arg_3398, arg_3399, arg_3400, arg_3401, arg_3402);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetNamedFramebufferParameterfvAMD.xhtml
pub inline fn glGetNamedFramebufferParameterfvAMD(arg_3403: GLuint, arg_3404: GLenum, arg_3405: GLuint, arg_3406: GLuint, arg_3407: GLsizei, arg_3408: [*c]GLfloat) void {
    return glad_glGetNamedFramebufferParameterfvAMD.?(arg_3403, arg_3404, arg_3405, arg_3406, arg_3407, arg_3408);
}
pub const GL_AMD_gcn_shader = 1;
pub const GL_AMD_gpu_shader_half_float = 1;
pub const GL_AMD_gpu_shader_int16 = 1;
pub const GL_AMD_gpu_shader_int64 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform1i64NV.xhtml
pub inline fn glUniform1i64NV(arg_3409: GLint, arg_3410: GLint64EXT) void {
    return glad_glUniform1i64NV.?(arg_3409, arg_3410);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform2i64NV.xhtml
pub inline fn glUniform2i64NV(arg_3411: GLint, arg_3412: GLint64EXT, arg_3413: GLint64EXT) void {
    return glad_glUniform2i64NV.?(arg_3411, arg_3412, arg_3413);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform3i64NV.xhtml
pub inline fn glUniform3i64NV(arg_3414: GLint, arg_3415: GLint64EXT, arg_3416: GLint64EXT, arg_3417: GLint64EXT) void {
    return glad_glUniform3i64NV.?(arg_3414, arg_3415, arg_3416, arg_3417);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform4i64NV.xhtml
pub inline fn glUniform4i64NV(arg_3418: GLint, arg_3419: GLint64EXT, arg_3420: GLint64EXT, arg_3421: GLint64EXT, arg_3422: GLint64EXT) void {
    return glad_glUniform4i64NV.?(arg_3418, arg_3419, arg_3420, arg_3421, arg_3422);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform1i64vNV.xhtml
pub inline fn glUniform1i64vNV(arg_3423: GLint, arg_3424: GLsizei, arg_3425: [*c]const GLint64EXT) void {
    return glad_glUniform1i64vNV.?(arg_3423, arg_3424, arg_3425);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform2i64vNV.xhtml
pub inline fn glUniform2i64vNV(arg_3426: GLint, arg_3427: GLsizei, arg_3428: [*c]const GLint64EXT) void {
    return glad_glUniform2i64vNV.?(arg_3426, arg_3427, arg_3428);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform3i64vNV.xhtml
pub inline fn glUniform3i64vNV(arg_3429: GLint, arg_3430: GLsizei, arg_3431: [*c]const GLint64EXT) void {
    return glad_glUniform3i64vNV.?(arg_3429, arg_3430, arg_3431);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform4i64vNV.xhtml
pub inline fn glUniform4i64vNV(arg_3432: GLint, arg_3433: GLsizei, arg_3434: [*c]const GLint64EXT) void {
    return glad_glUniform4i64vNV.?(arg_3432, arg_3433, arg_3434);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform1ui64NV.xhtml
pub inline fn glUniform1ui64NV(arg_3435: GLint, arg_3436: GLuint64EXT) void {
    return glad_glUniform1ui64NV.?(arg_3435, arg_3436);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform2ui64NV.xhtml
pub inline fn glUniform2ui64NV(arg_3437: GLint, arg_3438: GLuint64EXT, arg_3439: GLuint64EXT) void {
    return glad_glUniform2ui64NV.?(arg_3437, arg_3438, arg_3439);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform3ui64NV.xhtml
pub inline fn glUniform3ui64NV(arg_3440: GLint, arg_3441: GLuint64EXT, arg_3442: GLuint64EXT, arg_3443: GLuint64EXT) void {
    return glad_glUniform3ui64NV.?(arg_3440, arg_3441, arg_3442, arg_3443);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform4ui64NV.xhtml
pub inline fn glUniform4ui64NV(arg_3444: GLint, arg_3445: GLuint64EXT, arg_3446: GLuint64EXT, arg_3447: GLuint64EXT, arg_3448: GLuint64EXT) void {
    return glad_glUniform4ui64NV.?(arg_3444, arg_3445, arg_3446, arg_3447, arg_3448);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform1ui64vNV.xhtml
pub inline fn glUniform1ui64vNV(arg_3449: GLint, arg_3450: GLsizei, arg_3451: [*c]const GLuint64EXT) void {
    return glad_glUniform1ui64vNV.?(arg_3449, arg_3450, arg_3451);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform2ui64vNV.xhtml
pub inline fn glUniform2ui64vNV(arg_3452: GLint, arg_3453: GLsizei, arg_3454: [*c]const GLuint64EXT) void {
    return glad_glUniform2ui64vNV.?(arg_3452, arg_3453, arg_3454);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform3ui64vNV.xhtml
pub inline fn glUniform3ui64vNV(arg_3455: GLint, arg_3456: GLsizei, arg_3457: [*c]const GLuint64EXT) void {
    return glad_glUniform3ui64vNV.?(arg_3455, arg_3456, arg_3457);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform4ui64vNV.xhtml
pub inline fn glUniform4ui64vNV(arg_3458: GLint, arg_3459: GLsizei, arg_3460: [*c]const GLuint64EXT) void {
    return glad_glUniform4ui64vNV.?(arg_3458, arg_3459, arg_3460);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetUniformi64vNV.xhtml
pub inline fn glGetUniformi64vNV(arg_3461: GLuint, arg_3462: GLint, arg_3463: [*c]GLint64EXT) void {
    return glad_glGetUniformi64vNV.?(arg_3461, arg_3462, arg_3463);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetUniformui64vNV.xhtml
pub inline fn glGetUniformui64vNV(arg_3464: GLuint, arg_3465: GLint, arg_3466: [*c]GLuint64EXT) void {
    return glad_glGetUniformui64vNV.?(arg_3464, arg_3465, arg_3466);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform1i64NV.xhtml
pub inline fn glProgramUniform1i64NV(arg_3467: GLuint, arg_3468: GLint, arg_3469: GLint64EXT) void {
    return glad_glProgramUniform1i64NV.?(arg_3467, arg_3468, arg_3469);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform2i64NV.xhtml
pub inline fn glProgramUniform2i64NV(arg_3470: GLuint, arg_3471: GLint, arg_3472: GLint64EXT, arg_3473: GLint64EXT) void {
    return glad_glProgramUniform2i64NV.?(arg_3470, arg_3471, arg_3472, arg_3473);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform3i64NV.xhtml
pub inline fn glProgramUniform3i64NV(arg_3474: GLuint, arg_3475: GLint, arg_3476: GLint64EXT, arg_3477: GLint64EXT, arg_3478: GLint64EXT) void {
    return glad_glProgramUniform3i64NV.?(arg_3474, arg_3475, arg_3476, arg_3477, arg_3478);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform4i64NV.xhtml
pub inline fn glProgramUniform4i64NV(arg_3479: GLuint, arg_3480: GLint, arg_3481: GLint64EXT, arg_3482: GLint64EXT, arg_3483: GLint64EXT, arg_3484: GLint64EXT) void {
    return glad_glProgramUniform4i64NV.?(arg_3479, arg_3480, arg_3481, arg_3482, arg_3483, arg_3484);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform1i64vNV.xhtml
pub inline fn glProgramUniform1i64vNV(arg_3485: GLuint, arg_3486: GLint, arg_3487: GLsizei, arg_3488: [*c]const GLint64EXT) void {
    return glad_glProgramUniform1i64vNV.?(arg_3485, arg_3486, arg_3487, arg_3488);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform2i64vNV.xhtml
pub inline fn glProgramUniform2i64vNV(arg_3489: GLuint, arg_3490: GLint, arg_3491: GLsizei, arg_3492: [*c]const GLint64EXT) void {
    return glad_glProgramUniform2i64vNV.?(arg_3489, arg_3490, arg_3491, arg_3492);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform3i64vNV.xhtml
pub inline fn glProgramUniform3i64vNV(arg_3493: GLuint, arg_3494: GLint, arg_3495: GLsizei, arg_3496: [*c]const GLint64EXT) void {
    return glad_glProgramUniform3i64vNV.?(arg_3493, arg_3494, arg_3495, arg_3496);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform4i64vNV.xhtml
pub inline fn glProgramUniform4i64vNV(arg_3497: GLuint, arg_3498: GLint, arg_3499: GLsizei, arg_3500: [*c]const GLint64EXT) void {
    return glad_glProgramUniform4i64vNV.?(arg_3497, arg_3498, arg_3499, arg_3500);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform1ui64NV.xhtml
pub inline fn glProgramUniform1ui64NV(arg_3501: GLuint, arg_3502: GLint, arg_3503: GLuint64EXT) void {
    return glad_glProgramUniform1ui64NV.?(arg_3501, arg_3502, arg_3503);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform2ui64NV.xhtml
pub inline fn glProgramUniform2ui64NV(arg_3504: GLuint, arg_3505: GLint, arg_3506: GLuint64EXT, arg_3507: GLuint64EXT) void {
    return glad_glProgramUniform2ui64NV.?(arg_3504, arg_3505, arg_3506, arg_3507);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform3ui64NV.xhtml
pub inline fn glProgramUniform3ui64NV(arg_3508: GLuint, arg_3509: GLint, arg_3510: GLuint64EXT, arg_3511: GLuint64EXT, arg_3512: GLuint64EXT) void {
    return glad_glProgramUniform3ui64NV.?(arg_3508, arg_3509, arg_3510, arg_3511, arg_3512);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform4ui64NV.xhtml
pub inline fn glProgramUniform4ui64NV(arg_3513: GLuint, arg_3514: GLint, arg_3515: GLuint64EXT, arg_3516: GLuint64EXT, arg_3517: GLuint64EXT, arg_3518: GLuint64EXT) void {
    return glad_glProgramUniform4ui64NV.?(arg_3513, arg_3514, arg_3515, arg_3516, arg_3517, arg_3518);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform1ui64vNV.xhtml
pub inline fn glProgramUniform1ui64vNV(arg_3519: GLuint, arg_3520: GLint, arg_3521: GLsizei, arg_3522: [*c]const GLuint64EXT) void {
    return glad_glProgramUniform1ui64vNV.?(arg_3519, arg_3520, arg_3521, arg_3522);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform2ui64vNV.xhtml
pub inline fn glProgramUniform2ui64vNV(arg_3523: GLuint, arg_3524: GLint, arg_3525: GLsizei, arg_3526: [*c]const GLuint64EXT) void {
    return glad_glProgramUniform2ui64vNV.?(arg_3523, arg_3524, arg_3525, arg_3526);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform3ui64vNV.xhtml
pub inline fn glProgramUniform3ui64vNV(arg_3527: GLuint, arg_3528: GLint, arg_3529: GLsizei, arg_3530: [*c]const GLuint64EXT) void {
    return glad_glProgramUniform3ui64vNV.?(arg_3527, arg_3528, arg_3529, arg_3530);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform4ui64vNV.xhtml
pub inline fn glProgramUniform4ui64vNV(arg_3531: GLuint, arg_3532: GLint, arg_3533: GLsizei, arg_3534: [*c]const GLuint64EXT) void {
    return glad_glProgramUniform4ui64vNV.?(arg_3531, arg_3532, arg_3533, arg_3534);
}
pub const GL_AMD_interleaved_elements = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribParameteriAMD.xhtml
pub inline fn glVertexAttribParameteriAMD(arg_3535: GLuint, arg_3536: GLenum, arg_3537: GLint) void {
    return glad_glVertexAttribParameteriAMD.?(arg_3535, arg_3536, arg_3537);
}
pub const GL_AMD_multi_draw_indirect = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiDrawArraysIndirectAMD.xhtml
pub inline fn glMultiDrawArraysIndirectAMD(arg_3538: GLenum, arg_3539: ?*const anyopaque, arg_3540: GLsizei, arg_3541: GLsizei) void {
    return glad_glMultiDrawArraysIndirectAMD.?(arg_3538, arg_3539, arg_3540, arg_3541);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiDrawElementsIndirectAMD.xhtml
pub inline fn glMultiDrawElementsIndirectAMD(arg_3542: GLenum, arg_3543: GLenum, arg_3544: ?*const anyopaque, arg_3545: GLsizei, arg_3546: GLsizei) void {
    return glad_glMultiDrawElementsIndirectAMD.?(arg_3542, arg_3543, arg_3544, arg_3545, arg_3546);
}
pub const GL_AMD_name_gen_delete = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenNamesAMD.xhtml
pub inline fn glGenNamesAMD(arg_3547: GLenum, arg_3548: GLuint, arg_3549: [*c]GLuint) void {
    return glad_glGenNamesAMD.?(arg_3547, arg_3548, arg_3549);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteNamesAMD.xhtml
pub inline fn glDeleteNamesAMD(arg_3550: GLenum, arg_3551: GLuint, arg_3552: [*c]const GLuint) void {
    return glad_glDeleteNamesAMD.?(arg_3550, arg_3551, arg_3552);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsNameAMD.xhtml
pub inline fn glIsNameAMD(arg_3553: GLenum, arg_3554: GLuint) GLboolean {
    return glad_glIsNameAMD.?(arg_3553, arg_3554);
}
pub const GL_AMD_occlusion_query_event = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glQueryObjectParameteruiAMD.xhtml
pub inline fn glQueryObjectParameteruiAMD(arg_3555: GLenum, arg_3556: GLuint, arg_3557: GLenum, arg_3558: GLuint) void {
    return glad_glQueryObjectParameteruiAMD.?(arg_3555, arg_3556, arg_3557, arg_3558);
}
pub const GL_AMD_performance_monitor = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPerfMonitorGroupsAMD.xhtml
pub inline fn glGetPerfMonitorGroupsAMD(arg_3559: [*c]GLint, arg_3560: GLsizei, arg_3561: [*c]GLuint) void {
    return glad_glGetPerfMonitorGroupsAMD.?(arg_3559, arg_3560, arg_3561);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPerfMonitorCountersAMD.xhtml
pub inline fn glGetPerfMonitorCountersAMD(arg_3562: GLuint, arg_3563: [*c]GLint, arg_3564: [*c]GLint, arg_3565: GLsizei, arg_3566: [*c]GLuint) void {
    return glad_glGetPerfMonitorCountersAMD.?(arg_3562, arg_3563, arg_3564, arg_3565, arg_3566);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPerfMonitorGroupStringAMD.xhtml
pub inline fn glGetPerfMonitorGroupStringAMD(arg_3567: GLuint, arg_3568: GLsizei, arg_3569: [*c]GLsizei, arg_3570: [*c]GLchar) void {
    return glad_glGetPerfMonitorGroupStringAMD.?(arg_3567, arg_3568, arg_3569, arg_3570);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPerfMonitorCounterStringAMD.xhtml
pub inline fn glGetPerfMonitorCounterStringAMD(arg_3571: GLuint, arg_3572: GLuint, arg_3573: GLsizei, arg_3574: [*c]GLsizei, arg_3575: [*c]GLchar) void {
    return glad_glGetPerfMonitorCounterStringAMD.?(arg_3571, arg_3572, arg_3573, arg_3574, arg_3575);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPerfMonitorCounterInfoAMD.xhtml
pub inline fn glGetPerfMonitorCounterInfoAMD(arg_3576: GLuint, arg_3577: GLuint, arg_3578: GLenum, arg_3579: ?*anyopaque) void {
    return glad_glGetPerfMonitorCounterInfoAMD.?(arg_3576, arg_3577, arg_3578, arg_3579);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenPerfMonitorsAMD.xhtml
pub inline fn glGenPerfMonitorsAMD(arg_3580: GLsizei, arg_3581: [*c]GLuint) void {
    return glad_glGenPerfMonitorsAMD.?(arg_3580, arg_3581);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeletePerfMonitorsAMD.xhtml
pub inline fn glDeletePerfMonitorsAMD(arg_3582: GLsizei, arg_3583: [*c]GLuint) void {
    return glad_glDeletePerfMonitorsAMD.?(arg_3582, arg_3583);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSelectPerfMonitorCountersAMD.xhtml
pub inline fn glSelectPerfMonitorCountersAMD(arg_3584: GLuint, arg_3585: GLboolean, arg_3586: GLuint, arg_3587: GLint, arg_3588: [*c]GLuint) void {
    return glad_glSelectPerfMonitorCountersAMD.?(arg_3584, arg_3585, arg_3586, arg_3587, arg_3588);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBeginPerfMonitorAMD.xhtml
pub inline fn glBeginPerfMonitorAMD(arg_3589: GLuint) void {
    return glad_glBeginPerfMonitorAMD.?(arg_3589);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEndPerfMonitorAMD.xhtml
pub inline fn glEndPerfMonitorAMD(arg_3590: GLuint) void {
    return glad_glEndPerfMonitorAMD.?(arg_3590);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPerfMonitorCounterDataAMD.xhtml
pub inline fn glGetPerfMonitorCounterDataAMD(arg_3591: GLuint, arg_3592: GLenum, arg_3593: GLsizei, arg_3594: [*c]GLuint, arg_3595: [*c]GLint) void {
    return glad_glGetPerfMonitorCounterDataAMD.?(arg_3591, arg_3592, arg_3593, arg_3594, arg_3595);
}
pub const GL_AMD_pinned_memory = 1;
pub const GL_AMD_query_buffer_object = 1;
pub const GL_AMD_sample_positions = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSetMultisamplefvAMD.xhtml
pub inline fn glSetMultisamplefvAMD(arg_3596: GLenum, arg_3597: GLuint, arg_3598: [*c]const GLfloat) void {
    return glad_glSetMultisamplefvAMD.?(arg_3596, arg_3597, arg_3598);
}
pub const GL_AMD_seamless_cubemap_per_texture = 1;
pub const GL_AMD_shader_atomic_counter_ops = 1;
pub const GL_AMD_shader_ballot = 1;
pub const GL_AMD_shader_explicit_vertex_parameter = 1;
pub const GL_AMD_shader_gpu_shader_half_float_fetch = 1;
pub const GL_AMD_shader_image_load_store_lod = 1;
pub const GL_AMD_shader_stencil_export = 1;
pub const GL_AMD_shader_trinary_minmax = 1;
pub const GL_AMD_sparse_texture = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexStorageSparseAMD.xhtml
pub inline fn glTexStorageSparseAMD(arg_3599: GLenum, arg_3600: GLenum, arg_3601: GLsizei, arg_3602: GLsizei, arg_3603: GLsizei, arg_3604: GLsizei, arg_3605: GLbitfield) void {
    return glad_glTexStorageSparseAMD.?(arg_3599, arg_3600, arg_3601, arg_3602, arg_3603, arg_3604, arg_3605);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureStorageSparseAMD.xhtml
pub inline fn glTextureStorageSparseAMD(arg_3606: GLuint, arg_3607: GLenum, arg_3608: GLenum, arg_3609: GLsizei, arg_3610: GLsizei, arg_3611: GLsizei, arg_3612: GLsizei, arg_3613: GLbitfield) void {
    return glad_glTextureStorageSparseAMD.?(arg_3606, arg_3607, arg_3608, arg_3609, arg_3610, arg_3611, arg_3612, arg_3613);
}
pub const GL_AMD_stencil_operation_extended = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glStencilOpValueAMD.xhtml
pub inline fn glStencilOpValueAMD(arg_3614: GLenum, arg_3615: GLuint) void {
    return glad_glStencilOpValueAMD.?(arg_3614, arg_3615);
}
pub const GL_AMD_texture_gather_bias_lod = 1;
pub const GL_AMD_texture_texture4 = 1;
pub const GL_AMD_transform_feedback3_lines_triangles = 1;
pub const GL_AMD_transform_feedback4 = 1;
pub const GL_AMD_vertex_shader_layer = 1;
pub const GL_AMD_vertex_shader_tessellator = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTessellationFactorAMD.xhtml
pub inline fn glTessellationFactorAMD(arg_3616: GLfloat) void {
    return glad_glTessellationFactorAMD.?(arg_3616);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTessellationModeAMD.xhtml
pub inline fn glTessellationModeAMD(arg_3617: GLenum) void {
    return glad_glTessellationModeAMD.?(arg_3617);
}
pub const GL_AMD_vertex_shader_viewport_index = 1;
pub const GL_APPLE_aux_depth_stencil = 1;
pub const GL_APPLE_client_storage = 1;
pub const GL_APPLE_element_array = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glElementPointerAPPLE.xhtml
pub inline fn glElementPointerAPPLE(arg_3618: GLenum, arg_3619: ?*const anyopaque) void {
    return glad_glElementPointerAPPLE.?(arg_3618, arg_3619);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawElementArrayAPPLE.xhtml
pub inline fn glDrawElementArrayAPPLE(arg_3620: GLenum, arg_3621: GLint, arg_3622: GLsizei) void {
    return glad_glDrawElementArrayAPPLE.?(arg_3620, arg_3621, arg_3622);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawRangeElementArrayAPPLE.xhtml
pub inline fn glDrawRangeElementArrayAPPLE(arg_3623: GLenum, arg_3624: GLuint, arg_3625: GLuint, arg_3626: GLint, arg_3627: GLsizei) void {
    return glad_glDrawRangeElementArrayAPPLE.?(arg_3623, arg_3624, arg_3625, arg_3626, arg_3627);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiDrawElementArrayAPPLE.xhtml
pub inline fn glMultiDrawElementArrayAPPLE(arg_3628: GLenum, arg_3629: [*c]const GLint, arg_3630: [*c]const GLsizei, arg_3631: GLsizei) void {
    return glad_glMultiDrawElementArrayAPPLE.?(arg_3628, arg_3629, arg_3630, arg_3631);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiDrawRangeElementArrayAPPLE.xhtml
pub inline fn glMultiDrawRangeElementArrayAPPLE(arg_3632: GLenum, arg_3633: GLuint, arg_3634: GLuint, arg_3635: [*c]const GLint, arg_3636: [*c]const GLsizei, arg_3637: GLsizei) void {
    return glad_glMultiDrawRangeElementArrayAPPLE.?(arg_3632, arg_3633, arg_3634, arg_3635, arg_3636, arg_3637);
}
pub const GL_APPLE_fence = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenFencesAPPLE.xhtml
pub inline fn glGenFencesAPPLE(arg_3638: GLsizei, arg_3639: [*c]GLuint) void {
    return glad_glGenFencesAPPLE.?(arg_3638, arg_3639);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteFencesAPPLE.xhtml
pub inline fn glDeleteFencesAPPLE(arg_3640: GLsizei, arg_3641: [*c]const GLuint) void {
    return glad_glDeleteFencesAPPLE.?(arg_3640, arg_3641);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSetFenceAPPLE.xhtml
pub inline fn glSetFenceAPPLE(arg_3642: GLuint) void {
    return glad_glSetFenceAPPLE.?(arg_3642);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsFenceAPPLE.xhtml
pub inline fn glIsFenceAPPLE(arg_3643: GLuint) GLboolean {
    return glad_glIsFenceAPPLE.?(arg_3643);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTestFenceAPPLE.xhtml
pub inline fn glTestFenceAPPLE(arg_3644: GLuint) GLboolean {
    return glad_glTestFenceAPPLE.?(arg_3644);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFinishFenceAPPLE.xhtml
pub inline fn glFinishFenceAPPLE(arg_3645: GLuint) void {
    return glad_glFinishFenceAPPLE.?(arg_3645);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTestObjectAPPLE.xhtml
pub inline fn glTestObjectAPPLE(arg_3646: GLenum, arg_3647: GLuint) GLboolean {
    return glad_glTestObjectAPPLE.?(arg_3646, arg_3647);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFinishObjectAPPLE.xhtml
pub inline fn glFinishObjectAPPLE(arg_3648: GLenum, arg_3649: GLint) void {
    return glad_glFinishObjectAPPLE.?(arg_3648, arg_3649);
}
pub const GL_APPLE_float_pixels = 1;
pub const GL_APPLE_flush_buffer_range = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBufferParameteriAPPLE.xhtml
pub inline fn glBufferParameteriAPPLE(arg_3650: GLenum, arg_3651: GLenum, arg_3652: GLint) void {
    return glad_glBufferParameteriAPPLE.?(arg_3650, arg_3651, arg_3652);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFlushMappedBufferRangeAPPLE.xhtml
pub inline fn glFlushMappedBufferRangeAPPLE(arg_3653: GLenum, arg_3654: GLintptr, arg_3655: GLsizeiptr) void {
    return glad_glFlushMappedBufferRangeAPPLE.?(arg_3653, arg_3654, arg_3655);
}
pub const GL_APPLE_object_purgeable = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glObjectPurgeableAPPLE.xhtml
pub inline fn glObjectPurgeableAPPLE(arg_3656: GLenum, arg_3657: GLuint, arg_3658: GLenum) GLenum {
    return glad_glObjectPurgeableAPPLE.?(arg_3656, arg_3657, arg_3658);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glObjectUnpurgeableAPPLE.xhtml
pub inline fn glObjectUnpurgeableAPPLE(arg_3659: GLenum, arg_3660: GLuint, arg_3661: GLenum) GLenum {
    return glad_glObjectUnpurgeableAPPLE.?(arg_3659, arg_3660, arg_3661);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetObjectParameterivAPPLE.xhtml
pub inline fn glGetObjectParameterivAPPLE(arg_3662: GLenum, arg_3663: GLuint, arg_3664: GLenum, arg_3665: [*c]GLint) void {
    return glad_glGetObjectParameterivAPPLE.?(arg_3662, arg_3663, arg_3664, arg_3665);
}
pub const GL_APPLE_rgb_422 = 1;
pub const GL_APPLE_row_bytes = 1;
pub const GL_APPLE_specular_vector = 1;
pub const GL_APPLE_texture_range = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureRangeAPPLE.xhtml
pub inline fn glTextureRangeAPPLE(arg_3666: GLenum, arg_3667: GLsizei, arg_3668: ?*const anyopaque) void {
    return glad_glTextureRangeAPPLE.?(arg_3666, arg_3667, arg_3668);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexParameterPointervAPPLE.xhtml
pub inline fn glGetTexParameterPointervAPPLE(arg_3669: GLenum, arg_3670: GLenum, arg_3671: [*c]?*anyopaque) void {
    return glad_glGetTexParameterPointervAPPLE.?(arg_3669, arg_3670, arg_3671);
}
pub const GL_APPLE_transform_hint = 1;
pub const GL_APPLE_vertex_array_object = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindVertexArrayAPPLE.xhtml
pub inline fn glBindVertexArrayAPPLE(arg_3672: GLuint) void {
    return glad_glBindVertexArrayAPPLE.?(arg_3672);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteVertexArraysAPPLE.xhtml
pub inline fn glDeleteVertexArraysAPPLE(arg_3673: GLsizei, arg_3674: [*c]const GLuint) void {
    return glad_glDeleteVertexArraysAPPLE.?(arg_3673, arg_3674);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenVertexArraysAPPLE.xhtml
pub inline fn glGenVertexArraysAPPLE(arg_3675: GLsizei, arg_3676: [*c]GLuint) void {
    return glad_glGenVertexArraysAPPLE.?(arg_3675, arg_3676);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsVertexArrayAPPLE.xhtml
pub inline fn glIsVertexArrayAPPLE(arg_3677: GLuint) GLboolean {
    return glad_glIsVertexArrayAPPLE.?(arg_3677);
}
pub const GL_APPLE_vertex_array_range = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayRangeAPPLE.xhtml
pub inline fn glVertexArrayRangeAPPLE(arg_3678: GLsizei, arg_3679: ?*anyopaque) void {
    return glad_glVertexArrayRangeAPPLE.?(arg_3678, arg_3679);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFlushVertexArrayRangeAPPLE.xhtml
pub inline fn glFlushVertexArrayRangeAPPLE(arg_3680: GLsizei, arg_3681: ?*anyopaque) void {
    return glad_glFlushVertexArrayRangeAPPLE.?(arg_3680, arg_3681);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayParameteriAPPLE.xhtml
pub inline fn glVertexArrayParameteriAPPLE(arg_3682: GLenum, arg_3683: GLint) void {
    return glad_glVertexArrayParameteriAPPLE.?(arg_3682, arg_3683);
}
pub const GL_APPLE_vertex_program_evaluators = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEnableVertexAttribAPPLE.xhtml
pub inline fn glEnableVertexAttribAPPLE(arg_3684: GLuint, arg_3685: GLenum) void {
    return glad_glEnableVertexAttribAPPLE.?(arg_3684, arg_3685);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDisableVertexAttribAPPLE.xhtml
pub inline fn glDisableVertexAttribAPPLE(arg_3686: GLuint, arg_3687: GLenum) void {
    return glad_glDisableVertexAttribAPPLE.?(arg_3686, arg_3687);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsVertexAttribEnabledAPPLE.xhtml
pub inline fn glIsVertexAttribEnabledAPPLE(arg_3688: GLuint, arg_3689: GLenum) GLboolean {
    return glad_glIsVertexAttribEnabledAPPLE.?(arg_3688, arg_3689);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMapVertexAttrib1dAPPLE.xhtml
pub inline fn glMapVertexAttrib1dAPPLE(arg_3690: GLuint, arg_3691: GLuint, arg_3692: GLdouble, arg_3693: GLdouble, arg_3694: GLint, arg_3695: GLint, arg_3696: [*c]const GLdouble) void {
    return glad_glMapVertexAttrib1dAPPLE.?(arg_3690, arg_3691, arg_3692, arg_3693, arg_3694, arg_3695, arg_3696);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMapVertexAttrib1fAPPLE.xhtml
pub inline fn glMapVertexAttrib1fAPPLE(arg_3697: GLuint, arg_3698: GLuint, arg_3699: GLfloat, arg_3700: GLfloat, arg_3701: GLint, arg_3702: GLint, arg_3703: [*c]const GLfloat) void {
    return glad_glMapVertexAttrib1fAPPLE.?(arg_3697, arg_3698, arg_3699, arg_3700, arg_3701, arg_3702, arg_3703);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMapVertexAttrib2dAPPLE.xhtml
pub inline fn glMapVertexAttrib2dAPPLE(arg_3704: GLuint, arg_3705: GLuint, arg_3706: GLdouble, arg_3707: GLdouble, arg_3708: GLint, arg_3709: GLint, arg_3710: GLdouble, arg_3711: GLdouble, arg_3712: GLint, arg_3713: GLint, arg_3714: [*c]const GLdouble) void {
    return glad_glMapVertexAttrib2dAPPLE.?(arg_3704, arg_3705, arg_3706, arg_3707, arg_3708, arg_3709, arg_3710, arg_3711, arg_3712, arg_3713, arg_3714);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMapVertexAttrib2fAPPLE.xhtml
pub inline fn glMapVertexAttrib2fAPPLE(arg_3715: GLuint, arg_3716: GLuint, arg_3717: GLfloat, arg_3718: GLfloat, arg_3719: GLint, arg_3720: GLint, arg_3721: GLfloat, arg_3722: GLfloat, arg_3723: GLint, arg_3724: GLint, arg_3725: [*c]const GLfloat) void {
    return glad_glMapVertexAttrib2fAPPLE.?(arg_3715, arg_3716, arg_3717, arg_3718, arg_3719, arg_3720, arg_3721, arg_3722, arg_3723, arg_3724, arg_3725);
}
pub const GL_APPLE_ycbcr_422 = 1;
pub const GL_ARB_ES2_compatibility = 1;
pub const GL_ARB_ES3_1_compatibility = 1;
pub const GL_ARB_ES3_2_compatibility = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPrimitiveBoundingBoxARB.xhtml
pub inline fn glPrimitiveBoundingBoxARB(arg_3726: GLfloat, arg_3727: GLfloat, arg_3728: GLfloat, arg_3729: GLfloat, arg_3730: GLfloat, arg_3731: GLfloat, arg_3732: GLfloat, arg_3733: GLfloat) void {
    return glad_glPrimitiveBoundingBoxARB.?(arg_3726, arg_3727, arg_3728, arg_3729, arg_3730, arg_3731, arg_3732, arg_3733);
}
pub const GL_ARB_ES3_compatibility = 1;
pub const GL_ARB_arrays_of_arrays = 1;
pub const GL_ARB_base_instance = 1;
pub const GL_ARB_bindless_texture = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTextureHandleARB.xhtml
pub inline fn glGetTextureHandleARB(arg_3734: GLuint) GLuint64 {
    return glad_glGetTextureHandleARB.?(arg_3734);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTextureSamplerHandleARB.xhtml
pub inline fn glGetTextureSamplerHandleARB(arg_3735: GLuint, arg_3736: GLuint) GLuint64 {
    return glad_glGetTextureSamplerHandleARB.?(arg_3735, arg_3736);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMakeTextureHandleResidentARB.xhtml
pub inline fn glMakeTextureHandleResidentARB(arg_3737: GLuint64) void {
    return glad_glMakeTextureHandleResidentARB.?(arg_3737);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMakeTextureHandleNonResidentARB.xhtml
pub inline fn glMakeTextureHandleNonResidentARB(arg_3738: GLuint64) void {
    return glad_glMakeTextureHandleNonResidentARB.?(arg_3738);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetImageHandleARB.xhtml
pub inline fn glGetImageHandleARB(arg_3739: GLuint, arg_3740: GLint, arg_3741: GLboolean, arg_3742: GLint, arg_3743: GLenum) GLuint64 {
    return glad_glGetImageHandleARB.?(arg_3739, arg_3740, arg_3741, arg_3742, arg_3743);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMakeImageHandleResidentARB.xhtml
pub inline fn glMakeImageHandleResidentARB(arg_3744: GLuint64, arg_3745: GLenum) void {
    return glad_glMakeImageHandleResidentARB.?(arg_3744, arg_3745);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMakeImageHandleNonResidentARB.xhtml
pub inline fn glMakeImageHandleNonResidentARB(arg_3746: GLuint64) void {
    return glad_glMakeImageHandleNonResidentARB.?(arg_3746);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformHandleui64ARB.xhtml
pub inline fn glUniformHandleui64ARB(arg_3747: GLint, arg_3748: GLuint64) void {
    return glad_glUniformHandleui64ARB.?(arg_3747, arg_3748);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformHandleui64vARB.xhtml
pub inline fn glUniformHandleui64vARB(arg_3749: GLint, arg_3750: GLsizei, arg_3751: [*c]const GLuint64) void {
    return glad_glUniformHandleui64vARB.?(arg_3749, arg_3750, arg_3751);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformHandleui64ARB.xhtml
pub inline fn glProgramUniformHandleui64ARB(arg_3752: GLuint, arg_3753: GLint, arg_3754: GLuint64) void {
    return glad_glProgramUniformHandleui64ARB.?(arg_3752, arg_3753, arg_3754);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformHandleui64vARB.xhtml
pub inline fn glProgramUniformHandleui64vARB(arg_3755: GLuint, arg_3756: GLint, arg_3757: GLsizei, arg_3758: [*c]const GLuint64) void {
    return glad_glProgramUniformHandleui64vARB.?(arg_3755, arg_3756, arg_3757, arg_3758);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsTextureHandleResidentARB.xhtml
pub inline fn glIsTextureHandleResidentARB(arg_3759: GLuint64) GLboolean {
    return glad_glIsTextureHandleResidentARB.?(arg_3759);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsImageHandleResidentARB.xhtml
pub inline fn glIsImageHandleResidentARB(arg_3760: GLuint64) GLboolean {
    return glad_glIsImageHandleResidentARB.?(arg_3760);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL1ui64ARB.xhtml
pub inline fn glVertexAttribL1ui64ARB(arg_3761: GLuint, arg_3762: GLuint64EXT) void {
    return glad_glVertexAttribL1ui64ARB.?(arg_3761, arg_3762);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL1ui64vARB.xhtml
pub inline fn glVertexAttribL1ui64vARB(arg_3763: GLuint, arg_3764: [*c]const GLuint64EXT) void {
    return glad_glVertexAttribL1ui64vARB.?(arg_3763, arg_3764);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexAttribLui64vARB.xhtml
pub inline fn glGetVertexAttribLui64vARB(arg_3765: GLuint, arg_3766: GLenum, arg_3767: [*c]GLuint64EXT) void {
    return glad_glGetVertexAttribLui64vARB.?(arg_3765, arg_3766, arg_3767);
}
pub const GL_ARB_blend_func_extended = 1;
pub const GL_ARB_buffer_storage = 1;
pub const GL_ARB_cl_event = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCreateSyncFromCLeventARB.xhtml
pub inline fn glCreateSyncFromCLeventARB(arg_3768: ?*_cl_context, arg_3769: ?*_cl_event, arg_3770: GLbitfield) GLsync {
    return glad_glCreateSyncFromCLeventARB.?(arg_3768, arg_3769, arg_3770);
}
pub const GL_ARB_clear_buffer_object = 1;
pub const GL_ARB_clear_texture = 1;
pub const GL_ARB_clip_control = 1;
pub const GL_ARB_color_buffer_float = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClampColorARB.xhtml
pub inline fn glClampColorARB(arg_3771: GLenum, arg_3772: GLenum) void {
    return glad_glClampColorARB.?(arg_3771, arg_3772);
}
pub const GL_ARB_compatibility = 1;
pub const GL_ARB_compressed_texture_pixel_storage = 1;
pub const GL_ARB_compute_shader = 1;
pub const GL_ARB_compute_variable_group_size = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDispatchComputeGroupSizeARB.xhtml
pub inline fn glDispatchComputeGroupSizeARB(arg_3773: GLuint, arg_3774: GLuint, arg_3775: GLuint, arg_3776: GLuint, arg_3777: GLuint, arg_3778: GLuint) void {
    return glad_glDispatchComputeGroupSizeARB.?(arg_3773, arg_3774, arg_3775, arg_3776, arg_3777, arg_3778);
}
pub const GL_ARB_conditional_render_inverted = 1;
pub const GL_ARB_conservative_depth = 1;
pub const GL_ARB_copy_buffer = 1;
pub const GL_ARB_copy_image = 1;
pub const GL_ARB_cull_distance = 1;
pub const GL_ARB_debug_output = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDebugMessageControlARB.xhtml
pub inline fn glDebugMessageControlARB(arg_3779: GLenum, arg_3780: GLenum, arg_3781: GLenum, arg_3782: GLsizei, arg_3783: [*c]const GLuint, arg_3784: GLboolean) void {
    return glad_glDebugMessageControlARB.?(arg_3779, arg_3780, arg_3781, arg_3782, arg_3783, arg_3784);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDebugMessageInsertARB.xhtml
pub inline fn glDebugMessageInsertARB(arg_3785: GLenum, arg_3786: GLenum, arg_3787: GLuint, arg_3788: GLenum, arg_3789: GLsizei, arg_3790: [*c]const GLchar) void {
    return glad_glDebugMessageInsertARB.?(arg_3785, arg_3786, arg_3787, arg_3788, arg_3789, arg_3790);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDebugMessageCallbackARB.xhtml
pub inline fn glDebugMessageCallbackARB(arg_3791: GLDEBUGPROCARB, arg_3792: ?*const anyopaque) void {
    return glad_glDebugMessageCallbackARB.?(arg_3791, arg_3792);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetDebugMessageLogARB.xhtml
pub inline fn glGetDebugMessageLogARB(arg_3793: GLuint, arg_3794: GLsizei, arg_3795: [*c]GLenum, arg_3796: [*c]GLenum, arg_3797: [*c]GLuint, arg_3798: [*c]GLenum, arg_3799: [*c]GLsizei, arg_3800: [*c]GLchar) GLuint {
    return glad_glGetDebugMessageLogARB.?(arg_3793, arg_3794, arg_3795, arg_3796, arg_3797, arg_3798, arg_3799, arg_3800);
}
pub const GL_ARB_depth_buffer_float = 1;
pub const GL_ARB_depth_clamp = 1;
pub const GL_ARB_depth_texture = 1;
pub const GL_ARB_derivative_control = 1;
pub const GL_ARB_direct_state_access = 1;
pub const GL_ARB_draw_buffers = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawBuffersARB.xhtml
pub inline fn glDrawBuffersARB(arg_3801: GLsizei, arg_3802: [*c]const GLenum) void {
    return glad_glDrawBuffersARB.?(arg_3801, arg_3802);
}
pub const GL_ARB_draw_buffers_blend = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendEquationiARB.xhtml
pub inline fn glBlendEquationiARB(arg_3803: GLuint, arg_3804: GLenum) void {
    return glad_glBlendEquationiARB.?(arg_3803, arg_3804);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendEquationSeparateiARB.xhtml
pub inline fn glBlendEquationSeparateiARB(arg_3805: GLuint, arg_3806: GLenum, arg_3807: GLenum) void {
    return glad_glBlendEquationSeparateiARB.?(arg_3805, arg_3806, arg_3807);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendFunciARB.xhtml
pub inline fn glBlendFunciARB(arg_3808: GLuint, arg_3809: GLenum, arg_3810: GLenum) void {
    return glad_glBlendFunciARB.?(arg_3808, arg_3809, arg_3810);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendFuncSeparateiARB.xhtml
pub inline fn glBlendFuncSeparateiARB(arg_3811: GLuint, arg_3812: GLenum, arg_3813: GLenum, arg_3814: GLenum, arg_3815: GLenum) void {
    return glad_glBlendFuncSeparateiARB.?(arg_3811, arg_3812, arg_3813, arg_3814, arg_3815);
}
pub const GL_ARB_draw_elements_base_vertex = 1;
pub const GL_ARB_draw_indirect = 1;
pub const GL_ARB_draw_instanced = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawArraysInstancedARB.xhtml
pub inline fn glDrawArraysInstancedARB(arg_3816: GLenum, arg_3817: GLint, arg_3818: GLsizei, arg_3819: GLsizei) void {
    return glad_glDrawArraysInstancedARB.?(arg_3816, arg_3817, arg_3818, arg_3819);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawElementsInstancedARB.xhtml
pub inline fn glDrawElementsInstancedARB(arg_3820: GLenum, arg_3821: GLsizei, arg_3822: GLenum, arg_3823: ?*const anyopaque, arg_3824: GLsizei) void {
    return glad_glDrawElementsInstancedARB.?(arg_3820, arg_3821, arg_3822, arg_3823, arg_3824);
}
pub const GL_ARB_enhanced_layouts = 1;
pub const GL_ARB_explicit_attrib_location = 1;
pub const GL_ARB_explicit_uniform_location = 1;
pub const GL_ARB_fragment_coord_conventions = 1;
pub const GL_ARB_fragment_layer_viewport = 1;
pub const GL_ARB_fragment_program = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramStringARB.xhtml
pub inline fn glProgramStringARB(arg_3825: GLenum, arg_3826: GLenum, arg_3827: GLsizei, arg_3828: ?*const anyopaque) void {
    return glad_glProgramStringARB.?(arg_3825, arg_3826, arg_3827, arg_3828);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindProgramARB.xhtml
pub inline fn glBindProgramARB(arg_3829: GLenum, arg_3830: GLuint) void {
    return glad_glBindProgramARB.?(arg_3829, arg_3830);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteProgramsARB.xhtml
pub inline fn glDeleteProgramsARB(arg_3831: GLsizei, arg_3832: [*c]const GLuint) void {
    return glad_glDeleteProgramsARB.?(arg_3831, arg_3832);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenProgramsARB.xhtml
pub inline fn glGenProgramsARB(arg_3833: GLsizei, arg_3834: [*c]GLuint) void {
    return glad_glGenProgramsARB.?(arg_3833, arg_3834);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramEnvParameter4dARB.xhtml
pub inline fn glProgramEnvParameter4dARB(arg_3835: GLenum, arg_3836: GLuint, arg_3837: GLdouble, arg_3838: GLdouble, arg_3839: GLdouble, arg_3840: GLdouble) void {
    return glad_glProgramEnvParameter4dARB.?(arg_3835, arg_3836, arg_3837, arg_3838, arg_3839, arg_3840);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramEnvParameter4dvARB.xhtml
pub inline fn glProgramEnvParameter4dvARB(arg_3841: GLenum, arg_3842: GLuint, arg_3843: [*c]const GLdouble) void {
    return glad_glProgramEnvParameter4dvARB.?(arg_3841, arg_3842, arg_3843);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramEnvParameter4fARB.xhtml
pub inline fn glProgramEnvParameter4fARB(arg_3844: GLenum, arg_3845: GLuint, arg_3846: GLfloat, arg_3847: GLfloat, arg_3848: GLfloat, arg_3849: GLfloat) void {
    return glad_glProgramEnvParameter4fARB.?(arg_3844, arg_3845, arg_3846, arg_3847, arg_3848, arg_3849);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramEnvParameter4fvARB.xhtml
pub inline fn glProgramEnvParameter4fvARB(arg_3850: GLenum, arg_3851: GLuint, arg_3852: [*c]const GLfloat) void {
    return glad_glProgramEnvParameter4fvARB.?(arg_3850, arg_3851, arg_3852);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramLocalParameter4dARB.xhtml
pub inline fn glProgramLocalParameter4dARB(arg_3853: GLenum, arg_3854: GLuint, arg_3855: GLdouble, arg_3856: GLdouble, arg_3857: GLdouble, arg_3858: GLdouble) void {
    return glad_glProgramLocalParameter4dARB.?(arg_3853, arg_3854, arg_3855, arg_3856, arg_3857, arg_3858);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramLocalParameter4dvARB.xhtml
pub inline fn glProgramLocalParameter4dvARB(arg_3859: GLenum, arg_3860: GLuint, arg_3861: [*c]const GLdouble) void {
    return glad_glProgramLocalParameter4dvARB.?(arg_3859, arg_3860, arg_3861);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramLocalParameter4fARB.xhtml
pub inline fn glProgramLocalParameter4fARB(arg_3862: GLenum, arg_3863: GLuint, arg_3864: GLfloat, arg_3865: GLfloat, arg_3866: GLfloat, arg_3867: GLfloat) void {
    return glad_glProgramLocalParameter4fARB.?(arg_3862, arg_3863, arg_3864, arg_3865, arg_3866, arg_3867);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramLocalParameter4fvARB.xhtml
pub inline fn glProgramLocalParameter4fvARB(arg_3868: GLenum, arg_3869: GLuint, arg_3870: [*c]const GLfloat) void {
    return glad_glProgramLocalParameter4fvARB.?(arg_3868, arg_3869, arg_3870);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramEnvParameterdvARB.xhtml
pub inline fn glGetProgramEnvParameterdvARB(arg_3871: GLenum, arg_3872: GLuint, arg_3873: [*c]GLdouble) void {
    return glad_glGetProgramEnvParameterdvARB.?(arg_3871, arg_3872, arg_3873);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramEnvParameterfvARB.xhtml
pub inline fn glGetProgramEnvParameterfvARB(arg_3874: GLenum, arg_3875: GLuint, arg_3876: [*c]GLfloat) void {
    return glad_glGetProgramEnvParameterfvARB.?(arg_3874, arg_3875, arg_3876);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramLocalParameterdvARB.xhtml
pub inline fn glGetProgramLocalParameterdvARB(arg_3877: GLenum, arg_3878: GLuint, arg_3879: [*c]GLdouble) void {
    return glad_glGetProgramLocalParameterdvARB.?(arg_3877, arg_3878, arg_3879);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramLocalParameterfvARB.xhtml
pub inline fn glGetProgramLocalParameterfvARB(arg_3880: GLenum, arg_3881: GLuint, arg_3882: [*c]GLfloat) void {
    return glad_glGetProgramLocalParameterfvARB.?(arg_3880, arg_3881, arg_3882);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramivARB.xhtml
pub inline fn glGetProgramivARB(arg_3883: GLenum, arg_3884: GLenum, arg_3885: [*c]GLint) void {
    return glad_glGetProgramivARB.?(arg_3883, arg_3884, arg_3885);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramStringARB.xhtml
pub inline fn glGetProgramStringARB(arg_3886: GLenum, arg_3887: GLenum, arg_3888: ?*anyopaque) void {
    return glad_glGetProgramStringARB.?(arg_3886, arg_3887, arg_3888);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsProgramARB.xhtml
pub inline fn glIsProgramARB(arg_3889: GLuint) GLboolean {
    return glad_glIsProgramARB.?(arg_3889);
}
pub const GL_ARB_fragment_program_shadow = 1;
pub const GL_ARB_fragment_shader = 1;
pub const GL_ARB_fragment_shader_interlock = 1;
pub const GL_ARB_framebuffer_no_attachments = 1;
pub const GL_ARB_framebuffer_object = 1;
pub const GL_ARB_framebuffer_sRGB = 1;
pub const GL_ARB_geometry_shader4 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramParameteriARB.xhtml
pub inline fn glProgramParameteriARB(arg_3890: GLuint, arg_3891: GLenum, arg_3892: GLint) void {
    return glad_glProgramParameteriARB.?(arg_3890, arg_3891, arg_3892);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferTextureARB.xhtml
pub inline fn glFramebufferTextureARB(arg_3893: GLenum, arg_3894: GLenum, arg_3895: GLuint, arg_3896: GLint) void {
    return glad_glFramebufferTextureARB.?(arg_3893, arg_3894, arg_3895, arg_3896);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferTextureLayerARB.xhtml
pub inline fn glFramebufferTextureLayerARB(arg_3897: GLenum, arg_3898: GLenum, arg_3899: GLuint, arg_3900: GLint, arg_3901: GLint) void {
    return glad_glFramebufferTextureLayerARB.?(arg_3897, arg_3898, arg_3899, arg_3900, arg_3901);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferTextureFaceARB.xhtml
pub inline fn glFramebufferTextureFaceARB(arg_3902: GLenum, arg_3903: GLenum, arg_3904: GLuint, arg_3905: GLint, arg_3906: GLenum) void {
    return glad_glFramebufferTextureFaceARB.?(arg_3902, arg_3903, arg_3904, arg_3905, arg_3906);
}
pub const GL_ARB_get_program_binary = 1;
pub const GL_ARB_get_texture_sub_image = 1;
pub const GL_ARB_gl_spirv = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSpecializeShaderARB.xhtml
pub inline fn glSpecializeShaderARB(arg_3907: GLuint, arg_3908: [*c]const GLchar, arg_3909: GLuint, arg_3910: [*c]const GLuint, arg_3911: [*c]const GLuint) void {
    return glad_glSpecializeShaderARB.?(arg_3907, arg_3908, arg_3909, arg_3910, arg_3911);
}
pub const GL_ARB_gpu_shader5 = 1;
pub const GL_ARB_gpu_shader_fp64 = 1;
pub const GL_ARB_gpu_shader_int64 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform1i64ARB.xhtml
pub inline fn glUniform1i64ARB(arg_3912: GLint, arg_3913: GLint64) void {
    return glad_glUniform1i64ARB.?(arg_3912, arg_3913);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform2i64ARB.xhtml
pub inline fn glUniform2i64ARB(arg_3914: GLint, arg_3915: GLint64, arg_3916: GLint64) void {
    return glad_glUniform2i64ARB.?(arg_3914, arg_3915, arg_3916);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform3i64ARB.xhtml
pub inline fn glUniform3i64ARB(arg_3917: GLint, arg_3918: GLint64, arg_3919: GLint64, arg_3920: GLint64) void {
    return glad_glUniform3i64ARB.?(arg_3917, arg_3918, arg_3919, arg_3920);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform4i64ARB.xhtml
pub inline fn glUniform4i64ARB(arg_3921: GLint, arg_3922: GLint64, arg_3923: GLint64, arg_3924: GLint64, arg_3925: GLint64) void {
    return glad_glUniform4i64ARB.?(arg_3921, arg_3922, arg_3923, arg_3924, arg_3925);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform1i64vARB.xhtml
pub inline fn glUniform1i64vARB(arg_3926: GLint, arg_3927: GLsizei, arg_3928: [*c]const GLint64) void {
    return glad_glUniform1i64vARB.?(arg_3926, arg_3927, arg_3928);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform2i64vARB.xhtml
pub inline fn glUniform2i64vARB(arg_3929: GLint, arg_3930: GLsizei, arg_3931: [*c]const GLint64) void {
    return glad_glUniform2i64vARB.?(arg_3929, arg_3930, arg_3931);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform3i64vARB.xhtml
pub inline fn glUniform3i64vARB(arg_3932: GLint, arg_3933: GLsizei, arg_3934: [*c]const GLint64) void {
    return glad_glUniform3i64vARB.?(arg_3932, arg_3933, arg_3934);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform4i64vARB.xhtml
pub inline fn glUniform4i64vARB(arg_3935: GLint, arg_3936: GLsizei, arg_3937: [*c]const GLint64) void {
    return glad_glUniform4i64vARB.?(arg_3935, arg_3936, arg_3937);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform1ui64ARB.xhtml
pub inline fn glUniform1ui64ARB(arg_3938: GLint, arg_3939: GLuint64) void {
    return glad_glUniform1ui64ARB.?(arg_3938, arg_3939);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform2ui64ARB.xhtml
pub inline fn glUniform2ui64ARB(arg_3940: GLint, arg_3941: GLuint64, arg_3942: GLuint64) void {
    return glad_glUniform2ui64ARB.?(arg_3940, arg_3941, arg_3942);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform3ui64ARB.xhtml
pub inline fn glUniform3ui64ARB(arg_3943: GLint, arg_3944: GLuint64, arg_3945: GLuint64, arg_3946: GLuint64) void {
    return glad_glUniform3ui64ARB.?(arg_3943, arg_3944, arg_3945, arg_3946);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform4ui64ARB.xhtml
pub inline fn glUniform4ui64ARB(arg_3947: GLint, arg_3948: GLuint64, arg_3949: GLuint64, arg_3950: GLuint64, arg_3951: GLuint64) void {
    return glad_glUniform4ui64ARB.?(arg_3947, arg_3948, arg_3949, arg_3950, arg_3951);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform1ui64vARB.xhtml
pub inline fn glUniform1ui64vARB(arg_3952: GLint, arg_3953: GLsizei, arg_3954: [*c]const GLuint64) void {
    return glad_glUniform1ui64vARB.?(arg_3952, arg_3953, arg_3954);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform2ui64vARB.xhtml
pub inline fn glUniform2ui64vARB(arg_3955: GLint, arg_3956: GLsizei, arg_3957: [*c]const GLuint64) void {
    return glad_glUniform2ui64vARB.?(arg_3955, arg_3956, arg_3957);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform3ui64vARB.xhtml
pub inline fn glUniform3ui64vARB(arg_3958: GLint, arg_3959: GLsizei, arg_3960: [*c]const GLuint64) void {
    return glad_glUniform3ui64vARB.?(arg_3958, arg_3959, arg_3960);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform4ui64vARB.xhtml
pub inline fn glUniform4ui64vARB(arg_3961: GLint, arg_3962: GLsizei, arg_3963: [*c]const GLuint64) void {
    return glad_glUniform4ui64vARB.?(arg_3961, arg_3962, arg_3963);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetUniformi64vARB.xhtml
pub inline fn glGetUniformi64vARB(arg_3964: GLuint, arg_3965: GLint, arg_3966: [*c]GLint64) void {
    return glad_glGetUniformi64vARB.?(arg_3964, arg_3965, arg_3966);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetUniformui64vARB.xhtml
pub inline fn glGetUniformui64vARB(arg_3967: GLuint, arg_3968: GLint, arg_3969: [*c]GLuint64) void {
    return glad_glGetUniformui64vARB.?(arg_3967, arg_3968, arg_3969);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnUniformi64vARB.xhtml
pub inline fn glGetnUniformi64vARB(arg_3970: GLuint, arg_3971: GLint, arg_3972: GLsizei, arg_3973: [*c]GLint64) void {
    return glad_glGetnUniformi64vARB.?(arg_3970, arg_3971, arg_3972, arg_3973);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnUniformui64vARB.xhtml
pub inline fn glGetnUniformui64vARB(arg_3974: GLuint, arg_3975: GLint, arg_3976: GLsizei, arg_3977: [*c]GLuint64) void {
    return glad_glGetnUniformui64vARB.?(arg_3974, arg_3975, arg_3976, arg_3977);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform1i64ARB.xhtml
pub inline fn glProgramUniform1i64ARB(arg_3978: GLuint, arg_3979: GLint, arg_3980: GLint64) void {
    return glad_glProgramUniform1i64ARB.?(arg_3978, arg_3979, arg_3980);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform2i64ARB.xhtml
pub inline fn glProgramUniform2i64ARB(arg_3981: GLuint, arg_3982: GLint, arg_3983: GLint64, arg_3984: GLint64) void {
    return glad_glProgramUniform2i64ARB.?(arg_3981, arg_3982, arg_3983, arg_3984);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform3i64ARB.xhtml
pub inline fn glProgramUniform3i64ARB(arg_3985: GLuint, arg_3986: GLint, arg_3987: GLint64, arg_3988: GLint64, arg_3989: GLint64) void {
    return glad_glProgramUniform3i64ARB.?(arg_3985, arg_3986, arg_3987, arg_3988, arg_3989);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform4i64ARB.xhtml
pub inline fn glProgramUniform4i64ARB(arg_3990: GLuint, arg_3991: GLint, arg_3992: GLint64, arg_3993: GLint64, arg_3994: GLint64, arg_3995: GLint64) void {
    return glad_glProgramUniform4i64ARB.?(arg_3990, arg_3991, arg_3992, arg_3993, arg_3994, arg_3995);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform1i64vARB.xhtml
pub inline fn glProgramUniform1i64vARB(arg_3996: GLuint, arg_3997: GLint, arg_3998: GLsizei, arg_3999: [*c]const GLint64) void {
    return glad_glProgramUniform1i64vARB.?(arg_3996, arg_3997, arg_3998, arg_3999);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform2i64vARB.xhtml
pub inline fn glProgramUniform2i64vARB(arg_4000: GLuint, arg_4001: GLint, arg_4002: GLsizei, arg_4003: [*c]const GLint64) void {
    return glad_glProgramUniform2i64vARB.?(arg_4000, arg_4001, arg_4002, arg_4003);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform3i64vARB.xhtml
pub inline fn glProgramUniform3i64vARB(arg_4004: GLuint, arg_4005: GLint, arg_4006: GLsizei, arg_4007: [*c]const GLint64) void {
    return glad_glProgramUniform3i64vARB.?(arg_4004, arg_4005, arg_4006, arg_4007);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform4i64vARB.xhtml
pub inline fn glProgramUniform4i64vARB(arg_4008: GLuint, arg_4009: GLint, arg_4010: GLsizei, arg_4011: [*c]const GLint64) void {
    return glad_glProgramUniform4i64vARB.?(arg_4008, arg_4009, arg_4010, arg_4011);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform1ui64ARB.xhtml
pub inline fn glProgramUniform1ui64ARB(arg_4012: GLuint, arg_4013: GLint, arg_4014: GLuint64) void {
    return glad_glProgramUniform1ui64ARB.?(arg_4012, arg_4013, arg_4014);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform2ui64ARB.xhtml
pub inline fn glProgramUniform2ui64ARB(arg_4015: GLuint, arg_4016: GLint, arg_4017: GLuint64, arg_4018: GLuint64) void {
    return glad_glProgramUniform2ui64ARB.?(arg_4015, arg_4016, arg_4017, arg_4018);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform3ui64ARB.xhtml
pub inline fn glProgramUniform3ui64ARB(arg_4019: GLuint, arg_4020: GLint, arg_4021: GLuint64, arg_4022: GLuint64, arg_4023: GLuint64) void {
    return glad_glProgramUniform3ui64ARB.?(arg_4019, arg_4020, arg_4021, arg_4022, arg_4023);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform4ui64ARB.xhtml
pub inline fn glProgramUniform4ui64ARB(arg_4024: GLuint, arg_4025: GLint, arg_4026: GLuint64, arg_4027: GLuint64, arg_4028: GLuint64, arg_4029: GLuint64) void {
    return glad_glProgramUniform4ui64ARB.?(arg_4024, arg_4025, arg_4026, arg_4027, arg_4028, arg_4029);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform1ui64vARB.xhtml
pub inline fn glProgramUniform1ui64vARB(arg_4030: GLuint, arg_4031: GLint, arg_4032: GLsizei, arg_4033: [*c]const GLuint64) void {
    return glad_glProgramUniform1ui64vARB.?(arg_4030, arg_4031, arg_4032, arg_4033);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform2ui64vARB.xhtml
pub inline fn glProgramUniform2ui64vARB(arg_4034: GLuint, arg_4035: GLint, arg_4036: GLsizei, arg_4037: [*c]const GLuint64) void {
    return glad_glProgramUniform2ui64vARB.?(arg_4034, arg_4035, arg_4036, arg_4037);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform3ui64vARB.xhtml
pub inline fn glProgramUniform3ui64vARB(arg_4038: GLuint, arg_4039: GLint, arg_4040: GLsizei, arg_4041: [*c]const GLuint64) void {
    return glad_glProgramUniform3ui64vARB.?(arg_4038, arg_4039, arg_4040, arg_4041);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform4ui64vARB.xhtml
pub inline fn glProgramUniform4ui64vARB(arg_4042: GLuint, arg_4043: GLint, arg_4044: GLsizei, arg_4045: [*c]const GLuint64) void {
    return glad_glProgramUniform4ui64vARB.?(arg_4042, arg_4043, arg_4044, arg_4045);
}
pub const GL_ARB_half_float_pixel = 1;
pub const GL_ARB_half_float_vertex = 1;
pub const GL_ARB_imaging = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorTable.xhtml
pub inline fn glColorTable(arg_4046: GLenum, arg_4047: GLenum, arg_4048: GLsizei, arg_4049: GLenum, arg_4050: GLenum, arg_4051: ?*const anyopaque) void {
    return glad_glColorTable.?(arg_4046, arg_4047, arg_4048, arg_4049, arg_4050, arg_4051);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorTableParameterfv.xhtml
pub inline fn glColorTableParameterfv(arg_4052: GLenum, arg_4053: GLenum, arg_4054: [*c]const GLfloat) void {
    return glad_glColorTableParameterfv.?(arg_4052, arg_4053, arg_4054);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorTableParameteriv.xhtml
pub inline fn glColorTableParameteriv(arg_4055: GLenum, arg_4056: GLenum, arg_4057: [*c]const GLint) void {
    return glad_glColorTableParameteriv.?(arg_4055, arg_4056, arg_4057);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyColorTable.xhtml
pub inline fn glCopyColorTable(arg_4058: GLenum, arg_4059: GLenum, arg_4060: GLint, arg_4061: GLint, arg_4062: GLsizei) void {
    return glad_glCopyColorTable.?(arg_4058, arg_4059, arg_4060, arg_4061, arg_4062);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetColorTable.xhtml
pub inline fn glGetColorTable(arg_4063: GLenum, arg_4064: GLenum, arg_4065: GLenum, arg_4066: ?*anyopaque) void {
    return glad_glGetColorTable.?(arg_4063, arg_4064, arg_4065, arg_4066);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetColorTableParameterfv.xhtml
pub inline fn glGetColorTableParameterfv(arg_4067: GLenum, arg_4068: GLenum, arg_4069: [*c]GLfloat) void {
    return glad_glGetColorTableParameterfv.?(arg_4067, arg_4068, arg_4069);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetColorTableParameteriv.xhtml
pub inline fn glGetColorTableParameteriv(arg_4070: GLenum, arg_4071: GLenum, arg_4072: [*c]GLint) void {
    return glad_glGetColorTableParameteriv.?(arg_4070, arg_4071, arg_4072);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorSubTable.xhtml
pub inline fn glColorSubTable(arg_4073: GLenum, arg_4074: GLsizei, arg_4075: GLsizei, arg_4076: GLenum, arg_4077: GLenum, arg_4078: ?*const anyopaque) void {
    return glad_glColorSubTable.?(arg_4073, arg_4074, arg_4075, arg_4076, arg_4077, arg_4078);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyColorSubTable.xhtml
pub inline fn glCopyColorSubTable(arg_4079: GLenum, arg_4080: GLsizei, arg_4081: GLint, arg_4082: GLint, arg_4083: GLsizei) void {
    return glad_glCopyColorSubTable.?(arg_4079, arg_4080, arg_4081, arg_4082, arg_4083);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glConvolutionFilter1D.xhtml
pub inline fn glConvolutionFilter1D(arg_4084: GLenum, arg_4085: GLenum, arg_4086: GLsizei, arg_4087: GLenum, arg_4088: GLenum, arg_4089: ?*const anyopaque) void {
    return glad_glConvolutionFilter1D.?(arg_4084, arg_4085, arg_4086, arg_4087, arg_4088, arg_4089);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glConvolutionFilter2D.xhtml
pub inline fn glConvolutionFilter2D(arg_4090: GLenum, arg_4091: GLenum, arg_4092: GLsizei, arg_4093: GLsizei, arg_4094: GLenum, arg_4095: GLenum, arg_4096: ?*const anyopaque) void {
    return glad_glConvolutionFilter2D.?(arg_4090, arg_4091, arg_4092, arg_4093, arg_4094, arg_4095, arg_4096);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glConvolutionParameterf.xhtml
pub inline fn glConvolutionParameterf(arg_4097: GLenum, arg_4098: GLenum, arg_4099: GLfloat) void {
    return glad_glConvolutionParameterf.?(arg_4097, arg_4098, arg_4099);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glConvolutionParameterfv.xhtml
pub inline fn glConvolutionParameterfv(arg_4100: GLenum, arg_4101: GLenum, arg_4102: [*c]const GLfloat) void {
    return glad_glConvolutionParameterfv.?(arg_4100, arg_4101, arg_4102);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glConvolutionParameteri.xhtml
pub inline fn glConvolutionParameteri(arg_4103: GLenum, arg_4104: GLenum, arg_4105: GLint) void {
    return glad_glConvolutionParameteri.?(arg_4103, arg_4104, arg_4105);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glConvolutionParameteriv.xhtml
pub inline fn glConvolutionParameteriv(arg_4106: GLenum, arg_4107: GLenum, arg_4108: [*c]const GLint) void {
    return glad_glConvolutionParameteriv.?(arg_4106, arg_4107, arg_4108);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyConvolutionFilter1D.xhtml
pub inline fn glCopyConvolutionFilter1D(arg_4109: GLenum, arg_4110: GLenum, arg_4111: GLint, arg_4112: GLint, arg_4113: GLsizei) void {
    return glad_glCopyConvolutionFilter1D.?(arg_4109, arg_4110, arg_4111, arg_4112, arg_4113);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyConvolutionFilter2D.xhtml
pub inline fn glCopyConvolutionFilter2D(arg_4114: GLenum, arg_4115: GLenum, arg_4116: GLint, arg_4117: GLint, arg_4118: GLsizei, arg_4119: GLsizei) void {
    return glad_glCopyConvolutionFilter2D.?(arg_4114, arg_4115, arg_4116, arg_4117, arg_4118, arg_4119);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetConvolutionFilter.xhtml
pub inline fn glGetConvolutionFilter(arg_4120: GLenum, arg_4121: GLenum, arg_4122: GLenum, arg_4123: ?*anyopaque) void {
    return glad_glGetConvolutionFilter.?(arg_4120, arg_4121, arg_4122, arg_4123);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetConvolutionParameterfv.xhtml
pub inline fn glGetConvolutionParameterfv(arg_4124: GLenum, arg_4125: GLenum, arg_4126: [*c]GLfloat) void {
    return glad_glGetConvolutionParameterfv.?(arg_4124, arg_4125, arg_4126);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetConvolutionParameteriv.xhtml
pub inline fn glGetConvolutionParameteriv(arg_4127: GLenum, arg_4128: GLenum, arg_4129: [*c]GLint) void {
    return glad_glGetConvolutionParameteriv.?(arg_4127, arg_4128, arg_4129);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetSeparableFilter.xhtml
pub inline fn glGetSeparableFilter(arg_4130: GLenum, arg_4131: GLenum, arg_4132: GLenum, arg_4133: ?*anyopaque, arg_4134: ?*anyopaque, arg_4135: ?*anyopaque) void {
    return glad_glGetSeparableFilter.?(arg_4130, arg_4131, arg_4132, arg_4133, arg_4134, arg_4135);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSeparableFilter2D.xhtml
pub inline fn glSeparableFilter2D(arg_4136: GLenum, arg_4137: GLenum, arg_4138: GLsizei, arg_4139: GLsizei, arg_4140: GLenum, arg_4141: GLenum, arg_4142: ?*const anyopaque, arg_4143: ?*const anyopaque) void {
    return glad_glSeparableFilter2D.?(arg_4136, arg_4137, arg_4138, arg_4139, arg_4140, arg_4141, arg_4142, arg_4143);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetHistogram.xhtml
pub inline fn glGetHistogram(arg_4144: GLenum, arg_4145: GLboolean, arg_4146: GLenum, arg_4147: GLenum, arg_4148: ?*anyopaque) void {
    return glad_glGetHistogram.?(arg_4144, arg_4145, arg_4146, arg_4147, arg_4148);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetHistogramParameterfv.xhtml
pub inline fn glGetHistogramParameterfv(arg_4149: GLenum, arg_4150: GLenum, arg_4151: [*c]GLfloat) void {
    return glad_glGetHistogramParameterfv.?(arg_4149, arg_4150, arg_4151);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetHistogramParameteriv.xhtml
pub inline fn glGetHistogramParameteriv(arg_4152: GLenum, arg_4153: GLenum, arg_4154: [*c]GLint) void {
    return glad_glGetHistogramParameteriv.?(arg_4152, arg_4153, arg_4154);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMinmax.xhtml
pub inline fn glGetMinmax(arg_4155: GLenum, arg_4156: GLboolean, arg_4157: GLenum, arg_4158: GLenum, arg_4159: ?*anyopaque) void {
    return glad_glGetMinmax.?(arg_4155, arg_4156, arg_4157, arg_4158, arg_4159);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMinmaxParameterfv.xhtml
pub inline fn glGetMinmaxParameterfv(arg_4160: GLenum, arg_4161: GLenum, arg_4162: [*c]GLfloat) void {
    return glad_glGetMinmaxParameterfv.?(arg_4160, arg_4161, arg_4162);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMinmaxParameteriv.xhtml
pub inline fn glGetMinmaxParameteriv(arg_4163: GLenum, arg_4164: GLenum, arg_4165: [*c]GLint) void {
    return glad_glGetMinmaxParameteriv.?(arg_4163, arg_4164, arg_4165);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glHistogram.xhtml
pub inline fn glHistogram(arg_4166: GLenum, arg_4167: GLsizei, arg_4168: GLenum, arg_4169: GLboolean) void {
    return glad_glHistogram.?(arg_4166, arg_4167, arg_4168, arg_4169);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMinmax.xhtml
pub inline fn glMinmax(arg_4170: GLenum, arg_4171: GLenum, arg_4172: GLboolean) void {
    return glad_glMinmax.?(arg_4170, arg_4171, arg_4172);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glResetHistogram.xhtml
pub inline fn glResetHistogram(arg_4173: GLenum) void {
    return glad_glResetHistogram.?(arg_4173);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glResetMinmax.xhtml
pub inline fn glResetMinmax(arg_4174: GLenum) void {
    return glad_glResetMinmax.?(arg_4174);
}
pub const GL_ARB_indirect_parameters = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiDrawArraysIndirectCountARB.xhtml
pub inline fn glMultiDrawArraysIndirectCountARB(arg_4175: GLenum, arg_4176: ?*const anyopaque, arg_4177: GLintptr, arg_4178: GLsizei, arg_4179: GLsizei) void {
    return glad_glMultiDrawArraysIndirectCountARB.?(arg_4175, arg_4176, arg_4177, arg_4178, arg_4179);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiDrawElementsIndirectCountARB.xhtml
pub inline fn glMultiDrawElementsIndirectCountARB(arg_4180: GLenum, arg_4181: GLenum, arg_4182: ?*const anyopaque, arg_4183: GLintptr, arg_4184: GLsizei, arg_4185: GLsizei) void {
    return glad_glMultiDrawElementsIndirectCountARB.?(arg_4180, arg_4181, arg_4182, arg_4183, arg_4184, arg_4185);
}
pub const GL_ARB_instanced_arrays = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribDivisorARB.xhtml
pub inline fn glVertexAttribDivisorARB(arg_4186: GLuint, arg_4187: GLuint) void {
    return glad_glVertexAttribDivisorARB.?(arg_4186, arg_4187);
}
pub const GL_ARB_internalformat_query = 1;
pub const GL_ARB_internalformat_query2 = 1;
pub const GL_ARB_invalidate_subdata = 1;
pub const GL_ARB_map_buffer_alignment = 1;
pub const GL_ARB_map_buffer_range = 1;
pub const GL_ARB_matrix_palette = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCurrentPaletteMatrixARB.xhtml
pub inline fn glCurrentPaletteMatrixARB(arg_4188: GLint) void {
    return glad_glCurrentPaletteMatrixARB.?(arg_4188);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixIndexubvARB.xhtml
pub inline fn glMatrixIndexubvARB(arg_4189: GLint, arg_4190: [*c]const GLubyte) void {
    return glad_glMatrixIndexubvARB.?(arg_4189, arg_4190);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixIndexusvARB.xhtml
pub inline fn glMatrixIndexusvARB(arg_4191: GLint, arg_4192: [*c]const GLushort) void {
    return glad_glMatrixIndexusvARB.?(arg_4191, arg_4192);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixIndexuivARB.xhtml
pub inline fn glMatrixIndexuivARB(arg_4193: GLint, arg_4194: [*c]const GLuint) void {
    return glad_glMatrixIndexuivARB.?(arg_4193, arg_4194);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixIndexPointerARB.xhtml
pub inline fn glMatrixIndexPointerARB(arg_4195: GLint, arg_4196: GLenum, arg_4197: GLsizei, arg_4198: ?*const anyopaque) void {
    return glad_glMatrixIndexPointerARB.?(arg_4195, arg_4196, arg_4197, arg_4198);
}
pub const GL_ARB_multi_bind = 1;
pub const GL_ARB_multi_draw_indirect = 1;
pub const GL_ARB_multisample = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSampleCoverageARB.xhtml
pub inline fn glSampleCoverageARB(arg_4199: GLfloat, arg_4200: GLboolean) void {
    return glad_glSampleCoverageARB.?(arg_4199, arg_4200);
}
pub const GL_ARB_multitexture = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glActiveTextureARB.xhtml
pub inline fn glActiveTextureARB(arg_4201: GLenum) void {
    return glad_glActiveTextureARB.?(arg_4201);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClientActiveTextureARB.xhtml
pub inline fn glClientActiveTextureARB(arg_4202: GLenum) void {
    return glad_glClientActiveTextureARB.?(arg_4202);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord1dARB.xhtml
pub inline fn glMultiTexCoord1dARB(arg_4203: GLenum, arg_4204: GLdouble) void {
    return glad_glMultiTexCoord1dARB.?(arg_4203, arg_4204);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord1dvARB.xhtml
pub inline fn glMultiTexCoord1dvARB(arg_4205: GLenum, arg_4206: [*c]const GLdouble) void {
    return glad_glMultiTexCoord1dvARB.?(arg_4205, arg_4206);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord1fARB.xhtml
pub inline fn glMultiTexCoord1fARB(arg_4207: GLenum, arg_4208: GLfloat) void {
    return glad_glMultiTexCoord1fARB.?(arg_4207, arg_4208);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord1fvARB.xhtml
pub inline fn glMultiTexCoord1fvARB(arg_4209: GLenum, arg_4210: [*c]const GLfloat) void {
    return glad_glMultiTexCoord1fvARB.?(arg_4209, arg_4210);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord1iARB.xhtml
pub inline fn glMultiTexCoord1iARB(arg_4211: GLenum, arg_4212: GLint) void {
    return glad_glMultiTexCoord1iARB.?(arg_4211, arg_4212);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord1ivARB.xhtml
pub inline fn glMultiTexCoord1ivARB(arg_4213: GLenum, arg_4214: [*c]const GLint) void {
    return glad_glMultiTexCoord1ivARB.?(arg_4213, arg_4214);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord1sARB.xhtml
pub inline fn glMultiTexCoord1sARB(arg_4215: GLenum, arg_4216: GLshort) void {
    return glad_glMultiTexCoord1sARB.?(arg_4215, arg_4216);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord1svARB.xhtml
pub inline fn glMultiTexCoord1svARB(arg_4217: GLenum, arg_4218: [*c]const GLshort) void {
    return glad_glMultiTexCoord1svARB.?(arg_4217, arg_4218);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord2dARB.xhtml
pub inline fn glMultiTexCoord2dARB(arg_4219: GLenum, arg_4220: GLdouble, arg_4221: GLdouble) void {
    return glad_glMultiTexCoord2dARB.?(arg_4219, arg_4220, arg_4221);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord2dvARB.xhtml
pub inline fn glMultiTexCoord2dvARB(arg_4222: GLenum, arg_4223: [*c]const GLdouble) void {
    return glad_glMultiTexCoord2dvARB.?(arg_4222, arg_4223);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord2fARB.xhtml
pub inline fn glMultiTexCoord2fARB(arg_4224: GLenum, arg_4225: GLfloat, arg_4226: GLfloat) void {
    return glad_glMultiTexCoord2fARB.?(arg_4224, arg_4225, arg_4226);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord2fvARB.xhtml
pub inline fn glMultiTexCoord2fvARB(arg_4227: GLenum, arg_4228: [*c]const GLfloat) void {
    return glad_glMultiTexCoord2fvARB.?(arg_4227, arg_4228);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord2iARB.xhtml
pub inline fn glMultiTexCoord2iARB(arg_4229: GLenum, arg_4230: GLint, arg_4231: GLint) void {
    return glad_glMultiTexCoord2iARB.?(arg_4229, arg_4230, arg_4231);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord2ivARB.xhtml
pub inline fn glMultiTexCoord2ivARB(arg_4232: GLenum, arg_4233: [*c]const GLint) void {
    return glad_glMultiTexCoord2ivARB.?(arg_4232, arg_4233);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord2sARB.xhtml
pub inline fn glMultiTexCoord2sARB(arg_4234: GLenum, arg_4235: GLshort, arg_4236: GLshort) void {
    return glad_glMultiTexCoord2sARB.?(arg_4234, arg_4235, arg_4236);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord2svARB.xhtml
pub inline fn glMultiTexCoord2svARB(arg_4237: GLenum, arg_4238: [*c]const GLshort) void {
    return glad_glMultiTexCoord2svARB.?(arg_4237, arg_4238);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord3dARB.xhtml
pub inline fn glMultiTexCoord3dARB(arg_4239: GLenum, arg_4240: GLdouble, arg_4241: GLdouble, arg_4242: GLdouble) void {
    return glad_glMultiTexCoord3dARB.?(arg_4239, arg_4240, arg_4241, arg_4242);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord3dvARB.xhtml
pub inline fn glMultiTexCoord3dvARB(arg_4243: GLenum, arg_4244: [*c]const GLdouble) void {
    return glad_glMultiTexCoord3dvARB.?(arg_4243, arg_4244);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord3fARB.xhtml
pub inline fn glMultiTexCoord3fARB(arg_4245: GLenum, arg_4246: GLfloat, arg_4247: GLfloat, arg_4248: GLfloat) void {
    return glad_glMultiTexCoord3fARB.?(arg_4245, arg_4246, arg_4247, arg_4248);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord3fvARB.xhtml
pub inline fn glMultiTexCoord3fvARB(arg_4249: GLenum, arg_4250: [*c]const GLfloat) void {
    return glad_glMultiTexCoord3fvARB.?(arg_4249, arg_4250);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord3iARB.xhtml
pub inline fn glMultiTexCoord3iARB(arg_4251: GLenum, arg_4252: GLint, arg_4253: GLint, arg_4254: GLint) void {
    return glad_glMultiTexCoord3iARB.?(arg_4251, arg_4252, arg_4253, arg_4254);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord3ivARB.xhtml
pub inline fn glMultiTexCoord3ivARB(arg_4255: GLenum, arg_4256: [*c]const GLint) void {
    return glad_glMultiTexCoord3ivARB.?(arg_4255, arg_4256);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord3sARB.xhtml
pub inline fn glMultiTexCoord3sARB(arg_4257: GLenum, arg_4258: GLshort, arg_4259: GLshort, arg_4260: GLshort) void {
    return glad_glMultiTexCoord3sARB.?(arg_4257, arg_4258, arg_4259, arg_4260);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord3svARB.xhtml
pub inline fn glMultiTexCoord3svARB(arg_4261: GLenum, arg_4262: [*c]const GLshort) void {
    return glad_glMultiTexCoord3svARB.?(arg_4261, arg_4262);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord4dARB.xhtml
pub inline fn glMultiTexCoord4dARB(arg_4263: GLenum, arg_4264: GLdouble, arg_4265: GLdouble, arg_4266: GLdouble, arg_4267: GLdouble) void {
    return glad_glMultiTexCoord4dARB.?(arg_4263, arg_4264, arg_4265, arg_4266, arg_4267);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord4dvARB.xhtml
pub inline fn glMultiTexCoord4dvARB(arg_4268: GLenum, arg_4269: [*c]const GLdouble) void {
    return glad_glMultiTexCoord4dvARB.?(arg_4268, arg_4269);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord4fARB.xhtml
pub inline fn glMultiTexCoord4fARB(arg_4270: GLenum, arg_4271: GLfloat, arg_4272: GLfloat, arg_4273: GLfloat, arg_4274: GLfloat) void {
    return glad_glMultiTexCoord4fARB.?(arg_4270, arg_4271, arg_4272, arg_4273, arg_4274);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord4fvARB.xhtml
pub inline fn glMultiTexCoord4fvARB(arg_4275: GLenum, arg_4276: [*c]const GLfloat) void {
    return glad_glMultiTexCoord4fvARB.?(arg_4275, arg_4276);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord4iARB.xhtml
pub inline fn glMultiTexCoord4iARB(arg_4277: GLenum, arg_4278: GLint, arg_4279: GLint, arg_4280: GLint, arg_4281: GLint) void {
    return glad_glMultiTexCoord4iARB.?(arg_4277, arg_4278, arg_4279, arg_4280, arg_4281);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord4ivARB.xhtml
pub inline fn glMultiTexCoord4ivARB(arg_4282: GLenum, arg_4283: [*c]const GLint) void {
    return glad_glMultiTexCoord4ivARB.?(arg_4282, arg_4283);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord4sARB.xhtml
pub inline fn glMultiTexCoord4sARB(arg_4284: GLenum, arg_4285: GLshort, arg_4286: GLshort, arg_4287: GLshort, arg_4288: GLshort) void {
    return glad_glMultiTexCoord4sARB.?(arg_4284, arg_4285, arg_4286, arg_4287, arg_4288);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord4svARB.xhtml
pub inline fn glMultiTexCoord4svARB(arg_4289: GLenum, arg_4290: [*c]const GLshort) void {
    return glad_glMultiTexCoord4svARB.?(arg_4289, arg_4290);
}
pub const GL_ARB_occlusion_query = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenQueriesARB.xhtml
pub inline fn glGenQueriesARB(arg_4291: GLsizei, arg_4292: [*c]GLuint) void {
    return glad_glGenQueriesARB.?(arg_4291, arg_4292);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteQueriesARB.xhtml
pub inline fn glDeleteQueriesARB(arg_4293: GLsizei, arg_4294: [*c]const GLuint) void {
    return glad_glDeleteQueriesARB.?(arg_4293, arg_4294);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsQueryARB.xhtml
pub inline fn glIsQueryARB(arg_4295: GLuint) GLboolean {
    return glad_glIsQueryARB.?(arg_4295);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBeginQueryARB.xhtml
pub inline fn glBeginQueryARB(arg_4296: GLenum, arg_4297: GLuint) void {
    return glad_glBeginQueryARB.?(arg_4296, arg_4297);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEndQueryARB.xhtml
pub inline fn glEndQueryARB(arg_4298: GLenum) void {
    return glad_glEndQueryARB.?(arg_4298);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetQueryivARB.xhtml
pub inline fn glGetQueryivARB(arg_4299: GLenum, arg_4300: GLenum, arg_4301: [*c]GLint) void {
    return glad_glGetQueryivARB.?(arg_4299, arg_4300, arg_4301);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetQueryObjectivARB.xhtml
pub inline fn glGetQueryObjectivARB(arg_4302: GLuint, arg_4303: GLenum, arg_4304: [*c]GLint) void {
    return glad_glGetQueryObjectivARB.?(arg_4302, arg_4303, arg_4304);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetQueryObjectuivARB.xhtml
pub inline fn glGetQueryObjectuivARB(arg_4305: GLuint, arg_4306: GLenum, arg_4307: [*c]GLuint) void {
    return glad_glGetQueryObjectuivARB.?(arg_4305, arg_4306, arg_4307);
}
pub const GL_ARB_occlusion_query2 = 1;
pub const GL_ARB_parallel_shader_compile = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMaxShaderCompilerThreadsARB.xhtml
pub inline fn glMaxShaderCompilerThreadsARB(arg_4308: GLuint) void {
    return glad_glMaxShaderCompilerThreadsARB.?(arg_4308);
}
pub const GL_ARB_pipeline_statistics_query = 1;
pub const GL_ARB_pixel_buffer_object = 1;
pub const GL_ARB_point_parameters = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPointParameterfARB.xhtml
pub inline fn glPointParameterfARB(arg_4309: GLenum, arg_4310: GLfloat) void {
    return glad_glPointParameterfARB.?(arg_4309, arg_4310);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPointParameterfvARB.xhtml
pub inline fn glPointParameterfvARB(arg_4311: GLenum, arg_4312: [*c]const GLfloat) void {
    return glad_glPointParameterfvARB.?(arg_4311, arg_4312);
}
pub const GL_ARB_point_sprite = 1;
pub const GL_ARB_polygon_offset_clamp = 1;
pub const GL_ARB_post_depth_coverage = 1;
pub const GL_ARB_program_interface_query = 1;
pub const GL_ARB_provoking_vertex = 1;
pub const GL_ARB_query_buffer_object = 1;
pub const GL_ARB_robust_buffer_access_behavior = 1;
pub const GL_ARB_robustness = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetGraphicsResetStatusARB.xhtml
pub inline fn glGetGraphicsResetStatusARB() GLenum {
    return glad_glGetGraphicsResetStatusARB.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnTexImageARB.xhtml
pub inline fn glGetnTexImageARB(arg_4313: GLenum, arg_4314: GLint, arg_4315: GLenum, arg_4316: GLenum, arg_4317: GLsizei, arg_4318: ?*anyopaque) void {
    return glad_glGetnTexImageARB.?(arg_4313, arg_4314, arg_4315, arg_4316, arg_4317, arg_4318);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReadnPixelsARB.xhtml
pub inline fn glReadnPixelsARB(arg_4319: GLint, arg_4320: GLint, arg_4321: GLsizei, arg_4322: GLsizei, arg_4323: GLenum, arg_4324: GLenum, arg_4325: GLsizei, arg_4326: ?*anyopaque) void {
    return glad_glReadnPixelsARB.?(arg_4319, arg_4320, arg_4321, arg_4322, arg_4323, arg_4324, arg_4325, arg_4326);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnCompressedTexImageARB.xhtml
pub inline fn glGetnCompressedTexImageARB(arg_4327: GLenum, arg_4328: GLint, arg_4329: GLsizei, arg_4330: ?*anyopaque) void {
    return glad_glGetnCompressedTexImageARB.?(arg_4327, arg_4328, arg_4329, arg_4330);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnUniformfvARB.xhtml
pub inline fn glGetnUniformfvARB(arg_4331: GLuint, arg_4332: GLint, arg_4333: GLsizei, arg_4334: [*c]GLfloat) void {
    return glad_glGetnUniformfvARB.?(arg_4331, arg_4332, arg_4333, arg_4334);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnUniformivARB.xhtml
pub inline fn glGetnUniformivARB(arg_4335: GLuint, arg_4336: GLint, arg_4337: GLsizei, arg_4338: [*c]GLint) void {
    return glad_glGetnUniformivARB.?(arg_4335, arg_4336, arg_4337, arg_4338);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnUniformuivARB.xhtml
pub inline fn glGetnUniformuivARB(arg_4339: GLuint, arg_4340: GLint, arg_4341: GLsizei, arg_4342: [*c]GLuint) void {
    return glad_glGetnUniformuivARB.?(arg_4339, arg_4340, arg_4341, arg_4342);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnUniformdvARB.xhtml
pub inline fn glGetnUniformdvARB(arg_4343: GLuint, arg_4344: GLint, arg_4345: GLsizei, arg_4346: [*c]GLdouble) void {
    return glad_glGetnUniformdvARB.?(arg_4343, arg_4344, arg_4345, arg_4346);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnMapdvARB.xhtml
pub inline fn glGetnMapdvARB(arg_4347: GLenum, arg_4348: GLenum, arg_4349: GLsizei, arg_4350: [*c]GLdouble) void {
    return glad_glGetnMapdvARB.?(arg_4347, arg_4348, arg_4349, arg_4350);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnMapfvARB.xhtml
pub inline fn glGetnMapfvARB(arg_4351: GLenum, arg_4352: GLenum, arg_4353: GLsizei, arg_4354: [*c]GLfloat) void {
    return glad_glGetnMapfvARB.?(arg_4351, arg_4352, arg_4353, arg_4354);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnMapivARB.xhtml
pub inline fn glGetnMapivARB(arg_4355: GLenum, arg_4356: GLenum, arg_4357: GLsizei, arg_4358: [*c]GLint) void {
    return glad_glGetnMapivARB.?(arg_4355, arg_4356, arg_4357, arg_4358);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnPixelMapfvARB.xhtml
pub inline fn glGetnPixelMapfvARB(arg_4359: GLenum, arg_4360: GLsizei, arg_4361: [*c]GLfloat) void {
    return glad_glGetnPixelMapfvARB.?(arg_4359, arg_4360, arg_4361);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnPixelMapuivARB.xhtml
pub inline fn glGetnPixelMapuivARB(arg_4362: GLenum, arg_4363: GLsizei, arg_4364: [*c]GLuint) void {
    return glad_glGetnPixelMapuivARB.?(arg_4362, arg_4363, arg_4364);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnPixelMapusvARB.xhtml
pub inline fn glGetnPixelMapusvARB(arg_4365: GLenum, arg_4366: GLsizei, arg_4367: [*c]GLushort) void {
    return glad_glGetnPixelMapusvARB.?(arg_4365, arg_4366, arg_4367);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnPolygonStippleARB.xhtml
pub inline fn glGetnPolygonStippleARB(arg_4368: GLsizei, arg_4369: [*c]GLubyte) void {
    return glad_glGetnPolygonStippleARB.?(arg_4368, arg_4369);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnColorTableARB.xhtml
pub inline fn glGetnColorTableARB(arg_4370: GLenum, arg_4371: GLenum, arg_4372: GLenum, arg_4373: GLsizei, arg_4374: ?*anyopaque) void {
    return glad_glGetnColorTableARB.?(arg_4370, arg_4371, arg_4372, arg_4373, arg_4374);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnConvolutionFilterARB.xhtml
pub inline fn glGetnConvolutionFilterARB(arg_4375: GLenum, arg_4376: GLenum, arg_4377: GLenum, arg_4378: GLsizei, arg_4379: ?*anyopaque) void {
    return glad_glGetnConvolutionFilterARB.?(arg_4375, arg_4376, arg_4377, arg_4378, arg_4379);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnSeparableFilterARB.xhtml
pub inline fn glGetnSeparableFilterARB(arg_4380: GLenum, arg_4381: GLenum, arg_4382: GLenum, arg_4383: GLsizei, arg_4384: ?*anyopaque, arg_4385: GLsizei, arg_4386: ?*anyopaque, arg_4387: ?*anyopaque) void {
    return glad_glGetnSeparableFilterARB.?(arg_4380, arg_4381, arg_4382, arg_4383, arg_4384, arg_4385, arg_4386, arg_4387);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnHistogramARB.xhtml
pub inline fn glGetnHistogramARB(arg_4388: GLenum, arg_4389: GLboolean, arg_4390: GLenum, arg_4391: GLenum, arg_4392: GLsizei, arg_4393: ?*anyopaque) void {
    return glad_glGetnHistogramARB.?(arg_4388, arg_4389, arg_4390, arg_4391, arg_4392, arg_4393);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnMinmaxARB.xhtml
pub inline fn glGetnMinmaxARB(arg_4394: GLenum, arg_4395: GLboolean, arg_4396: GLenum, arg_4397: GLenum, arg_4398: GLsizei, arg_4399: ?*anyopaque) void {
    return glad_glGetnMinmaxARB.?(arg_4394, arg_4395, arg_4396, arg_4397, arg_4398, arg_4399);
}
pub const GL_ARB_robustness_isolation = 1;
pub const GL_ARB_sample_locations = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferSampleLocationsfvARB.xhtml
pub inline fn glFramebufferSampleLocationsfvARB(arg_4400: GLenum, arg_4401: GLuint, arg_4402: GLsizei, arg_4403: [*c]const GLfloat) void {
    return glad_glFramebufferSampleLocationsfvARB.?(arg_4400, arg_4401, arg_4402, arg_4403);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedFramebufferSampleLocationsfvARB.xhtml
pub inline fn glNamedFramebufferSampleLocationsfvARB(arg_4404: GLuint, arg_4405: GLuint, arg_4406: GLsizei, arg_4407: [*c]const GLfloat) void {
    return glad_glNamedFramebufferSampleLocationsfvARB.?(arg_4404, arg_4405, arg_4406, arg_4407);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEvaluateDepthValuesARB.xhtml
pub inline fn glEvaluateDepthValuesARB() void {
    return glad_glEvaluateDepthValuesARB.?();
}
pub const GL_ARB_sample_shading = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMinSampleShadingARB.xhtml
pub inline fn glMinSampleShadingARB(arg_4408: GLfloat) void {
    return glad_glMinSampleShadingARB.?(arg_4408);
}
pub const GL_ARB_sampler_objects = 1;
pub const GL_ARB_seamless_cube_map = 1;
pub const GL_ARB_seamless_cubemap_per_texture = 1;
pub const GL_ARB_separate_shader_objects = 1;
pub const GL_ARB_shader_atomic_counter_ops = 1;
pub const GL_ARB_shader_atomic_counters = 1;
pub const GL_ARB_shader_ballot = 1;
pub const GL_ARB_shader_bit_encoding = 1;
pub const GL_ARB_shader_clock = 1;
pub const GL_ARB_shader_draw_parameters = 1;
pub const GL_ARB_shader_group_vote = 1;
pub const GL_ARB_shader_image_load_store = 1;
pub const GL_ARB_shader_image_size = 1;
pub const GL_ARB_shader_objects = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteObjectARB.xhtml
pub inline fn glDeleteObjectARB(arg_4409: GLhandleARB) void {
    return glad_glDeleteObjectARB.?(arg_4409);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetHandleARB.xhtml
pub inline fn glGetHandleARB(arg_4410: GLenum) GLhandleARB {
    return glad_glGetHandleARB.?(arg_4410);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDetachObjectARB.xhtml
pub inline fn glDetachObjectARB(arg_4411: GLhandleARB, arg_4412: GLhandleARB) void {
    return glad_glDetachObjectARB.?(arg_4411, arg_4412);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCreateShaderObjectARB.xhtml
pub inline fn glCreateShaderObjectARB(arg_4413: GLenum) GLhandleARB {
    return glad_glCreateShaderObjectARB.?(arg_4413);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glShaderSourceARB.xhtml
pub inline fn glShaderSourceARB(arg_4414: GLhandleARB, arg_4415: GLsizei, arg_4416: [*c][*c]const GLcharARB, arg_4417: [*c]const GLint) void {
    return glad_glShaderSourceARB.?(arg_4414, arg_4415, arg_4416, arg_4417);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompileShaderARB.xhtml
pub inline fn glCompileShaderARB(arg_4418: GLhandleARB) void {
    return glad_glCompileShaderARB.?(arg_4418);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCreateProgramObjectARB.xhtml
pub inline fn glCreateProgramObjectARB() GLhandleARB {
    return glad_glCreateProgramObjectARB.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glAttachObjectARB.xhtml
pub inline fn glAttachObjectARB(arg_4419: GLhandleARB, arg_4420: GLhandleARB) void {
    return glad_glAttachObjectARB.?(arg_4419, arg_4420);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLinkProgramARB.xhtml
pub inline fn glLinkProgramARB(arg_4421: GLhandleARB) void {
    return glad_glLinkProgramARB.?(arg_4421);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUseProgramObjectARB.xhtml
pub inline fn glUseProgramObjectARB(arg_4422: GLhandleARB) void {
    return glad_glUseProgramObjectARB.?(arg_4422);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glValidateProgramARB.xhtml
pub inline fn glValidateProgramARB(arg_4423: GLhandleARB) void {
    return glad_glValidateProgramARB.?(arg_4423);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform1fARB.xhtml
pub inline fn glUniform1fARB(arg_4424: GLint, arg_4425: GLfloat) void {
    return glad_glUniform1fARB.?(arg_4424, arg_4425);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform2fARB.xhtml
pub inline fn glUniform2fARB(arg_4426: GLint, arg_4427: GLfloat, arg_4428: GLfloat) void {
    return glad_glUniform2fARB.?(arg_4426, arg_4427, arg_4428);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform3fARB.xhtml
pub inline fn glUniform3fARB(arg_4429: GLint, arg_4430: GLfloat, arg_4431: GLfloat, arg_4432: GLfloat) void {
    return glad_glUniform3fARB.?(arg_4429, arg_4430, arg_4431, arg_4432);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform4fARB.xhtml
pub inline fn glUniform4fARB(arg_4433: GLint, arg_4434: GLfloat, arg_4435: GLfloat, arg_4436: GLfloat, arg_4437: GLfloat) void {
    return glad_glUniform4fARB.?(arg_4433, arg_4434, arg_4435, arg_4436, arg_4437);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform1iARB.xhtml
pub inline fn glUniform1iARB(arg_4438: GLint, arg_4439: GLint) void {
    return glad_glUniform1iARB.?(arg_4438, arg_4439);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform2iARB.xhtml
pub inline fn glUniform2iARB(arg_4440: GLint, arg_4441: GLint, arg_4442: GLint) void {
    return glad_glUniform2iARB.?(arg_4440, arg_4441, arg_4442);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform3iARB.xhtml
pub inline fn glUniform3iARB(arg_4443: GLint, arg_4444: GLint, arg_4445: GLint, arg_4446: GLint) void {
    return glad_glUniform3iARB.?(arg_4443, arg_4444, arg_4445, arg_4446);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform4iARB.xhtml
pub inline fn glUniform4iARB(arg_4447: GLint, arg_4448: GLint, arg_4449: GLint, arg_4450: GLint, arg_4451: GLint) void {
    return glad_glUniform4iARB.?(arg_4447, arg_4448, arg_4449, arg_4450, arg_4451);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform1fvARB.xhtml
pub inline fn glUniform1fvARB(arg_4452: GLint, arg_4453: GLsizei, arg_4454: [*c]const GLfloat) void {
    return glad_glUniform1fvARB.?(arg_4452, arg_4453, arg_4454);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform2fvARB.xhtml
pub inline fn glUniform2fvARB(arg_4455: GLint, arg_4456: GLsizei, arg_4457: [*c]const GLfloat) void {
    return glad_glUniform2fvARB.?(arg_4455, arg_4456, arg_4457);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform3fvARB.xhtml
pub inline fn glUniform3fvARB(arg_4458: GLint, arg_4459: GLsizei, arg_4460: [*c]const GLfloat) void {
    return glad_glUniform3fvARB.?(arg_4458, arg_4459, arg_4460);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform4fvARB.xhtml
pub inline fn glUniform4fvARB(arg_4461: GLint, arg_4462: GLsizei, arg_4463: [*c]const GLfloat) void {
    return glad_glUniform4fvARB.?(arg_4461, arg_4462, arg_4463);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform1ivARB.xhtml
pub inline fn glUniform1ivARB(arg_4464: GLint, arg_4465: GLsizei, arg_4466: [*c]const GLint) void {
    return glad_glUniform1ivARB.?(arg_4464, arg_4465, arg_4466);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform2ivARB.xhtml
pub inline fn glUniform2ivARB(arg_4467: GLint, arg_4468: GLsizei, arg_4469: [*c]const GLint) void {
    return glad_glUniform2ivARB.?(arg_4467, arg_4468, arg_4469);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform3ivARB.xhtml
pub inline fn glUniform3ivARB(arg_4470: GLint, arg_4471: GLsizei, arg_4472: [*c]const GLint) void {
    return glad_glUniform3ivARB.?(arg_4470, arg_4471, arg_4472);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform4ivARB.xhtml
pub inline fn glUniform4ivARB(arg_4473: GLint, arg_4474: GLsizei, arg_4475: [*c]const GLint) void {
    return glad_glUniform4ivARB.?(arg_4473, arg_4474, arg_4475);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix2fvARB.xhtml
pub inline fn glUniformMatrix2fvARB(arg_4476: GLint, arg_4477: GLsizei, arg_4478: GLboolean, arg_4479: [*c]const GLfloat) void {
    return glad_glUniformMatrix2fvARB.?(arg_4476, arg_4477, arg_4478, arg_4479);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix3fvARB.xhtml
pub inline fn glUniformMatrix3fvARB(arg_4480: GLint, arg_4481: GLsizei, arg_4482: GLboolean, arg_4483: [*c]const GLfloat) void {
    return glad_glUniformMatrix3fvARB.?(arg_4480, arg_4481, arg_4482, arg_4483);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix4fvARB.xhtml
pub inline fn glUniformMatrix4fvARB(arg_4484: GLint, arg_4485: GLsizei, arg_4486: GLboolean, arg_4487: [*c]const GLfloat) void {
    return glad_glUniformMatrix4fvARB.?(arg_4484, arg_4485, arg_4486, arg_4487);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetObjectParameterfvARB.xhtml
pub inline fn glGetObjectParameterfvARB(arg_4488: GLhandleARB, arg_4489: GLenum, arg_4490: [*c]GLfloat) void {
    return glad_glGetObjectParameterfvARB.?(arg_4488, arg_4489, arg_4490);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetObjectParameterivARB.xhtml
pub inline fn glGetObjectParameterivARB(arg_4491: GLhandleARB, arg_4492: GLenum, arg_4493: [*c]GLint) void {
    return glad_glGetObjectParameterivARB.?(arg_4491, arg_4492, arg_4493);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetInfoLogARB.xhtml
pub inline fn glGetInfoLogARB(arg_4494: GLhandleARB, arg_4495: GLsizei, arg_4496: [*c]GLsizei, arg_4497: [*c]GLcharARB) void {
    return glad_glGetInfoLogARB.?(arg_4494, arg_4495, arg_4496, arg_4497);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetAttachedObjectsARB.xhtml
pub inline fn glGetAttachedObjectsARB(arg_4498: GLhandleARB, arg_4499: GLsizei, arg_4500: [*c]GLsizei, arg_4501: [*c]GLhandleARB) void {
    return glad_glGetAttachedObjectsARB.?(arg_4498, arg_4499, arg_4500, arg_4501);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetUniformLocationARB.xhtml
pub inline fn glGetUniformLocationARB(arg_4502: GLhandleARB, arg_4503: [*c]const GLcharARB) GLint {
    return glad_glGetUniformLocationARB.?(arg_4502, arg_4503);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetActiveUniformARB.xhtml
pub inline fn glGetActiveUniformARB(arg_4504: GLhandleARB, arg_4505: GLuint, arg_4506: GLsizei, arg_4507: [*c]GLsizei, arg_4508: [*c]GLint, arg_4509: [*c]GLenum, arg_4510: [*c]GLcharARB) void {
    return glad_glGetActiveUniformARB.?(arg_4504, arg_4505, arg_4506, arg_4507, arg_4508, arg_4509, arg_4510);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetUniformfvARB.xhtml
pub inline fn glGetUniformfvARB(arg_4511: GLhandleARB, arg_4512: GLint, arg_4513: [*c]GLfloat) void {
    return glad_glGetUniformfvARB.?(arg_4511, arg_4512, arg_4513);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetUniformivARB.xhtml
pub inline fn glGetUniformivARB(arg_4514: GLhandleARB, arg_4515: GLint, arg_4516: [*c]GLint) void {
    return glad_glGetUniformivARB.?(arg_4514, arg_4515, arg_4516);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetShaderSourceARB.xhtml
pub inline fn glGetShaderSourceARB(arg_4517: GLhandleARB, arg_4518: GLsizei, arg_4519: [*c]GLsizei, arg_4520: [*c]GLcharARB) void {
    return glad_glGetShaderSourceARB.?(arg_4517, arg_4518, arg_4519, arg_4520);
}
pub const GL_ARB_shader_precision = 1;
pub const GL_ARB_shader_stencil_export = 1;
pub const GL_ARB_shader_storage_buffer_object = 1;
pub const GL_ARB_shader_subroutine = 1;
pub const GL_ARB_shader_texture_image_samples = 1;
pub const GL_ARB_shader_texture_lod = 1;
pub const GL_ARB_shader_viewport_layer_array = 1;
pub const GL_ARB_shading_language_100 = 1;
pub const GL_ARB_shading_language_420pack = 1;
pub const GL_ARB_shading_language_include = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedStringARB.xhtml
pub inline fn glNamedStringARB(arg_4521: GLenum, arg_4522: GLint, arg_4523: [*c]const GLchar, arg_4524: GLint, arg_4525: [*c]const GLchar) void {
    return glad_glNamedStringARB.?(arg_4521, arg_4522, arg_4523, arg_4524, arg_4525);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteNamedStringARB.xhtml
pub inline fn glDeleteNamedStringARB(arg_4526: GLint, arg_4527: [*c]const GLchar) void {
    return glad_glDeleteNamedStringARB.?(arg_4526, arg_4527);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompileShaderIncludeARB.xhtml
pub inline fn glCompileShaderIncludeARB(arg_4528: GLuint, arg_4529: GLsizei, arg_4530: [*c]const [*c]const GLchar, arg_4531: [*c]const GLint) void {
    return glad_glCompileShaderIncludeARB.?(arg_4528, arg_4529, arg_4530, arg_4531);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsNamedStringARB.xhtml
pub inline fn glIsNamedStringARB(arg_4532: GLint, arg_4533: [*c]const GLchar) GLboolean {
    return glad_glIsNamedStringARB.?(arg_4532, arg_4533);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetNamedStringARB.xhtml
pub inline fn glGetNamedStringARB(arg_4534: GLint, arg_4535: [*c]const GLchar, arg_4536: GLsizei, arg_4537: [*c]GLint, arg_4538: [*c]GLchar) void {
    return glad_glGetNamedStringARB.?(arg_4534, arg_4535, arg_4536, arg_4537, arg_4538);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetNamedStringivARB.xhtml
pub inline fn glGetNamedStringivARB(arg_4539: GLint, arg_4540: [*c]const GLchar, arg_4541: GLenum, arg_4542: [*c]GLint) void {
    return glad_glGetNamedStringivARB.?(arg_4539, arg_4540, arg_4541, arg_4542);
}
pub const GL_ARB_shading_language_packing = 1;
pub const GL_ARB_shadow = 1;
pub const GL_ARB_shadow_ambient = 1;
pub const GL_ARB_sparse_buffer = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBufferPageCommitmentARB.xhtml
pub inline fn glBufferPageCommitmentARB(arg_4543: GLenum, arg_4544: GLintptr, arg_4545: GLsizeiptr, arg_4546: GLboolean) void {
    return glad_glBufferPageCommitmentARB.?(arg_4543, arg_4544, arg_4545, arg_4546);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedBufferPageCommitmentEXT.xhtml
pub inline fn glNamedBufferPageCommitmentEXT(arg_4547: GLuint, arg_4548: GLintptr, arg_4549: GLsizeiptr, arg_4550: GLboolean) void {
    return glad_glNamedBufferPageCommitmentEXT.?(arg_4547, arg_4548, arg_4549, arg_4550);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedBufferPageCommitmentARB.xhtml
pub inline fn glNamedBufferPageCommitmentARB(arg_4551: GLuint, arg_4552: GLintptr, arg_4553: GLsizeiptr, arg_4554: GLboolean) void {
    return glad_glNamedBufferPageCommitmentARB.?(arg_4551, arg_4552, arg_4553, arg_4554);
}
pub const GL_ARB_sparse_texture = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexPageCommitmentARB.xhtml
pub inline fn glTexPageCommitmentARB(arg_4555: GLenum, arg_4556: GLint, arg_4557: GLint, arg_4558: GLint, arg_4559: GLint, arg_4560: GLsizei, arg_4561: GLsizei, arg_4562: GLsizei, arg_4563: GLboolean) void {
    return glad_glTexPageCommitmentARB.?(arg_4555, arg_4556, arg_4557, arg_4558, arg_4559, arg_4560, arg_4561, arg_4562, arg_4563);
}
pub const GL_ARB_sparse_texture2 = 1;
pub const GL_ARB_sparse_texture_clamp = 1;
pub const GL_ARB_spirv_extensions = 1;
pub const GL_ARB_stencil_texturing = 1;
pub const GL_ARB_sync = 1;
pub const GL_ARB_tessellation_shader = 1;
pub const GL_ARB_texture_barrier = 1;
pub const GL_ARB_texture_border_clamp = 1;
pub const GL_ARB_texture_buffer_object = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexBufferARB.xhtml
pub inline fn glTexBufferARB(arg_4564: GLenum, arg_4565: GLenum, arg_4566: GLuint) void {
    return glad_glTexBufferARB.?(arg_4564, arg_4565, arg_4566);
}
pub const GL_ARB_texture_buffer_object_rgb32 = 1;
pub const GL_ARB_texture_buffer_range = 1;
pub const GL_ARB_texture_compression = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedTexImage3DARB.xhtml
pub inline fn glCompressedTexImage3DARB(arg_4567: GLenum, arg_4568: GLint, arg_4569: GLenum, arg_4570: GLsizei, arg_4571: GLsizei, arg_4572: GLsizei, arg_4573: GLint, arg_4574: GLsizei, arg_4575: ?*const anyopaque) void {
    return glad_glCompressedTexImage3DARB.?(arg_4567, arg_4568, arg_4569, arg_4570, arg_4571, arg_4572, arg_4573, arg_4574, arg_4575);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedTexImage2DARB.xhtml
pub inline fn glCompressedTexImage2DARB(arg_4576: GLenum, arg_4577: GLint, arg_4578: GLenum, arg_4579: GLsizei, arg_4580: GLsizei, arg_4581: GLint, arg_4582: GLsizei, arg_4583: ?*const anyopaque) void {
    return glad_glCompressedTexImage2DARB.?(arg_4576, arg_4577, arg_4578, arg_4579, arg_4580, arg_4581, arg_4582, arg_4583);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedTexImage1DARB.xhtml
pub inline fn glCompressedTexImage1DARB(arg_4584: GLenum, arg_4585: GLint, arg_4586: GLenum, arg_4587: GLsizei, arg_4588: GLint, arg_4589: GLsizei, arg_4590: ?*const anyopaque) void {
    return glad_glCompressedTexImage1DARB.?(arg_4584, arg_4585, arg_4586, arg_4587, arg_4588, arg_4589, arg_4590);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedTexSubImage3DARB.xhtml
pub inline fn glCompressedTexSubImage3DARB(arg_4591: GLenum, arg_4592: GLint, arg_4593: GLint, arg_4594: GLint, arg_4595: GLint, arg_4596: GLsizei, arg_4597: GLsizei, arg_4598: GLsizei, arg_4599: GLenum, arg_4600: GLsizei, arg_4601: ?*const anyopaque) void {
    return glad_glCompressedTexSubImage3DARB.?(arg_4591, arg_4592, arg_4593, arg_4594, arg_4595, arg_4596, arg_4597, arg_4598, arg_4599, arg_4600, arg_4601);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedTexSubImage2DARB.xhtml
pub inline fn glCompressedTexSubImage2DARB(arg_4602: GLenum, arg_4603: GLint, arg_4604: GLint, arg_4605: GLint, arg_4606: GLsizei, arg_4607: GLsizei, arg_4608: GLenum, arg_4609: GLsizei, arg_4610: ?*const anyopaque) void {
    return glad_glCompressedTexSubImage2DARB.?(arg_4602, arg_4603, arg_4604, arg_4605, arg_4606, arg_4607, arg_4608, arg_4609, arg_4610);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedTexSubImage1DARB.xhtml
pub inline fn glCompressedTexSubImage1DARB(arg_4611: GLenum, arg_4612: GLint, arg_4613: GLint, arg_4614: GLsizei, arg_4615: GLenum, arg_4616: GLsizei, arg_4617: ?*const anyopaque) void {
    return glad_glCompressedTexSubImage1DARB.?(arg_4611, arg_4612, arg_4613, arg_4614, arg_4615, arg_4616, arg_4617);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetCompressedTexImageARB.xhtml
pub inline fn glGetCompressedTexImageARB(arg_4618: GLenum, arg_4619: GLint, arg_4620: ?*anyopaque) void {
    return glad_glGetCompressedTexImageARB.?(arg_4618, arg_4619, arg_4620);
}
pub const GL_ARB_texture_compression_bptc = 1;
pub const GL_ARB_texture_compression_rgtc = 1;
pub const GL_ARB_texture_cube_map = 1;
pub const GL_ARB_texture_cube_map_array = 1;
pub const GL_ARB_texture_env_add = 1;
pub const GL_ARB_texture_env_combine = 1;
pub const GL_ARB_texture_env_crossbar = 1;
pub const GL_ARB_texture_env_dot3 = 1;
pub const GL_ARB_texture_filter_anisotropic = 1;
pub const GL_ARB_texture_filter_minmax = 1;
pub const GL_ARB_texture_float = 1;
pub const GL_ARB_texture_gather = 1;
pub const GL_ARB_texture_mirror_clamp_to_edge = 1;
pub const GL_ARB_texture_mirrored_repeat = 1;
pub const GL_ARB_texture_multisample = 1;
pub const GL_ARB_texture_non_power_of_two = 1;
pub const GL_ARB_texture_query_levels = 1;
pub const GL_ARB_texture_query_lod = 1;
pub const GL_ARB_texture_rectangle = 1;
pub const GL_ARB_texture_rg = 1;
pub const GL_ARB_texture_rgb10_a2ui = 1;
pub const GL_ARB_texture_stencil8 = 1;
pub const GL_ARB_texture_storage = 1;
pub const GL_ARB_texture_storage_multisample = 1;
pub const GL_ARB_texture_swizzle = 1;
pub const GL_ARB_texture_view = 1;
pub const GL_ARB_timer_query = 1;
pub const GL_ARB_transform_feedback2 = 1;
pub const GL_ARB_transform_feedback3 = 1;
pub const GL_ARB_transform_feedback_instanced = 1;
pub const GL_ARB_transform_feedback_overflow_query = 1;
pub const GL_ARB_transpose_matrix = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLoadTransposeMatrixfARB.xhtml
pub inline fn glLoadTransposeMatrixfARB(arg_4621: [*c]const GLfloat) void {
    return glad_glLoadTransposeMatrixfARB.?(arg_4621);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLoadTransposeMatrixdARB.xhtml
pub inline fn glLoadTransposeMatrixdARB(arg_4622: [*c]const GLdouble) void {
    return glad_glLoadTransposeMatrixdARB.?(arg_4622);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultTransposeMatrixfARB.xhtml
pub inline fn glMultTransposeMatrixfARB(arg_4623: [*c]const GLfloat) void {
    return glad_glMultTransposeMatrixfARB.?(arg_4623);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultTransposeMatrixdARB.xhtml
pub inline fn glMultTransposeMatrixdARB(arg_4624: [*c]const GLdouble) void {
    return glad_glMultTransposeMatrixdARB.?(arg_4624);
}
pub const GL_ARB_uniform_buffer_object = 1;
pub const GL_ARB_vertex_array_bgra = 1;
pub const GL_ARB_vertex_array_object = 1;
pub const GL_ARB_vertex_attrib_64bit = 1;
pub const GL_ARB_vertex_attrib_binding = 1;
pub const GL_ARB_vertex_blend = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWeightbvARB.xhtml
pub inline fn glWeightbvARB(arg_4625: GLint, arg_4626: [*c]const GLbyte) void {
    return glad_glWeightbvARB.?(arg_4625, arg_4626);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWeightsvARB.xhtml
pub inline fn glWeightsvARB(arg_4627: GLint, arg_4628: [*c]const GLshort) void {
    return glad_glWeightsvARB.?(arg_4627, arg_4628);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWeightivARB.xhtml
pub inline fn glWeightivARB(arg_4629: GLint, arg_4630: [*c]const GLint) void {
    return glad_glWeightivARB.?(arg_4629, arg_4630);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWeightfvARB.xhtml
pub inline fn glWeightfvARB(arg_4631: GLint, arg_4632: [*c]const GLfloat) void {
    return glad_glWeightfvARB.?(arg_4631, arg_4632);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWeightdvARB.xhtml
pub inline fn glWeightdvARB(arg_4633: GLint, arg_4634: [*c]const GLdouble) void {
    return glad_glWeightdvARB.?(arg_4633, arg_4634);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWeightubvARB.xhtml
pub inline fn glWeightubvARB(arg_4635: GLint, arg_4636: [*c]const GLubyte) void {
    return glad_glWeightubvARB.?(arg_4635, arg_4636);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWeightusvARB.xhtml
pub inline fn glWeightusvARB(arg_4637: GLint, arg_4638: [*c]const GLushort) void {
    return glad_glWeightusvARB.?(arg_4637, arg_4638);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWeightuivARB.xhtml
pub inline fn glWeightuivARB(arg_4639: GLint, arg_4640: [*c]const GLuint) void {
    return glad_glWeightuivARB.?(arg_4639, arg_4640);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWeightPointerARB.xhtml
pub inline fn glWeightPointerARB(arg_4641: GLint, arg_4642: GLenum, arg_4643: GLsizei, arg_4644: ?*const anyopaque) void {
    return glad_glWeightPointerARB.?(arg_4641, arg_4642, arg_4643, arg_4644);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexBlendARB.xhtml
pub inline fn glVertexBlendARB(arg_4645: GLint) void {
    return glad_glVertexBlendARB.?(arg_4645);
}
pub const GL_ARB_vertex_buffer_object = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindBufferARB.xhtml
pub inline fn glBindBufferARB(arg_4646: GLenum, arg_4647: GLuint) void {
    return glad_glBindBufferARB.?(arg_4646, arg_4647);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteBuffersARB.xhtml
pub inline fn glDeleteBuffersARB(arg_4648: GLsizei, arg_4649: [*c]const GLuint) void {
    return glad_glDeleteBuffersARB.?(arg_4648, arg_4649);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenBuffersARB.xhtml
pub inline fn glGenBuffersARB(arg_4650: GLsizei, arg_4651: [*c]GLuint) void {
    return glad_glGenBuffersARB.?(arg_4650, arg_4651);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsBufferARB.xhtml
pub inline fn glIsBufferARB(arg_4652: GLuint) GLboolean {
    return glad_glIsBufferARB.?(arg_4652);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBufferDataARB.xhtml
pub inline fn glBufferDataARB(arg_4653: GLenum, arg_4654: GLsizeiptrARB, arg_4655: ?*const anyopaque, arg_4656: GLenum) void {
    return glad_glBufferDataARB.?(arg_4653, arg_4654, arg_4655, arg_4656);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBufferSubDataARB.xhtml
pub inline fn glBufferSubDataARB(arg_4657: GLenum, arg_4658: GLintptrARB, arg_4659: GLsizeiptrARB, arg_4660: ?*const anyopaque) void {
    return glad_glBufferSubDataARB.?(arg_4657, arg_4658, arg_4659, arg_4660);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetBufferSubDataARB.xhtml
pub inline fn glGetBufferSubDataARB(arg_4661: GLenum, arg_4662: GLintptrARB, arg_4663: GLsizeiptrARB, arg_4664: ?*anyopaque) void {
    return glad_glGetBufferSubDataARB.?(arg_4661, arg_4662, arg_4663, arg_4664);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMapBufferARB.xhtml
pub inline fn glMapBufferARB(arg_4665: GLenum, arg_4666: GLenum) ?*anyopaque {
    return glad_glMapBufferARB.?(arg_4665, arg_4666);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUnmapBufferARB.xhtml
pub inline fn glUnmapBufferARB(arg_4667: GLenum) GLboolean {
    return glad_glUnmapBufferARB.?(arg_4667);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetBufferParameterivARB.xhtml
pub inline fn glGetBufferParameterivARB(arg_4668: GLenum, arg_4669: GLenum, arg_4670: [*c]GLint) void {
    return glad_glGetBufferParameterivARB.?(arg_4668, arg_4669, arg_4670);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetBufferPointervARB.xhtml
pub inline fn glGetBufferPointervARB(arg_4671: GLenum, arg_4672: GLenum, arg_4673: [*c]?*anyopaque) void {
    return glad_glGetBufferPointervARB.?(arg_4671, arg_4672, arg_4673);
}
pub const GL_ARB_vertex_program = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib1dARB.xhtml
pub inline fn glVertexAttrib1dARB(arg_4674: GLuint, arg_4675: GLdouble) void {
    return glad_glVertexAttrib1dARB.?(arg_4674, arg_4675);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib1dvARB.xhtml
pub inline fn glVertexAttrib1dvARB(arg_4676: GLuint, arg_4677: [*c]const GLdouble) void {
    return glad_glVertexAttrib1dvARB.?(arg_4676, arg_4677);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib1fARB.xhtml
pub inline fn glVertexAttrib1fARB(arg_4678: GLuint, arg_4679: GLfloat) void {
    return glad_glVertexAttrib1fARB.?(arg_4678, arg_4679);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib1fvARB.xhtml
pub inline fn glVertexAttrib1fvARB(arg_4680: GLuint, arg_4681: [*c]const GLfloat) void {
    return glad_glVertexAttrib1fvARB.?(arg_4680, arg_4681);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib1sARB.xhtml
pub inline fn glVertexAttrib1sARB(arg_4682: GLuint, arg_4683: GLshort) void {
    return glad_glVertexAttrib1sARB.?(arg_4682, arg_4683);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib1svARB.xhtml
pub inline fn glVertexAttrib1svARB(arg_4684: GLuint, arg_4685: [*c]const GLshort) void {
    return glad_glVertexAttrib1svARB.?(arg_4684, arg_4685);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib2dARB.xhtml
pub inline fn glVertexAttrib2dARB(arg_4686: GLuint, arg_4687: GLdouble, arg_4688: GLdouble) void {
    return glad_glVertexAttrib2dARB.?(arg_4686, arg_4687, arg_4688);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib2dvARB.xhtml
pub inline fn glVertexAttrib2dvARB(arg_4689: GLuint, arg_4690: [*c]const GLdouble) void {
    return glad_glVertexAttrib2dvARB.?(arg_4689, arg_4690);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib2fARB.xhtml
pub inline fn glVertexAttrib2fARB(arg_4691: GLuint, arg_4692: GLfloat, arg_4693: GLfloat) void {
    return glad_glVertexAttrib2fARB.?(arg_4691, arg_4692, arg_4693);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib2fvARB.xhtml
pub inline fn glVertexAttrib2fvARB(arg_4694: GLuint, arg_4695: [*c]const GLfloat) void {
    return glad_glVertexAttrib2fvARB.?(arg_4694, arg_4695);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib2sARB.xhtml
pub inline fn glVertexAttrib2sARB(arg_4696: GLuint, arg_4697: GLshort, arg_4698: GLshort) void {
    return glad_glVertexAttrib2sARB.?(arg_4696, arg_4697, arg_4698);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib2svARB.xhtml
pub inline fn glVertexAttrib2svARB(arg_4699: GLuint, arg_4700: [*c]const GLshort) void {
    return glad_glVertexAttrib2svARB.?(arg_4699, arg_4700);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib3dARB.xhtml
pub inline fn glVertexAttrib3dARB(arg_4701: GLuint, arg_4702: GLdouble, arg_4703: GLdouble, arg_4704: GLdouble) void {
    return glad_glVertexAttrib3dARB.?(arg_4701, arg_4702, arg_4703, arg_4704);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib3dvARB.xhtml
pub inline fn glVertexAttrib3dvARB(arg_4705: GLuint, arg_4706: [*c]const GLdouble) void {
    return glad_glVertexAttrib3dvARB.?(arg_4705, arg_4706);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib3fARB.xhtml
pub inline fn glVertexAttrib3fARB(arg_4707: GLuint, arg_4708: GLfloat, arg_4709: GLfloat, arg_4710: GLfloat) void {
    return glad_glVertexAttrib3fARB.?(arg_4707, arg_4708, arg_4709, arg_4710);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib3fvARB.xhtml
pub inline fn glVertexAttrib3fvARB(arg_4711: GLuint, arg_4712: [*c]const GLfloat) void {
    return glad_glVertexAttrib3fvARB.?(arg_4711, arg_4712);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib3sARB.xhtml
pub inline fn glVertexAttrib3sARB(arg_4713: GLuint, arg_4714: GLshort, arg_4715: GLshort, arg_4716: GLshort) void {
    return glad_glVertexAttrib3sARB.?(arg_4713, arg_4714, arg_4715, arg_4716);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib3svARB.xhtml
pub inline fn glVertexAttrib3svARB(arg_4717: GLuint, arg_4718: [*c]const GLshort) void {
    return glad_glVertexAttrib3svARB.?(arg_4717, arg_4718);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4NbvARB.xhtml
pub inline fn glVertexAttrib4NbvARB(arg_4719: GLuint, arg_4720: [*c]const GLbyte) void {
    return glad_glVertexAttrib4NbvARB.?(arg_4719, arg_4720);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4NivARB.xhtml
pub inline fn glVertexAttrib4NivARB(arg_4721: GLuint, arg_4722: [*c]const GLint) void {
    return glad_glVertexAttrib4NivARB.?(arg_4721, arg_4722);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4NsvARB.xhtml
pub inline fn glVertexAttrib4NsvARB(arg_4723: GLuint, arg_4724: [*c]const GLshort) void {
    return glad_glVertexAttrib4NsvARB.?(arg_4723, arg_4724);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4NubARB.xhtml
pub inline fn glVertexAttrib4NubARB(arg_4725: GLuint, arg_4726: GLubyte, arg_4727: GLubyte, arg_4728: GLubyte, arg_4729: GLubyte) void {
    return glad_glVertexAttrib4NubARB.?(arg_4725, arg_4726, arg_4727, arg_4728, arg_4729);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4NubvARB.xhtml
pub inline fn glVertexAttrib4NubvARB(arg_4730: GLuint, arg_4731: [*c]const GLubyte) void {
    return glad_glVertexAttrib4NubvARB.?(arg_4730, arg_4731);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4NuivARB.xhtml
pub inline fn glVertexAttrib4NuivARB(arg_4732: GLuint, arg_4733: [*c]const GLuint) void {
    return glad_glVertexAttrib4NuivARB.?(arg_4732, arg_4733);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4NusvARB.xhtml
pub inline fn glVertexAttrib4NusvARB(arg_4734: GLuint, arg_4735: [*c]const GLushort) void {
    return glad_glVertexAttrib4NusvARB.?(arg_4734, arg_4735);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4bvARB.xhtml
pub inline fn glVertexAttrib4bvARB(arg_4736: GLuint, arg_4737: [*c]const GLbyte) void {
    return glad_glVertexAttrib4bvARB.?(arg_4736, arg_4737);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4dARB.xhtml
pub inline fn glVertexAttrib4dARB(arg_4738: GLuint, arg_4739: GLdouble, arg_4740: GLdouble, arg_4741: GLdouble, arg_4742: GLdouble) void {
    return glad_glVertexAttrib4dARB.?(arg_4738, arg_4739, arg_4740, arg_4741, arg_4742);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4dvARB.xhtml
pub inline fn glVertexAttrib4dvARB(arg_4743: GLuint, arg_4744: [*c]const GLdouble) void {
    return glad_glVertexAttrib4dvARB.?(arg_4743, arg_4744);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4fARB.xhtml
pub inline fn glVertexAttrib4fARB(arg_4745: GLuint, arg_4746: GLfloat, arg_4747: GLfloat, arg_4748: GLfloat, arg_4749: GLfloat) void {
    return glad_glVertexAttrib4fARB.?(arg_4745, arg_4746, arg_4747, arg_4748, arg_4749);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4fvARB.xhtml
pub inline fn glVertexAttrib4fvARB(arg_4750: GLuint, arg_4751: [*c]const GLfloat) void {
    return glad_glVertexAttrib4fvARB.?(arg_4750, arg_4751);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4ivARB.xhtml
pub inline fn glVertexAttrib4ivARB(arg_4752: GLuint, arg_4753: [*c]const GLint) void {
    return glad_glVertexAttrib4ivARB.?(arg_4752, arg_4753);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4sARB.xhtml
pub inline fn glVertexAttrib4sARB(arg_4754: GLuint, arg_4755: GLshort, arg_4756: GLshort, arg_4757: GLshort, arg_4758: GLshort) void {
    return glad_glVertexAttrib4sARB.?(arg_4754, arg_4755, arg_4756, arg_4757, arg_4758);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4svARB.xhtml
pub inline fn glVertexAttrib4svARB(arg_4759: GLuint, arg_4760: [*c]const GLshort) void {
    return glad_glVertexAttrib4svARB.?(arg_4759, arg_4760);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4ubvARB.xhtml
pub inline fn glVertexAttrib4ubvARB(arg_4761: GLuint, arg_4762: [*c]const GLubyte) void {
    return glad_glVertexAttrib4ubvARB.?(arg_4761, arg_4762);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4uivARB.xhtml
pub inline fn glVertexAttrib4uivARB(arg_4763: GLuint, arg_4764: [*c]const GLuint) void {
    return glad_glVertexAttrib4uivARB.?(arg_4763, arg_4764);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4usvARB.xhtml
pub inline fn glVertexAttrib4usvARB(arg_4765: GLuint, arg_4766: [*c]const GLushort) void {
    return glad_glVertexAttrib4usvARB.?(arg_4765, arg_4766);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribPointerARB.xhtml
pub inline fn glVertexAttribPointerARB(arg_4767: GLuint, arg_4768: GLint, arg_4769: GLenum, arg_4770: GLboolean, arg_4771: GLsizei, arg_4772: ?*const anyopaque) void {
    return glad_glVertexAttribPointerARB.?(arg_4767, arg_4768, arg_4769, arg_4770, arg_4771, arg_4772);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEnableVertexAttribArrayARB.xhtml
pub inline fn glEnableVertexAttribArrayARB(arg_4773: GLuint) void {
    return glad_glEnableVertexAttribArrayARB.?(arg_4773);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDisableVertexAttribArrayARB.xhtml
pub inline fn glDisableVertexAttribArrayARB(arg_4774: GLuint) void {
    return glad_glDisableVertexAttribArrayARB.?(arg_4774);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexAttribdvARB.xhtml
pub inline fn glGetVertexAttribdvARB(arg_4775: GLuint, arg_4776: GLenum, arg_4777: [*c]GLdouble) void {
    return glad_glGetVertexAttribdvARB.?(arg_4775, arg_4776, arg_4777);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexAttribfvARB.xhtml
pub inline fn glGetVertexAttribfvARB(arg_4778: GLuint, arg_4779: GLenum, arg_4780: [*c]GLfloat) void {
    return glad_glGetVertexAttribfvARB.?(arg_4778, arg_4779, arg_4780);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexAttribivARB.xhtml
pub inline fn glGetVertexAttribivARB(arg_4781: GLuint, arg_4782: GLenum, arg_4783: [*c]GLint) void {
    return glad_glGetVertexAttribivARB.?(arg_4781, arg_4782, arg_4783);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexAttribPointervARB.xhtml
pub inline fn glGetVertexAttribPointervARB(arg_4784: GLuint, arg_4785: GLenum, arg_4786: [*c]?*anyopaque) void {
    return glad_glGetVertexAttribPointervARB.?(arg_4784, arg_4785, arg_4786);
}
pub const GL_ARB_vertex_shader = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindAttribLocationARB.xhtml
pub inline fn glBindAttribLocationARB(arg_4787: GLhandleARB, arg_4788: GLuint, arg_4789: [*c]const GLcharARB) void {
    return glad_glBindAttribLocationARB.?(arg_4787, arg_4788, arg_4789);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetActiveAttribARB.xhtml
pub inline fn glGetActiveAttribARB(arg_4790: GLhandleARB, arg_4791: GLuint, arg_4792: GLsizei, arg_4793: [*c]GLsizei, arg_4794: [*c]GLint, arg_4795: [*c]GLenum, arg_4796: [*c]GLcharARB) void {
    return glad_glGetActiveAttribARB.?(arg_4790, arg_4791, arg_4792, arg_4793, arg_4794, arg_4795, arg_4796);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetAttribLocationARB.xhtml
pub inline fn glGetAttribLocationARB(arg_4797: GLhandleARB, arg_4798: [*c]const GLcharARB) GLint {
    return glad_glGetAttribLocationARB.?(arg_4797, arg_4798);
}
pub const GL_ARB_vertex_type_10f_11f_11f_rev = 1;
pub const GL_ARB_vertex_type_2_10_10_10_rev = 1;
pub const GL_ARB_viewport_array = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDepthRangeArraydvNV.xhtml
pub inline fn glDepthRangeArraydvNV(arg_4799: GLuint, arg_4800: GLsizei, arg_4801: [*c]const GLdouble) void {
    return glad_glDepthRangeArraydvNV.?(arg_4799, arg_4800, arg_4801);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDepthRangeIndexeddNV.xhtml
pub inline fn glDepthRangeIndexeddNV(arg_4802: GLuint, arg_4803: GLdouble, arg_4804: GLdouble) void {
    return glad_glDepthRangeIndexeddNV.?(arg_4802, arg_4803, arg_4804);
}
pub const GL_ARB_window_pos = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos2dARB.xhtml
pub inline fn glWindowPos2dARB(arg_4805: GLdouble, arg_4806: GLdouble) void {
    return glad_glWindowPos2dARB.?(arg_4805, arg_4806);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos2dvARB.xhtml
pub inline fn glWindowPos2dvARB(arg_4807: [*c]const GLdouble) void {
    return glad_glWindowPos2dvARB.?(arg_4807);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos2fARB.xhtml
pub inline fn glWindowPos2fARB(arg_4808: GLfloat, arg_4809: GLfloat) void {
    return glad_glWindowPos2fARB.?(arg_4808, arg_4809);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos2fvARB.xhtml
pub inline fn glWindowPos2fvARB(arg_4810: [*c]const GLfloat) void {
    return glad_glWindowPos2fvARB.?(arg_4810);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos2iARB.xhtml
pub inline fn glWindowPos2iARB(arg_4811: GLint, arg_4812: GLint) void {
    return glad_glWindowPos2iARB.?(arg_4811, arg_4812);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos2ivARB.xhtml
pub inline fn glWindowPos2ivARB(arg_4813: [*c]const GLint) void {
    return glad_glWindowPos2ivARB.?(arg_4813);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos2sARB.xhtml
pub inline fn glWindowPos2sARB(arg_4814: GLshort, arg_4815: GLshort) void {
    return glad_glWindowPos2sARB.?(arg_4814, arg_4815);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos2svARB.xhtml
pub inline fn glWindowPos2svARB(arg_4816: [*c]const GLshort) void {
    return glad_glWindowPos2svARB.?(arg_4816);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos3dARB.xhtml
pub inline fn glWindowPos3dARB(arg_4817: GLdouble, arg_4818: GLdouble, arg_4819: GLdouble) void {
    return glad_glWindowPos3dARB.?(arg_4817, arg_4818, arg_4819);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos3dvARB.xhtml
pub inline fn glWindowPos3dvARB(arg_4820: [*c]const GLdouble) void {
    return glad_glWindowPos3dvARB.?(arg_4820);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos3fARB.xhtml
pub inline fn glWindowPos3fARB(arg_4821: GLfloat, arg_4822: GLfloat, arg_4823: GLfloat) void {
    return glad_glWindowPos3fARB.?(arg_4821, arg_4822, arg_4823);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos3fvARB.xhtml
pub inline fn glWindowPos3fvARB(arg_4824: [*c]const GLfloat) void {
    return glad_glWindowPos3fvARB.?(arg_4824);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos3iARB.xhtml
pub inline fn glWindowPos3iARB(arg_4825: GLint, arg_4826: GLint, arg_4827: GLint) void {
    return glad_glWindowPos3iARB.?(arg_4825, arg_4826, arg_4827);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos3ivARB.xhtml
pub inline fn glWindowPos3ivARB(arg_4828: [*c]const GLint) void {
    return glad_glWindowPos3ivARB.?(arg_4828);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos3sARB.xhtml
pub inline fn glWindowPos3sARB(arg_4829: GLshort, arg_4830: GLshort, arg_4831: GLshort) void {
    return glad_glWindowPos3sARB.?(arg_4829, arg_4830, arg_4831);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos3svARB.xhtml
pub inline fn glWindowPos3svARB(arg_4832: [*c]const GLshort) void {
    return glad_glWindowPos3svARB.?(arg_4832);
}
pub const GL_ATI_draw_buffers = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawBuffersATI.xhtml
pub inline fn glDrawBuffersATI(arg_4833: GLsizei, arg_4834: [*c]const GLenum) void {
    return glad_glDrawBuffersATI.?(arg_4833, arg_4834);
}
pub const GL_ATI_element_array = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glElementPointerATI.xhtml
pub inline fn glElementPointerATI(arg_4835: GLenum, arg_4836: ?*const anyopaque) void {
    return glad_glElementPointerATI.?(arg_4835, arg_4836);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawElementArrayATI.xhtml
pub inline fn glDrawElementArrayATI(arg_4837: GLenum, arg_4838: GLsizei) void {
    return glad_glDrawElementArrayATI.?(arg_4837, arg_4838);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawRangeElementArrayATI.xhtml
pub inline fn glDrawRangeElementArrayATI(arg_4839: GLenum, arg_4840: GLuint, arg_4841: GLuint, arg_4842: GLsizei) void {
    return glad_glDrawRangeElementArrayATI.?(arg_4839, arg_4840, arg_4841, arg_4842);
}
pub const GL_ATI_envmap_bumpmap = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexBumpParameterivATI.xhtml
pub inline fn glTexBumpParameterivATI(arg_4843: GLenum, arg_4844: [*c]const GLint) void {
    return glad_glTexBumpParameterivATI.?(arg_4843, arg_4844);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexBumpParameterfvATI.xhtml
pub inline fn glTexBumpParameterfvATI(arg_4845: GLenum, arg_4846: [*c]const GLfloat) void {
    return glad_glTexBumpParameterfvATI.?(arg_4845, arg_4846);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexBumpParameterivATI.xhtml
pub inline fn glGetTexBumpParameterivATI(arg_4847: GLenum, arg_4848: [*c]GLint) void {
    return glad_glGetTexBumpParameterivATI.?(arg_4847, arg_4848);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexBumpParameterfvATI.xhtml
pub inline fn glGetTexBumpParameterfvATI(arg_4849: GLenum, arg_4850: [*c]GLfloat) void {
    return glad_glGetTexBumpParameterfvATI.?(arg_4849, arg_4850);
}
pub const GL_ATI_fragment_shader = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenFragmentShadersATI.xhtml
pub inline fn glGenFragmentShadersATI(arg_4851: GLuint) GLuint {
    return glad_glGenFragmentShadersATI.?(arg_4851);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindFragmentShaderATI.xhtml
pub inline fn glBindFragmentShaderATI(arg_4852: GLuint) void {
    return glad_glBindFragmentShaderATI.?(arg_4852);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteFragmentShaderATI.xhtml
pub inline fn glDeleteFragmentShaderATI(arg_4853: GLuint) void {
    return glad_glDeleteFragmentShaderATI.?(arg_4853);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBeginFragmentShaderATI.xhtml
pub inline fn glBeginFragmentShaderATI() void {
    return glad_glBeginFragmentShaderATI.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEndFragmentShaderATI.xhtml
pub inline fn glEndFragmentShaderATI() void {
    return glad_glEndFragmentShaderATI.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPassTexCoordATI.xhtml
pub inline fn glPassTexCoordATI(arg_4854: GLuint, arg_4855: GLuint, arg_4856: GLenum) void {
    return glad_glPassTexCoordATI.?(arg_4854, arg_4855, arg_4856);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSampleMapATI.xhtml
pub inline fn glSampleMapATI(arg_4857: GLuint, arg_4858: GLuint, arg_4859: GLenum) void {
    return glad_glSampleMapATI.?(arg_4857, arg_4858, arg_4859);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorFragmentOp1ATI.xhtml
pub inline fn glColorFragmentOp1ATI(arg_4860: GLenum, arg_4861: GLuint, arg_4862: GLuint, arg_4863: GLuint, arg_4864: GLuint, arg_4865: GLuint, arg_4866: GLuint) void {
    return glad_glColorFragmentOp1ATI.?(arg_4860, arg_4861, arg_4862, arg_4863, arg_4864, arg_4865, arg_4866);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorFragmentOp2ATI.xhtml
pub inline fn glColorFragmentOp2ATI(arg_4867: GLenum, arg_4868: GLuint, arg_4869: GLuint, arg_4870: GLuint, arg_4871: GLuint, arg_4872: GLuint, arg_4873: GLuint, arg_4874: GLuint, arg_4875: GLuint, arg_4876: GLuint) void {
    return glad_glColorFragmentOp2ATI.?(arg_4867, arg_4868, arg_4869, arg_4870, arg_4871, arg_4872, arg_4873, arg_4874, arg_4875, arg_4876);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorFragmentOp3ATI.xhtml
pub inline fn glColorFragmentOp3ATI(arg_4877: GLenum, arg_4878: GLuint, arg_4879: GLuint, arg_4880: GLuint, arg_4881: GLuint, arg_4882: GLuint, arg_4883: GLuint, arg_4884: GLuint, arg_4885: GLuint, arg_4886: GLuint, arg_4887: GLuint, arg_4888: GLuint, arg_4889: GLuint) void {
    return glad_glColorFragmentOp3ATI.?(arg_4877, arg_4878, arg_4879, arg_4880, arg_4881, arg_4882, arg_4883, arg_4884, arg_4885, arg_4886, arg_4887, arg_4888, arg_4889);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glAlphaFragmentOp1ATI.xhtml
pub inline fn glAlphaFragmentOp1ATI(arg_4890: GLenum, arg_4891: GLuint, arg_4892: GLuint, arg_4893: GLuint, arg_4894: GLuint, arg_4895: GLuint) void {
    return glad_glAlphaFragmentOp1ATI.?(arg_4890, arg_4891, arg_4892, arg_4893, arg_4894, arg_4895);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glAlphaFragmentOp2ATI.xhtml
pub inline fn glAlphaFragmentOp2ATI(arg_4896: GLenum, arg_4897: GLuint, arg_4898: GLuint, arg_4899: GLuint, arg_4900: GLuint, arg_4901: GLuint, arg_4902: GLuint, arg_4903: GLuint, arg_4904: GLuint) void {
    return glad_glAlphaFragmentOp2ATI.?(arg_4896, arg_4897, arg_4898, arg_4899, arg_4900, arg_4901, arg_4902, arg_4903, arg_4904);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glAlphaFragmentOp3ATI.xhtml
pub inline fn glAlphaFragmentOp3ATI(arg_4905: GLenum, arg_4906: GLuint, arg_4907: GLuint, arg_4908: GLuint, arg_4909: GLuint, arg_4910: GLuint, arg_4911: GLuint, arg_4912: GLuint, arg_4913: GLuint, arg_4914: GLuint, arg_4915: GLuint, arg_4916: GLuint) void {
    return glad_glAlphaFragmentOp3ATI.?(arg_4905, arg_4906, arg_4907, arg_4908, arg_4909, arg_4910, arg_4911, arg_4912, arg_4913, arg_4914, arg_4915, arg_4916);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSetFragmentShaderConstantATI.xhtml
pub inline fn glSetFragmentShaderConstantATI(arg_4917: GLuint, arg_4918: [*c]const GLfloat) void {
    return glad_glSetFragmentShaderConstantATI.?(arg_4917, arg_4918);
}
pub const GL_ATI_map_object_buffer = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMapObjectBufferATI.xhtml
pub inline fn glMapObjectBufferATI(arg_4919: GLuint) ?*anyopaque {
    return glad_glMapObjectBufferATI.?(arg_4919);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUnmapObjectBufferATI.xhtml
pub inline fn glUnmapObjectBufferATI(arg_4920: GLuint) void {
    return glad_glUnmapObjectBufferATI.?(arg_4920);
}
pub const GL_ATI_meminfo = 1;
pub const GL_ATI_pixel_format_float = 1;
pub const GL_ATI_pn_triangles = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPNTrianglesiATI.xhtml
pub inline fn glPNTrianglesiATI(arg_4921: GLenum, arg_4922: GLint) void {
    return glad_glPNTrianglesiATI.?(arg_4921, arg_4922);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPNTrianglesfATI.xhtml
pub inline fn glPNTrianglesfATI(arg_4923: GLenum, arg_4924: GLfloat) void {
    return glad_glPNTrianglesfATI.?(arg_4923, arg_4924);
}
pub const GL_ATI_separate_stencil = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glStencilOpSeparateATI.xhtml
pub inline fn glStencilOpSeparateATI(arg_4925: GLenum, arg_4926: GLenum, arg_4927: GLenum, arg_4928: GLenum) void {
    return glad_glStencilOpSeparateATI.?(arg_4925, arg_4926, arg_4927, arg_4928);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glStencilFuncSeparateATI.xhtml
pub inline fn glStencilFuncSeparateATI(arg_4929: GLenum, arg_4930: GLenum, arg_4931: GLint, arg_4932: GLuint) void {
    return glad_glStencilFuncSeparateATI.?(arg_4929, arg_4930, arg_4931, arg_4932);
}
pub const GL_ATI_text_fragment_shader = 1;
pub const GL_ATI_texture_env_combine3 = 1;
pub const GL_ATI_texture_float = 1;
pub const GL_ATI_texture_mirror_once = 1;
pub const GL_ATI_vertex_array_object = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNewObjectBufferATI.xhtml
pub inline fn glNewObjectBufferATI(arg_4933: GLsizei, arg_4934: ?*const anyopaque, arg_4935: GLenum) GLuint {
    return glad_glNewObjectBufferATI.?(arg_4933, arg_4934, arg_4935);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsObjectBufferATI.xhtml
pub inline fn glIsObjectBufferATI(arg_4936: GLuint) GLboolean {
    return glad_glIsObjectBufferATI.?(arg_4936);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUpdateObjectBufferATI.xhtml
pub inline fn glUpdateObjectBufferATI(arg_4937: GLuint, arg_4938: GLuint, arg_4939: GLsizei, arg_4940: ?*const anyopaque, arg_4941: GLenum) void {
    return glad_glUpdateObjectBufferATI.?(arg_4937, arg_4938, arg_4939, arg_4940, arg_4941);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetObjectBufferfvATI.xhtml
pub inline fn glGetObjectBufferfvATI(arg_4942: GLuint, arg_4943: GLenum, arg_4944: [*c]GLfloat) void {
    return glad_glGetObjectBufferfvATI.?(arg_4942, arg_4943, arg_4944);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetObjectBufferivATI.xhtml
pub inline fn glGetObjectBufferivATI(arg_4945: GLuint, arg_4946: GLenum, arg_4947: [*c]GLint) void {
    return glad_glGetObjectBufferivATI.?(arg_4945, arg_4946, arg_4947);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFreeObjectBufferATI.xhtml
pub inline fn glFreeObjectBufferATI(arg_4948: GLuint) void {
    return glad_glFreeObjectBufferATI.?(arg_4948);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glArrayObjectATI.xhtml
pub inline fn glArrayObjectATI(arg_4949: GLenum, arg_4950: GLint, arg_4951: GLenum, arg_4952: GLsizei, arg_4953: GLuint, arg_4954: GLuint) void {
    return glad_glArrayObjectATI.?(arg_4949, arg_4950, arg_4951, arg_4952, arg_4953, arg_4954);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetArrayObjectfvATI.xhtml
pub inline fn glGetArrayObjectfvATI(arg_4955: GLenum, arg_4956: GLenum, arg_4957: [*c]GLfloat) void {
    return glad_glGetArrayObjectfvATI.?(arg_4955, arg_4956, arg_4957);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetArrayObjectivATI.xhtml
pub inline fn glGetArrayObjectivATI(arg_4958: GLenum, arg_4959: GLenum, arg_4960: [*c]GLint) void {
    return glad_glGetArrayObjectivATI.?(arg_4958, arg_4959, arg_4960);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVariantArrayObjectATI.xhtml
pub inline fn glVariantArrayObjectATI(arg_4961: GLuint, arg_4962: GLenum, arg_4963: GLsizei, arg_4964: GLuint, arg_4965: GLuint) void {
    return glad_glVariantArrayObjectATI.?(arg_4961, arg_4962, arg_4963, arg_4964, arg_4965);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVariantArrayObjectfvATI.xhtml
pub inline fn glGetVariantArrayObjectfvATI(arg_4966: GLuint, arg_4967: GLenum, arg_4968: [*c]GLfloat) void {
    return glad_glGetVariantArrayObjectfvATI.?(arg_4966, arg_4967, arg_4968);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVariantArrayObjectivATI.xhtml
pub inline fn glGetVariantArrayObjectivATI(arg_4969: GLuint, arg_4970: GLenum, arg_4971: [*c]GLint) void {
    return glad_glGetVariantArrayObjectivATI.?(arg_4969, arg_4970, arg_4971);
}
pub const GL_ATI_vertex_attrib_array_object = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribArrayObjectATI.xhtml
pub inline fn glVertexAttribArrayObjectATI(arg_4972: GLuint, arg_4973: GLint, arg_4974: GLenum, arg_4975: GLboolean, arg_4976: GLsizei, arg_4977: GLuint, arg_4978: GLuint) void {
    return glad_glVertexAttribArrayObjectATI.?(arg_4972, arg_4973, arg_4974, arg_4975, arg_4976, arg_4977, arg_4978);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexAttribArrayObjectfvATI.xhtml
pub inline fn glGetVertexAttribArrayObjectfvATI(arg_4979: GLuint, arg_4980: GLenum, arg_4981: [*c]GLfloat) void {
    return glad_glGetVertexAttribArrayObjectfvATI.?(arg_4979, arg_4980, arg_4981);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexAttribArrayObjectivATI.xhtml
pub inline fn glGetVertexAttribArrayObjectivATI(arg_4982: GLuint, arg_4983: GLenum, arg_4984: [*c]GLint) void {
    return glad_glGetVertexAttribArrayObjectivATI.?(arg_4982, arg_4983, arg_4984);
}
pub const GL_ATI_vertex_streams = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream1sATI.xhtml
pub inline fn glVertexStream1sATI(arg_4985: GLenum, arg_4986: GLshort) void {
    return glad_glVertexStream1sATI.?(arg_4985, arg_4986);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream1svATI.xhtml
pub inline fn glVertexStream1svATI(arg_4987: GLenum, arg_4988: [*c]const GLshort) void {
    return glad_glVertexStream1svATI.?(arg_4987, arg_4988);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream1iATI.xhtml
pub inline fn glVertexStream1iATI(arg_4989: GLenum, arg_4990: GLint) void {
    return glad_glVertexStream1iATI.?(arg_4989, arg_4990);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream1ivATI.xhtml
pub inline fn glVertexStream1ivATI(arg_4991: GLenum, arg_4992: [*c]const GLint) void {
    return glad_glVertexStream1ivATI.?(arg_4991, arg_4992);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream1fATI.xhtml
pub inline fn glVertexStream1fATI(arg_4993: GLenum, arg_4994: GLfloat) void {
    return glad_glVertexStream1fATI.?(arg_4993, arg_4994);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream1fvATI.xhtml
pub inline fn glVertexStream1fvATI(arg_4995: GLenum, arg_4996: [*c]const GLfloat) void {
    return glad_glVertexStream1fvATI.?(arg_4995, arg_4996);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream1dATI.xhtml
pub inline fn glVertexStream1dATI(arg_4997: GLenum, arg_4998: GLdouble) void {
    return glad_glVertexStream1dATI.?(arg_4997, arg_4998);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream1dvATI.xhtml
pub inline fn glVertexStream1dvATI(arg_4999: GLenum, arg_5000: [*c]const GLdouble) void {
    return glad_glVertexStream1dvATI.?(arg_4999, arg_5000);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream2sATI.xhtml
pub inline fn glVertexStream2sATI(arg_5001: GLenum, arg_5002: GLshort, arg_5003: GLshort) void {
    return glad_glVertexStream2sATI.?(arg_5001, arg_5002, arg_5003);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream2svATI.xhtml
pub inline fn glVertexStream2svATI(arg_5004: GLenum, arg_5005: [*c]const GLshort) void {
    return glad_glVertexStream2svATI.?(arg_5004, arg_5005);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream2iATI.xhtml
pub inline fn glVertexStream2iATI(arg_5006: GLenum, arg_5007: GLint, arg_5008: GLint) void {
    return glad_glVertexStream2iATI.?(arg_5006, arg_5007, arg_5008);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream2ivATI.xhtml
pub inline fn glVertexStream2ivATI(arg_5009: GLenum, arg_5010: [*c]const GLint) void {
    return glad_glVertexStream2ivATI.?(arg_5009, arg_5010);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream2fATI.xhtml
pub inline fn glVertexStream2fATI(arg_5011: GLenum, arg_5012: GLfloat, arg_5013: GLfloat) void {
    return glad_glVertexStream2fATI.?(arg_5011, arg_5012, arg_5013);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream2fvATI.xhtml
pub inline fn glVertexStream2fvATI(arg_5014: GLenum, arg_5015: [*c]const GLfloat) void {
    return glad_glVertexStream2fvATI.?(arg_5014, arg_5015);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream2dATI.xhtml
pub inline fn glVertexStream2dATI(arg_5016: GLenum, arg_5017: GLdouble, arg_5018: GLdouble) void {
    return glad_glVertexStream2dATI.?(arg_5016, arg_5017, arg_5018);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream2dvATI.xhtml
pub inline fn glVertexStream2dvATI(arg_5019: GLenum, arg_5020: [*c]const GLdouble) void {
    return glad_glVertexStream2dvATI.?(arg_5019, arg_5020);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream3sATI.xhtml
pub inline fn glVertexStream3sATI(arg_5021: GLenum, arg_5022: GLshort, arg_5023: GLshort, arg_5024: GLshort) void {
    return glad_glVertexStream3sATI.?(arg_5021, arg_5022, arg_5023, arg_5024);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream3svATI.xhtml
pub inline fn glVertexStream3svATI(arg_5025: GLenum, arg_5026: [*c]const GLshort) void {
    return glad_glVertexStream3svATI.?(arg_5025, arg_5026);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream3iATI.xhtml
pub inline fn glVertexStream3iATI(arg_5027: GLenum, arg_5028: GLint, arg_5029: GLint, arg_5030: GLint) void {
    return glad_glVertexStream3iATI.?(arg_5027, arg_5028, arg_5029, arg_5030);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream3ivATI.xhtml
pub inline fn glVertexStream3ivATI(arg_5031: GLenum, arg_5032: [*c]const GLint) void {
    return glad_glVertexStream3ivATI.?(arg_5031, arg_5032);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream3fATI.xhtml
pub inline fn glVertexStream3fATI(arg_5033: GLenum, arg_5034: GLfloat, arg_5035: GLfloat, arg_5036: GLfloat) void {
    return glad_glVertexStream3fATI.?(arg_5033, arg_5034, arg_5035, arg_5036);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream3fvATI.xhtml
pub inline fn glVertexStream3fvATI(arg_5037: GLenum, arg_5038: [*c]const GLfloat) void {
    return glad_glVertexStream3fvATI.?(arg_5037, arg_5038);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream3dATI.xhtml
pub inline fn glVertexStream3dATI(arg_5039: GLenum, arg_5040: GLdouble, arg_5041: GLdouble, arg_5042: GLdouble) void {
    return glad_glVertexStream3dATI.?(arg_5039, arg_5040, arg_5041, arg_5042);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream3dvATI.xhtml
pub inline fn glVertexStream3dvATI(arg_5043: GLenum, arg_5044: [*c]const GLdouble) void {
    return glad_glVertexStream3dvATI.?(arg_5043, arg_5044);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream4sATI.xhtml
pub inline fn glVertexStream4sATI(arg_5045: GLenum, arg_5046: GLshort, arg_5047: GLshort, arg_5048: GLshort, arg_5049: GLshort) void {
    return glad_glVertexStream4sATI.?(arg_5045, arg_5046, arg_5047, arg_5048, arg_5049);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream4svATI.xhtml
pub inline fn glVertexStream4svATI(arg_5050: GLenum, arg_5051: [*c]const GLshort) void {
    return glad_glVertexStream4svATI.?(arg_5050, arg_5051);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream4iATI.xhtml
pub inline fn glVertexStream4iATI(arg_5052: GLenum, arg_5053: GLint, arg_5054: GLint, arg_5055: GLint, arg_5056: GLint) void {
    return glad_glVertexStream4iATI.?(arg_5052, arg_5053, arg_5054, arg_5055, arg_5056);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream4ivATI.xhtml
pub inline fn glVertexStream4ivATI(arg_5057: GLenum, arg_5058: [*c]const GLint) void {
    return glad_glVertexStream4ivATI.?(arg_5057, arg_5058);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream4fATI.xhtml
pub inline fn glVertexStream4fATI(arg_5059: GLenum, arg_5060: GLfloat, arg_5061: GLfloat, arg_5062: GLfloat, arg_5063: GLfloat) void {
    return glad_glVertexStream4fATI.?(arg_5059, arg_5060, arg_5061, arg_5062, arg_5063);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream4fvATI.xhtml
pub inline fn glVertexStream4fvATI(arg_5064: GLenum, arg_5065: [*c]const GLfloat) void {
    return glad_glVertexStream4fvATI.?(arg_5064, arg_5065);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream4dATI.xhtml
pub inline fn glVertexStream4dATI(arg_5066: GLenum, arg_5067: GLdouble, arg_5068: GLdouble, arg_5069: GLdouble, arg_5070: GLdouble) void {
    return glad_glVertexStream4dATI.?(arg_5066, arg_5067, arg_5068, arg_5069, arg_5070);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexStream4dvATI.xhtml
pub inline fn glVertexStream4dvATI(arg_5071: GLenum, arg_5072: [*c]const GLdouble) void {
    return glad_glVertexStream4dvATI.?(arg_5071, arg_5072);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNormalStream3bATI.xhtml
pub inline fn glNormalStream3bATI(arg_5073: GLenum, arg_5074: GLbyte, arg_5075: GLbyte, arg_5076: GLbyte) void {
    return glad_glNormalStream3bATI.?(arg_5073, arg_5074, arg_5075, arg_5076);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNormalStream3bvATI.xhtml
pub inline fn glNormalStream3bvATI(arg_5077: GLenum, arg_5078: [*c]const GLbyte) void {
    return glad_glNormalStream3bvATI.?(arg_5077, arg_5078);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNormalStream3sATI.xhtml
pub inline fn glNormalStream3sATI(arg_5079: GLenum, arg_5080: GLshort, arg_5081: GLshort, arg_5082: GLshort) void {
    return glad_glNormalStream3sATI.?(arg_5079, arg_5080, arg_5081, arg_5082);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNormalStream3svATI.xhtml
pub inline fn glNormalStream3svATI(arg_5083: GLenum, arg_5084: [*c]const GLshort) void {
    return glad_glNormalStream3svATI.?(arg_5083, arg_5084);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNormalStream3iATI.xhtml
pub inline fn glNormalStream3iATI(arg_5085: GLenum, arg_5086: GLint, arg_5087: GLint, arg_5088: GLint) void {
    return glad_glNormalStream3iATI.?(arg_5085, arg_5086, arg_5087, arg_5088);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNormalStream3ivATI.xhtml
pub inline fn glNormalStream3ivATI(arg_5089: GLenum, arg_5090: [*c]const GLint) void {
    return glad_glNormalStream3ivATI.?(arg_5089, arg_5090);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNormalStream3fATI.xhtml
pub inline fn glNormalStream3fATI(arg_5091: GLenum, arg_5092: GLfloat, arg_5093: GLfloat, arg_5094: GLfloat) void {
    return glad_glNormalStream3fATI.?(arg_5091, arg_5092, arg_5093, arg_5094);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNormalStream3fvATI.xhtml
pub inline fn glNormalStream3fvATI(arg_5095: GLenum, arg_5096: [*c]const GLfloat) void {
    return glad_glNormalStream3fvATI.?(arg_5095, arg_5096);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNormalStream3dATI.xhtml
pub inline fn glNormalStream3dATI(arg_5097: GLenum, arg_5098: GLdouble, arg_5099: GLdouble, arg_5100: GLdouble) void {
    return glad_glNormalStream3dATI.?(arg_5097, arg_5098, arg_5099, arg_5100);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNormalStream3dvATI.xhtml
pub inline fn glNormalStream3dvATI(arg_5101: GLenum, arg_5102: [*c]const GLdouble) void {
    return glad_glNormalStream3dvATI.?(arg_5101, arg_5102);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClientActiveVertexStreamATI.xhtml
pub inline fn glClientActiveVertexStreamATI(arg_5103: GLenum) void {
    return glad_glClientActiveVertexStreamATI.?(arg_5103);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexBlendEnviATI.xhtml
pub inline fn glVertexBlendEnviATI(arg_5104: GLenum, arg_5105: GLint) void {
    return glad_glVertexBlendEnviATI.?(arg_5104, arg_5105);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexBlendEnvfATI.xhtml
pub inline fn glVertexBlendEnvfATI(arg_5106: GLenum, arg_5107: GLfloat) void {
    return glad_glVertexBlendEnvfATI.?(arg_5106, arg_5107);
}
pub const GL_EXT_422_pixels = 1;
pub const GL_EXT_EGL_image_storage = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEGLImageTargetTexStorageEXT.xhtml
pub inline fn glEGLImageTargetTexStorageEXT(arg_5108: GLenum, arg_5109: GLeglImageOES, arg_5110: [*c]const GLint) void {
    return glad_glEGLImageTargetTexStorageEXT.?(arg_5108, arg_5109, arg_5110);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEGLImageTargetTextureStorageEXT.xhtml
pub inline fn glEGLImageTargetTextureStorageEXT(arg_5111: GLuint, arg_5112: GLeglImageOES, arg_5113: [*c]const GLint) void {
    return glad_glEGLImageTargetTextureStorageEXT.?(arg_5111, arg_5112, arg_5113);
}
pub const GL_EXT_EGL_sync = 1;
pub const GL_EXT_abgr = 1;
pub const GL_EXT_bgra = 1;
pub const GL_EXT_bindable_uniform = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformBufferEXT.xhtml
pub inline fn glUniformBufferEXT(arg_5114: GLuint, arg_5115: GLint, arg_5116: GLuint) void {
    return glad_glUniformBufferEXT.?(arg_5114, arg_5115, arg_5116);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetUniformBufferSizeEXT.xhtml
pub inline fn glGetUniformBufferSizeEXT(arg_5117: GLuint, arg_5118: GLint) GLint {
    return glad_glGetUniformBufferSizeEXT.?(arg_5117, arg_5118);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetUniformOffsetEXT.xhtml
pub inline fn glGetUniformOffsetEXT(arg_5119: GLuint, arg_5120: GLint) GLintptr {
    return glad_glGetUniformOffsetEXT.?(arg_5119, arg_5120);
}
pub const GL_EXT_blend_color = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendColorEXT.xhtml
pub inline fn glBlendColorEXT(arg_5121: GLfloat, arg_5122: GLfloat, arg_5123: GLfloat, arg_5124: GLfloat) void {
    return glad_glBlendColorEXT.?(arg_5121, arg_5122, arg_5123, arg_5124);
}
pub const GL_EXT_blend_equation_separate = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendEquationSeparateEXT.xhtml
pub inline fn glBlendEquationSeparateEXT(arg_5125: GLenum, arg_5126: GLenum) void {
    return glad_glBlendEquationSeparateEXT.?(arg_5125, arg_5126);
}
pub const GL_EXT_blend_func_separate = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendFuncSeparateEXT.xhtml
pub inline fn glBlendFuncSeparateEXT(arg_5127: GLenum, arg_5128: GLenum, arg_5129: GLenum, arg_5130: GLenum) void {
    return glad_glBlendFuncSeparateEXT.?(arg_5127, arg_5128, arg_5129, arg_5130);
}
pub const GL_EXT_blend_logic_op = 1;
pub const GL_EXT_blend_minmax = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendEquationEXT.xhtml
pub inline fn glBlendEquationEXT(arg_5131: GLenum) void {
    return glad_glBlendEquationEXT.?(arg_5131);
}
pub const GL_EXT_blend_subtract = 1;
pub const GL_EXT_clip_volume_hint = 1;
pub const GL_EXT_cmyka = 1;
pub const GL_EXT_color_subtable = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorSubTableEXT.xhtml
pub inline fn glColorSubTableEXT(arg_5132: GLenum, arg_5133: GLsizei, arg_5134: GLsizei, arg_5135: GLenum, arg_5136: GLenum, arg_5137: ?*const anyopaque) void {
    return glad_glColorSubTableEXT.?(arg_5132, arg_5133, arg_5134, arg_5135, arg_5136, arg_5137);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyColorSubTableEXT.xhtml
pub inline fn glCopyColorSubTableEXT(arg_5138: GLenum, arg_5139: GLsizei, arg_5140: GLint, arg_5141: GLint, arg_5142: GLsizei) void {
    return glad_glCopyColorSubTableEXT.?(arg_5138, arg_5139, arg_5140, arg_5141, arg_5142);
}
pub const GL_EXT_compiled_vertex_array = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLockArraysEXT.xhtml
pub inline fn glLockArraysEXT(arg_5143: GLint, arg_5144: GLsizei) void {
    return glad_glLockArraysEXT.?(arg_5143, arg_5144);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUnlockArraysEXT.xhtml
pub inline fn glUnlockArraysEXT() void {
    return glad_glUnlockArraysEXT.?();
}
pub const GL_EXT_convolution = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glConvolutionFilter1DEXT.xhtml
pub inline fn glConvolutionFilter1DEXT(arg_5145: GLenum, arg_5146: GLenum, arg_5147: GLsizei, arg_5148: GLenum, arg_5149: GLenum, arg_5150: ?*const anyopaque) void {
    return glad_glConvolutionFilter1DEXT.?(arg_5145, arg_5146, arg_5147, arg_5148, arg_5149, arg_5150);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glConvolutionFilter2DEXT.xhtml
pub inline fn glConvolutionFilter2DEXT(arg_5151: GLenum, arg_5152: GLenum, arg_5153: GLsizei, arg_5154: GLsizei, arg_5155: GLenum, arg_5156: GLenum, arg_5157: ?*const anyopaque) void {
    return glad_glConvolutionFilter2DEXT.?(arg_5151, arg_5152, arg_5153, arg_5154, arg_5155, arg_5156, arg_5157);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glConvolutionParameterfEXT.xhtml
pub inline fn glConvolutionParameterfEXT(arg_5158: GLenum, arg_5159: GLenum, arg_5160: GLfloat) void {
    return glad_glConvolutionParameterfEXT.?(arg_5158, arg_5159, arg_5160);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glConvolutionParameterfvEXT.xhtml
pub inline fn glConvolutionParameterfvEXT(arg_5161: GLenum, arg_5162: GLenum, arg_5163: [*c]const GLfloat) void {
    return glad_glConvolutionParameterfvEXT.?(arg_5161, arg_5162, arg_5163);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glConvolutionParameteriEXT.xhtml
pub inline fn glConvolutionParameteriEXT(arg_5164: GLenum, arg_5165: GLenum, arg_5166: GLint) void {
    return glad_glConvolutionParameteriEXT.?(arg_5164, arg_5165, arg_5166);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glConvolutionParameterivEXT.xhtml
pub inline fn glConvolutionParameterivEXT(arg_5167: GLenum, arg_5168: GLenum, arg_5169: [*c]const GLint) void {
    return glad_glConvolutionParameterivEXT.?(arg_5167, arg_5168, arg_5169);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyConvolutionFilter1DEXT.xhtml
pub inline fn glCopyConvolutionFilter1DEXT(arg_5170: GLenum, arg_5171: GLenum, arg_5172: GLint, arg_5173: GLint, arg_5174: GLsizei) void {
    return glad_glCopyConvolutionFilter1DEXT.?(arg_5170, arg_5171, arg_5172, arg_5173, arg_5174);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyConvolutionFilter2DEXT.xhtml
pub inline fn glCopyConvolutionFilter2DEXT(arg_5175: GLenum, arg_5176: GLenum, arg_5177: GLint, arg_5178: GLint, arg_5179: GLsizei, arg_5180: GLsizei) void {
    return glad_glCopyConvolutionFilter2DEXT.?(arg_5175, arg_5176, arg_5177, arg_5178, arg_5179, arg_5180);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetConvolutionFilterEXT.xhtml
pub inline fn glGetConvolutionFilterEXT(arg_5181: GLenum, arg_5182: GLenum, arg_5183: GLenum, arg_5184: ?*anyopaque) void {
    return glad_glGetConvolutionFilterEXT.?(arg_5181, arg_5182, arg_5183, arg_5184);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetConvolutionParameterfvEXT.xhtml
pub inline fn glGetConvolutionParameterfvEXT(arg_5185: GLenum, arg_5186: GLenum, arg_5187: [*c]GLfloat) void {
    return glad_glGetConvolutionParameterfvEXT.?(arg_5185, arg_5186, arg_5187);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetConvolutionParameterivEXT.xhtml
pub inline fn glGetConvolutionParameterivEXT(arg_5188: GLenum, arg_5189: GLenum, arg_5190: [*c]GLint) void {
    return glad_glGetConvolutionParameterivEXT.?(arg_5188, arg_5189, arg_5190);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetSeparableFilterEXT.xhtml
pub inline fn glGetSeparableFilterEXT(arg_5191: GLenum, arg_5192: GLenum, arg_5193: GLenum, arg_5194: ?*anyopaque, arg_5195: ?*anyopaque, arg_5196: ?*anyopaque) void {
    return glad_glGetSeparableFilterEXT.?(arg_5191, arg_5192, arg_5193, arg_5194, arg_5195, arg_5196);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSeparableFilter2DEXT.xhtml
pub inline fn glSeparableFilter2DEXT(arg_5197: GLenum, arg_5198: GLenum, arg_5199: GLsizei, arg_5200: GLsizei, arg_5201: GLenum, arg_5202: GLenum, arg_5203: ?*const anyopaque, arg_5204: ?*const anyopaque) void {
    return glad_glSeparableFilter2DEXT.?(arg_5197, arg_5198, arg_5199, arg_5200, arg_5201, arg_5202, arg_5203, arg_5204);
}
pub const GL_EXT_coordinate_frame = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTangent3bEXT.xhtml
pub inline fn glTangent3bEXT(arg_5205: GLbyte, arg_5206: GLbyte, arg_5207: GLbyte) void {
    return glad_glTangent3bEXT.?(arg_5205, arg_5206, arg_5207);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTangent3bvEXT.xhtml
pub inline fn glTangent3bvEXT(arg_5208: [*c]const GLbyte) void {
    return glad_glTangent3bvEXT.?(arg_5208);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTangent3dEXT.xhtml
pub inline fn glTangent3dEXT(arg_5209: GLdouble, arg_5210: GLdouble, arg_5211: GLdouble) void {
    return glad_glTangent3dEXT.?(arg_5209, arg_5210, arg_5211);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTangent3dvEXT.xhtml
pub inline fn glTangent3dvEXT(arg_5212: [*c]const GLdouble) void {
    return glad_glTangent3dvEXT.?(arg_5212);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTangent3fEXT.xhtml
pub inline fn glTangent3fEXT(arg_5213: GLfloat, arg_5214: GLfloat, arg_5215: GLfloat) void {
    return glad_glTangent3fEXT.?(arg_5213, arg_5214, arg_5215);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTangent3fvEXT.xhtml
pub inline fn glTangent3fvEXT(arg_5216: [*c]const GLfloat) void {
    return glad_glTangent3fvEXT.?(arg_5216);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTangent3iEXT.xhtml
pub inline fn glTangent3iEXT(arg_5217: GLint, arg_5218: GLint, arg_5219: GLint) void {
    return glad_glTangent3iEXT.?(arg_5217, arg_5218, arg_5219);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTangent3ivEXT.xhtml
pub inline fn glTangent3ivEXT(arg_5220: [*c]const GLint) void {
    return glad_glTangent3ivEXT.?(arg_5220);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTangent3sEXT.xhtml
pub inline fn glTangent3sEXT(arg_5221: GLshort, arg_5222: GLshort, arg_5223: GLshort) void {
    return glad_glTangent3sEXT.?(arg_5221, arg_5222, arg_5223);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTangent3svEXT.xhtml
pub inline fn glTangent3svEXT(arg_5224: [*c]const GLshort) void {
    return glad_glTangent3svEXT.?(arg_5224);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBinormal3bEXT.xhtml
pub inline fn glBinormal3bEXT(arg_5225: GLbyte, arg_5226: GLbyte, arg_5227: GLbyte) void {
    return glad_glBinormal3bEXT.?(arg_5225, arg_5226, arg_5227);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBinormal3bvEXT.xhtml
pub inline fn glBinormal3bvEXT(arg_5228: [*c]const GLbyte) void {
    return glad_glBinormal3bvEXT.?(arg_5228);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBinormal3dEXT.xhtml
pub inline fn glBinormal3dEXT(arg_5229: GLdouble, arg_5230: GLdouble, arg_5231: GLdouble) void {
    return glad_glBinormal3dEXT.?(arg_5229, arg_5230, arg_5231);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBinormal3dvEXT.xhtml
pub inline fn glBinormal3dvEXT(arg_5232: [*c]const GLdouble) void {
    return glad_glBinormal3dvEXT.?(arg_5232);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBinormal3fEXT.xhtml
pub inline fn glBinormal3fEXT(arg_5233: GLfloat, arg_5234: GLfloat, arg_5235: GLfloat) void {
    return glad_glBinormal3fEXT.?(arg_5233, arg_5234, arg_5235);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBinormal3fvEXT.xhtml
pub inline fn glBinormal3fvEXT(arg_5236: [*c]const GLfloat) void {
    return glad_glBinormal3fvEXT.?(arg_5236);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBinormal3iEXT.xhtml
pub inline fn glBinormal3iEXT(arg_5237: GLint, arg_5238: GLint, arg_5239: GLint) void {
    return glad_glBinormal3iEXT.?(arg_5237, arg_5238, arg_5239);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBinormal3ivEXT.xhtml
pub inline fn glBinormal3ivEXT(arg_5240: [*c]const GLint) void {
    return glad_glBinormal3ivEXT.?(arg_5240);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBinormal3sEXT.xhtml
pub inline fn glBinormal3sEXT(arg_5241: GLshort, arg_5242: GLshort, arg_5243: GLshort) void {
    return glad_glBinormal3sEXT.?(arg_5241, arg_5242, arg_5243);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBinormal3svEXT.xhtml
pub inline fn glBinormal3svEXT(arg_5244: [*c]const GLshort) void {
    return glad_glBinormal3svEXT.?(arg_5244);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTangentPointerEXT.xhtml
pub inline fn glTangentPointerEXT(arg_5245: GLenum, arg_5246: GLsizei, arg_5247: ?*const anyopaque) void {
    return glad_glTangentPointerEXT.?(arg_5245, arg_5246, arg_5247);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBinormalPointerEXT.xhtml
pub inline fn glBinormalPointerEXT(arg_5248: GLenum, arg_5249: GLsizei, arg_5250: ?*const anyopaque) void {
    return glad_glBinormalPointerEXT.?(arg_5248, arg_5249, arg_5250);
}
pub const GL_EXT_copy_texture = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyTexImage1DEXT.xhtml
pub inline fn glCopyTexImage1DEXT(arg_5251: GLenum, arg_5252: GLint, arg_5253: GLenum, arg_5254: GLint, arg_5255: GLint, arg_5256: GLsizei, arg_5257: GLint) void {
    return glad_glCopyTexImage1DEXT.?(arg_5251, arg_5252, arg_5253, arg_5254, arg_5255, arg_5256, arg_5257);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyTexImage2DEXT.xhtml
pub inline fn glCopyTexImage2DEXT(arg_5258: GLenum, arg_5259: GLint, arg_5260: GLenum, arg_5261: GLint, arg_5262: GLint, arg_5263: GLsizei, arg_5264: GLsizei, arg_5265: GLint) void {
    return glad_glCopyTexImage2DEXT.?(arg_5258, arg_5259, arg_5260, arg_5261, arg_5262, arg_5263, arg_5264, arg_5265);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyTexSubImage1DEXT.xhtml
pub inline fn glCopyTexSubImage1DEXT(arg_5266: GLenum, arg_5267: GLint, arg_5268: GLint, arg_5269: GLint, arg_5270: GLint, arg_5271: GLsizei) void {
    return glad_glCopyTexSubImage1DEXT.?(arg_5266, arg_5267, arg_5268, arg_5269, arg_5270, arg_5271);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyTexSubImage2DEXT.xhtml
pub inline fn glCopyTexSubImage2DEXT(arg_5272: GLenum, arg_5273: GLint, arg_5274: GLint, arg_5275: GLint, arg_5276: GLint, arg_5277: GLint, arg_5278: GLsizei, arg_5279: GLsizei) void {
    return glad_glCopyTexSubImage2DEXT.?(arg_5272, arg_5273, arg_5274, arg_5275, arg_5276, arg_5277, arg_5278, arg_5279);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyTexSubImage3DEXT.xhtml
pub inline fn glCopyTexSubImage3DEXT(arg_5280: GLenum, arg_5281: GLint, arg_5282: GLint, arg_5283: GLint, arg_5284: GLint, arg_5285: GLint, arg_5286: GLint, arg_5287: GLsizei, arg_5288: GLsizei) void {
    return glad_glCopyTexSubImage3DEXT.?(arg_5280, arg_5281, arg_5282, arg_5283, arg_5284, arg_5285, arg_5286, arg_5287, arg_5288);
}
pub const GL_EXT_cull_vertex = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCullParameterdvEXT.xhtml
pub inline fn glCullParameterdvEXT(arg_5289: GLenum, arg_5290: [*c]GLdouble) void {
    return glad_glCullParameterdvEXT.?(arg_5289, arg_5290);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCullParameterfvEXT.xhtml
pub inline fn glCullParameterfvEXT(arg_5291: GLenum, arg_5292: [*c]GLfloat) void {
    return glad_glCullParameterfvEXT.?(arg_5291, arg_5292);
}
pub const GL_EXT_debug_label = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLabelObjectEXT.xhtml
pub inline fn glLabelObjectEXT(arg_5293: GLenum, arg_5294: GLuint, arg_5295: GLsizei, arg_5296: [*c]const GLchar) void {
    return glad_glLabelObjectEXT.?(arg_5293, arg_5294, arg_5295, arg_5296);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetObjectLabelEXT.xhtml
pub inline fn glGetObjectLabelEXT(arg_5297: GLenum, arg_5298: GLuint, arg_5299: GLsizei, arg_5300: [*c]GLsizei, arg_5301: [*c]GLchar) void {
    return glad_glGetObjectLabelEXT.?(arg_5297, arg_5298, arg_5299, arg_5300, arg_5301);
}
pub const GL_EXT_debug_marker = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glInsertEventMarkerEXT.xhtml
pub inline fn glInsertEventMarkerEXT(arg_5302: GLsizei, arg_5303: [*c]const GLchar) void {
    return glad_glInsertEventMarkerEXT.?(arg_5302, arg_5303);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPushGroupMarkerEXT.xhtml
pub inline fn glPushGroupMarkerEXT(arg_5304: GLsizei, arg_5305: [*c]const GLchar) void {
    return glad_glPushGroupMarkerEXT.?(arg_5304, arg_5305);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPopGroupMarkerEXT.xhtml
pub inline fn glPopGroupMarkerEXT() void {
    return glad_glPopGroupMarkerEXT.?();
}
pub const GL_EXT_depth_bounds_test = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDepthBoundsEXT.xhtml
pub inline fn glDepthBoundsEXT(arg_5306: GLclampd, arg_5307: GLclampd) void {
    return glad_glDepthBoundsEXT.?(arg_5306, arg_5307);
}
pub const GL_EXT_direct_state_access = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixLoadfEXT.xhtml
pub inline fn glMatrixLoadfEXT(arg_5308: GLenum, arg_5309: [*c]const GLfloat) void {
    return glad_glMatrixLoadfEXT.?(arg_5308, arg_5309);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixLoaddEXT.xhtml
pub inline fn glMatrixLoaddEXT(arg_5310: GLenum, arg_5311: [*c]const GLdouble) void {
    return glad_glMatrixLoaddEXT.?(arg_5310, arg_5311);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixMultfEXT.xhtml
pub inline fn glMatrixMultfEXT(arg_5312: GLenum, arg_5313: [*c]const GLfloat) void {
    return glad_glMatrixMultfEXT.?(arg_5312, arg_5313);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixMultdEXT.xhtml
pub inline fn glMatrixMultdEXT(arg_5314: GLenum, arg_5315: [*c]const GLdouble) void {
    return glad_glMatrixMultdEXT.?(arg_5314, arg_5315);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixLoadIdentityEXT.xhtml
pub inline fn glMatrixLoadIdentityEXT(arg_5316: GLenum) void {
    return glad_glMatrixLoadIdentityEXT.?(arg_5316);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixRotatefEXT.xhtml
pub inline fn glMatrixRotatefEXT(arg_5317: GLenum, arg_5318: GLfloat, arg_5319: GLfloat, arg_5320: GLfloat, arg_5321: GLfloat) void {
    return glad_glMatrixRotatefEXT.?(arg_5317, arg_5318, arg_5319, arg_5320, arg_5321);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixRotatedEXT.xhtml
pub inline fn glMatrixRotatedEXT(arg_5322: GLenum, arg_5323: GLdouble, arg_5324: GLdouble, arg_5325: GLdouble, arg_5326: GLdouble) void {
    return glad_glMatrixRotatedEXT.?(arg_5322, arg_5323, arg_5324, arg_5325, arg_5326);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixScalefEXT.xhtml
pub inline fn glMatrixScalefEXT(arg_5327: GLenum, arg_5328: GLfloat, arg_5329: GLfloat, arg_5330: GLfloat) void {
    return glad_glMatrixScalefEXT.?(arg_5327, arg_5328, arg_5329, arg_5330);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixScaledEXT.xhtml
pub inline fn glMatrixScaledEXT(arg_5331: GLenum, arg_5332: GLdouble, arg_5333: GLdouble, arg_5334: GLdouble) void {
    return glad_glMatrixScaledEXT.?(arg_5331, arg_5332, arg_5333, arg_5334);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixTranslatefEXT.xhtml
pub inline fn glMatrixTranslatefEXT(arg_5335: GLenum, arg_5336: GLfloat, arg_5337: GLfloat, arg_5338: GLfloat) void {
    return glad_glMatrixTranslatefEXT.?(arg_5335, arg_5336, arg_5337, arg_5338);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixTranslatedEXT.xhtml
pub inline fn glMatrixTranslatedEXT(arg_5339: GLenum, arg_5340: GLdouble, arg_5341: GLdouble, arg_5342: GLdouble) void {
    return glad_glMatrixTranslatedEXT.?(arg_5339, arg_5340, arg_5341, arg_5342);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixFrustumEXT.xhtml
pub inline fn glMatrixFrustumEXT(arg_5343: GLenum, arg_5344: GLdouble, arg_5345: GLdouble, arg_5346: GLdouble, arg_5347: GLdouble, arg_5348: GLdouble, arg_5349: GLdouble) void {
    return glad_glMatrixFrustumEXT.?(arg_5343, arg_5344, arg_5345, arg_5346, arg_5347, arg_5348, arg_5349);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixOrthoEXT.xhtml
pub inline fn glMatrixOrthoEXT(arg_5350: GLenum, arg_5351: GLdouble, arg_5352: GLdouble, arg_5353: GLdouble, arg_5354: GLdouble, arg_5355: GLdouble, arg_5356: GLdouble) void {
    return glad_glMatrixOrthoEXT.?(arg_5350, arg_5351, arg_5352, arg_5353, arg_5354, arg_5355, arg_5356);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixPopEXT.xhtml
pub inline fn glMatrixPopEXT(arg_5357: GLenum) void {
    return glad_glMatrixPopEXT.?(arg_5357);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixPushEXT.xhtml
pub inline fn glMatrixPushEXT(arg_5358: GLenum) void {
    return glad_glMatrixPushEXT.?(arg_5358);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClientAttribDefaultEXT.xhtml
pub inline fn glClientAttribDefaultEXT(arg_5359: GLbitfield) void {
    return glad_glClientAttribDefaultEXT.?(arg_5359);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPushClientAttribDefaultEXT.xhtml
pub inline fn glPushClientAttribDefaultEXT(arg_5360: GLbitfield) void {
    return glad_glPushClientAttribDefaultEXT.?(arg_5360);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureParameterfEXT.xhtml
pub inline fn glTextureParameterfEXT(arg_5361: GLuint, arg_5362: GLenum, arg_5363: GLenum, arg_5364: GLfloat) void {
    return glad_glTextureParameterfEXT.?(arg_5361, arg_5362, arg_5363, arg_5364);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureParameterfvEXT.xhtml
pub inline fn glTextureParameterfvEXT(arg_5365: GLuint, arg_5366: GLenum, arg_5367: GLenum, arg_5368: [*c]const GLfloat) void {
    return glad_glTextureParameterfvEXT.?(arg_5365, arg_5366, arg_5367, arg_5368);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureParameteriEXT.xhtml
pub inline fn glTextureParameteriEXT(arg_5369: GLuint, arg_5370: GLenum, arg_5371: GLenum, arg_5372: GLint) void {
    return glad_glTextureParameteriEXT.?(arg_5369, arg_5370, arg_5371, arg_5372);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureParameterivEXT.xhtml
pub inline fn glTextureParameterivEXT(arg_5373: GLuint, arg_5374: GLenum, arg_5375: GLenum, arg_5376: [*c]const GLint) void {
    return glad_glTextureParameterivEXT.?(arg_5373, arg_5374, arg_5375, arg_5376);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureImage1DEXT.xhtml
pub inline fn glTextureImage1DEXT(arg_5377: GLuint, arg_5378: GLenum, arg_5379: GLint, arg_5380: GLint, arg_5381: GLsizei, arg_5382: GLint, arg_5383: GLenum, arg_5384: GLenum, arg_5385: ?*const anyopaque) void {
    return glad_glTextureImage1DEXT.?(arg_5377, arg_5378, arg_5379, arg_5380, arg_5381, arg_5382, arg_5383, arg_5384, arg_5385);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureImage2DEXT.xhtml
pub inline fn glTextureImage2DEXT(arg_5386: GLuint, arg_5387: GLenum, arg_5388: GLint, arg_5389: GLint, arg_5390: GLsizei, arg_5391: GLsizei, arg_5392: GLint, arg_5393: GLenum, arg_5394: GLenum, arg_5395: ?*const anyopaque) void {
    return glad_glTextureImage2DEXT.?(arg_5386, arg_5387, arg_5388, arg_5389, arg_5390, arg_5391, arg_5392, arg_5393, arg_5394, arg_5395);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureSubImage1DEXT.xhtml
pub inline fn glTextureSubImage1DEXT(arg_5396: GLuint, arg_5397: GLenum, arg_5398: GLint, arg_5399: GLint, arg_5400: GLsizei, arg_5401: GLenum, arg_5402: GLenum, arg_5403: ?*const anyopaque) void {
    return glad_glTextureSubImage1DEXT.?(arg_5396, arg_5397, arg_5398, arg_5399, arg_5400, arg_5401, arg_5402, arg_5403);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureSubImage2DEXT.xhtml
pub inline fn glTextureSubImage2DEXT(arg_5404: GLuint, arg_5405: GLenum, arg_5406: GLint, arg_5407: GLint, arg_5408: GLint, arg_5409: GLsizei, arg_5410: GLsizei, arg_5411: GLenum, arg_5412: GLenum, arg_5413: ?*const anyopaque) void {
    return glad_glTextureSubImage2DEXT.?(arg_5404, arg_5405, arg_5406, arg_5407, arg_5408, arg_5409, arg_5410, arg_5411, arg_5412, arg_5413);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyTextureImage1DEXT.xhtml
pub inline fn glCopyTextureImage1DEXT(arg_5414: GLuint, arg_5415: GLenum, arg_5416: GLint, arg_5417: GLenum, arg_5418: GLint, arg_5419: GLint, arg_5420: GLsizei, arg_5421: GLint) void {
    return glad_glCopyTextureImage1DEXT.?(arg_5414, arg_5415, arg_5416, arg_5417, arg_5418, arg_5419, arg_5420, arg_5421);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyTextureImage2DEXT.xhtml
pub inline fn glCopyTextureImage2DEXT(arg_5422: GLuint, arg_5423: GLenum, arg_5424: GLint, arg_5425: GLenum, arg_5426: GLint, arg_5427: GLint, arg_5428: GLsizei, arg_5429: GLsizei, arg_5430: GLint) void {
    return glad_glCopyTextureImage2DEXT.?(arg_5422, arg_5423, arg_5424, arg_5425, arg_5426, arg_5427, arg_5428, arg_5429, arg_5430);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyTextureSubImage1DEXT.xhtml
pub inline fn glCopyTextureSubImage1DEXT(arg_5431: GLuint, arg_5432: GLenum, arg_5433: GLint, arg_5434: GLint, arg_5435: GLint, arg_5436: GLint, arg_5437: GLsizei) void {
    return glad_glCopyTextureSubImage1DEXT.?(arg_5431, arg_5432, arg_5433, arg_5434, arg_5435, arg_5436, arg_5437);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyTextureSubImage2DEXT.xhtml
pub inline fn glCopyTextureSubImage2DEXT(arg_5438: GLuint, arg_5439: GLenum, arg_5440: GLint, arg_5441: GLint, arg_5442: GLint, arg_5443: GLint, arg_5444: GLint, arg_5445: GLsizei, arg_5446: GLsizei) void {
    return glad_glCopyTextureSubImage2DEXT.?(arg_5438, arg_5439, arg_5440, arg_5441, arg_5442, arg_5443, arg_5444, arg_5445, arg_5446);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTextureImageEXT.xhtml
pub inline fn glGetTextureImageEXT(arg_5447: GLuint, arg_5448: GLenum, arg_5449: GLint, arg_5450: GLenum, arg_5451: GLenum, arg_5452: ?*anyopaque) void {
    return glad_glGetTextureImageEXT.?(arg_5447, arg_5448, arg_5449, arg_5450, arg_5451, arg_5452);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTextureParameterfvEXT.xhtml
pub inline fn glGetTextureParameterfvEXT(arg_5453: GLuint, arg_5454: GLenum, arg_5455: GLenum, arg_5456: [*c]GLfloat) void {
    return glad_glGetTextureParameterfvEXT.?(arg_5453, arg_5454, arg_5455, arg_5456);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTextureParameterivEXT.xhtml
pub inline fn glGetTextureParameterivEXT(arg_5457: GLuint, arg_5458: GLenum, arg_5459: GLenum, arg_5460: [*c]GLint) void {
    return glad_glGetTextureParameterivEXT.?(arg_5457, arg_5458, arg_5459, arg_5460);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTextureLevelParameterfvEXT.xhtml
pub inline fn glGetTextureLevelParameterfvEXT(arg_5461: GLuint, arg_5462: GLenum, arg_5463: GLint, arg_5464: GLenum, arg_5465: [*c]GLfloat) void {
    return glad_glGetTextureLevelParameterfvEXT.?(arg_5461, arg_5462, arg_5463, arg_5464, arg_5465);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTextureLevelParameterivEXT.xhtml
pub inline fn glGetTextureLevelParameterivEXT(arg_5466: GLuint, arg_5467: GLenum, arg_5468: GLint, arg_5469: GLenum, arg_5470: [*c]GLint) void {
    return glad_glGetTextureLevelParameterivEXT.?(arg_5466, arg_5467, arg_5468, arg_5469, arg_5470);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureImage3DEXT.xhtml
pub inline fn glTextureImage3DEXT(arg_5471: GLuint, arg_5472: GLenum, arg_5473: GLint, arg_5474: GLint, arg_5475: GLsizei, arg_5476: GLsizei, arg_5477: GLsizei, arg_5478: GLint, arg_5479: GLenum, arg_5480: GLenum, arg_5481: ?*const anyopaque) void {
    return glad_glTextureImage3DEXT.?(arg_5471, arg_5472, arg_5473, arg_5474, arg_5475, arg_5476, arg_5477, arg_5478, arg_5479, arg_5480, arg_5481);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureSubImage3DEXT.xhtml
pub inline fn glTextureSubImage3DEXT(arg_5482: GLuint, arg_5483: GLenum, arg_5484: GLint, arg_5485: GLint, arg_5486: GLint, arg_5487: GLint, arg_5488: GLsizei, arg_5489: GLsizei, arg_5490: GLsizei, arg_5491: GLenum, arg_5492: GLenum, arg_5493: ?*const anyopaque) void {
    return glad_glTextureSubImage3DEXT.?(arg_5482, arg_5483, arg_5484, arg_5485, arg_5486, arg_5487, arg_5488, arg_5489, arg_5490, arg_5491, arg_5492, arg_5493);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyTextureSubImage3DEXT.xhtml
pub inline fn glCopyTextureSubImage3DEXT(arg_5494: GLuint, arg_5495: GLenum, arg_5496: GLint, arg_5497: GLint, arg_5498: GLint, arg_5499: GLint, arg_5500: GLint, arg_5501: GLint, arg_5502: GLsizei, arg_5503: GLsizei) void {
    return glad_glCopyTextureSubImage3DEXT.?(arg_5494, arg_5495, arg_5496, arg_5497, arg_5498, arg_5499, arg_5500, arg_5501, arg_5502, arg_5503);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindMultiTextureEXT.xhtml
pub inline fn glBindMultiTextureEXT(arg_5504: GLenum, arg_5505: GLenum, arg_5506: GLuint) void {
    return glad_glBindMultiTextureEXT.?(arg_5504, arg_5505, arg_5506);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoordPointerEXT.xhtml
pub inline fn glMultiTexCoordPointerEXT(arg_5507: GLenum, arg_5508: GLint, arg_5509: GLenum, arg_5510: GLsizei, arg_5511: ?*const anyopaque) void {
    return glad_glMultiTexCoordPointerEXT.?(arg_5507, arg_5508, arg_5509, arg_5510, arg_5511);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexEnvfEXT.xhtml
pub inline fn glMultiTexEnvfEXT(arg_5512: GLenum, arg_5513: GLenum, arg_5514: GLenum, arg_5515: GLfloat) void {
    return glad_glMultiTexEnvfEXT.?(arg_5512, arg_5513, arg_5514, arg_5515);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexEnvfvEXT.xhtml
pub inline fn glMultiTexEnvfvEXT(arg_5516: GLenum, arg_5517: GLenum, arg_5518: GLenum, arg_5519: [*c]const GLfloat) void {
    return glad_glMultiTexEnvfvEXT.?(arg_5516, arg_5517, arg_5518, arg_5519);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexEnviEXT.xhtml
pub inline fn glMultiTexEnviEXT(arg_5520: GLenum, arg_5521: GLenum, arg_5522: GLenum, arg_5523: GLint) void {
    return glad_glMultiTexEnviEXT.?(arg_5520, arg_5521, arg_5522, arg_5523);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexEnvivEXT.xhtml
pub inline fn glMultiTexEnvivEXT(arg_5524: GLenum, arg_5525: GLenum, arg_5526: GLenum, arg_5527: [*c]const GLint) void {
    return glad_glMultiTexEnvivEXT.?(arg_5524, arg_5525, arg_5526, arg_5527);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexGendEXT.xhtml
pub inline fn glMultiTexGendEXT(arg_5528: GLenum, arg_5529: GLenum, arg_5530: GLenum, arg_5531: GLdouble) void {
    return glad_glMultiTexGendEXT.?(arg_5528, arg_5529, arg_5530, arg_5531);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexGendvEXT.xhtml
pub inline fn glMultiTexGendvEXT(arg_5532: GLenum, arg_5533: GLenum, arg_5534: GLenum, arg_5535: [*c]const GLdouble) void {
    return glad_glMultiTexGendvEXT.?(arg_5532, arg_5533, arg_5534, arg_5535);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexGenfEXT.xhtml
pub inline fn glMultiTexGenfEXT(arg_5536: GLenum, arg_5537: GLenum, arg_5538: GLenum, arg_5539: GLfloat) void {
    return glad_glMultiTexGenfEXT.?(arg_5536, arg_5537, arg_5538, arg_5539);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexGenfvEXT.xhtml
pub inline fn glMultiTexGenfvEXT(arg_5540: GLenum, arg_5541: GLenum, arg_5542: GLenum, arg_5543: [*c]const GLfloat) void {
    return glad_glMultiTexGenfvEXT.?(arg_5540, arg_5541, arg_5542, arg_5543);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexGeniEXT.xhtml
pub inline fn glMultiTexGeniEXT(arg_5544: GLenum, arg_5545: GLenum, arg_5546: GLenum, arg_5547: GLint) void {
    return glad_glMultiTexGeniEXT.?(arg_5544, arg_5545, arg_5546, arg_5547);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexGenivEXT.xhtml
pub inline fn glMultiTexGenivEXT(arg_5548: GLenum, arg_5549: GLenum, arg_5550: GLenum, arg_5551: [*c]const GLint) void {
    return glad_glMultiTexGenivEXT.?(arg_5548, arg_5549, arg_5550, arg_5551);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMultiTexEnvfvEXT.xhtml
pub inline fn glGetMultiTexEnvfvEXT(arg_5552: GLenum, arg_5553: GLenum, arg_5554: GLenum, arg_5555: [*c]GLfloat) void {
    return glad_glGetMultiTexEnvfvEXT.?(arg_5552, arg_5553, arg_5554, arg_5555);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMultiTexEnvivEXT.xhtml
pub inline fn glGetMultiTexEnvivEXT(arg_5556: GLenum, arg_5557: GLenum, arg_5558: GLenum, arg_5559: [*c]GLint) void {
    return glad_glGetMultiTexEnvivEXT.?(arg_5556, arg_5557, arg_5558, arg_5559);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMultiTexGendvEXT.xhtml
pub inline fn glGetMultiTexGendvEXT(arg_5560: GLenum, arg_5561: GLenum, arg_5562: GLenum, arg_5563: [*c]GLdouble) void {
    return glad_glGetMultiTexGendvEXT.?(arg_5560, arg_5561, arg_5562, arg_5563);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMultiTexGenfvEXT.xhtml
pub inline fn glGetMultiTexGenfvEXT(arg_5564: GLenum, arg_5565: GLenum, arg_5566: GLenum, arg_5567: [*c]GLfloat) void {
    return glad_glGetMultiTexGenfvEXT.?(arg_5564, arg_5565, arg_5566, arg_5567);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMultiTexGenivEXT.xhtml
pub inline fn glGetMultiTexGenivEXT(arg_5568: GLenum, arg_5569: GLenum, arg_5570: GLenum, arg_5571: [*c]GLint) void {
    return glad_glGetMultiTexGenivEXT.?(arg_5568, arg_5569, arg_5570, arg_5571);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexParameteriEXT.xhtml
pub inline fn glMultiTexParameteriEXT(arg_5572: GLenum, arg_5573: GLenum, arg_5574: GLenum, arg_5575: GLint) void {
    return glad_glMultiTexParameteriEXT.?(arg_5572, arg_5573, arg_5574, arg_5575);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexParameterivEXT.xhtml
pub inline fn glMultiTexParameterivEXT(arg_5576: GLenum, arg_5577: GLenum, arg_5578: GLenum, arg_5579: [*c]const GLint) void {
    return glad_glMultiTexParameterivEXT.?(arg_5576, arg_5577, arg_5578, arg_5579);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexParameterfEXT.xhtml
pub inline fn glMultiTexParameterfEXT(arg_5580: GLenum, arg_5581: GLenum, arg_5582: GLenum, arg_5583: GLfloat) void {
    return glad_glMultiTexParameterfEXT.?(arg_5580, arg_5581, arg_5582, arg_5583);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexParameterfvEXT.xhtml
pub inline fn glMultiTexParameterfvEXT(arg_5584: GLenum, arg_5585: GLenum, arg_5586: GLenum, arg_5587: [*c]const GLfloat) void {
    return glad_glMultiTexParameterfvEXT.?(arg_5584, arg_5585, arg_5586, arg_5587);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexImage1DEXT.xhtml
pub inline fn glMultiTexImage1DEXT(arg_5588: GLenum, arg_5589: GLenum, arg_5590: GLint, arg_5591: GLint, arg_5592: GLsizei, arg_5593: GLint, arg_5594: GLenum, arg_5595: GLenum, arg_5596: ?*const anyopaque) void {
    return glad_glMultiTexImage1DEXT.?(arg_5588, arg_5589, arg_5590, arg_5591, arg_5592, arg_5593, arg_5594, arg_5595, arg_5596);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexImage2DEXT.xhtml
pub inline fn glMultiTexImage2DEXT(arg_5597: GLenum, arg_5598: GLenum, arg_5599: GLint, arg_5600: GLint, arg_5601: GLsizei, arg_5602: GLsizei, arg_5603: GLint, arg_5604: GLenum, arg_5605: GLenum, arg_5606: ?*const anyopaque) void {
    return glad_glMultiTexImage2DEXT.?(arg_5597, arg_5598, arg_5599, arg_5600, arg_5601, arg_5602, arg_5603, arg_5604, arg_5605, arg_5606);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexSubImage1DEXT.xhtml
pub inline fn glMultiTexSubImage1DEXT(arg_5607: GLenum, arg_5608: GLenum, arg_5609: GLint, arg_5610: GLint, arg_5611: GLsizei, arg_5612: GLenum, arg_5613: GLenum, arg_5614: ?*const anyopaque) void {
    return glad_glMultiTexSubImage1DEXT.?(arg_5607, arg_5608, arg_5609, arg_5610, arg_5611, arg_5612, arg_5613, arg_5614);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexSubImage2DEXT.xhtml
pub inline fn glMultiTexSubImage2DEXT(arg_5615: GLenum, arg_5616: GLenum, arg_5617: GLint, arg_5618: GLint, arg_5619: GLint, arg_5620: GLsizei, arg_5621: GLsizei, arg_5622: GLenum, arg_5623: GLenum, arg_5624: ?*const anyopaque) void {
    return glad_glMultiTexSubImage2DEXT.?(arg_5615, arg_5616, arg_5617, arg_5618, arg_5619, arg_5620, arg_5621, arg_5622, arg_5623, arg_5624);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyMultiTexImage1DEXT.xhtml
pub inline fn glCopyMultiTexImage1DEXT(arg_5625: GLenum, arg_5626: GLenum, arg_5627: GLint, arg_5628: GLenum, arg_5629: GLint, arg_5630: GLint, arg_5631: GLsizei, arg_5632: GLint) void {
    return glad_glCopyMultiTexImage1DEXT.?(arg_5625, arg_5626, arg_5627, arg_5628, arg_5629, arg_5630, arg_5631, arg_5632);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyMultiTexImage2DEXT.xhtml
pub inline fn glCopyMultiTexImage2DEXT(arg_5633: GLenum, arg_5634: GLenum, arg_5635: GLint, arg_5636: GLenum, arg_5637: GLint, arg_5638: GLint, arg_5639: GLsizei, arg_5640: GLsizei, arg_5641: GLint) void {
    return glad_glCopyMultiTexImage2DEXT.?(arg_5633, arg_5634, arg_5635, arg_5636, arg_5637, arg_5638, arg_5639, arg_5640, arg_5641);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyMultiTexSubImage1DEXT.xhtml
pub inline fn glCopyMultiTexSubImage1DEXT(arg_5642: GLenum, arg_5643: GLenum, arg_5644: GLint, arg_5645: GLint, arg_5646: GLint, arg_5647: GLint, arg_5648: GLsizei) void {
    return glad_glCopyMultiTexSubImage1DEXT.?(arg_5642, arg_5643, arg_5644, arg_5645, arg_5646, arg_5647, arg_5648);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyMultiTexSubImage2DEXT.xhtml
pub inline fn glCopyMultiTexSubImage2DEXT(arg_5649: GLenum, arg_5650: GLenum, arg_5651: GLint, arg_5652: GLint, arg_5653: GLint, arg_5654: GLint, arg_5655: GLint, arg_5656: GLsizei, arg_5657: GLsizei) void {
    return glad_glCopyMultiTexSubImage2DEXT.?(arg_5649, arg_5650, arg_5651, arg_5652, arg_5653, arg_5654, arg_5655, arg_5656, arg_5657);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMultiTexImageEXT.xhtml
pub inline fn glGetMultiTexImageEXT(arg_5658: GLenum, arg_5659: GLenum, arg_5660: GLint, arg_5661: GLenum, arg_5662: GLenum, arg_5663: ?*anyopaque) void {
    return glad_glGetMultiTexImageEXT.?(arg_5658, arg_5659, arg_5660, arg_5661, arg_5662, arg_5663);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMultiTexParameterfvEXT.xhtml
pub inline fn glGetMultiTexParameterfvEXT(arg_5664: GLenum, arg_5665: GLenum, arg_5666: GLenum, arg_5667: [*c]GLfloat) void {
    return glad_glGetMultiTexParameterfvEXT.?(arg_5664, arg_5665, arg_5666, arg_5667);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMultiTexParameterivEXT.xhtml
pub inline fn glGetMultiTexParameterivEXT(arg_5668: GLenum, arg_5669: GLenum, arg_5670: GLenum, arg_5671: [*c]GLint) void {
    return glad_glGetMultiTexParameterivEXT.?(arg_5668, arg_5669, arg_5670, arg_5671);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMultiTexLevelParameterfvEXT.xhtml
pub inline fn glGetMultiTexLevelParameterfvEXT(arg_5672: GLenum, arg_5673: GLenum, arg_5674: GLint, arg_5675: GLenum, arg_5676: [*c]GLfloat) void {
    return glad_glGetMultiTexLevelParameterfvEXT.?(arg_5672, arg_5673, arg_5674, arg_5675, arg_5676);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMultiTexLevelParameterivEXT.xhtml
pub inline fn glGetMultiTexLevelParameterivEXT(arg_5677: GLenum, arg_5678: GLenum, arg_5679: GLint, arg_5680: GLenum, arg_5681: [*c]GLint) void {
    return glad_glGetMultiTexLevelParameterivEXT.?(arg_5677, arg_5678, arg_5679, arg_5680, arg_5681);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexImage3DEXT.xhtml
pub inline fn glMultiTexImage3DEXT(arg_5682: GLenum, arg_5683: GLenum, arg_5684: GLint, arg_5685: GLint, arg_5686: GLsizei, arg_5687: GLsizei, arg_5688: GLsizei, arg_5689: GLint, arg_5690: GLenum, arg_5691: GLenum, arg_5692: ?*const anyopaque) void {
    return glad_glMultiTexImage3DEXT.?(arg_5682, arg_5683, arg_5684, arg_5685, arg_5686, arg_5687, arg_5688, arg_5689, arg_5690, arg_5691, arg_5692);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexSubImage3DEXT.xhtml
pub inline fn glMultiTexSubImage3DEXT(arg_5693: GLenum, arg_5694: GLenum, arg_5695: GLint, arg_5696: GLint, arg_5697: GLint, arg_5698: GLint, arg_5699: GLsizei, arg_5700: GLsizei, arg_5701: GLsizei, arg_5702: GLenum, arg_5703: GLenum, arg_5704: ?*const anyopaque) void {
    return glad_glMultiTexSubImage3DEXT.?(arg_5693, arg_5694, arg_5695, arg_5696, arg_5697, arg_5698, arg_5699, arg_5700, arg_5701, arg_5702, arg_5703, arg_5704);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyMultiTexSubImage3DEXT.xhtml
pub inline fn glCopyMultiTexSubImage3DEXT(arg_5705: GLenum, arg_5706: GLenum, arg_5707: GLint, arg_5708: GLint, arg_5709: GLint, arg_5710: GLint, arg_5711: GLint, arg_5712: GLint, arg_5713: GLsizei, arg_5714: GLsizei) void {
    return glad_glCopyMultiTexSubImage3DEXT.?(arg_5705, arg_5706, arg_5707, arg_5708, arg_5709, arg_5710, arg_5711, arg_5712, arg_5713, arg_5714);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEnableClientStateIndexedEXT.xhtml
pub inline fn glEnableClientStateIndexedEXT(arg_5715: GLenum, arg_5716: GLuint) void {
    return glad_glEnableClientStateIndexedEXT.?(arg_5715, arg_5716);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDisableClientStateIndexedEXT.xhtml
pub inline fn glDisableClientStateIndexedEXT(arg_5717: GLenum, arg_5718: GLuint) void {
    return glad_glDisableClientStateIndexedEXT.?(arg_5717, arg_5718);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFloatIndexedvEXT.xhtml
pub inline fn glGetFloatIndexedvEXT(arg_5719: GLenum, arg_5720: GLuint, arg_5721: [*c]GLfloat) void {
    return glad_glGetFloatIndexedvEXT.?(arg_5719, arg_5720, arg_5721);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetDoubleIndexedvEXT.xhtml
pub inline fn glGetDoubleIndexedvEXT(arg_5722: GLenum, arg_5723: GLuint, arg_5724: [*c]GLdouble) void {
    return glad_glGetDoubleIndexedvEXT.?(arg_5722, arg_5723, arg_5724);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPointerIndexedvEXT.xhtml
pub inline fn glGetPointerIndexedvEXT(arg_5725: GLenum, arg_5726: GLuint, arg_5727: [*c]?*anyopaque) void {
    return glad_glGetPointerIndexedvEXT.?(arg_5725, arg_5726, arg_5727);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEnableIndexedEXT.xhtml
pub inline fn glEnableIndexedEXT(arg_5728: GLenum, arg_5729: GLuint) void {
    return glad_glEnableIndexedEXT.?(arg_5728, arg_5729);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDisableIndexedEXT.xhtml
pub inline fn glDisableIndexedEXT(arg_5730: GLenum, arg_5731: GLuint) void {
    return glad_glDisableIndexedEXT.?(arg_5730, arg_5731);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsEnabledIndexedEXT.xhtml
pub inline fn glIsEnabledIndexedEXT(arg_5732: GLenum, arg_5733: GLuint) GLboolean {
    return glad_glIsEnabledIndexedEXT.?(arg_5732, arg_5733);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetIntegerIndexedvEXT.xhtml
pub inline fn glGetIntegerIndexedvEXT(arg_5734: GLenum, arg_5735: GLuint, arg_5736: [*c]GLint) void {
    return glad_glGetIntegerIndexedvEXT.?(arg_5734, arg_5735, arg_5736);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetBooleanIndexedvEXT.xhtml
pub inline fn glGetBooleanIndexedvEXT(arg_5737: GLenum, arg_5738: GLuint, arg_5739: [*c]GLboolean) void {
    return glad_glGetBooleanIndexedvEXT.?(arg_5737, arg_5738, arg_5739);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedTextureImage3DEXT.xhtml
pub inline fn glCompressedTextureImage3DEXT(arg_5740: GLuint, arg_5741: GLenum, arg_5742: GLint, arg_5743: GLenum, arg_5744: GLsizei, arg_5745: GLsizei, arg_5746: GLsizei, arg_5747: GLint, arg_5748: GLsizei, arg_5749: ?*const anyopaque) void {
    return glad_glCompressedTextureImage3DEXT.?(arg_5740, arg_5741, arg_5742, arg_5743, arg_5744, arg_5745, arg_5746, arg_5747, arg_5748, arg_5749);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedTextureImage2DEXT.xhtml
pub inline fn glCompressedTextureImage2DEXT(arg_5750: GLuint, arg_5751: GLenum, arg_5752: GLint, arg_5753: GLenum, arg_5754: GLsizei, arg_5755: GLsizei, arg_5756: GLint, arg_5757: GLsizei, arg_5758: ?*const anyopaque) void {
    return glad_glCompressedTextureImage2DEXT.?(arg_5750, arg_5751, arg_5752, arg_5753, arg_5754, arg_5755, arg_5756, arg_5757, arg_5758);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedTextureImage1DEXT.xhtml
pub inline fn glCompressedTextureImage1DEXT(arg_5759: GLuint, arg_5760: GLenum, arg_5761: GLint, arg_5762: GLenum, arg_5763: GLsizei, arg_5764: GLint, arg_5765: GLsizei, arg_5766: ?*const anyopaque) void {
    return glad_glCompressedTextureImage1DEXT.?(arg_5759, arg_5760, arg_5761, arg_5762, arg_5763, arg_5764, arg_5765, arg_5766);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedTextureSubImage3DEXT.xhtml
pub inline fn glCompressedTextureSubImage3DEXT(arg_5767: GLuint, arg_5768: GLenum, arg_5769: GLint, arg_5770: GLint, arg_5771: GLint, arg_5772: GLint, arg_5773: GLsizei, arg_5774: GLsizei, arg_5775: GLsizei, arg_5776: GLenum, arg_5777: GLsizei, arg_5778: ?*const anyopaque) void {
    return glad_glCompressedTextureSubImage3DEXT.?(arg_5767, arg_5768, arg_5769, arg_5770, arg_5771, arg_5772, arg_5773, arg_5774, arg_5775, arg_5776, arg_5777, arg_5778);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedTextureSubImage2DEXT.xhtml
pub inline fn glCompressedTextureSubImage2DEXT(arg_5779: GLuint, arg_5780: GLenum, arg_5781: GLint, arg_5782: GLint, arg_5783: GLint, arg_5784: GLsizei, arg_5785: GLsizei, arg_5786: GLenum, arg_5787: GLsizei, arg_5788: ?*const anyopaque) void {
    return glad_glCompressedTextureSubImage2DEXT.?(arg_5779, arg_5780, arg_5781, arg_5782, arg_5783, arg_5784, arg_5785, arg_5786, arg_5787, arg_5788);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedTextureSubImage1DEXT.xhtml
pub inline fn glCompressedTextureSubImage1DEXT(arg_5789: GLuint, arg_5790: GLenum, arg_5791: GLint, arg_5792: GLint, arg_5793: GLsizei, arg_5794: GLenum, arg_5795: GLsizei, arg_5796: ?*const anyopaque) void {
    return glad_glCompressedTextureSubImage1DEXT.?(arg_5789, arg_5790, arg_5791, arg_5792, arg_5793, arg_5794, arg_5795, arg_5796);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetCompressedTextureImageEXT.xhtml
pub inline fn glGetCompressedTextureImageEXT(arg_5797: GLuint, arg_5798: GLenum, arg_5799: GLint, arg_5800: ?*anyopaque) void {
    return glad_glGetCompressedTextureImageEXT.?(arg_5797, arg_5798, arg_5799, arg_5800);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedMultiTexImage3DEXT.xhtml
pub inline fn glCompressedMultiTexImage3DEXT(arg_5801: GLenum, arg_5802: GLenum, arg_5803: GLint, arg_5804: GLenum, arg_5805: GLsizei, arg_5806: GLsizei, arg_5807: GLsizei, arg_5808: GLint, arg_5809: GLsizei, arg_5810: ?*const anyopaque) void {
    return glad_glCompressedMultiTexImage3DEXT.?(arg_5801, arg_5802, arg_5803, arg_5804, arg_5805, arg_5806, arg_5807, arg_5808, arg_5809, arg_5810);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedMultiTexImage2DEXT.xhtml
pub inline fn glCompressedMultiTexImage2DEXT(arg_5811: GLenum, arg_5812: GLenum, arg_5813: GLint, arg_5814: GLenum, arg_5815: GLsizei, arg_5816: GLsizei, arg_5817: GLint, arg_5818: GLsizei, arg_5819: ?*const anyopaque) void {
    return glad_glCompressedMultiTexImage2DEXT.?(arg_5811, arg_5812, arg_5813, arg_5814, arg_5815, arg_5816, arg_5817, arg_5818, arg_5819);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedMultiTexImage1DEXT.xhtml
pub inline fn glCompressedMultiTexImage1DEXT(arg_5820: GLenum, arg_5821: GLenum, arg_5822: GLint, arg_5823: GLenum, arg_5824: GLsizei, arg_5825: GLint, arg_5826: GLsizei, arg_5827: ?*const anyopaque) void {
    return glad_glCompressedMultiTexImage1DEXT.?(arg_5820, arg_5821, arg_5822, arg_5823, arg_5824, arg_5825, arg_5826, arg_5827);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedMultiTexSubImage3DEXT.xhtml
pub inline fn glCompressedMultiTexSubImage3DEXT(arg_5828: GLenum, arg_5829: GLenum, arg_5830: GLint, arg_5831: GLint, arg_5832: GLint, arg_5833: GLint, arg_5834: GLsizei, arg_5835: GLsizei, arg_5836: GLsizei, arg_5837: GLenum, arg_5838: GLsizei, arg_5839: ?*const anyopaque) void {
    return glad_glCompressedMultiTexSubImage3DEXT.?(arg_5828, arg_5829, arg_5830, arg_5831, arg_5832, arg_5833, arg_5834, arg_5835, arg_5836, arg_5837, arg_5838, arg_5839);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedMultiTexSubImage2DEXT.xhtml
pub inline fn glCompressedMultiTexSubImage2DEXT(arg_5840: GLenum, arg_5841: GLenum, arg_5842: GLint, arg_5843: GLint, arg_5844: GLint, arg_5845: GLsizei, arg_5846: GLsizei, arg_5847: GLenum, arg_5848: GLsizei, arg_5849: ?*const anyopaque) void {
    return glad_glCompressedMultiTexSubImage2DEXT.?(arg_5840, arg_5841, arg_5842, arg_5843, arg_5844, arg_5845, arg_5846, arg_5847, arg_5848, arg_5849);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedMultiTexSubImage1DEXT.xhtml
pub inline fn glCompressedMultiTexSubImage1DEXT(arg_5850: GLenum, arg_5851: GLenum, arg_5852: GLint, arg_5853: GLint, arg_5854: GLsizei, arg_5855: GLenum, arg_5856: GLsizei, arg_5857: ?*const anyopaque) void {
    return glad_glCompressedMultiTexSubImage1DEXT.?(arg_5850, arg_5851, arg_5852, arg_5853, arg_5854, arg_5855, arg_5856, arg_5857);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetCompressedMultiTexImageEXT.xhtml
pub inline fn glGetCompressedMultiTexImageEXT(arg_5858: GLenum, arg_5859: GLenum, arg_5860: GLint, arg_5861: ?*anyopaque) void {
    return glad_glGetCompressedMultiTexImageEXT.?(arg_5858, arg_5859, arg_5860, arg_5861);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixLoadTransposefEXT.xhtml
pub inline fn glMatrixLoadTransposefEXT(arg_5862: GLenum, arg_5863: [*c]const GLfloat) void {
    return glad_glMatrixLoadTransposefEXT.?(arg_5862, arg_5863);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixLoadTransposedEXT.xhtml
pub inline fn glMatrixLoadTransposedEXT(arg_5864: GLenum, arg_5865: [*c]const GLdouble) void {
    return glad_glMatrixLoadTransposedEXT.?(arg_5864, arg_5865);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixMultTransposefEXT.xhtml
pub inline fn glMatrixMultTransposefEXT(arg_5866: GLenum, arg_5867: [*c]const GLfloat) void {
    return glad_glMatrixMultTransposefEXT.?(arg_5866, arg_5867);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixMultTransposedEXT.xhtml
pub inline fn glMatrixMultTransposedEXT(arg_5868: GLenum, arg_5869: [*c]const GLdouble) void {
    return glad_glMatrixMultTransposedEXT.?(arg_5868, arg_5869);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedBufferDataEXT.xhtml
pub inline fn glNamedBufferDataEXT(arg_5870: GLuint, arg_5871: GLsizeiptr, arg_5872: ?*const anyopaque, arg_5873: GLenum) void {
    return glad_glNamedBufferDataEXT.?(arg_5870, arg_5871, arg_5872, arg_5873);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedBufferSubDataEXT.xhtml
pub inline fn glNamedBufferSubDataEXT(arg_5874: GLuint, arg_5875: GLintptr, arg_5876: GLsizeiptr, arg_5877: ?*const anyopaque) void {
    return glad_glNamedBufferSubDataEXT.?(arg_5874, arg_5875, arg_5876, arg_5877);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMapNamedBufferEXT.xhtml
pub inline fn glMapNamedBufferEXT(arg_5878: GLuint, arg_5879: GLenum) ?*anyopaque {
    return glad_glMapNamedBufferEXT.?(arg_5878, arg_5879);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUnmapNamedBufferEXT.xhtml
pub inline fn glUnmapNamedBufferEXT(arg_5880: GLuint) GLboolean {
    return glad_glUnmapNamedBufferEXT.?(arg_5880);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetNamedBufferParameterivEXT.xhtml
pub inline fn glGetNamedBufferParameterivEXT(arg_5881: GLuint, arg_5882: GLenum, arg_5883: [*c]GLint) void {
    return glad_glGetNamedBufferParameterivEXT.?(arg_5881, arg_5882, arg_5883);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetNamedBufferPointervEXT.xhtml
pub inline fn glGetNamedBufferPointervEXT(arg_5884: GLuint, arg_5885: GLenum, arg_5886: [*c]?*anyopaque) void {
    return glad_glGetNamedBufferPointervEXT.?(arg_5884, arg_5885, arg_5886);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetNamedBufferSubDataEXT.xhtml
pub inline fn glGetNamedBufferSubDataEXT(arg_5887: GLuint, arg_5888: GLintptr, arg_5889: GLsizeiptr, arg_5890: ?*anyopaque) void {
    return glad_glGetNamedBufferSubDataEXT.?(arg_5887, arg_5888, arg_5889, arg_5890);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform1fEXT.xhtml
pub inline fn glProgramUniform1fEXT(arg_5891: GLuint, arg_5892: GLint, arg_5893: GLfloat) void {
    return glad_glProgramUniform1fEXT.?(arg_5891, arg_5892, arg_5893);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform2fEXT.xhtml
pub inline fn glProgramUniform2fEXT(arg_5894: GLuint, arg_5895: GLint, arg_5896: GLfloat, arg_5897: GLfloat) void {
    return glad_glProgramUniform2fEXT.?(arg_5894, arg_5895, arg_5896, arg_5897);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform3fEXT.xhtml
pub inline fn glProgramUniform3fEXT(arg_5898: GLuint, arg_5899: GLint, arg_5900: GLfloat, arg_5901: GLfloat, arg_5902: GLfloat) void {
    return glad_glProgramUniform3fEXT.?(arg_5898, arg_5899, arg_5900, arg_5901, arg_5902);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform4fEXT.xhtml
pub inline fn glProgramUniform4fEXT(arg_5903: GLuint, arg_5904: GLint, arg_5905: GLfloat, arg_5906: GLfloat, arg_5907: GLfloat, arg_5908: GLfloat) void {
    return glad_glProgramUniform4fEXT.?(arg_5903, arg_5904, arg_5905, arg_5906, arg_5907, arg_5908);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform1iEXT.xhtml
pub inline fn glProgramUniform1iEXT(arg_5909: GLuint, arg_5910: GLint, arg_5911: GLint) void {
    return glad_glProgramUniform1iEXT.?(arg_5909, arg_5910, arg_5911);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform2iEXT.xhtml
pub inline fn glProgramUniform2iEXT(arg_5912: GLuint, arg_5913: GLint, arg_5914: GLint, arg_5915: GLint) void {
    return glad_glProgramUniform2iEXT.?(arg_5912, arg_5913, arg_5914, arg_5915);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform3iEXT.xhtml
pub inline fn glProgramUniform3iEXT(arg_5916: GLuint, arg_5917: GLint, arg_5918: GLint, arg_5919: GLint, arg_5920: GLint) void {
    return glad_glProgramUniform3iEXT.?(arg_5916, arg_5917, arg_5918, arg_5919, arg_5920);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform4iEXT.xhtml
pub inline fn glProgramUniform4iEXT(arg_5921: GLuint, arg_5922: GLint, arg_5923: GLint, arg_5924: GLint, arg_5925: GLint, arg_5926: GLint) void {
    return glad_glProgramUniform4iEXT.?(arg_5921, arg_5922, arg_5923, arg_5924, arg_5925, arg_5926);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform1fvEXT.xhtml
pub inline fn glProgramUniform1fvEXT(arg_5927: GLuint, arg_5928: GLint, arg_5929: GLsizei, arg_5930: [*c]const GLfloat) void {
    return glad_glProgramUniform1fvEXT.?(arg_5927, arg_5928, arg_5929, arg_5930);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform2fvEXT.xhtml
pub inline fn glProgramUniform2fvEXT(arg_5931: GLuint, arg_5932: GLint, arg_5933: GLsizei, arg_5934: [*c]const GLfloat) void {
    return glad_glProgramUniform2fvEXT.?(arg_5931, arg_5932, arg_5933, arg_5934);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform3fvEXT.xhtml
pub inline fn glProgramUniform3fvEXT(arg_5935: GLuint, arg_5936: GLint, arg_5937: GLsizei, arg_5938: [*c]const GLfloat) void {
    return glad_glProgramUniform3fvEXT.?(arg_5935, arg_5936, arg_5937, arg_5938);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform4fvEXT.xhtml
pub inline fn glProgramUniform4fvEXT(arg_5939: GLuint, arg_5940: GLint, arg_5941: GLsizei, arg_5942: [*c]const GLfloat) void {
    return glad_glProgramUniform4fvEXT.?(arg_5939, arg_5940, arg_5941, arg_5942);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform1ivEXT.xhtml
pub inline fn glProgramUniform1ivEXT(arg_5943: GLuint, arg_5944: GLint, arg_5945: GLsizei, arg_5946: [*c]const GLint) void {
    return glad_glProgramUniform1ivEXT.?(arg_5943, arg_5944, arg_5945, arg_5946);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform2ivEXT.xhtml
pub inline fn glProgramUniform2ivEXT(arg_5947: GLuint, arg_5948: GLint, arg_5949: GLsizei, arg_5950: [*c]const GLint) void {
    return glad_glProgramUniform2ivEXT.?(arg_5947, arg_5948, arg_5949, arg_5950);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform3ivEXT.xhtml
pub inline fn glProgramUniform3ivEXT(arg_5951: GLuint, arg_5952: GLint, arg_5953: GLsizei, arg_5954: [*c]const GLint) void {
    return glad_glProgramUniform3ivEXT.?(arg_5951, arg_5952, arg_5953, arg_5954);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform4ivEXT.xhtml
pub inline fn glProgramUniform4ivEXT(arg_5955: GLuint, arg_5956: GLint, arg_5957: GLsizei, arg_5958: [*c]const GLint) void {
    return glad_glProgramUniform4ivEXT.?(arg_5955, arg_5956, arg_5957, arg_5958);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix2fvEXT.xhtml
pub inline fn glProgramUniformMatrix2fvEXT(arg_5959: GLuint, arg_5960: GLint, arg_5961: GLsizei, arg_5962: GLboolean, arg_5963: [*c]const GLfloat) void {
    return glad_glProgramUniformMatrix2fvEXT.?(arg_5959, arg_5960, arg_5961, arg_5962, arg_5963);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix3fvEXT.xhtml
pub inline fn glProgramUniformMatrix3fvEXT(arg_5964: GLuint, arg_5965: GLint, arg_5966: GLsizei, arg_5967: GLboolean, arg_5968: [*c]const GLfloat) void {
    return glad_glProgramUniformMatrix3fvEXT.?(arg_5964, arg_5965, arg_5966, arg_5967, arg_5968);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix4fvEXT.xhtml
pub inline fn glProgramUniformMatrix4fvEXT(arg_5969: GLuint, arg_5970: GLint, arg_5971: GLsizei, arg_5972: GLboolean, arg_5973: [*c]const GLfloat) void {
    return glad_glProgramUniformMatrix4fvEXT.?(arg_5969, arg_5970, arg_5971, arg_5972, arg_5973);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix2x3fvEXT.xhtml
pub inline fn glProgramUniformMatrix2x3fvEXT(arg_5974: GLuint, arg_5975: GLint, arg_5976: GLsizei, arg_5977: GLboolean, arg_5978: [*c]const GLfloat) void {
    return glad_glProgramUniformMatrix2x3fvEXT.?(arg_5974, arg_5975, arg_5976, arg_5977, arg_5978);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix3x2fvEXT.xhtml
pub inline fn glProgramUniformMatrix3x2fvEXT(arg_5979: GLuint, arg_5980: GLint, arg_5981: GLsizei, arg_5982: GLboolean, arg_5983: [*c]const GLfloat) void {
    return glad_glProgramUniformMatrix3x2fvEXT.?(arg_5979, arg_5980, arg_5981, arg_5982, arg_5983);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix2x4fvEXT.xhtml
pub inline fn glProgramUniformMatrix2x4fvEXT(arg_5984: GLuint, arg_5985: GLint, arg_5986: GLsizei, arg_5987: GLboolean, arg_5988: [*c]const GLfloat) void {
    return glad_glProgramUniformMatrix2x4fvEXT.?(arg_5984, arg_5985, arg_5986, arg_5987, arg_5988);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix4x2fvEXT.xhtml
pub inline fn glProgramUniformMatrix4x2fvEXT(arg_5989: GLuint, arg_5990: GLint, arg_5991: GLsizei, arg_5992: GLboolean, arg_5993: [*c]const GLfloat) void {
    return glad_glProgramUniformMatrix4x2fvEXT.?(arg_5989, arg_5990, arg_5991, arg_5992, arg_5993);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix3x4fvEXT.xhtml
pub inline fn glProgramUniformMatrix3x4fvEXT(arg_5994: GLuint, arg_5995: GLint, arg_5996: GLsizei, arg_5997: GLboolean, arg_5998: [*c]const GLfloat) void {
    return glad_glProgramUniformMatrix3x4fvEXT.?(arg_5994, arg_5995, arg_5996, arg_5997, arg_5998);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix4x3fvEXT.xhtml
pub inline fn glProgramUniformMatrix4x3fvEXT(arg_5999: GLuint, arg_6000: GLint, arg_6001: GLsizei, arg_6002: GLboolean, arg_6003: [*c]const GLfloat) void {
    return glad_glProgramUniformMatrix4x3fvEXT.?(arg_5999, arg_6000, arg_6001, arg_6002, arg_6003);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureBufferEXT.xhtml
pub inline fn glTextureBufferEXT(arg_6004: GLuint, arg_6005: GLenum, arg_6006: GLenum, arg_6007: GLuint) void {
    return glad_glTextureBufferEXT.?(arg_6004, arg_6005, arg_6006, arg_6007);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexBufferEXT.xhtml
pub inline fn glMultiTexBufferEXT(arg_6008: GLenum, arg_6009: GLenum, arg_6010: GLenum, arg_6011: GLuint) void {
    return glad_glMultiTexBufferEXT.?(arg_6008, arg_6009, arg_6010, arg_6011);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureParameterIivEXT.xhtml
pub inline fn glTextureParameterIivEXT(arg_6012: GLuint, arg_6013: GLenum, arg_6014: GLenum, arg_6015: [*c]const GLint) void {
    return glad_glTextureParameterIivEXT.?(arg_6012, arg_6013, arg_6014, arg_6015);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureParameterIuivEXT.xhtml
pub inline fn glTextureParameterIuivEXT(arg_6016: GLuint, arg_6017: GLenum, arg_6018: GLenum, arg_6019: [*c]const GLuint) void {
    return glad_glTextureParameterIuivEXT.?(arg_6016, arg_6017, arg_6018, arg_6019);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTextureParameterIivEXT.xhtml
pub inline fn glGetTextureParameterIivEXT(arg_6020: GLuint, arg_6021: GLenum, arg_6022: GLenum, arg_6023: [*c]GLint) void {
    return glad_glGetTextureParameterIivEXT.?(arg_6020, arg_6021, arg_6022, arg_6023);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTextureParameterIuivEXT.xhtml
pub inline fn glGetTextureParameterIuivEXT(arg_6024: GLuint, arg_6025: GLenum, arg_6026: GLenum, arg_6027: [*c]GLuint) void {
    return glad_glGetTextureParameterIuivEXT.?(arg_6024, arg_6025, arg_6026, arg_6027);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexParameterIivEXT.xhtml
pub inline fn glMultiTexParameterIivEXT(arg_6028: GLenum, arg_6029: GLenum, arg_6030: GLenum, arg_6031: [*c]const GLint) void {
    return glad_glMultiTexParameterIivEXT.?(arg_6028, arg_6029, arg_6030, arg_6031);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexParameterIuivEXT.xhtml
pub inline fn glMultiTexParameterIuivEXT(arg_6032: GLenum, arg_6033: GLenum, arg_6034: GLenum, arg_6035: [*c]const GLuint) void {
    return glad_glMultiTexParameterIuivEXT.?(arg_6032, arg_6033, arg_6034, arg_6035);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMultiTexParameterIivEXT.xhtml
pub inline fn glGetMultiTexParameterIivEXT(arg_6036: GLenum, arg_6037: GLenum, arg_6038: GLenum, arg_6039: [*c]GLint) void {
    return glad_glGetMultiTexParameterIivEXT.?(arg_6036, arg_6037, arg_6038, arg_6039);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMultiTexParameterIuivEXT.xhtml
pub inline fn glGetMultiTexParameterIuivEXT(arg_6040: GLenum, arg_6041: GLenum, arg_6042: GLenum, arg_6043: [*c]GLuint) void {
    return glad_glGetMultiTexParameterIuivEXT.?(arg_6040, arg_6041, arg_6042, arg_6043);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform1uiEXT.xhtml
pub inline fn glProgramUniform1uiEXT(arg_6044: GLuint, arg_6045: GLint, arg_6046: GLuint) void {
    return glad_glProgramUniform1uiEXT.?(arg_6044, arg_6045, arg_6046);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform2uiEXT.xhtml
pub inline fn glProgramUniform2uiEXT(arg_6047: GLuint, arg_6048: GLint, arg_6049: GLuint, arg_6050: GLuint) void {
    return glad_glProgramUniform2uiEXT.?(arg_6047, arg_6048, arg_6049, arg_6050);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform3uiEXT.xhtml
pub inline fn glProgramUniform3uiEXT(arg_6051: GLuint, arg_6052: GLint, arg_6053: GLuint, arg_6054: GLuint, arg_6055: GLuint) void {
    return glad_glProgramUniform3uiEXT.?(arg_6051, arg_6052, arg_6053, arg_6054, arg_6055);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform4uiEXT.xhtml
pub inline fn glProgramUniform4uiEXT(arg_6056: GLuint, arg_6057: GLint, arg_6058: GLuint, arg_6059: GLuint, arg_6060: GLuint, arg_6061: GLuint) void {
    return glad_glProgramUniform4uiEXT.?(arg_6056, arg_6057, arg_6058, arg_6059, arg_6060, arg_6061);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform1uivEXT.xhtml
pub inline fn glProgramUniform1uivEXT(arg_6062: GLuint, arg_6063: GLint, arg_6064: GLsizei, arg_6065: [*c]const GLuint) void {
    return glad_glProgramUniform1uivEXT.?(arg_6062, arg_6063, arg_6064, arg_6065);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform2uivEXT.xhtml
pub inline fn glProgramUniform2uivEXT(arg_6066: GLuint, arg_6067: GLint, arg_6068: GLsizei, arg_6069: [*c]const GLuint) void {
    return glad_glProgramUniform2uivEXT.?(arg_6066, arg_6067, arg_6068, arg_6069);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform3uivEXT.xhtml
pub inline fn glProgramUniform3uivEXT(arg_6070: GLuint, arg_6071: GLint, arg_6072: GLsizei, arg_6073: [*c]const GLuint) void {
    return glad_glProgramUniform3uivEXT.?(arg_6070, arg_6071, arg_6072, arg_6073);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform4uivEXT.xhtml
pub inline fn glProgramUniform4uivEXT(arg_6074: GLuint, arg_6075: GLint, arg_6076: GLsizei, arg_6077: [*c]const GLuint) void {
    return glad_glProgramUniform4uivEXT.?(arg_6074, arg_6075, arg_6076, arg_6077);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedProgramLocalParameters4fvEXT.xhtml
pub inline fn glNamedProgramLocalParameters4fvEXT(arg_6078: GLuint, arg_6079: GLenum, arg_6080: GLuint, arg_6081: GLsizei, arg_6082: [*c]const GLfloat) void {
    return glad_glNamedProgramLocalParameters4fvEXT.?(arg_6078, arg_6079, arg_6080, arg_6081, arg_6082);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedProgramLocalParameterI4iEXT.xhtml
pub inline fn glNamedProgramLocalParameterI4iEXT(arg_6083: GLuint, arg_6084: GLenum, arg_6085: GLuint, arg_6086: GLint, arg_6087: GLint, arg_6088: GLint, arg_6089: GLint) void {
    return glad_glNamedProgramLocalParameterI4iEXT.?(arg_6083, arg_6084, arg_6085, arg_6086, arg_6087, arg_6088, arg_6089);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedProgramLocalParameterI4ivEXT.xhtml
pub inline fn glNamedProgramLocalParameterI4ivEXT(arg_6090: GLuint, arg_6091: GLenum, arg_6092: GLuint, arg_6093: [*c]const GLint) void {
    return glad_glNamedProgramLocalParameterI4ivEXT.?(arg_6090, arg_6091, arg_6092, arg_6093);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedProgramLocalParametersI4ivEXT.xhtml
pub inline fn glNamedProgramLocalParametersI4ivEXT(arg_6094: GLuint, arg_6095: GLenum, arg_6096: GLuint, arg_6097: GLsizei, arg_6098: [*c]const GLint) void {
    return glad_glNamedProgramLocalParametersI4ivEXT.?(arg_6094, arg_6095, arg_6096, arg_6097, arg_6098);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedProgramLocalParameterI4uiEXT.xhtml
pub inline fn glNamedProgramLocalParameterI4uiEXT(arg_6099: GLuint, arg_6100: GLenum, arg_6101: GLuint, arg_6102: GLuint, arg_6103: GLuint, arg_6104: GLuint, arg_6105: GLuint) void {
    return glad_glNamedProgramLocalParameterI4uiEXT.?(arg_6099, arg_6100, arg_6101, arg_6102, arg_6103, arg_6104, arg_6105);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedProgramLocalParameterI4uivEXT.xhtml
pub inline fn glNamedProgramLocalParameterI4uivEXT(arg_6106: GLuint, arg_6107: GLenum, arg_6108: GLuint, arg_6109: [*c]const GLuint) void {
    return glad_glNamedProgramLocalParameterI4uivEXT.?(arg_6106, arg_6107, arg_6108, arg_6109);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedProgramLocalParametersI4uivEXT.xhtml
pub inline fn glNamedProgramLocalParametersI4uivEXT(arg_6110: GLuint, arg_6111: GLenum, arg_6112: GLuint, arg_6113: GLsizei, arg_6114: [*c]const GLuint) void {
    return glad_glNamedProgramLocalParametersI4uivEXT.?(arg_6110, arg_6111, arg_6112, arg_6113, arg_6114);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetNamedProgramLocalParameterIivEXT.xhtml
pub inline fn glGetNamedProgramLocalParameterIivEXT(arg_6115: GLuint, arg_6116: GLenum, arg_6117: GLuint, arg_6118: [*c]GLint) void {
    return glad_glGetNamedProgramLocalParameterIivEXT.?(arg_6115, arg_6116, arg_6117, arg_6118);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetNamedProgramLocalParameterIuivEXT.xhtml
pub inline fn glGetNamedProgramLocalParameterIuivEXT(arg_6119: GLuint, arg_6120: GLenum, arg_6121: GLuint, arg_6122: [*c]GLuint) void {
    return glad_glGetNamedProgramLocalParameterIuivEXT.?(arg_6119, arg_6120, arg_6121, arg_6122);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEnableClientStateiEXT.xhtml
pub inline fn glEnableClientStateiEXT(arg_6123: GLenum, arg_6124: GLuint) void {
    return glad_glEnableClientStateiEXT.?(arg_6123, arg_6124);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDisableClientStateiEXT.xhtml
pub inline fn glDisableClientStateiEXT(arg_6125: GLenum, arg_6126: GLuint) void {
    return glad_glDisableClientStateiEXT.?(arg_6125, arg_6126);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFloati_vEXT.xhtml
pub inline fn glGetFloati_vEXT(arg_6127: GLenum, arg_6128: GLuint, arg_6129: [*c]GLfloat) void {
    return glad_glGetFloati_vEXT.?(arg_6127, arg_6128, arg_6129);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetDoublei_vEXT.xhtml
pub inline fn glGetDoublei_vEXT(arg_6130: GLenum, arg_6131: GLuint, arg_6132: [*c]GLdouble) void {
    return glad_glGetDoublei_vEXT.?(arg_6130, arg_6131, arg_6132);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPointeri_vEXT.xhtml
pub inline fn glGetPointeri_vEXT(arg_6133: GLenum, arg_6134: GLuint, arg_6135: [*c]?*anyopaque) void {
    return glad_glGetPointeri_vEXT.?(arg_6133, arg_6134, arg_6135);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedProgramStringEXT.xhtml
pub inline fn glNamedProgramStringEXT(arg_6136: GLuint, arg_6137: GLenum, arg_6138: GLenum, arg_6139: GLsizei, arg_6140: ?*const anyopaque) void {
    return glad_glNamedProgramStringEXT.?(arg_6136, arg_6137, arg_6138, arg_6139, arg_6140);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedProgramLocalParameter4dEXT.xhtml
pub inline fn glNamedProgramLocalParameter4dEXT(arg_6141: GLuint, arg_6142: GLenum, arg_6143: GLuint, arg_6144: GLdouble, arg_6145: GLdouble, arg_6146: GLdouble, arg_6147: GLdouble) void {
    return glad_glNamedProgramLocalParameter4dEXT.?(arg_6141, arg_6142, arg_6143, arg_6144, arg_6145, arg_6146, arg_6147);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedProgramLocalParameter4dvEXT.xhtml
pub inline fn glNamedProgramLocalParameter4dvEXT(arg_6148: GLuint, arg_6149: GLenum, arg_6150: GLuint, arg_6151: [*c]const GLdouble) void {
    return glad_glNamedProgramLocalParameter4dvEXT.?(arg_6148, arg_6149, arg_6150, arg_6151);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedProgramLocalParameter4fEXT.xhtml
pub inline fn glNamedProgramLocalParameter4fEXT(arg_6152: GLuint, arg_6153: GLenum, arg_6154: GLuint, arg_6155: GLfloat, arg_6156: GLfloat, arg_6157: GLfloat, arg_6158: GLfloat) void {
    return glad_glNamedProgramLocalParameter4fEXT.?(arg_6152, arg_6153, arg_6154, arg_6155, arg_6156, arg_6157, arg_6158);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedProgramLocalParameter4fvEXT.xhtml
pub inline fn glNamedProgramLocalParameter4fvEXT(arg_6159: GLuint, arg_6160: GLenum, arg_6161: GLuint, arg_6162: [*c]const GLfloat) void {
    return glad_glNamedProgramLocalParameter4fvEXT.?(arg_6159, arg_6160, arg_6161, arg_6162);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetNamedProgramLocalParameterdvEXT.xhtml
pub inline fn glGetNamedProgramLocalParameterdvEXT(arg_6163: GLuint, arg_6164: GLenum, arg_6165: GLuint, arg_6166: [*c]GLdouble) void {
    return glad_glGetNamedProgramLocalParameterdvEXT.?(arg_6163, arg_6164, arg_6165, arg_6166);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetNamedProgramLocalParameterfvEXT.xhtml
pub inline fn glGetNamedProgramLocalParameterfvEXT(arg_6167: GLuint, arg_6168: GLenum, arg_6169: GLuint, arg_6170: [*c]GLfloat) void {
    return glad_glGetNamedProgramLocalParameterfvEXT.?(arg_6167, arg_6168, arg_6169, arg_6170);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetNamedProgramivEXT.xhtml
pub inline fn glGetNamedProgramivEXT(arg_6171: GLuint, arg_6172: GLenum, arg_6173: GLenum, arg_6174: [*c]GLint) void {
    return glad_glGetNamedProgramivEXT.?(arg_6171, arg_6172, arg_6173, arg_6174);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetNamedProgramStringEXT.xhtml
pub inline fn glGetNamedProgramStringEXT(arg_6175: GLuint, arg_6176: GLenum, arg_6177: GLenum, arg_6178: ?*anyopaque) void {
    return glad_glGetNamedProgramStringEXT.?(arg_6175, arg_6176, arg_6177, arg_6178);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedRenderbufferStorageEXT.xhtml
pub inline fn glNamedRenderbufferStorageEXT(arg_6179: GLuint, arg_6180: GLenum, arg_6181: GLsizei, arg_6182: GLsizei) void {
    return glad_glNamedRenderbufferStorageEXT.?(arg_6179, arg_6180, arg_6181, arg_6182);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetNamedRenderbufferParameterivEXT.xhtml
pub inline fn glGetNamedRenderbufferParameterivEXT(arg_6183: GLuint, arg_6184: GLenum, arg_6185: [*c]GLint) void {
    return glad_glGetNamedRenderbufferParameterivEXT.?(arg_6183, arg_6184, arg_6185);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedRenderbufferStorageMultisampleEXT.xhtml
pub inline fn glNamedRenderbufferStorageMultisampleEXT(arg_6186: GLuint, arg_6187: GLsizei, arg_6188: GLenum, arg_6189: GLsizei, arg_6190: GLsizei) void {
    return glad_glNamedRenderbufferStorageMultisampleEXT.?(arg_6186, arg_6187, arg_6188, arg_6189, arg_6190);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedRenderbufferStorageMultisampleCoverageEXT.xhtml
pub inline fn glNamedRenderbufferStorageMultisampleCoverageEXT(arg_6191: GLuint, arg_6192: GLsizei, arg_6193: GLsizei, arg_6194: GLenum, arg_6195: GLsizei, arg_6196: GLsizei) void {
    return glad_glNamedRenderbufferStorageMultisampleCoverageEXT.?(arg_6191, arg_6192, arg_6193, arg_6194, arg_6195, arg_6196);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCheckNamedFramebufferStatusEXT.xhtml
pub inline fn glCheckNamedFramebufferStatusEXT(arg_6197: GLuint, arg_6198: GLenum) GLenum {
    return glad_glCheckNamedFramebufferStatusEXT.?(arg_6197, arg_6198);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedFramebufferTexture1DEXT.xhtml
pub inline fn glNamedFramebufferTexture1DEXT(arg_6199: GLuint, arg_6200: GLenum, arg_6201: GLenum, arg_6202: GLuint, arg_6203: GLint) void {
    return glad_glNamedFramebufferTexture1DEXT.?(arg_6199, arg_6200, arg_6201, arg_6202, arg_6203);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedFramebufferTexture2DEXT.xhtml
pub inline fn glNamedFramebufferTexture2DEXT(arg_6204: GLuint, arg_6205: GLenum, arg_6206: GLenum, arg_6207: GLuint, arg_6208: GLint) void {
    return glad_glNamedFramebufferTexture2DEXT.?(arg_6204, arg_6205, arg_6206, arg_6207, arg_6208);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedFramebufferTexture3DEXT.xhtml
pub inline fn glNamedFramebufferTexture3DEXT(arg_6209: GLuint, arg_6210: GLenum, arg_6211: GLenum, arg_6212: GLuint, arg_6213: GLint, arg_6214: GLint) void {
    return glad_glNamedFramebufferTexture3DEXT.?(arg_6209, arg_6210, arg_6211, arg_6212, arg_6213, arg_6214);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedFramebufferRenderbufferEXT.xhtml
pub inline fn glNamedFramebufferRenderbufferEXT(arg_6215: GLuint, arg_6216: GLenum, arg_6217: GLenum, arg_6218: GLuint) void {
    return glad_glNamedFramebufferRenderbufferEXT.?(arg_6215, arg_6216, arg_6217, arg_6218);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetNamedFramebufferAttachmentParameterivEXT.xhtml
pub inline fn glGetNamedFramebufferAttachmentParameterivEXT(arg_6219: GLuint, arg_6220: GLenum, arg_6221: GLenum, arg_6222: [*c]GLint) void {
    return glad_glGetNamedFramebufferAttachmentParameterivEXT.?(arg_6219, arg_6220, arg_6221, arg_6222);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenerateTextureMipmapEXT.xhtml
pub inline fn glGenerateTextureMipmapEXT(arg_6223: GLuint, arg_6224: GLenum) void {
    return glad_glGenerateTextureMipmapEXT.?(arg_6223, arg_6224);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenerateMultiTexMipmapEXT.xhtml
pub inline fn glGenerateMultiTexMipmapEXT(arg_6225: GLenum, arg_6226: GLenum) void {
    return glad_glGenerateMultiTexMipmapEXT.?(arg_6225, arg_6226);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferDrawBufferEXT.xhtml
pub inline fn glFramebufferDrawBufferEXT(arg_6227: GLuint, arg_6228: GLenum) void {
    return glad_glFramebufferDrawBufferEXT.?(arg_6227, arg_6228);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferDrawBuffersEXT.xhtml
pub inline fn glFramebufferDrawBuffersEXT(arg_6229: GLuint, arg_6230: GLsizei, arg_6231: [*c]const GLenum) void {
    return glad_glFramebufferDrawBuffersEXT.?(arg_6229, arg_6230, arg_6231);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferReadBufferEXT.xhtml
pub inline fn glFramebufferReadBufferEXT(arg_6232: GLuint, arg_6233: GLenum) void {
    return glad_glFramebufferReadBufferEXT.?(arg_6232, arg_6233);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFramebufferParameterivEXT.xhtml
pub inline fn glGetFramebufferParameterivEXT(arg_6234: GLuint, arg_6235: GLenum, arg_6236: [*c]GLint) void {
    return glad_glGetFramebufferParameterivEXT.?(arg_6234, arg_6235, arg_6236);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedCopyBufferSubDataEXT.xhtml
pub inline fn glNamedCopyBufferSubDataEXT(arg_6237: GLuint, arg_6238: GLuint, arg_6239: GLintptr, arg_6240: GLintptr, arg_6241: GLsizeiptr) void {
    return glad_glNamedCopyBufferSubDataEXT.?(arg_6237, arg_6238, arg_6239, arg_6240, arg_6241);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedFramebufferTextureEXT.xhtml
pub inline fn glNamedFramebufferTextureEXT(arg_6242: GLuint, arg_6243: GLenum, arg_6244: GLuint, arg_6245: GLint) void {
    return glad_glNamedFramebufferTextureEXT.?(arg_6242, arg_6243, arg_6244, arg_6245);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedFramebufferTextureLayerEXT.xhtml
pub inline fn glNamedFramebufferTextureLayerEXT(arg_6246: GLuint, arg_6247: GLenum, arg_6248: GLuint, arg_6249: GLint, arg_6250: GLint) void {
    return glad_glNamedFramebufferTextureLayerEXT.?(arg_6246, arg_6247, arg_6248, arg_6249, arg_6250);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedFramebufferTextureFaceEXT.xhtml
pub inline fn glNamedFramebufferTextureFaceEXT(arg_6251: GLuint, arg_6252: GLenum, arg_6253: GLuint, arg_6254: GLint, arg_6255: GLenum) void {
    return glad_glNamedFramebufferTextureFaceEXT.?(arg_6251, arg_6252, arg_6253, arg_6254, arg_6255);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureRenderbufferEXT.xhtml
pub inline fn glTextureRenderbufferEXT(arg_6256: GLuint, arg_6257: GLenum, arg_6258: GLuint) void {
    return glad_glTextureRenderbufferEXT.?(arg_6256, arg_6257, arg_6258);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexRenderbufferEXT.xhtml
pub inline fn glMultiTexRenderbufferEXT(arg_6259: GLenum, arg_6260: GLenum, arg_6261: GLuint) void {
    return glad_glMultiTexRenderbufferEXT.?(arg_6259, arg_6260, arg_6261);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayVertexOffsetEXT.xhtml
pub inline fn glVertexArrayVertexOffsetEXT(arg_6262: GLuint, arg_6263: GLuint, arg_6264: GLint, arg_6265: GLenum, arg_6266: GLsizei, arg_6267: GLintptr) void {
    return glad_glVertexArrayVertexOffsetEXT.?(arg_6262, arg_6263, arg_6264, arg_6265, arg_6266, arg_6267);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayColorOffsetEXT.xhtml
pub inline fn glVertexArrayColorOffsetEXT(arg_6268: GLuint, arg_6269: GLuint, arg_6270: GLint, arg_6271: GLenum, arg_6272: GLsizei, arg_6273: GLintptr) void {
    return glad_glVertexArrayColorOffsetEXT.?(arg_6268, arg_6269, arg_6270, arg_6271, arg_6272, arg_6273);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayEdgeFlagOffsetEXT.xhtml
pub inline fn glVertexArrayEdgeFlagOffsetEXT(arg_6274: GLuint, arg_6275: GLuint, arg_6276: GLsizei, arg_6277: GLintptr) void {
    return glad_glVertexArrayEdgeFlagOffsetEXT.?(arg_6274, arg_6275, arg_6276, arg_6277);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayIndexOffsetEXT.xhtml
pub inline fn glVertexArrayIndexOffsetEXT(arg_6278: GLuint, arg_6279: GLuint, arg_6280: GLenum, arg_6281: GLsizei, arg_6282: GLintptr) void {
    return glad_glVertexArrayIndexOffsetEXT.?(arg_6278, arg_6279, arg_6280, arg_6281, arg_6282);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayNormalOffsetEXT.xhtml
pub inline fn glVertexArrayNormalOffsetEXT(arg_6283: GLuint, arg_6284: GLuint, arg_6285: GLenum, arg_6286: GLsizei, arg_6287: GLintptr) void {
    return glad_glVertexArrayNormalOffsetEXT.?(arg_6283, arg_6284, arg_6285, arg_6286, arg_6287);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayTexCoordOffsetEXT.xhtml
pub inline fn glVertexArrayTexCoordOffsetEXT(arg_6288: GLuint, arg_6289: GLuint, arg_6290: GLint, arg_6291: GLenum, arg_6292: GLsizei, arg_6293: GLintptr) void {
    return glad_glVertexArrayTexCoordOffsetEXT.?(arg_6288, arg_6289, arg_6290, arg_6291, arg_6292, arg_6293);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayMultiTexCoordOffsetEXT.xhtml
pub inline fn glVertexArrayMultiTexCoordOffsetEXT(arg_6294: GLuint, arg_6295: GLuint, arg_6296: GLenum, arg_6297: GLint, arg_6298: GLenum, arg_6299: GLsizei, arg_6300: GLintptr) void {
    return glad_glVertexArrayMultiTexCoordOffsetEXT.?(arg_6294, arg_6295, arg_6296, arg_6297, arg_6298, arg_6299, arg_6300);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayFogCoordOffsetEXT.xhtml
pub inline fn glVertexArrayFogCoordOffsetEXT(arg_6301: GLuint, arg_6302: GLuint, arg_6303: GLenum, arg_6304: GLsizei, arg_6305: GLintptr) void {
    return glad_glVertexArrayFogCoordOffsetEXT.?(arg_6301, arg_6302, arg_6303, arg_6304, arg_6305);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArraySecondaryColorOffsetEXT.xhtml
pub inline fn glVertexArraySecondaryColorOffsetEXT(arg_6306: GLuint, arg_6307: GLuint, arg_6308: GLint, arg_6309: GLenum, arg_6310: GLsizei, arg_6311: GLintptr) void {
    return glad_glVertexArraySecondaryColorOffsetEXT.?(arg_6306, arg_6307, arg_6308, arg_6309, arg_6310, arg_6311);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayVertexAttribOffsetEXT.xhtml
pub inline fn glVertexArrayVertexAttribOffsetEXT(arg_6312: GLuint, arg_6313: GLuint, arg_6314: GLuint, arg_6315: GLint, arg_6316: GLenum, arg_6317: GLboolean, arg_6318: GLsizei, arg_6319: GLintptr) void {
    return glad_glVertexArrayVertexAttribOffsetEXT.?(arg_6312, arg_6313, arg_6314, arg_6315, arg_6316, arg_6317, arg_6318, arg_6319);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayVertexAttribIOffsetEXT.xhtml
pub inline fn glVertexArrayVertexAttribIOffsetEXT(arg_6320: GLuint, arg_6321: GLuint, arg_6322: GLuint, arg_6323: GLint, arg_6324: GLenum, arg_6325: GLsizei, arg_6326: GLintptr) void {
    return glad_glVertexArrayVertexAttribIOffsetEXT.?(arg_6320, arg_6321, arg_6322, arg_6323, arg_6324, arg_6325, arg_6326);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEnableVertexArrayEXT.xhtml
pub inline fn glEnableVertexArrayEXT(arg_6327: GLuint, arg_6328: GLenum) void {
    return glad_glEnableVertexArrayEXT.?(arg_6327, arg_6328);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDisableVertexArrayEXT.xhtml
pub inline fn glDisableVertexArrayEXT(arg_6329: GLuint, arg_6330: GLenum) void {
    return glad_glDisableVertexArrayEXT.?(arg_6329, arg_6330);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEnableVertexArrayAttribEXT.xhtml
pub inline fn glEnableVertexArrayAttribEXT(arg_6331: GLuint, arg_6332: GLuint) void {
    return glad_glEnableVertexArrayAttribEXT.?(arg_6331, arg_6332);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDisableVertexArrayAttribEXT.xhtml
pub inline fn glDisableVertexArrayAttribEXT(arg_6333: GLuint, arg_6334: GLuint) void {
    return glad_glDisableVertexArrayAttribEXT.?(arg_6333, arg_6334);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexArrayIntegervEXT.xhtml
pub inline fn glGetVertexArrayIntegervEXT(arg_6335: GLuint, arg_6336: GLenum, arg_6337: [*c]GLint) void {
    return glad_glGetVertexArrayIntegervEXT.?(arg_6335, arg_6336, arg_6337);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexArrayPointervEXT.xhtml
pub inline fn glGetVertexArrayPointervEXT(arg_6338: GLuint, arg_6339: GLenum, arg_6340: [*c]?*anyopaque) void {
    return glad_glGetVertexArrayPointervEXT.?(arg_6338, arg_6339, arg_6340);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexArrayIntegeri_vEXT.xhtml
pub inline fn glGetVertexArrayIntegeri_vEXT(arg_6341: GLuint, arg_6342: GLuint, arg_6343: GLenum, arg_6344: [*c]GLint) void {
    return glad_glGetVertexArrayIntegeri_vEXT.?(arg_6341, arg_6342, arg_6343, arg_6344);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexArrayPointeri_vEXT.xhtml
pub inline fn glGetVertexArrayPointeri_vEXT(arg_6345: GLuint, arg_6346: GLuint, arg_6347: GLenum, arg_6348: [*c]?*anyopaque) void {
    return glad_glGetVertexArrayPointeri_vEXT.?(arg_6345, arg_6346, arg_6347, arg_6348);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMapNamedBufferRangeEXT.xhtml
pub inline fn glMapNamedBufferRangeEXT(arg_6349: GLuint, arg_6350: GLintptr, arg_6351: GLsizeiptr, arg_6352: GLbitfield) ?*anyopaque {
    return glad_glMapNamedBufferRangeEXT.?(arg_6349, arg_6350, arg_6351, arg_6352);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFlushMappedNamedBufferRangeEXT.xhtml
pub inline fn glFlushMappedNamedBufferRangeEXT(arg_6353: GLuint, arg_6354: GLintptr, arg_6355: GLsizeiptr) void {
    return glad_glFlushMappedNamedBufferRangeEXT.?(arg_6353, arg_6354, arg_6355);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedBufferStorageEXT.xhtml
pub inline fn glNamedBufferStorageEXT(arg_6356: GLuint, arg_6357: GLsizeiptr, arg_6358: ?*const anyopaque, arg_6359: GLbitfield) void {
    return glad_glNamedBufferStorageEXT.?(arg_6356, arg_6357, arg_6358, arg_6359);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearNamedBufferDataEXT.xhtml
pub inline fn glClearNamedBufferDataEXT(arg_6360: GLuint, arg_6361: GLenum, arg_6362: GLenum, arg_6363: GLenum, arg_6364: ?*const anyopaque) void {
    return glad_glClearNamedBufferDataEXT.?(arg_6360, arg_6361, arg_6362, arg_6363, arg_6364);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearNamedBufferSubDataEXT.xhtml
pub inline fn glClearNamedBufferSubDataEXT(arg_6365: GLuint, arg_6366: GLenum, arg_6367: GLsizeiptr, arg_6368: GLsizeiptr, arg_6369: GLenum, arg_6370: GLenum, arg_6371: ?*const anyopaque) void {
    return glad_glClearNamedBufferSubDataEXT.?(arg_6365, arg_6366, arg_6367, arg_6368, arg_6369, arg_6370, arg_6371);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedFramebufferParameteriEXT.xhtml
pub inline fn glNamedFramebufferParameteriEXT(arg_6372: GLuint, arg_6373: GLenum, arg_6374: GLint) void {
    return glad_glNamedFramebufferParameteriEXT.?(arg_6372, arg_6373, arg_6374);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetNamedFramebufferParameterivEXT.xhtml
pub inline fn glGetNamedFramebufferParameterivEXT(arg_6375: GLuint, arg_6376: GLenum, arg_6377: [*c]GLint) void {
    return glad_glGetNamedFramebufferParameterivEXT.?(arg_6375, arg_6376, arg_6377);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform1dEXT.xhtml
pub inline fn glProgramUniform1dEXT(arg_6378: GLuint, arg_6379: GLint, arg_6380: GLdouble) void {
    return glad_glProgramUniform1dEXT.?(arg_6378, arg_6379, arg_6380);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform2dEXT.xhtml
pub inline fn glProgramUniform2dEXT(arg_6381: GLuint, arg_6382: GLint, arg_6383: GLdouble, arg_6384: GLdouble) void {
    return glad_glProgramUniform2dEXT.?(arg_6381, arg_6382, arg_6383, arg_6384);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform3dEXT.xhtml
pub inline fn glProgramUniform3dEXT(arg_6385: GLuint, arg_6386: GLint, arg_6387: GLdouble, arg_6388: GLdouble, arg_6389: GLdouble) void {
    return glad_glProgramUniform3dEXT.?(arg_6385, arg_6386, arg_6387, arg_6388, arg_6389);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform4dEXT.xhtml
pub inline fn glProgramUniform4dEXT(arg_6390: GLuint, arg_6391: GLint, arg_6392: GLdouble, arg_6393: GLdouble, arg_6394: GLdouble, arg_6395: GLdouble) void {
    return glad_glProgramUniform4dEXT.?(arg_6390, arg_6391, arg_6392, arg_6393, arg_6394, arg_6395);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform1dvEXT.xhtml
pub inline fn glProgramUniform1dvEXT(arg_6396: GLuint, arg_6397: GLint, arg_6398: GLsizei, arg_6399: [*c]const GLdouble) void {
    return glad_glProgramUniform1dvEXT.?(arg_6396, arg_6397, arg_6398, arg_6399);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform2dvEXT.xhtml
pub inline fn glProgramUniform2dvEXT(arg_6400: GLuint, arg_6401: GLint, arg_6402: GLsizei, arg_6403: [*c]const GLdouble) void {
    return glad_glProgramUniform2dvEXT.?(arg_6400, arg_6401, arg_6402, arg_6403);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform3dvEXT.xhtml
pub inline fn glProgramUniform3dvEXT(arg_6404: GLuint, arg_6405: GLint, arg_6406: GLsizei, arg_6407: [*c]const GLdouble) void {
    return glad_glProgramUniform3dvEXT.?(arg_6404, arg_6405, arg_6406, arg_6407);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniform4dvEXT.xhtml
pub inline fn glProgramUniform4dvEXT(arg_6408: GLuint, arg_6409: GLint, arg_6410: GLsizei, arg_6411: [*c]const GLdouble) void {
    return glad_glProgramUniform4dvEXT.?(arg_6408, arg_6409, arg_6410, arg_6411);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix2dvEXT.xhtml
pub inline fn glProgramUniformMatrix2dvEXT(arg_6412: GLuint, arg_6413: GLint, arg_6414: GLsizei, arg_6415: GLboolean, arg_6416: [*c]const GLdouble) void {
    return glad_glProgramUniformMatrix2dvEXT.?(arg_6412, arg_6413, arg_6414, arg_6415, arg_6416);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix3dvEXT.xhtml
pub inline fn glProgramUniformMatrix3dvEXT(arg_6417: GLuint, arg_6418: GLint, arg_6419: GLsizei, arg_6420: GLboolean, arg_6421: [*c]const GLdouble) void {
    return glad_glProgramUniformMatrix3dvEXT.?(arg_6417, arg_6418, arg_6419, arg_6420, arg_6421);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix4dvEXT.xhtml
pub inline fn glProgramUniformMatrix4dvEXT(arg_6422: GLuint, arg_6423: GLint, arg_6424: GLsizei, arg_6425: GLboolean, arg_6426: [*c]const GLdouble) void {
    return glad_glProgramUniformMatrix4dvEXT.?(arg_6422, arg_6423, arg_6424, arg_6425, arg_6426);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix2x3dvEXT.xhtml
pub inline fn glProgramUniformMatrix2x3dvEXT(arg_6427: GLuint, arg_6428: GLint, arg_6429: GLsizei, arg_6430: GLboolean, arg_6431: [*c]const GLdouble) void {
    return glad_glProgramUniformMatrix2x3dvEXT.?(arg_6427, arg_6428, arg_6429, arg_6430, arg_6431);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix2x4dvEXT.xhtml
pub inline fn glProgramUniformMatrix2x4dvEXT(arg_6432: GLuint, arg_6433: GLint, arg_6434: GLsizei, arg_6435: GLboolean, arg_6436: [*c]const GLdouble) void {
    return glad_glProgramUniformMatrix2x4dvEXT.?(arg_6432, arg_6433, arg_6434, arg_6435, arg_6436);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix3x2dvEXT.xhtml
pub inline fn glProgramUniformMatrix3x2dvEXT(arg_6437: GLuint, arg_6438: GLint, arg_6439: GLsizei, arg_6440: GLboolean, arg_6441: [*c]const GLdouble) void {
    return glad_glProgramUniformMatrix3x2dvEXT.?(arg_6437, arg_6438, arg_6439, arg_6440, arg_6441);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix3x4dvEXT.xhtml
pub inline fn glProgramUniformMatrix3x4dvEXT(arg_6442: GLuint, arg_6443: GLint, arg_6444: GLsizei, arg_6445: GLboolean, arg_6446: [*c]const GLdouble) void {
    return glad_glProgramUniformMatrix3x4dvEXT.?(arg_6442, arg_6443, arg_6444, arg_6445, arg_6446);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix4x2dvEXT.xhtml
pub inline fn glProgramUniformMatrix4x2dvEXT(arg_6447: GLuint, arg_6448: GLint, arg_6449: GLsizei, arg_6450: GLboolean, arg_6451: [*c]const GLdouble) void {
    return glad_glProgramUniformMatrix4x2dvEXT.?(arg_6447, arg_6448, arg_6449, arg_6450, arg_6451);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformMatrix4x3dvEXT.xhtml
pub inline fn glProgramUniformMatrix4x3dvEXT(arg_6452: GLuint, arg_6453: GLint, arg_6454: GLsizei, arg_6455: GLboolean, arg_6456: [*c]const GLdouble) void {
    return glad_glProgramUniformMatrix4x3dvEXT.?(arg_6452, arg_6453, arg_6454, arg_6455, arg_6456);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureBufferRangeEXT.xhtml
pub inline fn glTextureBufferRangeEXT(arg_6457: GLuint, arg_6458: GLenum, arg_6459: GLenum, arg_6460: GLuint, arg_6461: GLintptr, arg_6462: GLsizeiptr) void {
    return glad_glTextureBufferRangeEXT.?(arg_6457, arg_6458, arg_6459, arg_6460, arg_6461, arg_6462);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureStorage1DEXT.xhtml
pub inline fn glTextureStorage1DEXT(arg_6463: GLuint, arg_6464: GLenum, arg_6465: GLsizei, arg_6466: GLenum, arg_6467: GLsizei) void {
    return glad_glTextureStorage1DEXT.?(arg_6463, arg_6464, arg_6465, arg_6466, arg_6467);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureStorage2DEXT.xhtml
pub inline fn glTextureStorage2DEXT(arg_6468: GLuint, arg_6469: GLenum, arg_6470: GLsizei, arg_6471: GLenum, arg_6472: GLsizei, arg_6473: GLsizei) void {
    return glad_glTextureStorage2DEXT.?(arg_6468, arg_6469, arg_6470, arg_6471, arg_6472, arg_6473);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureStorage3DEXT.xhtml
pub inline fn glTextureStorage3DEXT(arg_6474: GLuint, arg_6475: GLenum, arg_6476: GLsizei, arg_6477: GLenum, arg_6478: GLsizei, arg_6479: GLsizei, arg_6480: GLsizei) void {
    return glad_glTextureStorage3DEXT.?(arg_6474, arg_6475, arg_6476, arg_6477, arg_6478, arg_6479, arg_6480);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureStorage2DMultisampleEXT.xhtml
pub inline fn glTextureStorage2DMultisampleEXT(arg_6481: GLuint, arg_6482: GLenum, arg_6483: GLsizei, arg_6484: GLenum, arg_6485: GLsizei, arg_6486: GLsizei, arg_6487: GLboolean) void {
    return glad_glTextureStorage2DMultisampleEXT.?(arg_6481, arg_6482, arg_6483, arg_6484, arg_6485, arg_6486, arg_6487);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureStorage3DMultisampleEXT.xhtml
pub inline fn glTextureStorage3DMultisampleEXT(arg_6488: GLuint, arg_6489: GLenum, arg_6490: GLsizei, arg_6491: GLenum, arg_6492: GLsizei, arg_6493: GLsizei, arg_6494: GLsizei, arg_6495: GLboolean) void {
    return glad_glTextureStorage3DMultisampleEXT.?(arg_6488, arg_6489, arg_6490, arg_6491, arg_6492, arg_6493, arg_6494, arg_6495);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayBindVertexBufferEXT.xhtml
pub inline fn glVertexArrayBindVertexBufferEXT(arg_6496: GLuint, arg_6497: GLuint, arg_6498: GLuint, arg_6499: GLintptr, arg_6500: GLsizei) void {
    return glad_glVertexArrayBindVertexBufferEXT.?(arg_6496, arg_6497, arg_6498, arg_6499, arg_6500);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayVertexAttribFormatEXT.xhtml
pub inline fn glVertexArrayVertexAttribFormatEXT(arg_6501: GLuint, arg_6502: GLuint, arg_6503: GLint, arg_6504: GLenum, arg_6505: GLboolean, arg_6506: GLuint) void {
    return glad_glVertexArrayVertexAttribFormatEXT.?(arg_6501, arg_6502, arg_6503, arg_6504, arg_6505, arg_6506);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayVertexAttribIFormatEXT.xhtml
pub inline fn glVertexArrayVertexAttribIFormatEXT(arg_6507: GLuint, arg_6508: GLuint, arg_6509: GLint, arg_6510: GLenum, arg_6511: GLuint) void {
    return glad_glVertexArrayVertexAttribIFormatEXT.?(arg_6507, arg_6508, arg_6509, arg_6510, arg_6511);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayVertexAttribLFormatEXT.xhtml
pub inline fn glVertexArrayVertexAttribLFormatEXT(arg_6512: GLuint, arg_6513: GLuint, arg_6514: GLint, arg_6515: GLenum, arg_6516: GLuint) void {
    return glad_glVertexArrayVertexAttribLFormatEXT.?(arg_6512, arg_6513, arg_6514, arg_6515, arg_6516);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayVertexAttribBindingEXT.xhtml
pub inline fn glVertexArrayVertexAttribBindingEXT(arg_6517: GLuint, arg_6518: GLuint, arg_6519: GLuint) void {
    return glad_glVertexArrayVertexAttribBindingEXT.?(arg_6517, arg_6518, arg_6519);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayVertexBindingDivisorEXT.xhtml
pub inline fn glVertexArrayVertexBindingDivisorEXT(arg_6520: GLuint, arg_6521: GLuint, arg_6522: GLuint) void {
    return glad_glVertexArrayVertexBindingDivisorEXT.?(arg_6520, arg_6521, arg_6522);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayVertexAttribLOffsetEXT.xhtml
pub inline fn glVertexArrayVertexAttribLOffsetEXT(arg_6523: GLuint, arg_6524: GLuint, arg_6525: GLuint, arg_6526: GLint, arg_6527: GLenum, arg_6528: GLsizei, arg_6529: GLintptr) void {
    return glad_glVertexArrayVertexAttribLOffsetEXT.?(arg_6523, arg_6524, arg_6525, arg_6526, arg_6527, arg_6528, arg_6529);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexturePageCommitmentEXT.xhtml
pub inline fn glTexturePageCommitmentEXT(arg_6530: GLuint, arg_6531: GLint, arg_6532: GLint, arg_6533: GLint, arg_6534: GLint, arg_6535: GLsizei, arg_6536: GLsizei, arg_6537: GLsizei, arg_6538: GLboolean) void {
    return glad_glTexturePageCommitmentEXT.?(arg_6530, arg_6531, arg_6532, arg_6533, arg_6534, arg_6535, arg_6536, arg_6537, arg_6538);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayVertexAttribDivisorEXT.xhtml
pub inline fn glVertexArrayVertexAttribDivisorEXT(arg_6539: GLuint, arg_6540: GLuint, arg_6541: GLuint) void {
    return glad_glVertexArrayVertexAttribDivisorEXT.?(arg_6539, arg_6540, arg_6541);
}
pub const GL_EXT_draw_buffers2 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorMaskIndexedEXT.xhtml
pub inline fn glColorMaskIndexedEXT(arg_6542: GLuint, arg_6543: GLboolean, arg_6544: GLboolean, arg_6545: GLboolean, arg_6546: GLboolean) void {
    return glad_glColorMaskIndexedEXT.?(arg_6542, arg_6543, arg_6544, arg_6545, arg_6546);
}
pub const GL_EXT_draw_instanced = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawArraysInstancedEXT.xhtml
pub inline fn glDrawArraysInstancedEXT(arg_6547: GLenum, arg_6548: GLint, arg_6549: GLsizei, arg_6550: GLsizei) void {
    return glad_glDrawArraysInstancedEXT.?(arg_6547, arg_6548, arg_6549, arg_6550);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawElementsInstancedEXT.xhtml
pub inline fn glDrawElementsInstancedEXT(arg_6551: GLenum, arg_6552: GLsizei, arg_6553: GLenum, arg_6554: ?*const anyopaque, arg_6555: GLsizei) void {
    return glad_glDrawElementsInstancedEXT.?(arg_6551, arg_6552, arg_6553, arg_6554, arg_6555);
}
pub const GL_EXT_draw_range_elements = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawRangeElementsEXT.xhtml
pub inline fn glDrawRangeElementsEXT(arg_6556: GLenum, arg_6557: GLuint, arg_6558: GLuint, arg_6559: GLsizei, arg_6560: GLenum, arg_6561: ?*const anyopaque) void {
    return glad_glDrawRangeElementsEXT.?(arg_6556, arg_6557, arg_6558, arg_6559, arg_6560, arg_6561);
}
pub const GL_EXT_external_buffer = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBufferStorageExternalEXT.xhtml
pub inline fn glBufferStorageExternalEXT(arg_6562: GLenum, arg_6563: GLintptr, arg_6564: GLsizeiptr, arg_6565: GLeglClientBufferEXT, arg_6566: GLbitfield) void {
    return glad_glBufferStorageExternalEXT.?(arg_6562, arg_6563, arg_6564, arg_6565, arg_6566);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedBufferStorageExternalEXT.xhtml
pub inline fn glNamedBufferStorageExternalEXT(arg_6567: GLuint, arg_6568: GLintptr, arg_6569: GLsizeiptr, arg_6570: GLeglClientBufferEXT, arg_6571: GLbitfield) void {
    return glad_glNamedBufferStorageExternalEXT.?(arg_6567, arg_6568, arg_6569, arg_6570, arg_6571);
}
pub const GL_EXT_fog_coord = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFogCoordfEXT.xhtml
pub inline fn glFogCoordfEXT(arg_6572: GLfloat) void {
    return glad_glFogCoordfEXT.?(arg_6572);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFogCoordfvEXT.xhtml
pub inline fn glFogCoordfvEXT(arg_6573: [*c]const GLfloat) void {
    return glad_glFogCoordfvEXT.?(arg_6573);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFogCoorddEXT.xhtml
pub inline fn glFogCoorddEXT(arg_6574: GLdouble) void {
    return glad_glFogCoorddEXT.?(arg_6574);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFogCoorddvEXT.xhtml
pub inline fn glFogCoorddvEXT(arg_6575: [*c]const GLdouble) void {
    return glad_glFogCoorddvEXT.?(arg_6575);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFogCoordPointerEXT.xhtml
pub inline fn glFogCoordPointerEXT(arg_6576: GLenum, arg_6577: GLsizei, arg_6578: ?*const anyopaque) void {
    return glad_glFogCoordPointerEXT.?(arg_6576, arg_6577, arg_6578);
}
pub const GL_EXT_framebuffer_blit = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlitFramebufferEXT.xhtml
pub inline fn glBlitFramebufferEXT(arg_6579: GLint, arg_6580: GLint, arg_6581: GLint, arg_6582: GLint, arg_6583: GLint, arg_6584: GLint, arg_6585: GLint, arg_6586: GLint, arg_6587: GLbitfield, arg_6588: GLenum) void {
    return glad_glBlitFramebufferEXT.?(arg_6579, arg_6580, arg_6581, arg_6582, arg_6583, arg_6584, arg_6585, arg_6586, arg_6587, arg_6588);
}
pub const GL_EXT_framebuffer_blit_layers = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlitFramebufferLayersEXT.xhtml
pub inline fn glBlitFramebufferLayersEXT(arg_6589: GLint, arg_6590: GLint, arg_6591: GLint, arg_6592: GLint, arg_6593: GLint, arg_6594: GLint, arg_6595: GLint, arg_6596: GLint, arg_6597: GLbitfield, arg_6598: GLenum) void {
    return glad_glBlitFramebufferLayersEXT.?(arg_6589, arg_6590, arg_6591, arg_6592, arg_6593, arg_6594, arg_6595, arg_6596, arg_6597, arg_6598);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlitFramebufferLayerEXT.xhtml
pub inline fn glBlitFramebufferLayerEXT(arg_6599: GLint, arg_6600: GLint, arg_6601: GLint, arg_6602: GLint, arg_6603: GLint, arg_6604: GLint, arg_6605: GLint, arg_6606: GLint, arg_6607: GLint, arg_6608: GLint, arg_6609: GLbitfield, arg_6610: GLenum) void {
    return glad_glBlitFramebufferLayerEXT.?(arg_6599, arg_6600, arg_6601, arg_6602, arg_6603, arg_6604, arg_6605, arg_6606, arg_6607, arg_6608, arg_6609, arg_6610);
}
pub const GL_EXT_framebuffer_multisample = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRenderbufferStorageMultisampleEXT.xhtml
pub inline fn glRenderbufferStorageMultisampleEXT(arg_6611: GLenum, arg_6612: GLsizei, arg_6613: GLenum, arg_6614: GLsizei, arg_6615: GLsizei) void {
    return glad_glRenderbufferStorageMultisampleEXT.?(arg_6611, arg_6612, arg_6613, arg_6614, arg_6615);
}
pub const GL_EXT_framebuffer_multisample_blit_scaled = 1;
pub const GL_EXT_framebuffer_object = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsRenderbufferEXT.xhtml
pub inline fn glIsRenderbufferEXT(arg_6616: GLuint) GLboolean {
    return glad_glIsRenderbufferEXT.?(arg_6616);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindRenderbufferEXT.xhtml
pub inline fn glBindRenderbufferEXT(arg_6617: GLenum, arg_6618: GLuint) void {
    return glad_glBindRenderbufferEXT.?(arg_6617, arg_6618);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteRenderbuffersEXT.xhtml
pub inline fn glDeleteRenderbuffersEXT(arg_6619: GLsizei, arg_6620: [*c]const GLuint) void {
    return glad_glDeleteRenderbuffersEXT.?(arg_6619, arg_6620);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenRenderbuffersEXT.xhtml
pub inline fn glGenRenderbuffersEXT(arg_6621: GLsizei, arg_6622: [*c]GLuint) void {
    return glad_glGenRenderbuffersEXT.?(arg_6621, arg_6622);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRenderbufferStorageEXT.xhtml
pub inline fn glRenderbufferStorageEXT(arg_6623: GLenum, arg_6624: GLenum, arg_6625: GLsizei, arg_6626: GLsizei) void {
    return glad_glRenderbufferStorageEXT.?(arg_6623, arg_6624, arg_6625, arg_6626);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetRenderbufferParameterivEXT.xhtml
pub inline fn glGetRenderbufferParameterivEXT(arg_6627: GLenum, arg_6628: GLenum, arg_6629: [*c]GLint) void {
    return glad_glGetRenderbufferParameterivEXT.?(arg_6627, arg_6628, arg_6629);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsFramebufferEXT.xhtml
pub inline fn glIsFramebufferEXT(arg_6630: GLuint) GLboolean {
    return glad_glIsFramebufferEXT.?(arg_6630);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindFramebufferEXT.xhtml
pub inline fn glBindFramebufferEXT(arg_6631: GLenum, arg_6632: GLuint) void {
    return glad_glBindFramebufferEXT.?(arg_6631, arg_6632);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteFramebuffersEXT.xhtml
pub inline fn glDeleteFramebuffersEXT(arg_6633: GLsizei, arg_6634: [*c]const GLuint) void {
    return glad_glDeleteFramebuffersEXT.?(arg_6633, arg_6634);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenFramebuffersEXT.xhtml
pub inline fn glGenFramebuffersEXT(arg_6635: GLsizei, arg_6636: [*c]GLuint) void {
    return glad_glGenFramebuffersEXT.?(arg_6635, arg_6636);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCheckFramebufferStatusEXT.xhtml
pub inline fn glCheckFramebufferStatusEXT(arg_6637: GLenum) GLenum {
    return glad_glCheckFramebufferStatusEXT.?(arg_6637);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferTexture1DEXT.xhtml
pub inline fn glFramebufferTexture1DEXT(arg_6638: GLenum, arg_6639: GLenum, arg_6640: GLenum, arg_6641: GLuint, arg_6642: GLint) void {
    return glad_glFramebufferTexture1DEXT.?(arg_6638, arg_6639, arg_6640, arg_6641, arg_6642);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferTexture2DEXT.xhtml
pub inline fn glFramebufferTexture2DEXT(arg_6643: GLenum, arg_6644: GLenum, arg_6645: GLenum, arg_6646: GLuint, arg_6647: GLint) void {
    return glad_glFramebufferTexture2DEXT.?(arg_6643, arg_6644, arg_6645, arg_6646, arg_6647);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferTexture3DEXT.xhtml
pub inline fn glFramebufferTexture3DEXT(arg_6648: GLenum, arg_6649: GLenum, arg_6650: GLenum, arg_6651: GLuint, arg_6652: GLint, arg_6653: GLint) void {
    return glad_glFramebufferTexture3DEXT.?(arg_6648, arg_6649, arg_6650, arg_6651, arg_6652, arg_6653);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferRenderbufferEXT.xhtml
pub inline fn glFramebufferRenderbufferEXT(arg_6654: GLenum, arg_6655: GLenum, arg_6656: GLenum, arg_6657: GLuint) void {
    return glad_glFramebufferRenderbufferEXT.?(arg_6654, arg_6655, arg_6656, arg_6657);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFramebufferAttachmentParameterivEXT.xhtml
pub inline fn glGetFramebufferAttachmentParameterivEXT(arg_6658: GLenum, arg_6659: GLenum, arg_6660: GLenum, arg_6661: [*c]GLint) void {
    return glad_glGetFramebufferAttachmentParameterivEXT.?(arg_6658, arg_6659, arg_6660, arg_6661);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenerateMipmapEXT.xhtml
pub inline fn glGenerateMipmapEXT(arg_6662: GLenum) void {
    return glad_glGenerateMipmapEXT.?(arg_6662);
}
pub const GL_EXT_framebuffer_sRGB = 1;
pub const GL_EXT_geometry_shader4 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramParameteriEXT.xhtml
pub inline fn glProgramParameteriEXT(arg_6663: GLuint, arg_6664: GLenum, arg_6665: GLint) void {
    return glad_glProgramParameteriEXT.?(arg_6663, arg_6664, arg_6665);
}
pub const GL_EXT_gpu_program_parameters = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramEnvParameters4fvEXT.xhtml
pub inline fn glProgramEnvParameters4fvEXT(arg_6666: GLenum, arg_6667: GLuint, arg_6668: GLsizei, arg_6669: [*c]const GLfloat) void {
    return glad_glProgramEnvParameters4fvEXT.?(arg_6666, arg_6667, arg_6668, arg_6669);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramLocalParameters4fvEXT.xhtml
pub inline fn glProgramLocalParameters4fvEXT(arg_6670: GLenum, arg_6671: GLuint, arg_6672: GLsizei, arg_6673: [*c]const GLfloat) void {
    return glad_glProgramLocalParameters4fvEXT.?(arg_6670, arg_6671, arg_6672, arg_6673);
}
pub const GL_EXT_gpu_shader4 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetUniformuivEXT.xhtml
pub inline fn glGetUniformuivEXT(arg_6674: GLuint, arg_6675: GLint, arg_6676: [*c]GLuint) void {
    return glad_glGetUniformuivEXT.?(arg_6674, arg_6675, arg_6676);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindFragDataLocationEXT.xhtml
pub inline fn glBindFragDataLocationEXT(arg_6677: GLuint, arg_6678: GLuint, arg_6679: [*c]const GLchar) void {
    return glad_glBindFragDataLocationEXT.?(arg_6677, arg_6678, arg_6679);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFragDataLocationEXT.xhtml
pub inline fn glGetFragDataLocationEXT(arg_6680: GLuint, arg_6681: [*c]const GLchar) GLint {
    return glad_glGetFragDataLocationEXT.?(arg_6680, arg_6681);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform1uiEXT.xhtml
pub inline fn glUniform1uiEXT(arg_6682: GLint, arg_6683: GLuint) void {
    return glad_glUniform1uiEXT.?(arg_6682, arg_6683);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform2uiEXT.xhtml
pub inline fn glUniform2uiEXT(arg_6684: GLint, arg_6685: GLuint, arg_6686: GLuint) void {
    return glad_glUniform2uiEXT.?(arg_6684, arg_6685, arg_6686);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform3uiEXT.xhtml
pub inline fn glUniform3uiEXT(arg_6687: GLint, arg_6688: GLuint, arg_6689: GLuint, arg_6690: GLuint) void {
    return glad_glUniform3uiEXT.?(arg_6687, arg_6688, arg_6689, arg_6690);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform4uiEXT.xhtml
pub inline fn glUniform4uiEXT(arg_6691: GLint, arg_6692: GLuint, arg_6693: GLuint, arg_6694: GLuint, arg_6695: GLuint) void {
    return glad_glUniform4uiEXT.?(arg_6691, arg_6692, arg_6693, arg_6694, arg_6695);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform1uivEXT.xhtml
pub inline fn glUniform1uivEXT(arg_6696: GLint, arg_6697: GLsizei, arg_6698: [*c]const GLuint) void {
    return glad_glUniform1uivEXT.?(arg_6696, arg_6697, arg_6698);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform2uivEXT.xhtml
pub inline fn glUniform2uivEXT(arg_6699: GLint, arg_6700: GLsizei, arg_6701: [*c]const GLuint) void {
    return glad_glUniform2uivEXT.?(arg_6699, arg_6700, arg_6701);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform3uivEXT.xhtml
pub inline fn glUniform3uivEXT(arg_6702: GLint, arg_6703: GLsizei, arg_6704: [*c]const GLuint) void {
    return glad_glUniform3uivEXT.?(arg_6702, arg_6703, arg_6704);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform4uivEXT.xhtml
pub inline fn glUniform4uivEXT(arg_6705: GLint, arg_6706: GLsizei, arg_6707: [*c]const GLuint) void {
    return glad_glUniform4uivEXT.?(arg_6705, arg_6706, arg_6707);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI1iEXT.xhtml
pub inline fn glVertexAttribI1iEXT(arg_6708: GLuint, arg_6709: GLint) void {
    return glad_glVertexAttribI1iEXT.?(arg_6708, arg_6709);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI2iEXT.xhtml
pub inline fn glVertexAttribI2iEXT(arg_6710: GLuint, arg_6711: GLint, arg_6712: GLint) void {
    return glad_glVertexAttribI2iEXT.?(arg_6710, arg_6711, arg_6712);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI3iEXT.xhtml
pub inline fn glVertexAttribI3iEXT(arg_6713: GLuint, arg_6714: GLint, arg_6715: GLint, arg_6716: GLint) void {
    return glad_glVertexAttribI3iEXT.?(arg_6713, arg_6714, arg_6715, arg_6716);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI4iEXT.xhtml
pub inline fn glVertexAttribI4iEXT(arg_6717: GLuint, arg_6718: GLint, arg_6719: GLint, arg_6720: GLint, arg_6721: GLint) void {
    return glad_glVertexAttribI4iEXT.?(arg_6717, arg_6718, arg_6719, arg_6720, arg_6721);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI1uiEXT.xhtml
pub inline fn glVertexAttribI1uiEXT(arg_6722: GLuint, arg_6723: GLuint) void {
    return glad_glVertexAttribI1uiEXT.?(arg_6722, arg_6723);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI2uiEXT.xhtml
pub inline fn glVertexAttribI2uiEXT(arg_6724: GLuint, arg_6725: GLuint, arg_6726: GLuint) void {
    return glad_glVertexAttribI2uiEXT.?(arg_6724, arg_6725, arg_6726);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI3uiEXT.xhtml
pub inline fn glVertexAttribI3uiEXT(arg_6727: GLuint, arg_6728: GLuint, arg_6729: GLuint, arg_6730: GLuint) void {
    return glad_glVertexAttribI3uiEXT.?(arg_6727, arg_6728, arg_6729, arg_6730);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI4uiEXT.xhtml
pub inline fn glVertexAttribI4uiEXT(arg_6731: GLuint, arg_6732: GLuint, arg_6733: GLuint, arg_6734: GLuint, arg_6735: GLuint) void {
    return glad_glVertexAttribI4uiEXT.?(arg_6731, arg_6732, arg_6733, arg_6734, arg_6735);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI1ivEXT.xhtml
pub inline fn glVertexAttribI1ivEXT(arg_6736: GLuint, arg_6737: [*c]const GLint) void {
    return glad_glVertexAttribI1ivEXT.?(arg_6736, arg_6737);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI2ivEXT.xhtml
pub inline fn glVertexAttribI2ivEXT(arg_6738: GLuint, arg_6739: [*c]const GLint) void {
    return glad_glVertexAttribI2ivEXT.?(arg_6738, arg_6739);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI3ivEXT.xhtml
pub inline fn glVertexAttribI3ivEXT(arg_6740: GLuint, arg_6741: [*c]const GLint) void {
    return glad_glVertexAttribI3ivEXT.?(arg_6740, arg_6741);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI4ivEXT.xhtml
pub inline fn glVertexAttribI4ivEXT(arg_6742: GLuint, arg_6743: [*c]const GLint) void {
    return glad_glVertexAttribI4ivEXT.?(arg_6742, arg_6743);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI1uivEXT.xhtml
pub inline fn glVertexAttribI1uivEXT(arg_6744: GLuint, arg_6745: [*c]const GLuint) void {
    return glad_glVertexAttribI1uivEXT.?(arg_6744, arg_6745);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI2uivEXT.xhtml
pub inline fn glVertexAttribI2uivEXT(arg_6746: GLuint, arg_6747: [*c]const GLuint) void {
    return glad_glVertexAttribI2uivEXT.?(arg_6746, arg_6747);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI3uivEXT.xhtml
pub inline fn glVertexAttribI3uivEXT(arg_6748: GLuint, arg_6749: [*c]const GLuint) void {
    return glad_glVertexAttribI3uivEXT.?(arg_6748, arg_6749);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI4uivEXT.xhtml
pub inline fn glVertexAttribI4uivEXT(arg_6750: GLuint, arg_6751: [*c]const GLuint) void {
    return glad_glVertexAttribI4uivEXT.?(arg_6750, arg_6751);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI4bvEXT.xhtml
pub inline fn glVertexAttribI4bvEXT(arg_6752: GLuint, arg_6753: [*c]const GLbyte) void {
    return glad_glVertexAttribI4bvEXT.?(arg_6752, arg_6753);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI4svEXT.xhtml
pub inline fn glVertexAttribI4svEXT(arg_6754: GLuint, arg_6755: [*c]const GLshort) void {
    return glad_glVertexAttribI4svEXT.?(arg_6754, arg_6755);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI4ubvEXT.xhtml
pub inline fn glVertexAttribI4ubvEXT(arg_6756: GLuint, arg_6757: [*c]const GLubyte) void {
    return glad_glVertexAttribI4ubvEXT.?(arg_6756, arg_6757);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribI4usvEXT.xhtml
pub inline fn glVertexAttribI4usvEXT(arg_6758: GLuint, arg_6759: [*c]const GLushort) void {
    return glad_glVertexAttribI4usvEXT.?(arg_6758, arg_6759);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribIPointerEXT.xhtml
pub inline fn glVertexAttribIPointerEXT(arg_6760: GLuint, arg_6761: GLint, arg_6762: GLenum, arg_6763: GLsizei, arg_6764: ?*const anyopaque) void {
    return glad_glVertexAttribIPointerEXT.?(arg_6760, arg_6761, arg_6762, arg_6763, arg_6764);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexAttribIivEXT.xhtml
pub inline fn glGetVertexAttribIivEXT(arg_6765: GLuint, arg_6766: GLenum, arg_6767: [*c]GLint) void {
    return glad_glGetVertexAttribIivEXT.?(arg_6765, arg_6766, arg_6767);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexAttribIuivEXT.xhtml
pub inline fn glGetVertexAttribIuivEXT(arg_6768: GLuint, arg_6769: GLenum, arg_6770: [*c]GLuint) void {
    return glad_glGetVertexAttribIuivEXT.?(arg_6768, arg_6769, arg_6770);
}
pub const GL_EXT_histogram = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetHistogramEXT.xhtml
pub inline fn glGetHistogramEXT(arg_6771: GLenum, arg_6772: GLboolean, arg_6773: GLenum, arg_6774: GLenum, arg_6775: ?*anyopaque) void {
    return glad_glGetHistogramEXT.?(arg_6771, arg_6772, arg_6773, arg_6774, arg_6775);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetHistogramParameterfvEXT.xhtml
pub inline fn glGetHistogramParameterfvEXT(arg_6776: GLenum, arg_6777: GLenum, arg_6778: [*c]GLfloat) void {
    return glad_glGetHistogramParameterfvEXT.?(arg_6776, arg_6777, arg_6778);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetHistogramParameterivEXT.xhtml
pub inline fn glGetHistogramParameterivEXT(arg_6779: GLenum, arg_6780: GLenum, arg_6781: [*c]GLint) void {
    return glad_glGetHistogramParameterivEXT.?(arg_6779, arg_6780, arg_6781);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMinmaxEXT.xhtml
pub inline fn glGetMinmaxEXT(arg_6782: GLenum, arg_6783: GLboolean, arg_6784: GLenum, arg_6785: GLenum, arg_6786: ?*anyopaque) void {
    return glad_glGetMinmaxEXT.?(arg_6782, arg_6783, arg_6784, arg_6785, arg_6786);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMinmaxParameterfvEXT.xhtml
pub inline fn glGetMinmaxParameterfvEXT(arg_6787: GLenum, arg_6788: GLenum, arg_6789: [*c]GLfloat) void {
    return glad_glGetMinmaxParameterfvEXT.?(arg_6787, arg_6788, arg_6789);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMinmaxParameterivEXT.xhtml
pub inline fn glGetMinmaxParameterivEXT(arg_6790: GLenum, arg_6791: GLenum, arg_6792: [*c]GLint) void {
    return glad_glGetMinmaxParameterivEXT.?(arg_6790, arg_6791, arg_6792);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glHistogramEXT.xhtml
pub inline fn glHistogramEXT(arg_6793: GLenum, arg_6794: GLsizei, arg_6795: GLenum, arg_6796: GLboolean) void {
    return glad_glHistogramEXT.?(arg_6793, arg_6794, arg_6795, arg_6796);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMinmaxEXT.xhtml
pub inline fn glMinmaxEXT(arg_6797: GLenum, arg_6798: GLenum, arg_6799: GLboolean) void {
    return glad_glMinmaxEXT.?(arg_6797, arg_6798, arg_6799);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glResetHistogramEXT.xhtml
pub inline fn glResetHistogramEXT(arg_6800: GLenum) void {
    return glad_glResetHistogramEXT.?(arg_6800);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glResetMinmaxEXT.xhtml
pub inline fn glResetMinmaxEXT(arg_6801: GLenum) void {
    return glad_glResetMinmaxEXT.?(arg_6801);
}
pub const GL_EXT_index_array_formats = 1;
pub const GL_EXT_index_func = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIndexFuncEXT.xhtml
pub inline fn glIndexFuncEXT(arg_6802: GLenum, arg_6803: GLclampf) void {
    return glad_glIndexFuncEXT.?(arg_6802, arg_6803);
}
pub const GL_EXT_index_material = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIndexMaterialEXT.xhtml
pub inline fn glIndexMaterialEXT(arg_6804: GLenum, arg_6805: GLenum) void {
    return glad_glIndexMaterialEXT.?(arg_6804, arg_6805);
}
pub const GL_EXT_index_texture = 1;
pub const GL_EXT_light_texture = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glApplyTextureEXT.xhtml
pub inline fn glApplyTextureEXT(arg_6806: GLenum) void {
    return glad_glApplyTextureEXT.?(arg_6806);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureLightEXT.xhtml
pub inline fn glTextureLightEXT(arg_6807: GLenum) void {
    return glad_glTextureLightEXT.?(arg_6807);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureMaterialEXT.xhtml
pub inline fn glTextureMaterialEXT(arg_6808: GLenum, arg_6809: GLenum) void {
    return glad_glTextureMaterialEXT.?(arg_6808, arg_6809);
}
pub const GL_EXT_memory_object = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetUnsignedBytevEXT.xhtml
pub inline fn glGetUnsignedBytevEXT(arg_6810: GLenum, arg_6811: [*c]GLubyte) void {
    return glad_glGetUnsignedBytevEXT.?(arg_6810, arg_6811);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetUnsignedBytei_vEXT.xhtml
pub inline fn glGetUnsignedBytei_vEXT(arg_6812: GLenum, arg_6813: GLuint, arg_6814: [*c]GLubyte) void {
    return glad_glGetUnsignedBytei_vEXT.?(arg_6812, arg_6813, arg_6814);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteMemoryObjectsEXT.xhtml
pub inline fn glDeleteMemoryObjectsEXT(arg_6815: GLsizei, arg_6816: [*c]const GLuint) void {
    return glad_glDeleteMemoryObjectsEXT.?(arg_6815, arg_6816);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsMemoryObjectEXT.xhtml
pub inline fn glIsMemoryObjectEXT(arg_6817: GLuint) GLboolean {
    return glad_glIsMemoryObjectEXT.?(arg_6817);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCreateMemoryObjectsEXT.xhtml
pub inline fn glCreateMemoryObjectsEXT(arg_6818: GLsizei, arg_6819: [*c]GLuint) void {
    return glad_glCreateMemoryObjectsEXT.?(arg_6818, arg_6819);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMemoryObjectParameterivEXT.xhtml
pub inline fn glMemoryObjectParameterivEXT(arg_6820: GLuint, arg_6821: GLenum, arg_6822: [*c]const GLint) void {
    return glad_glMemoryObjectParameterivEXT.?(arg_6820, arg_6821, arg_6822);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMemoryObjectParameterivEXT.xhtml
pub inline fn glGetMemoryObjectParameterivEXT(arg_6823: GLuint, arg_6824: GLenum, arg_6825: [*c]GLint) void {
    return glad_glGetMemoryObjectParameterivEXT.?(arg_6823, arg_6824, arg_6825);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexStorageMem2DEXT.xhtml
pub inline fn glTexStorageMem2DEXT(arg_6826: GLenum, arg_6827: GLsizei, arg_6828: GLenum, arg_6829: GLsizei, arg_6830: GLsizei, arg_6831: GLuint, arg_6832: GLuint64) void {
    return glad_glTexStorageMem2DEXT.?(arg_6826, arg_6827, arg_6828, arg_6829, arg_6830, arg_6831, arg_6832);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexStorageMem2DMultisampleEXT.xhtml
pub inline fn glTexStorageMem2DMultisampleEXT(arg_6833: GLenum, arg_6834: GLsizei, arg_6835: GLenum, arg_6836: GLsizei, arg_6837: GLsizei, arg_6838: GLboolean, arg_6839: GLuint, arg_6840: GLuint64) void {
    return glad_glTexStorageMem2DMultisampleEXT.?(arg_6833, arg_6834, arg_6835, arg_6836, arg_6837, arg_6838, arg_6839, arg_6840);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexStorageMem3DEXT.xhtml
pub inline fn glTexStorageMem3DEXT(arg_6841: GLenum, arg_6842: GLsizei, arg_6843: GLenum, arg_6844: GLsizei, arg_6845: GLsizei, arg_6846: GLsizei, arg_6847: GLuint, arg_6848: GLuint64) void {
    return glad_glTexStorageMem3DEXT.?(arg_6841, arg_6842, arg_6843, arg_6844, arg_6845, arg_6846, arg_6847, arg_6848);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexStorageMem3DMultisampleEXT.xhtml
pub inline fn glTexStorageMem3DMultisampleEXT(arg_6849: GLenum, arg_6850: GLsizei, arg_6851: GLenum, arg_6852: GLsizei, arg_6853: GLsizei, arg_6854: GLsizei, arg_6855: GLboolean, arg_6856: GLuint, arg_6857: GLuint64) void {
    return glad_glTexStorageMem3DMultisampleEXT.?(arg_6849, arg_6850, arg_6851, arg_6852, arg_6853, arg_6854, arg_6855, arg_6856, arg_6857);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBufferStorageMemEXT.xhtml
pub inline fn glBufferStorageMemEXT(arg_6858: GLenum, arg_6859: GLsizeiptr, arg_6860: GLuint, arg_6861: GLuint64) void {
    return glad_glBufferStorageMemEXT.?(arg_6858, arg_6859, arg_6860, arg_6861);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureStorageMem2DEXT.xhtml
pub inline fn glTextureStorageMem2DEXT(arg_6862: GLuint, arg_6863: GLsizei, arg_6864: GLenum, arg_6865: GLsizei, arg_6866: GLsizei, arg_6867: GLuint, arg_6868: GLuint64) void {
    return glad_glTextureStorageMem2DEXT.?(arg_6862, arg_6863, arg_6864, arg_6865, arg_6866, arg_6867, arg_6868);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureStorageMem2DMultisampleEXT.xhtml
pub inline fn glTextureStorageMem2DMultisampleEXT(arg_6869: GLuint, arg_6870: GLsizei, arg_6871: GLenum, arg_6872: GLsizei, arg_6873: GLsizei, arg_6874: GLboolean, arg_6875: GLuint, arg_6876: GLuint64) void {
    return glad_glTextureStorageMem2DMultisampleEXT.?(arg_6869, arg_6870, arg_6871, arg_6872, arg_6873, arg_6874, arg_6875, arg_6876);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureStorageMem3DEXT.xhtml
pub inline fn glTextureStorageMem3DEXT(arg_6877: GLuint, arg_6878: GLsizei, arg_6879: GLenum, arg_6880: GLsizei, arg_6881: GLsizei, arg_6882: GLsizei, arg_6883: GLuint, arg_6884: GLuint64) void {
    return glad_glTextureStorageMem3DEXT.?(arg_6877, arg_6878, arg_6879, arg_6880, arg_6881, arg_6882, arg_6883, arg_6884);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureStorageMem3DMultisampleEXT.xhtml
pub inline fn glTextureStorageMem3DMultisampleEXT(arg_6885: GLuint, arg_6886: GLsizei, arg_6887: GLenum, arg_6888: GLsizei, arg_6889: GLsizei, arg_6890: GLsizei, arg_6891: GLboolean, arg_6892: GLuint, arg_6893: GLuint64) void {
    return glad_glTextureStorageMem3DMultisampleEXT.?(arg_6885, arg_6886, arg_6887, arg_6888, arg_6889, arg_6890, arg_6891, arg_6892, arg_6893);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedBufferStorageMemEXT.xhtml
pub inline fn glNamedBufferStorageMemEXT(arg_6894: GLuint, arg_6895: GLsizeiptr, arg_6896: GLuint, arg_6897: GLuint64) void {
    return glad_glNamedBufferStorageMemEXT.?(arg_6894, arg_6895, arg_6896, arg_6897);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexStorageMem1DEXT.xhtml
pub inline fn glTexStorageMem1DEXT(arg_6898: GLenum, arg_6899: GLsizei, arg_6900: GLenum, arg_6901: GLsizei, arg_6902: GLuint, arg_6903: GLuint64) void {
    return glad_glTexStorageMem1DEXT.?(arg_6898, arg_6899, arg_6900, arg_6901, arg_6902, arg_6903);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureStorageMem1DEXT.xhtml
pub inline fn glTextureStorageMem1DEXT(arg_6904: GLuint, arg_6905: GLsizei, arg_6906: GLenum, arg_6907: GLsizei, arg_6908: GLuint, arg_6909: GLuint64) void {
    return glad_glTextureStorageMem1DEXT.?(arg_6904, arg_6905, arg_6906, arg_6907, arg_6908, arg_6909);
}
pub const GL_EXT_memory_object_fd = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glImportMemoryFdEXT.xhtml
pub inline fn glImportMemoryFdEXT(arg_6910: GLuint, arg_6911: GLuint64, arg_6912: GLenum, arg_6913: GLint) void {
    return glad_glImportMemoryFdEXT.?(arg_6910, arg_6911, arg_6912, arg_6913);
}
pub const GL_EXT_memory_object_win32 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glImportMemoryWin32HandleEXT.xhtml
pub inline fn glImportMemoryWin32HandleEXT(arg_6914: GLuint, arg_6915: GLuint64, arg_6916: GLenum, arg_6917: ?*anyopaque) void {
    return glad_glImportMemoryWin32HandleEXT.?(arg_6914, arg_6915, arg_6916, arg_6917);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glImportMemoryWin32NameEXT.xhtml
pub inline fn glImportMemoryWin32NameEXT(arg_6918: GLuint, arg_6919: GLuint64, arg_6920: GLenum, arg_6921: ?*const anyopaque) void {
    return glad_glImportMemoryWin32NameEXT.?(arg_6918, arg_6919, arg_6920, arg_6921);
}
pub const GL_EXT_misc_attribute = 1;
pub const GL_EXT_multi_draw_arrays = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiDrawArraysEXT.xhtml
pub inline fn glMultiDrawArraysEXT(arg_6922: GLenum, arg_6923: [*c]const GLint, arg_6924: [*c]const GLsizei, arg_6925: GLsizei) void {
    return glad_glMultiDrawArraysEXT.?(arg_6922, arg_6923, arg_6924, arg_6925);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiDrawElementsEXT.xhtml
pub inline fn glMultiDrawElementsEXT(arg_6926: GLenum, arg_6927: [*c]const GLsizei, arg_6928: GLenum, arg_6929: [*c]const ?*const anyopaque, arg_6930: GLsizei) void {
    return glad_glMultiDrawElementsEXT.?(arg_6926, arg_6927, arg_6928, arg_6929, arg_6930);
}
pub const GL_EXT_multisample = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSampleMaskEXT.xhtml
pub inline fn glSampleMaskEXT(arg_6931: GLclampf, arg_6932: GLboolean) void {
    return glad_glSampleMaskEXT.?(arg_6931, arg_6932);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSamplePatternEXT.xhtml
pub inline fn glSamplePatternEXT(arg_6933: GLenum) void {
    return glad_glSamplePatternEXT.?(arg_6933);
}
pub const GL_EXT_multiview_tessellation_geometry_shader = 1;
pub const GL_EXT_multiview_texture_multisample = 1;
pub const GL_EXT_multiview_timer_query = 1;
pub const GL_EXT_packed_depth_stencil = 1;
pub const GL_EXT_packed_float = 1;
pub const GL_EXT_packed_pixels = 1;
pub const GL_EXT_paletted_texture = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorTableEXT.xhtml
pub inline fn glColorTableEXT(arg_6934: GLenum, arg_6935: GLenum, arg_6936: GLsizei, arg_6937: GLenum, arg_6938: GLenum, arg_6939: ?*const anyopaque) void {
    return glad_glColorTableEXT.?(arg_6934, arg_6935, arg_6936, arg_6937, arg_6938, arg_6939);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetColorTableEXT.xhtml
pub inline fn glGetColorTableEXT(arg_6940: GLenum, arg_6941: GLenum, arg_6942: GLenum, arg_6943: ?*anyopaque) void {
    return glad_glGetColorTableEXT.?(arg_6940, arg_6941, arg_6942, arg_6943);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetColorTableParameterivEXT.xhtml
pub inline fn glGetColorTableParameterivEXT(arg_6944: GLenum, arg_6945: GLenum, arg_6946: [*c]GLint) void {
    return glad_glGetColorTableParameterivEXT.?(arg_6944, arg_6945, arg_6946);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetColorTableParameterfvEXT.xhtml
pub inline fn glGetColorTableParameterfvEXT(arg_6947: GLenum, arg_6948: GLenum, arg_6949: [*c]GLfloat) void {
    return glad_glGetColorTableParameterfvEXT.?(arg_6947, arg_6948, arg_6949);
}
pub const GL_EXT_pixel_buffer_object = 1;
pub const GL_EXT_pixel_transform = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPixelTransformParameteriEXT.xhtml
pub inline fn glPixelTransformParameteriEXT(arg_6950: GLenum, arg_6951: GLenum, arg_6952: GLint) void {
    return glad_glPixelTransformParameteriEXT.?(arg_6950, arg_6951, arg_6952);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPixelTransformParameterfEXT.xhtml
pub inline fn glPixelTransformParameterfEXT(arg_6953: GLenum, arg_6954: GLenum, arg_6955: GLfloat) void {
    return glad_glPixelTransformParameterfEXT.?(arg_6953, arg_6954, arg_6955);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPixelTransformParameterivEXT.xhtml
pub inline fn glPixelTransformParameterivEXT(arg_6956: GLenum, arg_6957: GLenum, arg_6958: [*c]const GLint) void {
    return glad_glPixelTransformParameterivEXT.?(arg_6956, arg_6957, arg_6958);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPixelTransformParameterfvEXT.xhtml
pub inline fn glPixelTransformParameterfvEXT(arg_6959: GLenum, arg_6960: GLenum, arg_6961: [*c]const GLfloat) void {
    return glad_glPixelTransformParameterfvEXT.?(arg_6959, arg_6960, arg_6961);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPixelTransformParameterivEXT.xhtml
pub inline fn glGetPixelTransformParameterivEXT(arg_6962: GLenum, arg_6963: GLenum, arg_6964: [*c]GLint) void {
    return glad_glGetPixelTransformParameterivEXT.?(arg_6962, arg_6963, arg_6964);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPixelTransformParameterfvEXT.xhtml
pub inline fn glGetPixelTransformParameterfvEXT(arg_6965: GLenum, arg_6966: GLenum, arg_6967: [*c]GLfloat) void {
    return glad_glGetPixelTransformParameterfvEXT.?(arg_6965, arg_6966, arg_6967);
}
pub const GL_EXT_pixel_transform_color_table = 1;
pub const GL_EXT_point_parameters = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPointParameterfEXT.xhtml
pub inline fn glPointParameterfEXT(arg_6968: GLenum, arg_6969: GLfloat) void {
    return glad_glPointParameterfEXT.?(arg_6968, arg_6969);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPointParameterfvEXT.xhtml
pub inline fn glPointParameterfvEXT(arg_6970: GLenum, arg_6971: [*c]const GLfloat) void {
    return glad_glPointParameterfvEXT.?(arg_6970, arg_6971);
}
pub const GL_EXT_polygon_offset = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPolygonOffsetEXT.xhtml
pub inline fn glPolygonOffsetEXT(arg_6972: GLfloat, arg_6973: GLfloat) void {
    return glad_glPolygonOffsetEXT.?(arg_6972, arg_6973);
}
pub const GL_EXT_polygon_offset_clamp = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPolygonOffsetClampEXT.xhtml
pub inline fn glPolygonOffsetClampEXT(arg_6974: GLfloat, arg_6975: GLfloat, arg_6976: GLfloat) void {
    return glad_glPolygonOffsetClampEXT.?(arg_6974, arg_6975, arg_6976);
}
pub const GL_EXT_post_depth_coverage = 1;
pub const GL_EXT_provoking_vertex = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProvokingVertexEXT.xhtml
pub inline fn glProvokingVertexEXT(arg_6977: GLenum) void {
    return glad_glProvokingVertexEXT.?(arg_6977);
}
pub const GL_EXT_raster_multisample = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRasterSamplesEXT.xhtml
pub inline fn glRasterSamplesEXT(arg_6978: GLuint, arg_6979: GLboolean) void {
    return glad_glRasterSamplesEXT.?(arg_6978, arg_6979);
}
pub const GL_EXT_rescale_normal = 1;
pub const GL_EXT_secondary_color = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3bEXT.xhtml
pub inline fn glSecondaryColor3bEXT(arg_6980: GLbyte, arg_6981: GLbyte, arg_6982: GLbyte) void {
    return glad_glSecondaryColor3bEXT.?(arg_6980, arg_6981, arg_6982);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3bvEXT.xhtml
pub inline fn glSecondaryColor3bvEXT(arg_6983: [*c]const GLbyte) void {
    return glad_glSecondaryColor3bvEXT.?(arg_6983);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3dEXT.xhtml
pub inline fn glSecondaryColor3dEXT(arg_6984: GLdouble, arg_6985: GLdouble, arg_6986: GLdouble) void {
    return glad_glSecondaryColor3dEXT.?(arg_6984, arg_6985, arg_6986);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3dvEXT.xhtml
pub inline fn glSecondaryColor3dvEXT(arg_6987: [*c]const GLdouble) void {
    return glad_glSecondaryColor3dvEXT.?(arg_6987);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3fEXT.xhtml
pub inline fn glSecondaryColor3fEXT(arg_6988: GLfloat, arg_6989: GLfloat, arg_6990: GLfloat) void {
    return glad_glSecondaryColor3fEXT.?(arg_6988, arg_6989, arg_6990);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3fvEXT.xhtml
pub inline fn glSecondaryColor3fvEXT(arg_6991: [*c]const GLfloat) void {
    return glad_glSecondaryColor3fvEXT.?(arg_6991);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3iEXT.xhtml
pub inline fn glSecondaryColor3iEXT(arg_6992: GLint, arg_6993: GLint, arg_6994: GLint) void {
    return glad_glSecondaryColor3iEXT.?(arg_6992, arg_6993, arg_6994);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3ivEXT.xhtml
pub inline fn glSecondaryColor3ivEXT(arg_6995: [*c]const GLint) void {
    return glad_glSecondaryColor3ivEXT.?(arg_6995);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3sEXT.xhtml
pub inline fn glSecondaryColor3sEXT(arg_6996: GLshort, arg_6997: GLshort, arg_6998: GLshort) void {
    return glad_glSecondaryColor3sEXT.?(arg_6996, arg_6997, arg_6998);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3svEXT.xhtml
pub inline fn glSecondaryColor3svEXT(arg_6999: [*c]const GLshort) void {
    return glad_glSecondaryColor3svEXT.?(arg_6999);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3ubEXT.xhtml
pub inline fn glSecondaryColor3ubEXT(arg_7000: GLubyte, arg_7001: GLubyte, arg_7002: GLubyte) void {
    return glad_glSecondaryColor3ubEXT.?(arg_7000, arg_7001, arg_7002);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3ubvEXT.xhtml
pub inline fn glSecondaryColor3ubvEXT(arg_7003: [*c]const GLubyte) void {
    return glad_glSecondaryColor3ubvEXT.?(arg_7003);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3uiEXT.xhtml
pub inline fn glSecondaryColor3uiEXT(arg_7004: GLuint, arg_7005: GLuint, arg_7006: GLuint) void {
    return glad_glSecondaryColor3uiEXT.?(arg_7004, arg_7005, arg_7006);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3uivEXT.xhtml
pub inline fn glSecondaryColor3uivEXT(arg_7007: [*c]const GLuint) void {
    return glad_glSecondaryColor3uivEXT.?(arg_7007);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3usEXT.xhtml
pub inline fn glSecondaryColor3usEXT(arg_7008: GLushort, arg_7009: GLushort, arg_7010: GLushort) void {
    return glad_glSecondaryColor3usEXT.?(arg_7008, arg_7009, arg_7010);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3usvEXT.xhtml
pub inline fn glSecondaryColor3usvEXT(arg_7011: [*c]const GLushort) void {
    return glad_glSecondaryColor3usvEXT.?(arg_7011);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColorPointerEXT.xhtml
pub inline fn glSecondaryColorPointerEXT(arg_7012: GLint, arg_7013: GLenum, arg_7014: GLsizei, arg_7015: ?*const anyopaque) void {
    return glad_glSecondaryColorPointerEXT.?(arg_7012, arg_7013, arg_7014, arg_7015);
}
pub const GL_EXT_semaphore = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenSemaphoresEXT.xhtml
pub inline fn glGenSemaphoresEXT(arg_7016: GLsizei, arg_7017: [*c]GLuint) void {
    return glad_glGenSemaphoresEXT.?(arg_7016, arg_7017);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteSemaphoresEXT.xhtml
pub inline fn glDeleteSemaphoresEXT(arg_7018: GLsizei, arg_7019: [*c]const GLuint) void {
    return glad_glDeleteSemaphoresEXT.?(arg_7018, arg_7019);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsSemaphoreEXT.xhtml
pub inline fn glIsSemaphoreEXT(arg_7020: GLuint) GLboolean {
    return glad_glIsSemaphoreEXT.?(arg_7020);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSemaphoreParameterui64vEXT.xhtml
pub inline fn glSemaphoreParameterui64vEXT(arg_7021: GLuint, arg_7022: GLenum, arg_7023: [*c]const GLuint64) void {
    return glad_glSemaphoreParameterui64vEXT.?(arg_7021, arg_7022, arg_7023);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetSemaphoreParameterui64vEXT.xhtml
pub inline fn glGetSemaphoreParameterui64vEXT(arg_7024: GLuint, arg_7025: GLenum, arg_7026: [*c]GLuint64) void {
    return glad_glGetSemaphoreParameterui64vEXT.?(arg_7024, arg_7025, arg_7026);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWaitSemaphoreEXT.xhtml
pub inline fn glWaitSemaphoreEXT(arg_7027: GLuint, arg_7028: GLuint, arg_7029: [*c]const GLuint, arg_7030: GLuint, arg_7031: [*c]const GLuint, arg_7032: [*c]const GLenum) void {
    return glad_glWaitSemaphoreEXT.?(arg_7027, arg_7028, arg_7029, arg_7030, arg_7031, arg_7032);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSignalSemaphoreEXT.xhtml
pub inline fn glSignalSemaphoreEXT(arg_7033: GLuint, arg_7034: GLuint, arg_7035: [*c]const GLuint, arg_7036: GLuint, arg_7037: [*c]const GLuint, arg_7038: [*c]const GLenum) void {
    return glad_glSignalSemaphoreEXT.?(arg_7033, arg_7034, arg_7035, arg_7036, arg_7037, arg_7038);
}
pub const GL_EXT_semaphore_fd = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glImportSemaphoreFdEXT.xhtml
pub inline fn glImportSemaphoreFdEXT(arg_7039: GLuint, arg_7040: GLenum, arg_7041: GLint) void {
    return glad_glImportSemaphoreFdEXT.?(arg_7039, arg_7040, arg_7041);
}
pub const GL_EXT_semaphore_win32 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glImportSemaphoreWin32HandleEXT.xhtml
pub inline fn glImportSemaphoreWin32HandleEXT(arg_7042: GLuint, arg_7043: GLenum, arg_7044: ?*anyopaque) void {
    return glad_glImportSemaphoreWin32HandleEXT.?(arg_7042, arg_7043, arg_7044);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glImportSemaphoreWin32NameEXT.xhtml
pub inline fn glImportSemaphoreWin32NameEXT(arg_7045: GLuint, arg_7046: GLenum, arg_7047: ?*const anyopaque) void {
    return glad_glImportSemaphoreWin32NameEXT.?(arg_7045, arg_7046, arg_7047);
}
pub const GL_EXT_separate_shader_objects = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUseShaderProgramEXT.xhtml
pub inline fn glUseShaderProgramEXT(arg_7048: GLenum, arg_7049: GLuint) void {
    return glad_glUseShaderProgramEXT.?(arg_7048, arg_7049);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glActiveProgramEXT.xhtml
pub inline fn glActiveProgramEXT(arg_7050: GLuint) void {
    return glad_glActiveProgramEXT.?(arg_7050);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCreateShaderProgramEXT.xhtml
pub inline fn glCreateShaderProgramEXT(arg_7051: GLenum, arg_7052: [*c]const GLchar) GLuint {
    return glad_glCreateShaderProgramEXT.?(arg_7051, arg_7052);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glActiveShaderProgramEXT.xhtml
pub inline fn glActiveShaderProgramEXT(arg_7053: GLuint, arg_7054: GLuint) void {
    return glad_glActiveShaderProgramEXT.?(arg_7053, arg_7054);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindProgramPipelineEXT.xhtml
pub inline fn glBindProgramPipelineEXT(arg_7055: GLuint) void {
    return glad_glBindProgramPipelineEXT.?(arg_7055);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCreateShaderProgramvEXT.xhtml
pub inline fn glCreateShaderProgramvEXT(arg_7056: GLenum, arg_7057: GLsizei, arg_7058: [*c]const [*c]const GLchar) GLuint {
    return glad_glCreateShaderProgramvEXT.?(arg_7056, arg_7057, arg_7058);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteProgramPipelinesEXT.xhtml
pub inline fn glDeleteProgramPipelinesEXT(arg_7059: GLsizei, arg_7060: [*c]const GLuint) void {
    return glad_glDeleteProgramPipelinesEXT.?(arg_7059, arg_7060);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenProgramPipelinesEXT.xhtml
pub inline fn glGenProgramPipelinesEXT(arg_7061: GLsizei, arg_7062: [*c]GLuint) void {
    return glad_glGenProgramPipelinesEXT.?(arg_7061, arg_7062);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramPipelineInfoLogEXT.xhtml
pub inline fn glGetProgramPipelineInfoLogEXT(arg_7063: GLuint, arg_7064: GLsizei, arg_7065: [*c]GLsizei, arg_7066: [*c]GLchar) void {
    return glad_glGetProgramPipelineInfoLogEXT.?(arg_7063, arg_7064, arg_7065, arg_7066);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramPipelineivEXT.xhtml
pub inline fn glGetProgramPipelineivEXT(arg_7067: GLuint, arg_7068: GLenum, arg_7069: [*c]GLint) void {
    return glad_glGetProgramPipelineivEXT.?(arg_7067, arg_7068, arg_7069);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsProgramPipelineEXT.xhtml
pub inline fn glIsProgramPipelineEXT(arg_7070: GLuint) GLboolean {
    return glad_glIsProgramPipelineEXT.?(arg_7070);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUseProgramStagesEXT.xhtml
pub inline fn glUseProgramStagesEXT(arg_7071: GLuint, arg_7072: GLbitfield, arg_7073: GLuint) void {
    return glad_glUseProgramStagesEXT.?(arg_7071, arg_7072, arg_7073);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glValidateProgramPipelineEXT.xhtml
pub inline fn glValidateProgramPipelineEXT(arg_7074: GLuint) void {
    return glad_glValidateProgramPipelineEXT.?(arg_7074);
}
pub const GL_EXT_separate_specular_color = 1;
pub const GL_EXT_shader_framebuffer_fetch = 1;
pub const GL_EXT_shader_framebuffer_fetch_non_coherent = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferFetchBarrierEXT.xhtml
pub inline fn glFramebufferFetchBarrierEXT() void {
    return glad_glFramebufferFetchBarrierEXT.?();
}
pub const GL_EXT_shader_image_load_formatted = 1;
pub const GL_EXT_shader_image_load_store = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindImageTextureEXT.xhtml
pub inline fn glBindImageTextureEXT(arg_7075: GLuint, arg_7076: GLuint, arg_7077: GLint, arg_7078: GLboolean, arg_7079: GLint, arg_7080: GLenum, arg_7081: GLint) void {
    return glad_glBindImageTextureEXT.?(arg_7075, arg_7076, arg_7077, arg_7078, arg_7079, arg_7080, arg_7081);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMemoryBarrierEXT.xhtml
pub inline fn glMemoryBarrierEXT(arg_7082: GLbitfield) void {
    return glad_glMemoryBarrierEXT.?(arg_7082);
}
pub const GL_EXT_shader_integer_mix = 1;
pub const GL_EXT_shader_samples_identical = 1;
pub const GL_EXT_shadow_funcs = 1;
pub const GL_EXT_shared_texture_palette = 1;
pub const GL_EXT_sparse_texture2 = 1;
pub const GL_EXT_stencil_clear_tag = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glStencilClearTagEXT.xhtml
pub inline fn glStencilClearTagEXT(arg_7083: GLsizei, arg_7084: GLuint) void {
    return glad_glStencilClearTagEXT.?(arg_7083, arg_7084);
}
pub const GL_EXT_stencil_two_side = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glActiveStencilFaceEXT.xhtml
pub inline fn glActiveStencilFaceEXT(arg_7085: GLenum) void {
    return glad_glActiveStencilFaceEXT.?(arg_7085);
}
pub const GL_EXT_stencil_wrap = 1;
pub const GL_EXT_subtexture = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexSubImage1DEXT.xhtml
pub inline fn glTexSubImage1DEXT(arg_7086: GLenum, arg_7087: GLint, arg_7088: GLint, arg_7089: GLsizei, arg_7090: GLenum, arg_7091: GLenum, arg_7092: ?*const anyopaque) void {
    return glad_glTexSubImage1DEXT.?(arg_7086, arg_7087, arg_7088, arg_7089, arg_7090, arg_7091, arg_7092);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexSubImage2DEXT.xhtml
pub inline fn glTexSubImage2DEXT(arg_7093: GLenum, arg_7094: GLint, arg_7095: GLint, arg_7096: GLint, arg_7097: GLsizei, arg_7098: GLsizei, arg_7099: GLenum, arg_7100: GLenum, arg_7101: ?*const anyopaque) void {
    return glad_glTexSubImage2DEXT.?(arg_7093, arg_7094, arg_7095, arg_7096, arg_7097, arg_7098, arg_7099, arg_7100, arg_7101);
}
pub const GL_EXT_texture = 1;
pub const GL_EXT_texture3D = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexImage3DEXT.xhtml
pub inline fn glTexImage3DEXT(arg_7102: GLenum, arg_7103: GLint, arg_7104: GLenum, arg_7105: GLsizei, arg_7106: GLsizei, arg_7107: GLsizei, arg_7108: GLint, arg_7109: GLenum, arg_7110: GLenum, arg_7111: ?*const anyopaque) void {
    return glad_glTexImage3DEXT.?(arg_7102, arg_7103, arg_7104, arg_7105, arg_7106, arg_7107, arg_7108, arg_7109, arg_7110, arg_7111);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexSubImage3DEXT.xhtml
pub inline fn glTexSubImage3DEXT(arg_7112: GLenum, arg_7113: GLint, arg_7114: GLint, arg_7115: GLint, arg_7116: GLint, arg_7117: GLsizei, arg_7118: GLsizei, arg_7119: GLsizei, arg_7120: GLenum, arg_7121: GLenum, arg_7122: ?*const anyopaque) void {
    return glad_glTexSubImage3DEXT.?(arg_7112, arg_7113, arg_7114, arg_7115, arg_7116, arg_7117, arg_7118, arg_7119, arg_7120, arg_7121, arg_7122);
}
pub const GL_EXT_texture_array = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferTextureLayerEXT.xhtml
pub inline fn glFramebufferTextureLayerEXT(arg_7123: GLenum, arg_7124: GLenum, arg_7125: GLuint, arg_7126: GLint, arg_7127: GLint) void {
    return glad_glFramebufferTextureLayerEXT.?(arg_7123, arg_7124, arg_7125, arg_7126, arg_7127);
}
pub const GL_EXT_texture_buffer_object = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexBufferEXT.xhtml
pub inline fn glTexBufferEXT(arg_7128: GLenum, arg_7129: GLenum, arg_7130: GLuint) void {
    return glad_glTexBufferEXT.?(arg_7128, arg_7129, arg_7130);
}
pub const GL_EXT_texture_compression_latc = 1;
pub const GL_EXT_texture_compression_rgtc = 1;
pub const GL_EXT_texture_compression_s3tc = 1;
pub const GL_EXT_texture_cube_map = 1;
pub const GL_EXT_texture_env_add = 1;
pub const GL_EXT_texture_env_combine = 1;
pub const GL_EXT_texture_env_dot3 = 1;
pub const GL_EXT_texture_filter_anisotropic = 1;
pub const GL_EXT_texture_filter_minmax = 1;
pub const GL_EXT_texture_integer = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexParameterIivEXT.xhtml
pub inline fn glTexParameterIivEXT(arg_7131: GLenum, arg_7132: GLenum, arg_7133: [*c]const GLint) void {
    return glad_glTexParameterIivEXT.?(arg_7131, arg_7132, arg_7133);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexParameterIuivEXT.xhtml
pub inline fn glTexParameterIuivEXT(arg_7134: GLenum, arg_7135: GLenum, arg_7136: [*c]const GLuint) void {
    return glad_glTexParameterIuivEXT.?(arg_7134, arg_7135, arg_7136);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexParameterIivEXT.xhtml
pub inline fn glGetTexParameterIivEXT(arg_7137: GLenum, arg_7138: GLenum, arg_7139: [*c]GLint) void {
    return glad_glGetTexParameterIivEXT.?(arg_7137, arg_7138, arg_7139);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexParameterIuivEXT.xhtml
pub inline fn glGetTexParameterIuivEXT(arg_7140: GLenum, arg_7141: GLenum, arg_7142: [*c]GLuint) void {
    return glad_glGetTexParameterIuivEXT.?(arg_7140, arg_7141, arg_7142);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearColorIiEXT.xhtml
pub inline fn glClearColorIiEXT(arg_7143: GLint, arg_7144: GLint, arg_7145: GLint, arg_7146: GLint) void {
    return glad_glClearColorIiEXT.?(arg_7143, arg_7144, arg_7145, arg_7146);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearColorIuiEXT.xhtml
pub inline fn glClearColorIuiEXT(arg_7147: GLuint, arg_7148: GLuint, arg_7149: GLuint, arg_7150: GLuint) void {
    return glad_glClearColorIuiEXT.?(arg_7147, arg_7148, arg_7149, arg_7150);
}
pub const GL_EXT_texture_lod_bias = 1;
pub const GL_EXT_texture_mirror_clamp = 1;
pub const GL_EXT_texture_object = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glAreTexturesResidentEXT.xhtml
pub inline fn glAreTexturesResidentEXT(arg_7151: GLsizei, arg_7152: [*c]const GLuint, arg_7153: [*c]GLboolean) GLboolean {
    return glad_glAreTexturesResidentEXT.?(arg_7151, arg_7152, arg_7153);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindTextureEXT.xhtml
pub inline fn glBindTextureEXT(arg_7154: GLenum, arg_7155: GLuint) void {
    return glad_glBindTextureEXT.?(arg_7154, arg_7155);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteTexturesEXT.xhtml
pub inline fn glDeleteTexturesEXT(arg_7156: GLsizei, arg_7157: [*c]const GLuint) void {
    return glad_glDeleteTexturesEXT.?(arg_7156, arg_7157);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenTexturesEXT.xhtml
pub inline fn glGenTexturesEXT(arg_7158: GLsizei, arg_7159: [*c]GLuint) void {
    return glad_glGenTexturesEXT.?(arg_7158, arg_7159);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsTextureEXT.xhtml
pub inline fn glIsTextureEXT(arg_7160: GLuint) GLboolean {
    return glad_glIsTextureEXT.?(arg_7160);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPrioritizeTexturesEXT.xhtml
pub inline fn glPrioritizeTexturesEXT(arg_7161: GLsizei, arg_7162: [*c]const GLuint, arg_7163: [*c]const GLclampf) void {
    return glad_glPrioritizeTexturesEXT.?(arg_7161, arg_7162, arg_7163);
}
pub const GL_EXT_texture_perturb_normal = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureNormalEXT.xhtml
pub inline fn glTextureNormalEXT(arg_7164: GLenum) void {
    return glad_glTextureNormalEXT.?(arg_7164);
}
pub const GL_EXT_texture_sRGB = 1;
pub const GL_EXT_texture_sRGB_R8 = 1;
pub const GL_EXT_texture_sRGB_RG8 = 1;
pub const GL_EXT_texture_sRGB_decode = 1;
pub const GL_EXT_texture_shadow_lod = 1;
pub const GL_EXT_texture_shared_exponent = 1;
pub const GL_EXT_texture_snorm = 1;
pub const GL_EXT_texture_storage = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexStorage1DEXT.xhtml
pub inline fn glTexStorage1DEXT(arg_7165: GLenum, arg_7166: GLsizei, arg_7167: GLenum, arg_7168: GLsizei) void {
    return glad_glTexStorage1DEXT.?(arg_7165, arg_7166, arg_7167, arg_7168);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexStorage2DEXT.xhtml
pub inline fn glTexStorage2DEXT(arg_7169: GLenum, arg_7170: GLsizei, arg_7171: GLenum, arg_7172: GLsizei, arg_7173: GLsizei) void {
    return glad_glTexStorage2DEXT.?(arg_7169, arg_7170, arg_7171, arg_7172, arg_7173);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexStorage3DEXT.xhtml
pub inline fn glTexStorage3DEXT(arg_7174: GLenum, arg_7175: GLsizei, arg_7176: GLenum, arg_7177: GLsizei, arg_7178: GLsizei, arg_7179: GLsizei) void {
    return glad_glTexStorage3DEXT.?(arg_7174, arg_7175, arg_7176, arg_7177, arg_7178, arg_7179);
}
pub const GL_EXT_texture_swizzle = 1;
pub const GL_EXT_timer_query = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetQueryObjecti64vEXT.xhtml
pub inline fn glGetQueryObjecti64vEXT(arg_7180: GLuint, arg_7181: GLenum, arg_7182: [*c]GLint64) void {
    return glad_glGetQueryObjecti64vEXT.?(arg_7180, arg_7181, arg_7182);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetQueryObjectui64vEXT.xhtml
pub inline fn glGetQueryObjectui64vEXT(arg_7183: GLuint, arg_7184: GLenum, arg_7185: [*c]GLuint64) void {
    return glad_glGetQueryObjectui64vEXT.?(arg_7183, arg_7184, arg_7185);
}
pub const GL_EXT_transform_feedback = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBeginTransformFeedbackEXT.xhtml
pub inline fn glBeginTransformFeedbackEXT(arg_7186: GLenum) void {
    return glad_glBeginTransformFeedbackEXT.?(arg_7186);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEndTransformFeedbackEXT.xhtml
pub inline fn glEndTransformFeedbackEXT() void {
    return glad_glEndTransformFeedbackEXT.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindBufferRangeEXT.xhtml
pub inline fn glBindBufferRangeEXT(arg_7187: GLenum, arg_7188: GLuint, arg_7189: GLuint, arg_7190: GLintptr, arg_7191: GLsizeiptr) void {
    return glad_glBindBufferRangeEXT.?(arg_7187, arg_7188, arg_7189, arg_7190, arg_7191);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindBufferOffsetEXT.xhtml
pub inline fn glBindBufferOffsetEXT(arg_7192: GLenum, arg_7193: GLuint, arg_7194: GLuint, arg_7195: GLintptr) void {
    return glad_glBindBufferOffsetEXT.?(arg_7192, arg_7193, arg_7194, arg_7195);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindBufferBaseEXT.xhtml
pub inline fn glBindBufferBaseEXT(arg_7196: GLenum, arg_7197: GLuint, arg_7198: GLuint) void {
    return glad_glBindBufferBaseEXT.?(arg_7196, arg_7197, arg_7198);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTransformFeedbackVaryingsEXT.xhtml
pub inline fn glTransformFeedbackVaryingsEXT(arg_7199: GLuint, arg_7200: GLsizei, arg_7201: [*c]const [*c]const GLchar, arg_7202: GLenum) void {
    return glad_glTransformFeedbackVaryingsEXT.?(arg_7199, arg_7200, arg_7201, arg_7202);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTransformFeedbackVaryingEXT.xhtml
pub inline fn glGetTransformFeedbackVaryingEXT(arg_7203: GLuint, arg_7204: GLuint, arg_7205: GLsizei, arg_7206: [*c]GLsizei, arg_7207: [*c]GLsizei, arg_7208: [*c]GLenum, arg_7209: [*c]GLchar) void {
    return glad_glGetTransformFeedbackVaryingEXT.?(arg_7203, arg_7204, arg_7205, arg_7206, arg_7207, arg_7208, arg_7209);
}
pub const GL_EXT_vertex_array = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glArrayElementEXT.xhtml
pub inline fn glArrayElementEXT(arg_7210: GLint) void {
    return glad_glArrayElementEXT.?(arg_7210);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorPointerEXT.xhtml
pub inline fn glColorPointerEXT(arg_7211: GLint, arg_7212: GLenum, arg_7213: GLsizei, arg_7214: GLsizei, arg_7215: ?*const anyopaque) void {
    return glad_glColorPointerEXT.?(arg_7211, arg_7212, arg_7213, arg_7214, arg_7215);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawArraysEXT.xhtml
pub inline fn glDrawArraysEXT(arg_7216: GLenum, arg_7217: GLint, arg_7218: GLsizei) void {
    return glad_glDrawArraysEXT.?(arg_7216, arg_7217, arg_7218);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEdgeFlagPointerEXT.xhtml
pub inline fn glEdgeFlagPointerEXT(arg_7219: GLsizei, arg_7220: GLsizei, arg_7221: [*c]const GLboolean) void {
    return glad_glEdgeFlagPointerEXT.?(arg_7219, arg_7220, arg_7221);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPointervEXT.xhtml
pub inline fn glGetPointervEXT(arg_7222: GLenum, arg_7223: [*c]?*anyopaque) void {
    return glad_glGetPointervEXT.?(arg_7222, arg_7223);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIndexPointerEXT.xhtml
pub inline fn glIndexPointerEXT(arg_7224: GLenum, arg_7225: GLsizei, arg_7226: GLsizei, arg_7227: ?*const anyopaque) void {
    return glad_glIndexPointerEXT.?(arg_7224, arg_7225, arg_7226, arg_7227);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNormalPointerEXT.xhtml
pub inline fn glNormalPointerEXT(arg_7228: GLenum, arg_7229: GLsizei, arg_7230: GLsizei, arg_7231: ?*const anyopaque) void {
    return glad_glNormalPointerEXT.?(arg_7228, arg_7229, arg_7230, arg_7231);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoordPointerEXT.xhtml
pub inline fn glTexCoordPointerEXT(arg_7232: GLint, arg_7233: GLenum, arg_7234: GLsizei, arg_7235: GLsizei, arg_7236: ?*const anyopaque) void {
    return glad_glTexCoordPointerEXT.?(arg_7232, arg_7233, arg_7234, arg_7235, arg_7236);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexPointerEXT.xhtml
pub inline fn glVertexPointerEXT(arg_7237: GLint, arg_7238: GLenum, arg_7239: GLsizei, arg_7240: GLsizei, arg_7241: ?*const anyopaque) void {
    return glad_glVertexPointerEXT.?(arg_7237, arg_7238, arg_7239, arg_7240, arg_7241);
}
pub const GL_EXT_vertex_array_bgra = 1;
pub const GL_EXT_vertex_attrib_64bit = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL1dEXT.xhtml
pub inline fn glVertexAttribL1dEXT(arg_7242: GLuint, arg_7243: GLdouble) void {
    return glad_glVertexAttribL1dEXT.?(arg_7242, arg_7243);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL2dEXT.xhtml
pub inline fn glVertexAttribL2dEXT(arg_7244: GLuint, arg_7245: GLdouble, arg_7246: GLdouble) void {
    return glad_glVertexAttribL2dEXT.?(arg_7244, arg_7245, arg_7246);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL3dEXT.xhtml
pub inline fn glVertexAttribL3dEXT(arg_7247: GLuint, arg_7248: GLdouble, arg_7249: GLdouble, arg_7250: GLdouble) void {
    return glad_glVertexAttribL3dEXT.?(arg_7247, arg_7248, arg_7249, arg_7250);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL4dEXT.xhtml
pub inline fn glVertexAttribL4dEXT(arg_7251: GLuint, arg_7252: GLdouble, arg_7253: GLdouble, arg_7254: GLdouble, arg_7255: GLdouble) void {
    return glad_glVertexAttribL4dEXT.?(arg_7251, arg_7252, arg_7253, arg_7254, arg_7255);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL1dvEXT.xhtml
pub inline fn glVertexAttribL1dvEXT(arg_7256: GLuint, arg_7257: [*c]const GLdouble) void {
    return glad_glVertexAttribL1dvEXT.?(arg_7256, arg_7257);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL2dvEXT.xhtml
pub inline fn glVertexAttribL2dvEXT(arg_7258: GLuint, arg_7259: [*c]const GLdouble) void {
    return glad_glVertexAttribL2dvEXT.?(arg_7258, arg_7259);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL3dvEXT.xhtml
pub inline fn glVertexAttribL3dvEXT(arg_7260: GLuint, arg_7261: [*c]const GLdouble) void {
    return glad_glVertexAttribL3dvEXT.?(arg_7260, arg_7261);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL4dvEXT.xhtml
pub inline fn glVertexAttribL4dvEXT(arg_7262: GLuint, arg_7263: [*c]const GLdouble) void {
    return glad_glVertexAttribL4dvEXT.?(arg_7262, arg_7263);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribLPointerEXT.xhtml
pub inline fn glVertexAttribLPointerEXT(arg_7264: GLuint, arg_7265: GLint, arg_7266: GLenum, arg_7267: GLsizei, arg_7268: ?*const anyopaque) void {
    return glad_glVertexAttribLPointerEXT.?(arg_7264, arg_7265, arg_7266, arg_7267, arg_7268);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexAttribLdvEXT.xhtml
pub inline fn glGetVertexAttribLdvEXT(arg_7269: GLuint, arg_7270: GLenum, arg_7271: [*c]GLdouble) void {
    return glad_glGetVertexAttribLdvEXT.?(arg_7269, arg_7270, arg_7271);
}
pub const GL_EXT_vertex_shader = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBeginVertexShaderEXT.xhtml
pub inline fn glBeginVertexShaderEXT() void {
    return glad_glBeginVertexShaderEXT.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEndVertexShaderEXT.xhtml
pub inline fn glEndVertexShaderEXT() void {
    return glad_glEndVertexShaderEXT.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindVertexShaderEXT.xhtml
pub inline fn glBindVertexShaderEXT(arg_7272: GLuint) void {
    return glad_glBindVertexShaderEXT.?(arg_7272);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenVertexShadersEXT.xhtml
pub inline fn glGenVertexShadersEXT(arg_7273: GLuint) GLuint {
    return glad_glGenVertexShadersEXT.?(arg_7273);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteVertexShaderEXT.xhtml
pub inline fn glDeleteVertexShaderEXT(arg_7274: GLuint) void {
    return glad_glDeleteVertexShaderEXT.?(arg_7274);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glShaderOp1EXT.xhtml
pub inline fn glShaderOp1EXT(arg_7275: GLenum, arg_7276: GLuint, arg_7277: GLuint) void {
    return glad_glShaderOp1EXT.?(arg_7275, arg_7276, arg_7277);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glShaderOp2EXT.xhtml
pub inline fn glShaderOp2EXT(arg_7278: GLenum, arg_7279: GLuint, arg_7280: GLuint, arg_7281: GLuint) void {
    return glad_glShaderOp2EXT.?(arg_7278, arg_7279, arg_7280, arg_7281);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glShaderOp3EXT.xhtml
pub inline fn glShaderOp3EXT(arg_7282: GLenum, arg_7283: GLuint, arg_7284: GLuint, arg_7285: GLuint, arg_7286: GLuint) void {
    return glad_glShaderOp3EXT.?(arg_7282, arg_7283, arg_7284, arg_7285, arg_7286);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSwizzleEXT.xhtml
pub inline fn glSwizzleEXT(arg_7287: GLuint, arg_7288: GLuint, arg_7289: GLenum, arg_7290: GLenum, arg_7291: GLenum, arg_7292: GLenum) void {
    return glad_glSwizzleEXT.?(arg_7287, arg_7288, arg_7289, arg_7290, arg_7291, arg_7292);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWriteMaskEXT.xhtml
pub inline fn glWriteMaskEXT(arg_7293: GLuint, arg_7294: GLuint, arg_7295: GLenum, arg_7296: GLenum, arg_7297: GLenum, arg_7298: GLenum) void {
    return glad_glWriteMaskEXT.?(arg_7293, arg_7294, arg_7295, arg_7296, arg_7297, arg_7298);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glInsertComponentEXT.xhtml
pub inline fn glInsertComponentEXT(arg_7299: GLuint, arg_7300: GLuint, arg_7301: GLuint) void {
    return glad_glInsertComponentEXT.?(arg_7299, arg_7300, arg_7301);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glExtractComponentEXT.xhtml
pub inline fn glExtractComponentEXT(arg_7302: GLuint, arg_7303: GLuint, arg_7304: GLuint) void {
    return glad_glExtractComponentEXT.?(arg_7302, arg_7303, arg_7304);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenSymbolsEXT.xhtml
pub inline fn glGenSymbolsEXT(arg_7305: GLenum, arg_7306: GLenum, arg_7307: GLenum, arg_7308: GLuint) GLuint {
    return glad_glGenSymbolsEXT.?(arg_7305, arg_7306, arg_7307, arg_7308);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSetInvariantEXT.xhtml
pub inline fn glSetInvariantEXT(arg_7309: GLuint, arg_7310: GLenum, arg_7311: ?*const anyopaque) void {
    return glad_glSetInvariantEXT.?(arg_7309, arg_7310, arg_7311);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSetLocalConstantEXT.xhtml
pub inline fn glSetLocalConstantEXT(arg_7312: GLuint, arg_7313: GLenum, arg_7314: ?*const anyopaque) void {
    return glad_glSetLocalConstantEXT.?(arg_7312, arg_7313, arg_7314);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVariantbvEXT.xhtml
pub inline fn glVariantbvEXT(arg_7315: GLuint, arg_7316: [*c]const GLbyte) void {
    return glad_glVariantbvEXT.?(arg_7315, arg_7316);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVariantsvEXT.xhtml
pub inline fn glVariantsvEXT(arg_7317: GLuint, arg_7318: [*c]const GLshort) void {
    return glad_glVariantsvEXT.?(arg_7317, arg_7318);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVariantivEXT.xhtml
pub inline fn glVariantivEXT(arg_7319: GLuint, arg_7320: [*c]const GLint) void {
    return glad_glVariantivEXT.?(arg_7319, arg_7320);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVariantfvEXT.xhtml
pub inline fn glVariantfvEXT(arg_7321: GLuint, arg_7322: [*c]const GLfloat) void {
    return glad_glVariantfvEXT.?(arg_7321, arg_7322);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVariantdvEXT.xhtml
pub inline fn glVariantdvEXT(arg_7323: GLuint, arg_7324: [*c]const GLdouble) void {
    return glad_glVariantdvEXT.?(arg_7323, arg_7324);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVariantubvEXT.xhtml
pub inline fn glVariantubvEXT(arg_7325: GLuint, arg_7326: [*c]const GLubyte) void {
    return glad_glVariantubvEXT.?(arg_7325, arg_7326);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVariantusvEXT.xhtml
pub inline fn glVariantusvEXT(arg_7327: GLuint, arg_7328: [*c]const GLushort) void {
    return glad_glVariantusvEXT.?(arg_7327, arg_7328);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVariantuivEXT.xhtml
pub inline fn glVariantuivEXT(arg_7329: GLuint, arg_7330: [*c]const GLuint) void {
    return glad_glVariantuivEXT.?(arg_7329, arg_7330);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVariantPointerEXT.xhtml
pub inline fn glVariantPointerEXT(arg_7331: GLuint, arg_7332: GLenum, arg_7333: GLuint, arg_7334: ?*const anyopaque) void {
    return glad_glVariantPointerEXT.?(arg_7331, arg_7332, arg_7333, arg_7334);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEnableVariantClientStateEXT.xhtml
pub inline fn glEnableVariantClientStateEXT(arg_7335: GLuint) void {
    return glad_glEnableVariantClientStateEXT.?(arg_7335);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDisableVariantClientStateEXT.xhtml
pub inline fn glDisableVariantClientStateEXT(arg_7336: GLuint) void {
    return glad_glDisableVariantClientStateEXT.?(arg_7336);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindLightParameterEXT.xhtml
pub inline fn glBindLightParameterEXT(arg_7337: GLenum, arg_7338: GLenum) GLuint {
    return glad_glBindLightParameterEXT.?(arg_7337, arg_7338);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindMaterialParameterEXT.xhtml
pub inline fn glBindMaterialParameterEXT(arg_7339: GLenum, arg_7340: GLenum) GLuint {
    return glad_glBindMaterialParameterEXT.?(arg_7339, arg_7340);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindTexGenParameterEXT.xhtml
pub inline fn glBindTexGenParameterEXT(arg_7341: GLenum, arg_7342: GLenum, arg_7343: GLenum) GLuint {
    return glad_glBindTexGenParameterEXT.?(arg_7341, arg_7342, arg_7343);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindTextureUnitParameterEXT.xhtml
pub inline fn glBindTextureUnitParameterEXT(arg_7344: GLenum, arg_7345: GLenum) GLuint {
    return glad_glBindTextureUnitParameterEXT.?(arg_7344, arg_7345);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindParameterEXT.xhtml
pub inline fn glBindParameterEXT(arg_7346: GLenum) GLuint {
    return glad_glBindParameterEXT.?(arg_7346);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsVariantEnabledEXT.xhtml
pub inline fn glIsVariantEnabledEXT(arg_7347: GLuint, arg_7348: GLenum) GLboolean {
    return glad_glIsVariantEnabledEXT.?(arg_7347, arg_7348);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVariantBooleanvEXT.xhtml
pub inline fn glGetVariantBooleanvEXT(arg_7349: GLuint, arg_7350: GLenum, arg_7351: [*c]GLboolean) void {
    return glad_glGetVariantBooleanvEXT.?(arg_7349, arg_7350, arg_7351);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVariantIntegervEXT.xhtml
pub inline fn glGetVariantIntegervEXT(arg_7352: GLuint, arg_7353: GLenum, arg_7354: [*c]GLint) void {
    return glad_glGetVariantIntegervEXT.?(arg_7352, arg_7353, arg_7354);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVariantFloatvEXT.xhtml
pub inline fn glGetVariantFloatvEXT(arg_7355: GLuint, arg_7356: GLenum, arg_7357: [*c]GLfloat) void {
    return glad_glGetVariantFloatvEXT.?(arg_7355, arg_7356, arg_7357);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVariantPointervEXT.xhtml
pub inline fn glGetVariantPointervEXT(arg_7358: GLuint, arg_7359: GLenum, arg_7360: [*c]?*anyopaque) void {
    return glad_glGetVariantPointervEXT.?(arg_7358, arg_7359, arg_7360);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetInvariantBooleanvEXT.xhtml
pub inline fn glGetInvariantBooleanvEXT(arg_7361: GLuint, arg_7362: GLenum, arg_7363: [*c]GLboolean) void {
    return glad_glGetInvariantBooleanvEXT.?(arg_7361, arg_7362, arg_7363);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetInvariantIntegervEXT.xhtml
pub inline fn glGetInvariantIntegervEXT(arg_7364: GLuint, arg_7365: GLenum, arg_7366: [*c]GLint) void {
    return glad_glGetInvariantIntegervEXT.?(arg_7364, arg_7365, arg_7366);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetInvariantFloatvEXT.xhtml
pub inline fn glGetInvariantFloatvEXT(arg_7367: GLuint, arg_7368: GLenum, arg_7369: [*c]GLfloat) void {
    return glad_glGetInvariantFloatvEXT.?(arg_7367, arg_7368, arg_7369);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetLocalConstantBooleanvEXT.xhtml
pub inline fn glGetLocalConstantBooleanvEXT(arg_7370: GLuint, arg_7371: GLenum, arg_7372: [*c]GLboolean) void {
    return glad_glGetLocalConstantBooleanvEXT.?(arg_7370, arg_7371, arg_7372);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetLocalConstantIntegervEXT.xhtml
pub inline fn glGetLocalConstantIntegervEXT(arg_7373: GLuint, arg_7374: GLenum, arg_7375: [*c]GLint) void {
    return glad_glGetLocalConstantIntegervEXT.?(arg_7373, arg_7374, arg_7375);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetLocalConstantFloatvEXT.xhtml
pub inline fn glGetLocalConstantFloatvEXT(arg_7376: GLuint, arg_7377: GLenum, arg_7378: [*c]GLfloat) void {
    return glad_glGetLocalConstantFloatvEXT.?(arg_7376, arg_7377, arg_7378);
}
pub const GL_EXT_vertex_weighting = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexWeightfEXT.xhtml
pub inline fn glVertexWeightfEXT(arg_7379: GLfloat) void {
    return glad_glVertexWeightfEXT.?(arg_7379);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexWeightfvEXT.xhtml
pub inline fn glVertexWeightfvEXT(arg_7380: [*c]const GLfloat) void {
    return glad_glVertexWeightfvEXT.?(arg_7380);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexWeightPointerEXT.xhtml
pub inline fn glVertexWeightPointerEXT(arg_7381: GLint, arg_7382: GLenum, arg_7383: GLsizei, arg_7384: ?*const anyopaque) void {
    return glad_glVertexWeightPointerEXT.?(arg_7381, arg_7382, arg_7383, arg_7384);
}
pub const GL_EXT_win32_keyed_mutex = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glAcquireKeyedMutexWin32EXT.xhtml
pub inline fn glAcquireKeyedMutexWin32EXT(arg_7385: GLuint, arg_7386: GLuint64, arg_7387: GLuint) GLboolean {
    return glad_glAcquireKeyedMutexWin32EXT.?(arg_7385, arg_7386, arg_7387);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReleaseKeyedMutexWin32EXT.xhtml
pub inline fn glReleaseKeyedMutexWin32EXT(arg_7388: GLuint, arg_7389: GLuint64) GLboolean {
    return glad_glReleaseKeyedMutexWin32EXT.?(arg_7388, arg_7389);
}
pub const GL_EXT_window_rectangles = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowRectanglesEXT.xhtml
pub inline fn glWindowRectanglesEXT(arg_7390: GLenum, arg_7391: GLsizei, arg_7392: [*c]const GLint) void {
    return glad_glWindowRectanglesEXT.?(arg_7390, arg_7391, arg_7392);
}
pub const GL_EXT_x11_sync_object = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glImportSyncEXT.xhtml
pub inline fn glImportSyncEXT(arg_7393: GLenum, arg_7394: GLintptr, arg_7395: GLbitfield) GLsync {
    return glad_glImportSyncEXT.?(arg_7393, arg_7394, arg_7395);
}
pub const GL_GREMEDY_frame_terminator = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFrameTerminatorGREMEDY.xhtml
pub inline fn glFrameTerminatorGREMEDY() void {
    return glad_glFrameTerminatorGREMEDY.?();
}
pub const GL_GREMEDY_string_marker = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glStringMarkerGREMEDY.xhtml
pub inline fn glStringMarkerGREMEDY(arg_7396: GLsizei, arg_7397: ?*const anyopaque) void {
    return glad_glStringMarkerGREMEDY.?(arg_7396, arg_7397);
}
pub const GL_HP_convolution_border_modes = 1;
pub const GL_HP_image_transform = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glImageTransformParameteriHP.xhtml
pub inline fn glImageTransformParameteriHP(arg_7398: GLenum, arg_7399: GLenum, arg_7400: GLint) void {
    return glad_glImageTransformParameteriHP.?(arg_7398, arg_7399, arg_7400);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glImageTransformParameterfHP.xhtml
pub inline fn glImageTransformParameterfHP(arg_7401: GLenum, arg_7402: GLenum, arg_7403: GLfloat) void {
    return glad_glImageTransformParameterfHP.?(arg_7401, arg_7402, arg_7403);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glImageTransformParameterivHP.xhtml
pub inline fn glImageTransformParameterivHP(arg_7404: GLenum, arg_7405: GLenum, arg_7406: [*c]const GLint) void {
    return glad_glImageTransformParameterivHP.?(arg_7404, arg_7405, arg_7406);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glImageTransformParameterfvHP.xhtml
pub inline fn glImageTransformParameterfvHP(arg_7407: GLenum, arg_7408: GLenum, arg_7409: [*c]const GLfloat) void {
    return glad_glImageTransformParameterfvHP.?(arg_7407, arg_7408, arg_7409);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetImageTransformParameterivHP.xhtml
pub inline fn glGetImageTransformParameterivHP(arg_7410: GLenum, arg_7411: GLenum, arg_7412: [*c]GLint) void {
    return glad_glGetImageTransformParameterivHP.?(arg_7410, arg_7411, arg_7412);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetImageTransformParameterfvHP.xhtml
pub inline fn glGetImageTransformParameterfvHP(arg_7413: GLenum, arg_7414: GLenum, arg_7415: [*c]GLfloat) void {
    return glad_glGetImageTransformParameterfvHP.?(arg_7413, arg_7414, arg_7415);
}
pub const GL_HP_occlusion_test = 1;
pub const GL_HP_texture_lighting = 1;
pub const GL_IBM_cull_vertex = 1;
pub const GL_IBM_multimode_draw_arrays = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiModeDrawArraysIBM.xhtml
pub inline fn glMultiModeDrawArraysIBM(arg_7416: [*c]const GLenum, arg_7417: [*c]const GLint, arg_7418: [*c]const GLsizei, arg_7419: GLsizei, arg_7420: GLint) void {
    return glad_glMultiModeDrawArraysIBM.?(arg_7416, arg_7417, arg_7418, arg_7419, arg_7420);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiModeDrawElementsIBM.xhtml
pub inline fn glMultiModeDrawElementsIBM(arg_7421: [*c]const GLenum, arg_7422: [*c]const GLsizei, arg_7423: GLenum, arg_7424: [*c]const ?*const anyopaque, arg_7425: GLsizei, arg_7426: GLint) void {
    return glad_glMultiModeDrawElementsIBM.?(arg_7421, arg_7422, arg_7423, arg_7424, arg_7425, arg_7426);
}
pub const GL_IBM_rasterpos_clip = 1;
pub const GL_IBM_static_data = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFlushStaticDataIBM.xhtml
pub inline fn glFlushStaticDataIBM(arg_7427: GLenum) void {
    return glad_glFlushStaticDataIBM.?(arg_7427);
}
pub const GL_IBM_texture_mirrored_repeat = 1;
pub const GL_IBM_vertex_array_lists = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorPointerListIBM.xhtml
pub inline fn glColorPointerListIBM(arg_7428: GLint, arg_7429: GLenum, arg_7430: GLint, arg_7431: [*c]?*const anyopaque, arg_7432: GLint) void {
    return glad_glColorPointerListIBM.?(arg_7428, arg_7429, arg_7430, arg_7431, arg_7432);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColorPointerListIBM.xhtml
pub inline fn glSecondaryColorPointerListIBM(arg_7433: GLint, arg_7434: GLenum, arg_7435: GLint, arg_7436: [*c]?*const anyopaque, arg_7437: GLint) void {
    return glad_glSecondaryColorPointerListIBM.?(arg_7433, arg_7434, arg_7435, arg_7436, arg_7437);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEdgeFlagPointerListIBM.xhtml
pub inline fn glEdgeFlagPointerListIBM(arg_7438: GLint, arg_7439: [*c][*c]const GLboolean, arg_7440: GLint) void {
    return glad_glEdgeFlagPointerListIBM.?(arg_7438, arg_7439, arg_7440);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFogCoordPointerListIBM.xhtml
pub inline fn glFogCoordPointerListIBM(arg_7441: GLenum, arg_7442: GLint, arg_7443: [*c]?*const anyopaque, arg_7444: GLint) void {
    return glad_glFogCoordPointerListIBM.?(arg_7441, arg_7442, arg_7443, arg_7444);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIndexPointerListIBM.xhtml
pub inline fn glIndexPointerListIBM(arg_7445: GLenum, arg_7446: GLint, arg_7447: [*c]?*const anyopaque, arg_7448: GLint) void {
    return glad_glIndexPointerListIBM.?(arg_7445, arg_7446, arg_7447, arg_7448);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNormalPointerListIBM.xhtml
pub inline fn glNormalPointerListIBM(arg_7449: GLenum, arg_7450: GLint, arg_7451: [*c]?*const anyopaque, arg_7452: GLint) void {
    return glad_glNormalPointerListIBM.?(arg_7449, arg_7450, arg_7451, arg_7452);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoordPointerListIBM.xhtml
pub inline fn glTexCoordPointerListIBM(arg_7453: GLint, arg_7454: GLenum, arg_7455: GLint, arg_7456: [*c]?*const anyopaque, arg_7457: GLint) void {
    return glad_glTexCoordPointerListIBM.?(arg_7453, arg_7454, arg_7455, arg_7456, arg_7457);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexPointerListIBM.xhtml
pub inline fn glVertexPointerListIBM(arg_7458: GLint, arg_7459: GLenum, arg_7460: GLint, arg_7461: [*c]?*const anyopaque, arg_7462: GLint) void {
    return glad_glVertexPointerListIBM.?(arg_7458, arg_7459, arg_7460, arg_7461, arg_7462);
}
pub const GL_INGR_blend_func_separate = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendFuncSeparateINGR.xhtml
pub inline fn glBlendFuncSeparateINGR(arg_7463: GLenum, arg_7464: GLenum, arg_7465: GLenum, arg_7466: GLenum) void {
    return glad_glBlendFuncSeparateINGR.?(arg_7463, arg_7464, arg_7465, arg_7466);
}
pub const GL_INGR_color_clamp = 1;
pub const GL_INGR_interlace_read = 1;
pub const GL_INTEL_blackhole_render = 1;
pub const GL_INTEL_conservative_rasterization = 1;
pub const GL_INTEL_fragment_shader_ordering = 1;
pub const GL_INTEL_framebuffer_CMAA = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glApplyFramebufferAttachmentCMAAINTEL.xhtml
pub inline fn glApplyFramebufferAttachmentCMAAINTEL() void {
    return glad_glApplyFramebufferAttachmentCMAAINTEL.?();
}
pub const GL_INTEL_map_texture = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSyncTextureINTEL.xhtml
pub inline fn glSyncTextureINTEL(arg_7467: GLuint) void {
    return glad_glSyncTextureINTEL.?(arg_7467);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUnmapTexture2DINTEL.xhtml
pub inline fn glUnmapTexture2DINTEL(arg_7468: GLuint, arg_7469: GLint) void {
    return glad_glUnmapTexture2DINTEL.?(arg_7468, arg_7469);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMapTexture2DINTEL.xhtml
pub inline fn glMapTexture2DINTEL(arg_7470: GLuint, arg_7471: GLint, arg_7472: GLbitfield, arg_7473: [*c]GLint, arg_7474: [*c]GLenum) ?*anyopaque {
    return glad_glMapTexture2DINTEL.?(arg_7470, arg_7471, arg_7472, arg_7473, arg_7474);
}
pub const GL_INTEL_parallel_arrays = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexPointervINTEL.xhtml
pub inline fn glVertexPointervINTEL(arg_7475: GLint, arg_7476: GLenum, arg_7477: [*c]?*const anyopaque) void {
    return glad_glVertexPointervINTEL.?(arg_7475, arg_7476, arg_7477);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNormalPointervINTEL.xhtml
pub inline fn glNormalPointervINTEL(arg_7478: GLenum, arg_7479: [*c]?*const anyopaque) void {
    return glad_glNormalPointervINTEL.?(arg_7478, arg_7479);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorPointervINTEL.xhtml
pub inline fn glColorPointervINTEL(arg_7480: GLint, arg_7481: GLenum, arg_7482: [*c]?*const anyopaque) void {
    return glad_glColorPointervINTEL.?(arg_7480, arg_7481, arg_7482);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoordPointervINTEL.xhtml
pub inline fn glTexCoordPointervINTEL(arg_7483: GLint, arg_7484: GLenum, arg_7485: [*c]?*const anyopaque) void {
    return glad_glTexCoordPointervINTEL.?(arg_7483, arg_7484, arg_7485);
}
pub const GL_INTEL_performance_query = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBeginPerfQueryINTEL.xhtml
pub inline fn glBeginPerfQueryINTEL(arg_7486: GLuint) void {
    return glad_glBeginPerfQueryINTEL.?(arg_7486);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCreatePerfQueryINTEL.xhtml
pub inline fn glCreatePerfQueryINTEL(arg_7487: GLuint, arg_7488: [*c]GLuint) void {
    return glad_glCreatePerfQueryINTEL.?(arg_7487, arg_7488);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeletePerfQueryINTEL.xhtml
pub inline fn glDeletePerfQueryINTEL(arg_7489: GLuint) void {
    return glad_glDeletePerfQueryINTEL.?(arg_7489);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEndPerfQueryINTEL.xhtml
pub inline fn glEndPerfQueryINTEL(arg_7490: GLuint) void {
    return glad_glEndPerfQueryINTEL.?(arg_7490);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFirstPerfQueryIdINTEL.xhtml
pub inline fn glGetFirstPerfQueryIdINTEL(arg_7491: [*c]GLuint) void {
    return glad_glGetFirstPerfQueryIdINTEL.?(arg_7491);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetNextPerfQueryIdINTEL.xhtml
pub inline fn glGetNextPerfQueryIdINTEL(arg_7492: GLuint, arg_7493: [*c]GLuint) void {
    return glad_glGetNextPerfQueryIdINTEL.?(arg_7492, arg_7493);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPerfCounterInfoINTEL.xhtml
pub inline fn glGetPerfCounterInfoINTEL(arg_7494: GLuint, arg_7495: GLuint, arg_7496: GLuint, arg_7497: [*c]GLchar, arg_7498: GLuint, arg_7499: [*c]GLchar, arg_7500: [*c]GLuint, arg_7501: [*c]GLuint, arg_7502: [*c]GLuint, arg_7503: [*c]GLuint, arg_7504: [*c]GLuint64) void {
    return glad_glGetPerfCounterInfoINTEL.?(arg_7494, arg_7495, arg_7496, arg_7497, arg_7498, arg_7499, arg_7500, arg_7501, arg_7502, arg_7503, arg_7504);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPerfQueryDataINTEL.xhtml
pub inline fn glGetPerfQueryDataINTEL(arg_7505: GLuint, arg_7506: GLuint, arg_7507: GLsizei, arg_7508: ?*anyopaque, arg_7509: [*c]GLuint) void {
    return glad_glGetPerfQueryDataINTEL.?(arg_7505, arg_7506, arg_7507, arg_7508, arg_7509);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPerfQueryIdByNameINTEL.xhtml
pub inline fn glGetPerfQueryIdByNameINTEL(arg_7510: [*c]GLchar, arg_7511: [*c]GLuint) void {
    return glad_glGetPerfQueryIdByNameINTEL.?(arg_7510, arg_7511);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPerfQueryInfoINTEL.xhtml
pub inline fn glGetPerfQueryInfoINTEL(arg_7512: GLuint, arg_7513: GLuint, arg_7514: [*c]GLchar, arg_7515: [*c]GLuint, arg_7516: [*c]GLuint, arg_7517: [*c]GLuint, arg_7518: [*c]GLuint) void {
    return glad_glGetPerfQueryInfoINTEL.?(arg_7512, arg_7513, arg_7514, arg_7515, arg_7516, arg_7517, arg_7518);
}
pub const GL_KHR_blend_equation_advanced = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendBarrierKHR.xhtml
pub inline fn glBlendBarrierKHR() void {
    return glad_glBlendBarrierKHR.?();
}
pub const GL_KHR_blend_equation_advanced_coherent = 1;
pub const GL_KHR_context_flush_control = 1;
pub const GL_KHR_debug = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDebugMessageControlKHR.xhtml
pub inline fn glDebugMessageControlKHR(arg_7519: GLenum, arg_7520: GLenum, arg_7521: GLenum, arg_7522: GLsizei, arg_7523: [*c]const GLuint, arg_7524: GLboolean) void {
    return glad_glDebugMessageControlKHR.?(arg_7519, arg_7520, arg_7521, arg_7522, arg_7523, arg_7524);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDebugMessageInsertKHR.xhtml
pub inline fn glDebugMessageInsertKHR(arg_7525: GLenum, arg_7526: GLenum, arg_7527: GLuint, arg_7528: GLenum, arg_7529: GLsizei, arg_7530: [*c]const GLchar) void {
    return glad_glDebugMessageInsertKHR.?(arg_7525, arg_7526, arg_7527, arg_7528, arg_7529, arg_7530);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDebugMessageCallbackKHR.xhtml
pub inline fn glDebugMessageCallbackKHR(arg_7531: GLDEBUGPROCKHR, arg_7532: ?*const anyopaque) void {
    return glad_glDebugMessageCallbackKHR.?(arg_7531, arg_7532);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetDebugMessageLogKHR.xhtml
pub inline fn glGetDebugMessageLogKHR(arg_7533: GLuint, arg_7534: GLsizei, arg_7535: [*c]GLenum, arg_7536: [*c]GLenum, arg_7537: [*c]GLuint, arg_7538: [*c]GLenum, arg_7539: [*c]GLsizei, arg_7540: [*c]GLchar) GLuint {
    return glad_glGetDebugMessageLogKHR.?(arg_7533, arg_7534, arg_7535, arg_7536, arg_7537, arg_7538, arg_7539, arg_7540);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPushDebugGroupKHR.xhtml
pub inline fn glPushDebugGroupKHR(arg_7541: GLenum, arg_7542: GLuint, arg_7543: GLsizei, arg_7544: [*c]const GLchar) void {
    return glad_glPushDebugGroupKHR.?(arg_7541, arg_7542, arg_7543, arg_7544);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPopDebugGroupKHR.xhtml
pub inline fn glPopDebugGroupKHR() void {
    return glad_glPopDebugGroupKHR.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glObjectLabelKHR.xhtml
pub inline fn glObjectLabelKHR(arg_7545: GLenum, arg_7546: GLuint, arg_7547: GLsizei, arg_7548: [*c]const GLchar) void {
    return glad_glObjectLabelKHR.?(arg_7545, arg_7546, arg_7547, arg_7548);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetObjectLabelKHR.xhtml
pub inline fn glGetObjectLabelKHR(arg_7549: GLenum, arg_7550: GLuint, arg_7551: GLsizei, arg_7552: [*c]GLsizei, arg_7553: [*c]GLchar) void {
    return glad_glGetObjectLabelKHR.?(arg_7549, arg_7550, arg_7551, arg_7552, arg_7553);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glObjectPtrLabelKHR.xhtml
pub inline fn glObjectPtrLabelKHR(arg_7554: ?*const anyopaque, arg_7555: GLsizei, arg_7556: [*c]const GLchar) void {
    return glad_glObjectPtrLabelKHR.?(arg_7554, arg_7555, arg_7556);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetObjectPtrLabelKHR.xhtml
pub inline fn glGetObjectPtrLabelKHR(arg_7557: ?*const anyopaque, arg_7558: GLsizei, arg_7559: [*c]GLsizei, arg_7560: [*c]GLchar) void {
    return glad_glGetObjectPtrLabelKHR.?(arg_7557, arg_7558, arg_7559, arg_7560);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPointervKHR.xhtml
pub inline fn glGetPointervKHR(arg_7561: GLenum, arg_7562: [*c]?*anyopaque) void {
    return glad_glGetPointervKHR.?(arg_7561, arg_7562);
}
pub const GL_KHR_no_error = 1;
pub const GL_KHR_parallel_shader_compile = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMaxShaderCompilerThreadsKHR.xhtml
pub inline fn glMaxShaderCompilerThreadsKHR(arg_7563: GLuint) void {
    return glad_glMaxShaderCompilerThreadsKHR.?(arg_7563);
}
pub const GL_KHR_robust_buffer_access_behavior = 1;
pub const GL_KHR_robustness = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetGraphicsResetStatusKHR.xhtml
pub inline fn glGetGraphicsResetStatusKHR() GLenum {
    return glad_glGetGraphicsResetStatusKHR.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReadnPixelsKHR.xhtml
pub inline fn glReadnPixelsKHR(arg_7564: GLint, arg_7565: GLint, arg_7566: GLsizei, arg_7567: GLsizei, arg_7568: GLenum, arg_7569: GLenum, arg_7570: GLsizei, arg_7571: ?*anyopaque) void {
    return glad_glReadnPixelsKHR.?(arg_7564, arg_7565, arg_7566, arg_7567, arg_7568, arg_7569, arg_7570, arg_7571);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnUniformfvKHR.xhtml
pub inline fn glGetnUniformfvKHR(arg_7572: GLuint, arg_7573: GLint, arg_7574: GLsizei, arg_7575: [*c]GLfloat) void {
    return glad_glGetnUniformfvKHR.?(arg_7572, arg_7573, arg_7574, arg_7575);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnUniformivKHR.xhtml
pub inline fn glGetnUniformivKHR(arg_7576: GLuint, arg_7577: GLint, arg_7578: GLsizei, arg_7579: [*c]GLint) void {
    return glad_glGetnUniformivKHR.?(arg_7576, arg_7577, arg_7578, arg_7579);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnUniformuivKHR.xhtml
pub inline fn glGetnUniformuivKHR(arg_7580: GLuint, arg_7581: GLint, arg_7582: GLsizei, arg_7583: [*c]GLuint) void {
    return glad_glGetnUniformuivKHR.?(arg_7580, arg_7581, arg_7582, arg_7583);
}
pub const GL_KHR_shader_subgroup = 1;
pub const GL_KHR_texture_compression_astc_hdr = 1;
pub const GL_KHR_texture_compression_astc_ldr = 1;
pub const GL_KHR_texture_compression_astc_sliced_3d = 1;
pub const GL_MESAX_texture_stack = 1;
pub const GL_MESA_framebuffer_flip_x = 1;
pub const GL_MESA_framebuffer_flip_y = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferParameteriMESA.xhtml
pub inline fn glFramebufferParameteriMESA(arg_7584: GLenum, arg_7585: GLenum, arg_7586: GLint) void {
    return glad_glFramebufferParameteriMESA.?(arg_7584, arg_7585, arg_7586);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFramebufferParameterivMESA.xhtml
pub inline fn glGetFramebufferParameterivMESA(arg_7587: GLenum, arg_7588: GLenum, arg_7589: [*c]GLint) void {
    return glad_glGetFramebufferParameterivMESA.?(arg_7587, arg_7588, arg_7589);
}
pub const GL_MESA_framebuffer_swap_xy = 1;
pub const GL_MESA_pack_invert = 1;
pub const GL_MESA_program_binary_formats = 1;
pub const GL_MESA_resize_buffers = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glResizeBuffersMESA.xhtml
pub inline fn glResizeBuffersMESA() void {
    return glad_glResizeBuffersMESA.?();
}
pub const GL_MESA_shader_integer_functions = 1;
pub const GL_MESA_tile_raster_order = 1;
pub const GL_MESA_window_pos = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos2dMESA.xhtml
pub inline fn glWindowPos2dMESA(arg_7590: GLdouble, arg_7591: GLdouble) void {
    return glad_glWindowPos2dMESA.?(arg_7590, arg_7591);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos2dvMESA.xhtml
pub inline fn glWindowPos2dvMESA(arg_7592: [*c]const GLdouble) void {
    return glad_glWindowPos2dvMESA.?(arg_7592);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos2fMESA.xhtml
pub inline fn glWindowPos2fMESA(arg_7593: GLfloat, arg_7594: GLfloat) void {
    return glad_glWindowPos2fMESA.?(arg_7593, arg_7594);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos2fvMESA.xhtml
pub inline fn glWindowPos2fvMESA(arg_7595: [*c]const GLfloat) void {
    return glad_glWindowPos2fvMESA.?(arg_7595);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos2iMESA.xhtml
pub inline fn glWindowPos2iMESA(arg_7596: GLint, arg_7597: GLint) void {
    return glad_glWindowPos2iMESA.?(arg_7596, arg_7597);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos2ivMESA.xhtml
pub inline fn glWindowPos2ivMESA(arg_7598: [*c]const GLint) void {
    return glad_glWindowPos2ivMESA.?(arg_7598);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos2sMESA.xhtml
pub inline fn glWindowPos2sMESA(arg_7599: GLshort, arg_7600: GLshort) void {
    return glad_glWindowPos2sMESA.?(arg_7599, arg_7600);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos2svMESA.xhtml
pub inline fn glWindowPos2svMESA(arg_7601: [*c]const GLshort) void {
    return glad_glWindowPos2svMESA.?(arg_7601);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos3dMESA.xhtml
pub inline fn glWindowPos3dMESA(arg_7602: GLdouble, arg_7603: GLdouble, arg_7604: GLdouble) void {
    return glad_glWindowPos3dMESA.?(arg_7602, arg_7603, arg_7604);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos3dvMESA.xhtml
pub inline fn glWindowPos3dvMESA(arg_7605: [*c]const GLdouble) void {
    return glad_glWindowPos3dvMESA.?(arg_7605);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos3fMESA.xhtml
pub inline fn glWindowPos3fMESA(arg_7606: GLfloat, arg_7607: GLfloat, arg_7608: GLfloat) void {
    return glad_glWindowPos3fMESA.?(arg_7606, arg_7607, arg_7608);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos3fvMESA.xhtml
pub inline fn glWindowPos3fvMESA(arg_7609: [*c]const GLfloat) void {
    return glad_glWindowPos3fvMESA.?(arg_7609);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos3iMESA.xhtml
pub inline fn glWindowPos3iMESA(arg_7610: GLint, arg_7611: GLint, arg_7612: GLint) void {
    return glad_glWindowPos3iMESA.?(arg_7610, arg_7611, arg_7612);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos3ivMESA.xhtml
pub inline fn glWindowPos3ivMESA(arg_7613: [*c]const GLint) void {
    return glad_glWindowPos3ivMESA.?(arg_7613);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos3sMESA.xhtml
pub inline fn glWindowPos3sMESA(arg_7614: GLshort, arg_7615: GLshort, arg_7616: GLshort) void {
    return glad_glWindowPos3sMESA.?(arg_7614, arg_7615, arg_7616);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos3svMESA.xhtml
pub inline fn glWindowPos3svMESA(arg_7617: [*c]const GLshort) void {
    return glad_glWindowPos3svMESA.?(arg_7617);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos4dMESA.xhtml
pub inline fn glWindowPos4dMESA(arg_7618: GLdouble, arg_7619: GLdouble, arg_7620: GLdouble, arg_7621: GLdouble) void {
    return glad_glWindowPos4dMESA.?(arg_7618, arg_7619, arg_7620, arg_7621);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos4dvMESA.xhtml
pub inline fn glWindowPos4dvMESA(arg_7622: [*c]const GLdouble) void {
    return glad_glWindowPos4dvMESA.?(arg_7622);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos4fMESA.xhtml
pub inline fn glWindowPos4fMESA(arg_7623: GLfloat, arg_7624: GLfloat, arg_7625: GLfloat, arg_7626: GLfloat) void {
    return glad_glWindowPos4fMESA.?(arg_7623, arg_7624, arg_7625, arg_7626);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos4fvMESA.xhtml
pub inline fn glWindowPos4fvMESA(arg_7627: [*c]const GLfloat) void {
    return glad_glWindowPos4fvMESA.?(arg_7627);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos4iMESA.xhtml
pub inline fn glWindowPos4iMESA(arg_7628: GLint, arg_7629: GLint, arg_7630: GLint, arg_7631: GLint) void {
    return glad_glWindowPos4iMESA.?(arg_7628, arg_7629, arg_7630, arg_7631);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos4ivMESA.xhtml
pub inline fn glWindowPos4ivMESA(arg_7632: [*c]const GLint) void {
    return glad_glWindowPos4ivMESA.?(arg_7632);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos4sMESA.xhtml
pub inline fn glWindowPos4sMESA(arg_7633: GLshort, arg_7634: GLshort, arg_7635: GLshort, arg_7636: GLshort) void {
    return glad_glWindowPos4sMESA.?(arg_7633, arg_7634, arg_7635, arg_7636);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWindowPos4svMESA.xhtml
pub inline fn glWindowPos4svMESA(arg_7637: [*c]const GLshort) void {
    return glad_glWindowPos4svMESA.?(arg_7637);
}
pub const GL_MESA_ycbcr_texture = 1;
pub const GL_NVX_blend_equation_advanced_multi_draw_buffers = 1;
pub const GL_NVX_conditional_render = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBeginConditionalRenderNVX.xhtml
pub inline fn glBeginConditionalRenderNVX(arg_7638: GLuint) void {
    return glad_glBeginConditionalRenderNVX.?(arg_7638);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEndConditionalRenderNVX.xhtml
pub inline fn glEndConditionalRenderNVX() void {
    return glad_glEndConditionalRenderNVX.?();
}
pub const GL_NVX_gpu_memory_info = 1;
pub const GL_NVX_gpu_multicast2 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUploadGpuMaskNVX.xhtml
pub inline fn glUploadGpuMaskNVX(arg_7639: GLbitfield) void {
    return glad_glUploadGpuMaskNVX.?(arg_7639);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMulticastViewportArrayvNVX.xhtml
pub inline fn glMulticastViewportArrayvNVX(arg_7640: GLuint, arg_7641: GLuint, arg_7642: GLsizei, arg_7643: [*c]const GLfloat) void {
    return glad_glMulticastViewportArrayvNVX.?(arg_7640, arg_7641, arg_7642, arg_7643);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMulticastViewportPositionWScaleNVX.xhtml
pub inline fn glMulticastViewportPositionWScaleNVX(arg_7644: GLuint, arg_7645: GLuint, arg_7646: GLfloat, arg_7647: GLfloat) void {
    return glad_glMulticastViewportPositionWScaleNVX.?(arg_7644, arg_7645, arg_7646, arg_7647);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMulticastScissorArrayvNVX.xhtml
pub inline fn glMulticastScissorArrayvNVX(arg_7648: GLuint, arg_7649: GLuint, arg_7650: GLsizei, arg_7651: [*c]const GLint) void {
    return glad_glMulticastScissorArrayvNVX.?(arg_7648, arg_7649, arg_7650, arg_7651);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glAsyncCopyBufferSubDataNVX.xhtml
pub inline fn glAsyncCopyBufferSubDataNVX(arg_7652: GLsizei, arg_7653: [*c]const GLuint, arg_7654: [*c]const GLuint64, arg_7655: GLuint, arg_7656: GLbitfield, arg_7657: GLuint, arg_7658: GLuint, arg_7659: GLintptr, arg_7660: GLintptr, arg_7661: GLsizeiptr, arg_7662: GLsizei, arg_7663: [*c]const GLuint, arg_7664: [*c]const GLuint64) GLuint {
    return glad_glAsyncCopyBufferSubDataNVX.?(arg_7652, arg_7653, arg_7654, arg_7655, arg_7656, arg_7657, arg_7658, arg_7659, arg_7660, arg_7661, arg_7662, arg_7663, arg_7664);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glAsyncCopyImageSubDataNVX.xhtml
pub inline fn glAsyncCopyImageSubDataNVX(arg_7665: GLsizei, arg_7666: [*c]const GLuint, arg_7667: [*c]const GLuint64, arg_7668: GLuint, arg_7669: GLbitfield, arg_7670: GLuint, arg_7671: GLenum, arg_7672: GLint, arg_7673: GLint, arg_7674: GLint, arg_7675: GLint, arg_7676: GLuint, arg_7677: GLenum, arg_7678: GLint, arg_7679: GLint, arg_7680: GLint, arg_7681: GLint, arg_7682: GLsizei, arg_7683: GLsizei, arg_7684: GLsizei, arg_7685: GLsizei, arg_7686: [*c]const GLuint, arg_7687: [*c]const GLuint64) GLuint {
    return glad_glAsyncCopyImageSubDataNVX.?(arg_7665, arg_7666, arg_7667, arg_7668, arg_7669, arg_7670, arg_7671, arg_7672, arg_7673, arg_7674, arg_7675, arg_7676, arg_7677, arg_7678, arg_7679, arg_7680, arg_7681, arg_7682, arg_7683, arg_7684, arg_7685, arg_7686, arg_7687);
}
pub const GL_NVX_linked_gpu_multicast = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLGPUNamedBufferSubDataNVX.xhtml
pub inline fn glLGPUNamedBufferSubDataNVX(arg_7688: GLbitfield, arg_7689: GLuint, arg_7690: GLintptr, arg_7691: GLsizeiptr, arg_7692: ?*const anyopaque) void {
    return glad_glLGPUNamedBufferSubDataNVX.?(arg_7688, arg_7689, arg_7690, arg_7691, arg_7692);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLGPUCopyImageSubDataNVX.xhtml
pub inline fn glLGPUCopyImageSubDataNVX(arg_7693: GLuint, arg_7694: GLbitfield, arg_7695: GLuint, arg_7696: GLenum, arg_7697: GLint, arg_7698: GLint, arg_7699: GLint, arg_7700: GLint, arg_7701: GLuint, arg_7702: GLenum, arg_7703: GLint, arg_7704: GLint, arg_7705: GLint, arg_7706: GLint, arg_7707: GLsizei, arg_7708: GLsizei, arg_7709: GLsizei) void {
    return glad_glLGPUCopyImageSubDataNVX.?(arg_7693, arg_7694, arg_7695, arg_7696, arg_7697, arg_7698, arg_7699, arg_7700, arg_7701, arg_7702, arg_7703, arg_7704, arg_7705, arg_7706, arg_7707, arg_7708, arg_7709);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLGPUInterlockNVX.xhtml
pub inline fn glLGPUInterlockNVX() void {
    return glad_glLGPUInterlockNVX.?();
}
pub const GL_NVX_progress_fence = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCreateProgressFenceNVX.xhtml
pub inline fn glCreateProgressFenceNVX() GLuint {
    return glad_glCreateProgressFenceNVX.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSignalSemaphoreui64NVX.xhtml
pub inline fn glSignalSemaphoreui64NVX(arg_7710: GLuint, arg_7711: GLsizei, arg_7712: [*c]const GLuint, arg_7713: [*c]const GLuint64) void {
    return glad_glSignalSemaphoreui64NVX.?(arg_7710, arg_7711, arg_7712, arg_7713);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWaitSemaphoreui64NVX.xhtml
pub inline fn glWaitSemaphoreui64NVX(arg_7714: GLuint, arg_7715: GLsizei, arg_7716: [*c]const GLuint, arg_7717: [*c]const GLuint64) void {
    return glad_glWaitSemaphoreui64NVX.?(arg_7714, arg_7715, arg_7716, arg_7717);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClientWaitSemaphoreui64NVX.xhtml
pub inline fn glClientWaitSemaphoreui64NVX(arg_7718: GLsizei, arg_7719: [*c]const GLuint, arg_7720: [*c]const GLuint64) void {
    return glad_glClientWaitSemaphoreui64NVX.?(arg_7718, arg_7719, arg_7720);
}
pub const GL_NV_alpha_to_coverage_dither_control = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glAlphaToCoverageDitherControlNV.xhtml
pub inline fn glAlphaToCoverageDitherControlNV(arg_7721: GLenum) void {
    return glad_glAlphaToCoverageDitherControlNV.?(arg_7721);
}
pub const GL_NV_bindless_multi_draw_indirect = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiDrawArraysIndirectBindlessNV.xhtml
pub inline fn glMultiDrawArraysIndirectBindlessNV(arg_7722: GLenum, arg_7723: ?*const anyopaque, arg_7724: GLsizei, arg_7725: GLsizei, arg_7726: GLint) void {
    return glad_glMultiDrawArraysIndirectBindlessNV.?(arg_7722, arg_7723, arg_7724, arg_7725, arg_7726);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiDrawElementsIndirectBindlessNV.xhtml
pub inline fn glMultiDrawElementsIndirectBindlessNV(arg_7727: GLenum, arg_7728: GLenum, arg_7729: ?*const anyopaque, arg_7730: GLsizei, arg_7731: GLsizei, arg_7732: GLint) void {
    return glad_glMultiDrawElementsIndirectBindlessNV.?(arg_7727, arg_7728, arg_7729, arg_7730, arg_7731, arg_7732);
}
pub const GL_NV_bindless_multi_draw_indirect_count = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiDrawArraysIndirectBindlessCountNV.xhtml
pub inline fn glMultiDrawArraysIndirectBindlessCountNV(arg_7733: GLenum, arg_7734: ?*const anyopaque, arg_7735: GLsizei, arg_7736: GLsizei, arg_7737: GLsizei, arg_7738: GLint) void {
    return glad_glMultiDrawArraysIndirectBindlessCountNV.?(arg_7733, arg_7734, arg_7735, arg_7736, arg_7737, arg_7738);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiDrawElementsIndirectBindlessCountNV.xhtml
pub inline fn glMultiDrawElementsIndirectBindlessCountNV(arg_7739: GLenum, arg_7740: GLenum, arg_7741: ?*const anyopaque, arg_7742: GLsizei, arg_7743: GLsizei, arg_7744: GLsizei, arg_7745: GLint) void {
    return glad_glMultiDrawElementsIndirectBindlessCountNV.?(arg_7739, arg_7740, arg_7741, arg_7742, arg_7743, arg_7744, arg_7745);
}
pub const GL_NV_bindless_texture = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTextureHandleNV.xhtml
pub inline fn glGetTextureHandleNV(arg_7746: GLuint) GLuint64 {
    return glad_glGetTextureHandleNV.?(arg_7746);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTextureSamplerHandleNV.xhtml
pub inline fn glGetTextureSamplerHandleNV(arg_7747: GLuint, arg_7748: GLuint) GLuint64 {
    return glad_glGetTextureSamplerHandleNV.?(arg_7747, arg_7748);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMakeTextureHandleResidentNV.xhtml
pub inline fn glMakeTextureHandleResidentNV(arg_7749: GLuint64) void {
    return glad_glMakeTextureHandleResidentNV.?(arg_7749);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMakeTextureHandleNonResidentNV.xhtml
pub inline fn glMakeTextureHandleNonResidentNV(arg_7750: GLuint64) void {
    return glad_glMakeTextureHandleNonResidentNV.?(arg_7750);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetImageHandleNV.xhtml
pub inline fn glGetImageHandleNV(arg_7751: GLuint, arg_7752: GLint, arg_7753: GLboolean, arg_7754: GLint, arg_7755: GLenum) GLuint64 {
    return glad_glGetImageHandleNV.?(arg_7751, arg_7752, arg_7753, arg_7754, arg_7755);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMakeImageHandleResidentNV.xhtml
pub inline fn glMakeImageHandleResidentNV(arg_7756: GLuint64, arg_7757: GLenum) void {
    return glad_glMakeImageHandleResidentNV.?(arg_7756, arg_7757);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMakeImageHandleNonResidentNV.xhtml
pub inline fn glMakeImageHandleNonResidentNV(arg_7758: GLuint64) void {
    return glad_glMakeImageHandleNonResidentNV.?(arg_7758);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformHandleui64NV.xhtml
pub inline fn glUniformHandleui64NV(arg_7759: GLint, arg_7760: GLuint64) void {
    return glad_glUniformHandleui64NV.?(arg_7759, arg_7760);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformHandleui64vNV.xhtml
pub inline fn glUniformHandleui64vNV(arg_7761: GLint, arg_7762: GLsizei, arg_7763: [*c]const GLuint64) void {
    return glad_glUniformHandleui64vNV.?(arg_7761, arg_7762, arg_7763);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformHandleui64NV.xhtml
pub inline fn glProgramUniformHandleui64NV(arg_7764: GLuint, arg_7765: GLint, arg_7766: GLuint64) void {
    return glad_glProgramUniformHandleui64NV.?(arg_7764, arg_7765, arg_7766);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformHandleui64vNV.xhtml
pub inline fn glProgramUniformHandleui64vNV(arg_7767: GLuint, arg_7768: GLint, arg_7769: GLsizei, arg_7770: [*c]const GLuint64) void {
    return glad_glProgramUniformHandleui64vNV.?(arg_7767, arg_7768, arg_7769, arg_7770);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsTextureHandleResidentNV.xhtml
pub inline fn glIsTextureHandleResidentNV(arg_7771: GLuint64) GLboolean {
    return glad_glIsTextureHandleResidentNV.?(arg_7771);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsImageHandleResidentNV.xhtml
pub inline fn glIsImageHandleResidentNV(arg_7772: GLuint64) GLboolean {
    return glad_glIsImageHandleResidentNV.?(arg_7772);
}
pub const GL_NV_blend_equation_advanced = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendParameteriNV.xhtml
pub inline fn glBlendParameteriNV(arg_7773: GLenum, arg_7774: GLint) void {
    return glad_glBlendParameteriNV.?(arg_7773, arg_7774);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendBarrierNV.xhtml
pub inline fn glBlendBarrierNV() void {
    return glad_glBlendBarrierNV.?();
}
pub const GL_NV_blend_equation_advanced_coherent = 1;
pub const GL_NV_blend_minmax_factor = 1;
pub const GL_NV_blend_square = 1;
pub const GL_NV_clip_space_w_scaling = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glViewportPositionWScaleNV.xhtml
pub inline fn glViewportPositionWScaleNV(arg_7775: GLuint, arg_7776: GLfloat, arg_7777: GLfloat) void {
    return glad_glViewportPositionWScaleNV.?(arg_7775, arg_7776, arg_7777);
}
pub const GL_NV_command_list = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCreateStatesNV.xhtml
pub inline fn glCreateStatesNV(arg_7778: GLsizei, arg_7779: [*c]GLuint) void {
    return glad_glCreateStatesNV.?(arg_7778, arg_7779);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteStatesNV.xhtml
pub inline fn glDeleteStatesNV(arg_7780: GLsizei, arg_7781: [*c]const GLuint) void {
    return glad_glDeleteStatesNV.?(arg_7780, arg_7781);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsStateNV.xhtml
pub inline fn glIsStateNV(arg_7782: GLuint) GLboolean {
    return glad_glIsStateNV.?(arg_7782);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glStateCaptureNV.xhtml
pub inline fn glStateCaptureNV(arg_7783: GLuint, arg_7784: GLenum) void {
    return glad_glStateCaptureNV.?(arg_7783, arg_7784);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetCommandHeaderNV.xhtml
pub inline fn glGetCommandHeaderNV(arg_7785: GLenum, arg_7786: GLuint) GLuint {
    return glad_glGetCommandHeaderNV.?(arg_7785, arg_7786);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetStageIndexNV.xhtml
pub inline fn glGetStageIndexNV(arg_7787: GLenum) GLushort {
    return glad_glGetStageIndexNV.?(arg_7787);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawCommandsNV.xhtml
pub inline fn glDrawCommandsNV(arg_7788: GLenum, arg_7789: GLuint, arg_7790: [*c]const GLintptr, arg_7791: [*c]const GLsizei, arg_7792: GLuint) void {
    return glad_glDrawCommandsNV.?(arg_7788, arg_7789, arg_7790, arg_7791, arg_7792);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawCommandsAddressNV.xhtml
pub inline fn glDrawCommandsAddressNV(arg_7793: GLenum, arg_7794: [*c]const GLuint64, arg_7795: [*c]const GLsizei, arg_7796: GLuint) void {
    return glad_glDrawCommandsAddressNV.?(arg_7793, arg_7794, arg_7795, arg_7796);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawCommandsStatesNV.xhtml
pub inline fn glDrawCommandsStatesNV(arg_7797: GLuint, arg_7798: [*c]const GLintptr, arg_7799: [*c]const GLsizei, arg_7800: [*c]const GLuint, arg_7801: [*c]const GLuint, arg_7802: GLuint) void {
    return glad_glDrawCommandsStatesNV.?(arg_7797, arg_7798, arg_7799, arg_7800, arg_7801, arg_7802);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawCommandsStatesAddressNV.xhtml
pub inline fn glDrawCommandsStatesAddressNV(arg_7803: [*c]const GLuint64, arg_7804: [*c]const GLsizei, arg_7805: [*c]const GLuint, arg_7806: [*c]const GLuint, arg_7807: GLuint) void {
    return glad_glDrawCommandsStatesAddressNV.?(arg_7803, arg_7804, arg_7805, arg_7806, arg_7807);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCreateCommandListsNV.xhtml
pub inline fn glCreateCommandListsNV(arg_7808: GLsizei, arg_7809: [*c]GLuint) void {
    return glad_glCreateCommandListsNV.?(arg_7808, arg_7809);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteCommandListsNV.xhtml
pub inline fn glDeleteCommandListsNV(arg_7810: GLsizei, arg_7811: [*c]const GLuint) void {
    return glad_glDeleteCommandListsNV.?(arg_7810, arg_7811);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsCommandListNV.xhtml
pub inline fn glIsCommandListNV(arg_7812: GLuint) GLboolean {
    return glad_glIsCommandListNV.?(arg_7812);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glListDrawCommandsStatesClientNV.xhtml
pub inline fn glListDrawCommandsStatesClientNV(arg_7813: GLuint, arg_7814: GLuint, arg_7815: [*c]?*const anyopaque, arg_7816: [*c]const GLsizei, arg_7817: [*c]const GLuint, arg_7818: [*c]const GLuint, arg_7819: GLuint) void {
    return glad_glListDrawCommandsStatesClientNV.?(arg_7813, arg_7814, arg_7815, arg_7816, arg_7817, arg_7818, arg_7819);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCommandListSegmentsNV.xhtml
pub inline fn glCommandListSegmentsNV(arg_7820: GLuint, arg_7821: GLuint) void {
    return glad_glCommandListSegmentsNV.?(arg_7820, arg_7821);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompileCommandListNV.xhtml
pub inline fn glCompileCommandListNV(arg_7822: GLuint) void {
    return glad_glCompileCommandListNV.?(arg_7822);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCallCommandListNV.xhtml
pub inline fn glCallCommandListNV(arg_7823: GLuint) void {
    return glad_glCallCommandListNV.?(arg_7823);
}
pub const GL_NV_compute_program5 = 1;
pub const GL_NV_compute_shader_derivatives = 1;
pub const GL_NV_conditional_render = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBeginConditionalRenderNV.xhtml
pub inline fn glBeginConditionalRenderNV(arg_7824: GLuint, arg_7825: GLenum) void {
    return glad_glBeginConditionalRenderNV.?(arg_7824, arg_7825);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEndConditionalRenderNV.xhtml
pub inline fn glEndConditionalRenderNV() void {
    return glad_glEndConditionalRenderNV.?();
}
pub const GL_NV_conservative_raster = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSubpixelPrecisionBiasNV.xhtml
pub inline fn glSubpixelPrecisionBiasNV(arg_7826: GLuint, arg_7827: GLuint) void {
    return glad_glSubpixelPrecisionBiasNV.?(arg_7826, arg_7827);
}
pub const GL_NV_conservative_raster_dilate = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glConservativeRasterParameterfNV.xhtml
pub inline fn glConservativeRasterParameterfNV(arg_7828: GLenum, arg_7829: GLfloat) void {
    return glad_glConservativeRasterParameterfNV.?(arg_7828, arg_7829);
}
pub const GL_NV_conservative_raster_pre_snap = 1;
pub const GL_NV_conservative_raster_pre_snap_triangles = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glConservativeRasterParameteriNV.xhtml
pub inline fn glConservativeRasterParameteriNV(arg_7830: GLenum, arg_7831: GLint) void {
    return glad_glConservativeRasterParameteriNV.?(arg_7830, arg_7831);
}
pub const GL_NV_conservative_raster_underestimation = 1;
pub const GL_NV_copy_depth_to_color = 1;
pub const GL_NV_copy_image = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyImageSubDataNV.xhtml
pub inline fn glCopyImageSubDataNV(arg_7832: GLuint, arg_7833: GLenum, arg_7834: GLint, arg_7835: GLint, arg_7836: GLint, arg_7837: GLint, arg_7838: GLuint, arg_7839: GLenum, arg_7840: GLint, arg_7841: GLint, arg_7842: GLint, arg_7843: GLint, arg_7844: GLsizei, arg_7845: GLsizei, arg_7846: GLsizei) void {
    return glad_glCopyImageSubDataNV.?(arg_7832, arg_7833, arg_7834, arg_7835, arg_7836, arg_7837, arg_7838, arg_7839, arg_7840, arg_7841, arg_7842, arg_7843, arg_7844, arg_7845, arg_7846);
}
pub const GL_NV_deep_texture3D = 1;
pub const GL_NV_depth_buffer_float = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDepthRangedNV.xhtml
pub inline fn glDepthRangedNV(arg_7847: GLdouble, arg_7848: GLdouble) void {
    return glad_glDepthRangedNV.?(arg_7847, arg_7848);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearDepthdNV.xhtml
pub inline fn glClearDepthdNV(arg_7849: GLdouble) void {
    return glad_glClearDepthdNV.?(arg_7849);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDepthBoundsdNV.xhtml
pub inline fn glDepthBoundsdNV(arg_7850: GLdouble, arg_7851: GLdouble) void {
    return glad_glDepthBoundsdNV.?(arg_7850, arg_7851);
}
pub const GL_NV_depth_clamp = 1;
pub const GL_NV_draw_texture = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawTextureNV.xhtml
pub inline fn glDrawTextureNV(arg_7852: GLuint, arg_7853: GLuint, arg_7854: GLfloat, arg_7855: GLfloat, arg_7856: GLfloat, arg_7857: GLfloat, arg_7858: GLfloat, arg_7859: GLfloat, arg_7860: GLfloat, arg_7861: GLfloat, arg_7862: GLfloat) void {
    return glad_glDrawTextureNV.?(arg_7852, arg_7853, arg_7854, arg_7855, arg_7856, arg_7857, arg_7858, arg_7859, arg_7860, arg_7861, arg_7862);
}
pub const GL_NV_draw_vulkan_image = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawVkImageNV.xhtml
pub inline fn glDrawVkImageNV(arg_7863: GLuint64, arg_7864: GLuint, arg_7865: GLfloat, arg_7866: GLfloat, arg_7867: GLfloat, arg_7868: GLfloat, arg_7869: GLfloat, arg_7870: GLfloat, arg_7871: GLfloat, arg_7872: GLfloat, arg_7873: GLfloat) void {
    return glad_glDrawVkImageNV.?(arg_7863, arg_7864, arg_7865, arg_7866, arg_7867, arg_7868, arg_7869, arg_7870, arg_7871, arg_7872, arg_7873);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVkProcAddrNV.xhtml
pub inline fn glGetVkProcAddrNV(arg_7874: [*c]const GLchar) GLVULKANPROCNV {
    return glad_glGetVkProcAddrNV.?(arg_7874);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWaitVkSemaphoreNV.xhtml
pub inline fn glWaitVkSemaphoreNV(arg_7875: GLuint64) void {
    return glad_glWaitVkSemaphoreNV.?(arg_7875);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSignalVkSemaphoreNV.xhtml
pub inline fn glSignalVkSemaphoreNV(arg_7876: GLuint64) void {
    return glad_glSignalVkSemaphoreNV.?(arg_7876);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSignalVkFenceNV.xhtml
pub inline fn glSignalVkFenceNV(arg_7877: GLuint64) void {
    return glad_glSignalVkFenceNV.?(arg_7877);
}
pub const GL_NV_evaluators = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMapControlPointsNV.xhtml
pub inline fn glMapControlPointsNV(arg_7878: GLenum, arg_7879: GLuint, arg_7880: GLenum, arg_7881: GLsizei, arg_7882: GLsizei, arg_7883: GLint, arg_7884: GLint, arg_7885: GLboolean, arg_7886: ?*const anyopaque) void {
    return glad_glMapControlPointsNV.?(arg_7878, arg_7879, arg_7880, arg_7881, arg_7882, arg_7883, arg_7884, arg_7885, arg_7886);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMapParameterivNV.xhtml
pub inline fn glMapParameterivNV(arg_7887: GLenum, arg_7888: GLenum, arg_7889: [*c]const GLint) void {
    return glad_glMapParameterivNV.?(arg_7887, arg_7888, arg_7889);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMapParameterfvNV.xhtml
pub inline fn glMapParameterfvNV(arg_7890: GLenum, arg_7891: GLenum, arg_7892: [*c]const GLfloat) void {
    return glad_glMapParameterfvNV.?(arg_7890, arg_7891, arg_7892);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMapControlPointsNV.xhtml
pub inline fn glGetMapControlPointsNV(arg_7893: GLenum, arg_7894: GLuint, arg_7895: GLenum, arg_7896: GLsizei, arg_7897: GLsizei, arg_7898: GLboolean, arg_7899: ?*anyopaque) void {
    return glad_glGetMapControlPointsNV.?(arg_7893, arg_7894, arg_7895, arg_7896, arg_7897, arg_7898, arg_7899);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMapParameterivNV.xhtml
pub inline fn glGetMapParameterivNV(arg_7900: GLenum, arg_7901: GLenum, arg_7902: [*c]GLint) void {
    return glad_glGetMapParameterivNV.?(arg_7900, arg_7901, arg_7902);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMapParameterfvNV.xhtml
pub inline fn glGetMapParameterfvNV(arg_7903: GLenum, arg_7904: GLenum, arg_7905: [*c]GLfloat) void {
    return glad_glGetMapParameterfvNV.?(arg_7903, arg_7904, arg_7905);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMapAttribParameterivNV.xhtml
pub inline fn glGetMapAttribParameterivNV(arg_7906: GLenum, arg_7907: GLuint, arg_7908: GLenum, arg_7909: [*c]GLint) void {
    return glad_glGetMapAttribParameterivNV.?(arg_7906, arg_7907, arg_7908, arg_7909);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMapAttribParameterfvNV.xhtml
pub inline fn glGetMapAttribParameterfvNV(arg_7910: GLenum, arg_7911: GLuint, arg_7912: GLenum, arg_7913: [*c]GLfloat) void {
    return glad_glGetMapAttribParameterfvNV.?(arg_7910, arg_7911, arg_7912, arg_7913);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEvalMapsNV.xhtml
pub inline fn glEvalMapsNV(arg_7914: GLenum, arg_7915: GLenum) void {
    return glad_glEvalMapsNV.?(arg_7914, arg_7915);
}
pub const GL_NV_explicit_multisample = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMultisamplefvNV.xhtml
pub inline fn glGetMultisamplefvNV(arg_7916: GLenum, arg_7917: GLuint, arg_7918: [*c]GLfloat) void {
    return glad_glGetMultisamplefvNV.?(arg_7916, arg_7917, arg_7918);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSampleMaskIndexedNV.xhtml
pub inline fn glSampleMaskIndexedNV(arg_7919: GLuint, arg_7920: GLbitfield) void {
    return glad_glSampleMaskIndexedNV.?(arg_7919, arg_7920);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexRenderbufferNV.xhtml
pub inline fn glTexRenderbufferNV(arg_7921: GLenum, arg_7922: GLuint) void {
    return glad_glTexRenderbufferNV.?(arg_7921, arg_7922);
}
pub const GL_NV_fence = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteFencesNV.xhtml
pub inline fn glDeleteFencesNV(arg_7923: GLsizei, arg_7924: [*c]const GLuint) void {
    return glad_glDeleteFencesNV.?(arg_7923, arg_7924);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenFencesNV.xhtml
pub inline fn glGenFencesNV(arg_7925: GLsizei, arg_7926: [*c]GLuint) void {
    return glad_glGenFencesNV.?(arg_7925, arg_7926);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsFenceNV.xhtml
pub inline fn glIsFenceNV(arg_7927: GLuint) GLboolean {
    return glad_glIsFenceNV.?(arg_7927);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTestFenceNV.xhtml
pub inline fn glTestFenceNV(arg_7928: GLuint) GLboolean {
    return glad_glTestFenceNV.?(arg_7928);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFenceivNV.xhtml
pub inline fn glGetFenceivNV(arg_7929: GLuint, arg_7930: GLenum, arg_7931: [*c]GLint) void {
    return glad_glGetFenceivNV.?(arg_7929, arg_7930, arg_7931);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFinishFenceNV.xhtml
pub inline fn glFinishFenceNV(arg_7932: GLuint) void {
    return glad_glFinishFenceNV.?(arg_7932);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSetFenceNV.xhtml
pub inline fn glSetFenceNV(arg_7933: GLuint, arg_7934: GLenum) void {
    return glad_glSetFenceNV.?(arg_7933, arg_7934);
}
pub const GL_NV_fill_rectangle = 1;
pub const GL_NV_float_buffer = 1;
pub const GL_NV_fog_distance = 1;
pub const GL_NV_fragment_coverage_to_color = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFragmentCoverageColorNV.xhtml
pub inline fn glFragmentCoverageColorNV(arg_7935: GLuint) void {
    return glad_glFragmentCoverageColorNV.?(arg_7935);
}
pub const GL_NV_fragment_program = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramNamedParameter4fNV.xhtml
pub inline fn glProgramNamedParameter4fNV(arg_7936: GLuint, arg_7937: GLsizei, arg_7938: [*c]const GLubyte, arg_7939: GLfloat, arg_7940: GLfloat, arg_7941: GLfloat, arg_7942: GLfloat) void {
    return glad_glProgramNamedParameter4fNV.?(arg_7936, arg_7937, arg_7938, arg_7939, arg_7940, arg_7941, arg_7942);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramNamedParameter4fvNV.xhtml
pub inline fn glProgramNamedParameter4fvNV(arg_7943: GLuint, arg_7944: GLsizei, arg_7945: [*c]const GLubyte, arg_7946: [*c]const GLfloat) void {
    return glad_glProgramNamedParameter4fvNV.?(arg_7943, arg_7944, arg_7945, arg_7946);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramNamedParameter4dNV.xhtml
pub inline fn glProgramNamedParameter4dNV(arg_7947: GLuint, arg_7948: GLsizei, arg_7949: [*c]const GLubyte, arg_7950: GLdouble, arg_7951: GLdouble, arg_7952: GLdouble, arg_7953: GLdouble) void {
    return glad_glProgramNamedParameter4dNV.?(arg_7947, arg_7948, arg_7949, arg_7950, arg_7951, arg_7952, arg_7953);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramNamedParameter4dvNV.xhtml
pub inline fn glProgramNamedParameter4dvNV(arg_7954: GLuint, arg_7955: GLsizei, arg_7956: [*c]const GLubyte, arg_7957: [*c]const GLdouble) void {
    return glad_glProgramNamedParameter4dvNV.?(arg_7954, arg_7955, arg_7956, arg_7957);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramNamedParameterfvNV.xhtml
pub inline fn glGetProgramNamedParameterfvNV(arg_7958: GLuint, arg_7959: GLsizei, arg_7960: [*c]const GLubyte, arg_7961: [*c]GLfloat) void {
    return glad_glGetProgramNamedParameterfvNV.?(arg_7958, arg_7959, arg_7960, arg_7961);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramNamedParameterdvNV.xhtml
pub inline fn glGetProgramNamedParameterdvNV(arg_7962: GLuint, arg_7963: GLsizei, arg_7964: [*c]const GLubyte, arg_7965: [*c]GLdouble) void {
    return glad_glGetProgramNamedParameterdvNV.?(arg_7962, arg_7963, arg_7964, arg_7965);
}
pub const GL_NV_fragment_program2 = 1;
pub const GL_NV_fragment_program4 = 1;
pub const GL_NV_fragment_program_option = 1;
pub const GL_NV_fragment_shader_barycentric = 1;
pub const GL_NV_fragment_shader_interlock = 1;
pub const GL_NV_framebuffer_mixed_samples = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCoverageModulationTableNV.xhtml
pub inline fn glCoverageModulationTableNV(arg_7966: GLsizei, arg_7967: [*c]const GLfloat) void {
    return glad_glCoverageModulationTableNV.?(arg_7966, arg_7967);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetCoverageModulationTableNV.xhtml
pub inline fn glGetCoverageModulationTableNV(arg_7968: GLsizei, arg_7969: [*c]GLfloat) void {
    return glad_glGetCoverageModulationTableNV.?(arg_7968, arg_7969);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCoverageModulationNV.xhtml
pub inline fn glCoverageModulationNV(arg_7970: GLenum) void {
    return glad_glCoverageModulationNV.?(arg_7970);
}
pub const GL_NV_framebuffer_multisample_coverage = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRenderbufferStorageMultisampleCoverageNV.xhtml
pub inline fn glRenderbufferStorageMultisampleCoverageNV(arg_7971: GLenum, arg_7972: GLsizei, arg_7973: GLsizei, arg_7974: GLenum, arg_7975: GLsizei, arg_7976: GLsizei) void {
    return glad_glRenderbufferStorageMultisampleCoverageNV.?(arg_7971, arg_7972, arg_7973, arg_7974, arg_7975, arg_7976);
}
pub const GL_NV_geometry_program4 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramVertexLimitNV.xhtml
pub inline fn glProgramVertexLimitNV(arg_7977: GLenum, arg_7978: GLint) void {
    return glad_glProgramVertexLimitNV.?(arg_7977, arg_7978);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferTextureEXT.xhtml
pub inline fn glFramebufferTextureEXT(arg_7979: GLenum, arg_7980: GLenum, arg_7981: GLuint, arg_7982: GLint) void {
    return glad_glFramebufferTextureEXT.?(arg_7979, arg_7980, arg_7981, arg_7982);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferTextureFaceEXT.xhtml
pub inline fn glFramebufferTextureFaceEXT(arg_7983: GLenum, arg_7984: GLenum, arg_7985: GLuint, arg_7986: GLint, arg_7987: GLenum) void {
    return glad_glFramebufferTextureFaceEXT.?(arg_7983, arg_7984, arg_7985, arg_7986, arg_7987);
}
pub const GL_NV_geometry_shader4 = 1;
pub const GL_NV_geometry_shader_passthrough = 1;
pub const GL_NV_gpu_multicast = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRenderGpuMaskNV.xhtml
pub inline fn glRenderGpuMaskNV(arg_7988: GLbitfield) void {
    return glad_glRenderGpuMaskNV.?(arg_7988);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMulticastBufferSubDataNV.xhtml
pub inline fn glMulticastBufferSubDataNV(arg_7989: GLbitfield, arg_7990: GLuint, arg_7991: GLintptr, arg_7992: GLsizeiptr, arg_7993: ?*const anyopaque) void {
    return glad_glMulticastBufferSubDataNV.?(arg_7989, arg_7990, arg_7991, arg_7992, arg_7993);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMulticastCopyBufferSubDataNV.xhtml
pub inline fn glMulticastCopyBufferSubDataNV(arg_7994: GLuint, arg_7995: GLbitfield, arg_7996: GLuint, arg_7997: GLuint, arg_7998: GLintptr, arg_7999: GLintptr, arg_8000: GLsizeiptr) void {
    return glad_glMulticastCopyBufferSubDataNV.?(arg_7994, arg_7995, arg_7996, arg_7997, arg_7998, arg_7999, arg_8000);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMulticastCopyImageSubDataNV.xhtml
pub inline fn glMulticastCopyImageSubDataNV(arg_8001: GLuint, arg_8002: GLbitfield, arg_8003: GLuint, arg_8004: GLenum, arg_8005: GLint, arg_8006: GLint, arg_8007: GLint, arg_8008: GLint, arg_8009: GLuint, arg_8010: GLenum, arg_8011: GLint, arg_8012: GLint, arg_8013: GLint, arg_8014: GLint, arg_8015: GLsizei, arg_8016: GLsizei, arg_8017: GLsizei) void {
    return glad_glMulticastCopyImageSubDataNV.?(arg_8001, arg_8002, arg_8003, arg_8004, arg_8005, arg_8006, arg_8007, arg_8008, arg_8009, arg_8010, arg_8011, arg_8012, arg_8013, arg_8014, arg_8015, arg_8016, arg_8017);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMulticastBlitFramebufferNV.xhtml
pub inline fn glMulticastBlitFramebufferNV(arg_8018: GLuint, arg_8019: GLuint, arg_8020: GLint, arg_8021: GLint, arg_8022: GLint, arg_8023: GLint, arg_8024: GLint, arg_8025: GLint, arg_8026: GLint, arg_8027: GLint, arg_8028: GLbitfield, arg_8029: GLenum) void {
    return glad_glMulticastBlitFramebufferNV.?(arg_8018, arg_8019, arg_8020, arg_8021, arg_8022, arg_8023, arg_8024, arg_8025, arg_8026, arg_8027, arg_8028, arg_8029);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMulticastFramebufferSampleLocationsfvNV.xhtml
pub inline fn glMulticastFramebufferSampleLocationsfvNV(arg_8030: GLuint, arg_8031: GLuint, arg_8032: GLuint, arg_8033: GLsizei, arg_8034: [*c]const GLfloat) void {
    return glad_glMulticastFramebufferSampleLocationsfvNV.?(arg_8030, arg_8031, arg_8032, arg_8033, arg_8034);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMulticastBarrierNV.xhtml
pub inline fn glMulticastBarrierNV() void {
    return glad_glMulticastBarrierNV.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMulticastWaitSyncNV.xhtml
pub inline fn glMulticastWaitSyncNV(arg_8035: GLuint, arg_8036: GLbitfield) void {
    return glad_glMulticastWaitSyncNV.?(arg_8035, arg_8036);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMulticastGetQueryObjectivNV.xhtml
pub inline fn glMulticastGetQueryObjectivNV(arg_8037: GLuint, arg_8038: GLuint, arg_8039: GLenum, arg_8040: [*c]GLint) void {
    return glad_glMulticastGetQueryObjectivNV.?(arg_8037, arg_8038, arg_8039, arg_8040);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMulticastGetQueryObjectuivNV.xhtml
pub inline fn glMulticastGetQueryObjectuivNV(arg_8041: GLuint, arg_8042: GLuint, arg_8043: GLenum, arg_8044: [*c]GLuint) void {
    return glad_glMulticastGetQueryObjectuivNV.?(arg_8041, arg_8042, arg_8043, arg_8044);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMulticastGetQueryObjecti64vNV.xhtml
pub inline fn glMulticastGetQueryObjecti64vNV(arg_8045: GLuint, arg_8046: GLuint, arg_8047: GLenum, arg_8048: [*c]GLint64) void {
    return glad_glMulticastGetQueryObjecti64vNV.?(arg_8045, arg_8046, arg_8047, arg_8048);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMulticastGetQueryObjectui64vNV.xhtml
pub inline fn glMulticastGetQueryObjectui64vNV(arg_8049: GLuint, arg_8050: GLuint, arg_8051: GLenum, arg_8052: [*c]GLuint64) void {
    return glad_glMulticastGetQueryObjectui64vNV.?(arg_8049, arg_8050, arg_8051, arg_8052);
}
pub const GL_NV_gpu_program4 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramLocalParameterI4iNV.xhtml
pub inline fn glProgramLocalParameterI4iNV(arg_8053: GLenum, arg_8054: GLuint, arg_8055: GLint, arg_8056: GLint, arg_8057: GLint, arg_8058: GLint) void {
    return glad_glProgramLocalParameterI4iNV.?(arg_8053, arg_8054, arg_8055, arg_8056, arg_8057, arg_8058);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramLocalParameterI4ivNV.xhtml
pub inline fn glProgramLocalParameterI4ivNV(arg_8059: GLenum, arg_8060: GLuint, arg_8061: [*c]const GLint) void {
    return glad_glProgramLocalParameterI4ivNV.?(arg_8059, arg_8060, arg_8061);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramLocalParametersI4ivNV.xhtml
pub inline fn glProgramLocalParametersI4ivNV(arg_8062: GLenum, arg_8063: GLuint, arg_8064: GLsizei, arg_8065: [*c]const GLint) void {
    return glad_glProgramLocalParametersI4ivNV.?(arg_8062, arg_8063, arg_8064, arg_8065);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramLocalParameterI4uiNV.xhtml
pub inline fn glProgramLocalParameterI4uiNV(arg_8066: GLenum, arg_8067: GLuint, arg_8068: GLuint, arg_8069: GLuint, arg_8070: GLuint, arg_8071: GLuint) void {
    return glad_glProgramLocalParameterI4uiNV.?(arg_8066, arg_8067, arg_8068, arg_8069, arg_8070, arg_8071);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramLocalParameterI4uivNV.xhtml
pub inline fn glProgramLocalParameterI4uivNV(arg_8072: GLenum, arg_8073: GLuint, arg_8074: [*c]const GLuint) void {
    return glad_glProgramLocalParameterI4uivNV.?(arg_8072, arg_8073, arg_8074);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramLocalParametersI4uivNV.xhtml
pub inline fn glProgramLocalParametersI4uivNV(arg_8075: GLenum, arg_8076: GLuint, arg_8077: GLsizei, arg_8078: [*c]const GLuint) void {
    return glad_glProgramLocalParametersI4uivNV.?(arg_8075, arg_8076, arg_8077, arg_8078);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramEnvParameterI4iNV.xhtml
pub inline fn glProgramEnvParameterI4iNV(arg_8079: GLenum, arg_8080: GLuint, arg_8081: GLint, arg_8082: GLint, arg_8083: GLint, arg_8084: GLint) void {
    return glad_glProgramEnvParameterI4iNV.?(arg_8079, arg_8080, arg_8081, arg_8082, arg_8083, arg_8084);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramEnvParameterI4ivNV.xhtml
pub inline fn glProgramEnvParameterI4ivNV(arg_8085: GLenum, arg_8086: GLuint, arg_8087: [*c]const GLint) void {
    return glad_glProgramEnvParameterI4ivNV.?(arg_8085, arg_8086, arg_8087);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramEnvParametersI4ivNV.xhtml
pub inline fn glProgramEnvParametersI4ivNV(arg_8088: GLenum, arg_8089: GLuint, arg_8090: GLsizei, arg_8091: [*c]const GLint) void {
    return glad_glProgramEnvParametersI4ivNV.?(arg_8088, arg_8089, arg_8090, arg_8091);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramEnvParameterI4uiNV.xhtml
pub inline fn glProgramEnvParameterI4uiNV(arg_8092: GLenum, arg_8093: GLuint, arg_8094: GLuint, arg_8095: GLuint, arg_8096: GLuint, arg_8097: GLuint) void {
    return glad_glProgramEnvParameterI4uiNV.?(arg_8092, arg_8093, arg_8094, arg_8095, arg_8096, arg_8097);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramEnvParameterI4uivNV.xhtml
pub inline fn glProgramEnvParameterI4uivNV(arg_8098: GLenum, arg_8099: GLuint, arg_8100: [*c]const GLuint) void {
    return glad_glProgramEnvParameterI4uivNV.?(arg_8098, arg_8099, arg_8100);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramEnvParametersI4uivNV.xhtml
pub inline fn glProgramEnvParametersI4uivNV(arg_8101: GLenum, arg_8102: GLuint, arg_8103: GLsizei, arg_8104: [*c]const GLuint) void {
    return glad_glProgramEnvParametersI4uivNV.?(arg_8101, arg_8102, arg_8103, arg_8104);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramLocalParameterIivNV.xhtml
pub inline fn glGetProgramLocalParameterIivNV(arg_8105: GLenum, arg_8106: GLuint, arg_8107: [*c]GLint) void {
    return glad_glGetProgramLocalParameterIivNV.?(arg_8105, arg_8106, arg_8107);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramLocalParameterIuivNV.xhtml
pub inline fn glGetProgramLocalParameterIuivNV(arg_8108: GLenum, arg_8109: GLuint, arg_8110: [*c]GLuint) void {
    return glad_glGetProgramLocalParameterIuivNV.?(arg_8108, arg_8109, arg_8110);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramEnvParameterIivNV.xhtml
pub inline fn glGetProgramEnvParameterIivNV(arg_8111: GLenum, arg_8112: GLuint, arg_8113: [*c]GLint) void {
    return glad_glGetProgramEnvParameterIivNV.?(arg_8111, arg_8112, arg_8113);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramEnvParameterIuivNV.xhtml
pub inline fn glGetProgramEnvParameterIuivNV(arg_8114: GLenum, arg_8115: GLuint, arg_8116: [*c]GLuint) void {
    return glad_glGetProgramEnvParameterIuivNV.?(arg_8114, arg_8115, arg_8116);
}
pub const GL_NV_gpu_program5 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramSubroutineParametersuivNV.xhtml
pub inline fn glProgramSubroutineParametersuivNV(arg_8117: GLenum, arg_8118: GLsizei, arg_8119: [*c]const GLuint) void {
    return glad_glProgramSubroutineParametersuivNV.?(arg_8117, arg_8118, arg_8119);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramSubroutineParameteruivNV.xhtml
pub inline fn glGetProgramSubroutineParameteruivNV(arg_8120: GLenum, arg_8121: GLuint, arg_8122: [*c]GLuint) void {
    return glad_glGetProgramSubroutineParameteruivNV.?(arg_8120, arg_8121, arg_8122);
}
pub const GL_NV_gpu_program5_mem_extended = 1;
pub const GL_NV_gpu_shader5 = 1;
pub const GL_NV_half_float = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex2hNV.xhtml
pub inline fn glVertex2hNV(arg_8123: GLhalfNV, arg_8124: GLhalfNV) void {
    return glad_glVertex2hNV.?(arg_8123, arg_8124);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex2hvNV.xhtml
pub inline fn glVertex2hvNV(arg_8125: [*c]const GLhalfNV) void {
    return glad_glVertex2hvNV.?(arg_8125);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex3hNV.xhtml
pub inline fn glVertex3hNV(arg_8126: GLhalfNV, arg_8127: GLhalfNV, arg_8128: GLhalfNV) void {
    return glad_glVertex3hNV.?(arg_8126, arg_8127, arg_8128);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex3hvNV.xhtml
pub inline fn glVertex3hvNV(arg_8129: [*c]const GLhalfNV) void {
    return glad_glVertex3hvNV.?(arg_8129);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex4hNV.xhtml
pub inline fn glVertex4hNV(arg_8130: GLhalfNV, arg_8131: GLhalfNV, arg_8132: GLhalfNV, arg_8133: GLhalfNV) void {
    return glad_glVertex4hNV.?(arg_8130, arg_8131, arg_8132, arg_8133);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex4hvNV.xhtml
pub inline fn glVertex4hvNV(arg_8134: [*c]const GLhalfNV) void {
    return glad_glVertex4hvNV.?(arg_8134);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNormal3hNV.xhtml
pub inline fn glNormal3hNV(arg_8135: GLhalfNV, arg_8136: GLhalfNV, arg_8137: GLhalfNV) void {
    return glad_glNormal3hNV.?(arg_8135, arg_8136, arg_8137);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNormal3hvNV.xhtml
pub inline fn glNormal3hvNV(arg_8138: [*c]const GLhalfNV) void {
    return glad_glNormal3hvNV.?(arg_8138);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColor3hNV.xhtml
pub inline fn glColor3hNV(arg_8139: GLhalfNV, arg_8140: GLhalfNV, arg_8141: GLhalfNV) void {
    return glad_glColor3hNV.?(arg_8139, arg_8140, arg_8141);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColor3hvNV.xhtml
pub inline fn glColor3hvNV(arg_8142: [*c]const GLhalfNV) void {
    return glad_glColor3hvNV.?(arg_8142);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColor4hNV.xhtml
pub inline fn glColor4hNV(arg_8143: GLhalfNV, arg_8144: GLhalfNV, arg_8145: GLhalfNV, arg_8146: GLhalfNV) void {
    return glad_glColor4hNV.?(arg_8143, arg_8144, arg_8145, arg_8146);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColor4hvNV.xhtml
pub inline fn glColor4hvNV(arg_8147: [*c]const GLhalfNV) void {
    return glad_glColor4hvNV.?(arg_8147);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord1hNV.xhtml
pub inline fn glTexCoord1hNV(arg_8148: GLhalfNV) void {
    return glad_glTexCoord1hNV.?(arg_8148);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord1hvNV.xhtml
pub inline fn glTexCoord1hvNV(arg_8149: [*c]const GLhalfNV) void {
    return glad_glTexCoord1hvNV.?(arg_8149);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord2hNV.xhtml
pub inline fn glTexCoord2hNV(arg_8150: GLhalfNV, arg_8151: GLhalfNV) void {
    return glad_glTexCoord2hNV.?(arg_8150, arg_8151);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord2hvNV.xhtml
pub inline fn glTexCoord2hvNV(arg_8152: [*c]const GLhalfNV) void {
    return glad_glTexCoord2hvNV.?(arg_8152);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord3hNV.xhtml
pub inline fn glTexCoord3hNV(arg_8153: GLhalfNV, arg_8154: GLhalfNV, arg_8155: GLhalfNV) void {
    return glad_glTexCoord3hNV.?(arg_8153, arg_8154, arg_8155);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord3hvNV.xhtml
pub inline fn glTexCoord3hvNV(arg_8156: [*c]const GLhalfNV) void {
    return glad_glTexCoord3hvNV.?(arg_8156);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord4hNV.xhtml
pub inline fn glTexCoord4hNV(arg_8157: GLhalfNV, arg_8158: GLhalfNV, arg_8159: GLhalfNV, arg_8160: GLhalfNV) void {
    return glad_glTexCoord4hNV.?(arg_8157, arg_8158, arg_8159, arg_8160);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord4hvNV.xhtml
pub inline fn glTexCoord4hvNV(arg_8161: [*c]const GLhalfNV) void {
    return glad_glTexCoord4hvNV.?(arg_8161);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord1hNV.xhtml
pub inline fn glMultiTexCoord1hNV(arg_8162: GLenum, arg_8163: GLhalfNV) void {
    return glad_glMultiTexCoord1hNV.?(arg_8162, arg_8163);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord1hvNV.xhtml
pub inline fn glMultiTexCoord1hvNV(arg_8164: GLenum, arg_8165: [*c]const GLhalfNV) void {
    return glad_glMultiTexCoord1hvNV.?(arg_8164, arg_8165);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord2hNV.xhtml
pub inline fn glMultiTexCoord2hNV(arg_8166: GLenum, arg_8167: GLhalfNV, arg_8168: GLhalfNV) void {
    return glad_glMultiTexCoord2hNV.?(arg_8166, arg_8167, arg_8168);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord2hvNV.xhtml
pub inline fn glMultiTexCoord2hvNV(arg_8169: GLenum, arg_8170: [*c]const GLhalfNV) void {
    return glad_glMultiTexCoord2hvNV.?(arg_8169, arg_8170);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord3hNV.xhtml
pub inline fn glMultiTexCoord3hNV(arg_8171: GLenum, arg_8172: GLhalfNV, arg_8173: GLhalfNV, arg_8174: GLhalfNV) void {
    return glad_glMultiTexCoord3hNV.?(arg_8171, arg_8172, arg_8173, arg_8174);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord3hvNV.xhtml
pub inline fn glMultiTexCoord3hvNV(arg_8175: GLenum, arg_8176: [*c]const GLhalfNV) void {
    return glad_glMultiTexCoord3hvNV.?(arg_8175, arg_8176);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord4hNV.xhtml
pub inline fn glMultiTexCoord4hNV(arg_8177: GLenum, arg_8178: GLhalfNV, arg_8179: GLhalfNV, arg_8180: GLhalfNV, arg_8181: GLhalfNV) void {
    return glad_glMultiTexCoord4hNV.?(arg_8177, arg_8178, arg_8179, arg_8180, arg_8181);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord4hvNV.xhtml
pub inline fn glMultiTexCoord4hvNV(arg_8182: GLenum, arg_8183: [*c]const GLhalfNV) void {
    return glad_glMultiTexCoord4hvNV.?(arg_8182, arg_8183);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib1hNV.xhtml
pub inline fn glVertexAttrib1hNV(arg_8184: GLuint, arg_8185: GLhalfNV) void {
    return glad_glVertexAttrib1hNV.?(arg_8184, arg_8185);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib1hvNV.xhtml
pub inline fn glVertexAttrib1hvNV(arg_8186: GLuint, arg_8187: [*c]const GLhalfNV) void {
    return glad_glVertexAttrib1hvNV.?(arg_8186, arg_8187);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib2hNV.xhtml
pub inline fn glVertexAttrib2hNV(arg_8188: GLuint, arg_8189: GLhalfNV, arg_8190: GLhalfNV) void {
    return glad_glVertexAttrib2hNV.?(arg_8188, arg_8189, arg_8190);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib2hvNV.xhtml
pub inline fn glVertexAttrib2hvNV(arg_8191: GLuint, arg_8192: [*c]const GLhalfNV) void {
    return glad_glVertexAttrib2hvNV.?(arg_8191, arg_8192);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib3hNV.xhtml
pub inline fn glVertexAttrib3hNV(arg_8193: GLuint, arg_8194: GLhalfNV, arg_8195: GLhalfNV, arg_8196: GLhalfNV) void {
    return glad_glVertexAttrib3hNV.?(arg_8193, arg_8194, arg_8195, arg_8196);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib3hvNV.xhtml
pub inline fn glVertexAttrib3hvNV(arg_8197: GLuint, arg_8198: [*c]const GLhalfNV) void {
    return glad_glVertexAttrib3hvNV.?(arg_8197, arg_8198);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4hNV.xhtml
pub inline fn glVertexAttrib4hNV(arg_8199: GLuint, arg_8200: GLhalfNV, arg_8201: GLhalfNV, arg_8202: GLhalfNV, arg_8203: GLhalfNV) void {
    return glad_glVertexAttrib4hNV.?(arg_8199, arg_8200, arg_8201, arg_8202, arg_8203);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4hvNV.xhtml
pub inline fn glVertexAttrib4hvNV(arg_8204: GLuint, arg_8205: [*c]const GLhalfNV) void {
    return glad_glVertexAttrib4hvNV.?(arg_8204, arg_8205);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribs1hvNV.xhtml
pub inline fn glVertexAttribs1hvNV(arg_8206: GLuint, arg_8207: GLsizei, arg_8208: [*c]const GLhalfNV) void {
    return glad_glVertexAttribs1hvNV.?(arg_8206, arg_8207, arg_8208);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribs2hvNV.xhtml
pub inline fn glVertexAttribs2hvNV(arg_8209: GLuint, arg_8210: GLsizei, arg_8211: [*c]const GLhalfNV) void {
    return glad_glVertexAttribs2hvNV.?(arg_8209, arg_8210, arg_8211);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribs3hvNV.xhtml
pub inline fn glVertexAttribs3hvNV(arg_8212: GLuint, arg_8213: GLsizei, arg_8214: [*c]const GLhalfNV) void {
    return glad_glVertexAttribs3hvNV.?(arg_8212, arg_8213, arg_8214);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribs4hvNV.xhtml
pub inline fn glVertexAttribs4hvNV(arg_8215: GLuint, arg_8216: GLsizei, arg_8217: [*c]const GLhalfNV) void {
    return glad_glVertexAttribs4hvNV.?(arg_8215, arg_8216, arg_8217);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFogCoordhNV.xhtml
pub inline fn glFogCoordhNV(arg_8218: GLhalfNV) void {
    return glad_glFogCoordhNV.?(arg_8218);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFogCoordhvNV.xhtml
pub inline fn glFogCoordhvNV(arg_8219: [*c]const GLhalfNV) void {
    return glad_glFogCoordhvNV.?(arg_8219);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3hNV.xhtml
pub inline fn glSecondaryColor3hNV(arg_8220: GLhalfNV, arg_8221: GLhalfNV, arg_8222: GLhalfNV) void {
    return glad_glSecondaryColor3hNV.?(arg_8220, arg_8221, arg_8222);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColor3hvNV.xhtml
pub inline fn glSecondaryColor3hvNV(arg_8223: [*c]const GLhalfNV) void {
    return glad_glSecondaryColor3hvNV.?(arg_8223);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexWeighthNV.xhtml
pub inline fn glVertexWeighthNV(arg_8224: GLhalfNV) void {
    return glad_glVertexWeighthNV.?(arg_8224);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexWeighthvNV.xhtml
pub inline fn glVertexWeighthvNV(arg_8225: [*c]const GLhalfNV) void {
    return glad_glVertexWeighthvNV.?(arg_8225);
}
pub const GL_NV_internalformat_sample_query = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetInternalformatSampleivNV.xhtml
pub inline fn glGetInternalformatSampleivNV(arg_8226: GLenum, arg_8227: GLenum, arg_8228: GLsizei, arg_8229: GLenum, arg_8230: GLsizei, arg_8231: [*c]GLint) void {
    return glad_glGetInternalformatSampleivNV.?(arg_8226, arg_8227, arg_8228, arg_8229, arg_8230, arg_8231);
}
pub const GL_NV_light_max_exponent = 1;
pub const GL_NV_memory_attachment = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMemoryObjectDetachedResourcesuivNV.xhtml
pub inline fn glGetMemoryObjectDetachedResourcesuivNV(arg_8232: GLuint, arg_8233: GLenum, arg_8234: GLint, arg_8235: GLsizei, arg_8236: [*c]GLuint) void {
    return glad_glGetMemoryObjectDetachedResourcesuivNV.?(arg_8232, arg_8233, arg_8234, arg_8235, arg_8236);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glResetMemoryObjectParameterNV.xhtml
pub inline fn glResetMemoryObjectParameterNV(arg_8237: GLuint, arg_8238: GLenum) void {
    return glad_glResetMemoryObjectParameterNV.?(arg_8237, arg_8238);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexAttachMemoryNV.xhtml
pub inline fn glTexAttachMemoryNV(arg_8239: GLenum, arg_8240: GLuint, arg_8241: GLuint64) void {
    return glad_glTexAttachMemoryNV.?(arg_8239, arg_8240, arg_8241);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBufferAttachMemoryNV.xhtml
pub inline fn glBufferAttachMemoryNV(arg_8242: GLenum, arg_8243: GLuint, arg_8244: GLuint64) void {
    return glad_glBufferAttachMemoryNV.?(arg_8242, arg_8243, arg_8244);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureAttachMemoryNV.xhtml
pub inline fn glTextureAttachMemoryNV(arg_8245: GLuint, arg_8246: GLuint, arg_8247: GLuint64) void {
    return glad_glTextureAttachMemoryNV.?(arg_8245, arg_8246, arg_8247);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedBufferAttachMemoryNV.xhtml
pub inline fn glNamedBufferAttachMemoryNV(arg_8248: GLuint, arg_8249: GLuint, arg_8250: GLuint64) void {
    return glad_glNamedBufferAttachMemoryNV.?(arg_8248, arg_8249, arg_8250);
}
pub const GL_NV_memory_object_sparse = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBufferPageCommitmentMemNV.xhtml
pub inline fn glBufferPageCommitmentMemNV(arg_8251: GLenum, arg_8252: GLintptr, arg_8253: GLsizeiptr, arg_8254: GLuint, arg_8255: GLuint64, arg_8256: GLboolean) void {
    return glad_glBufferPageCommitmentMemNV.?(arg_8251, arg_8252, arg_8253, arg_8254, arg_8255, arg_8256);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexPageCommitmentMemNV.xhtml
pub inline fn glTexPageCommitmentMemNV(arg_8257: GLenum, arg_8258: GLint, arg_8259: GLint, arg_8260: GLint, arg_8261: GLint, arg_8262: GLint, arg_8263: GLsizei, arg_8264: GLsizei, arg_8265: GLsizei, arg_8266: GLuint, arg_8267: GLuint64, arg_8268: GLboolean) void {
    return glad_glTexPageCommitmentMemNV.?(arg_8257, arg_8258, arg_8259, arg_8260, arg_8261, arg_8262, arg_8263, arg_8264, arg_8265, arg_8266, arg_8267, arg_8268);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedBufferPageCommitmentMemNV.xhtml
pub inline fn glNamedBufferPageCommitmentMemNV(arg_8269: GLuint, arg_8270: GLintptr, arg_8271: GLsizeiptr, arg_8272: GLuint, arg_8273: GLuint64, arg_8274: GLboolean) void {
    return glad_glNamedBufferPageCommitmentMemNV.?(arg_8269, arg_8270, arg_8271, arg_8272, arg_8273, arg_8274);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexturePageCommitmentMemNV.xhtml
pub inline fn glTexturePageCommitmentMemNV(arg_8275: GLuint, arg_8276: GLint, arg_8277: GLint, arg_8278: GLint, arg_8279: GLint, arg_8280: GLint, arg_8281: GLsizei, arg_8282: GLsizei, arg_8283: GLsizei, arg_8284: GLuint, arg_8285: GLuint64, arg_8286: GLboolean) void {
    return glad_glTexturePageCommitmentMemNV.?(arg_8275, arg_8276, arg_8277, arg_8278, arg_8279, arg_8280, arg_8281, arg_8282, arg_8283, arg_8284, arg_8285, arg_8286);
}
pub const GL_NV_mesh_shader = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawMeshTasksNV.xhtml
pub inline fn glDrawMeshTasksNV(arg_8287: GLuint, arg_8288: GLuint) void {
    return glad_glDrawMeshTasksNV.?(arg_8287, arg_8288);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawMeshTasksIndirectNV.xhtml
pub inline fn glDrawMeshTasksIndirectNV(arg_8289: GLintptr) void {
    return glad_glDrawMeshTasksIndirectNV.?(arg_8289);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiDrawMeshTasksIndirectNV.xhtml
pub inline fn glMultiDrawMeshTasksIndirectNV(arg_8290: GLintptr, arg_8291: GLsizei, arg_8292: GLsizei) void {
    return glad_glMultiDrawMeshTasksIndirectNV.?(arg_8290, arg_8291, arg_8292);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiDrawMeshTasksIndirectCountNV.xhtml
pub inline fn glMultiDrawMeshTasksIndirectCountNV(arg_8293: GLintptr, arg_8294: GLintptr, arg_8295: GLsizei, arg_8296: GLsizei) void {
    return glad_glMultiDrawMeshTasksIndirectCountNV.?(arg_8293, arg_8294, arg_8295, arg_8296);
}
pub const GL_NV_multisample_coverage = 1;
pub const GL_NV_multisample_filter_hint = 1;
pub const GL_NV_occlusion_query = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenOcclusionQueriesNV.xhtml
pub inline fn glGenOcclusionQueriesNV(arg_8297: GLsizei, arg_8298: [*c]GLuint) void {
    return glad_glGenOcclusionQueriesNV.?(arg_8297, arg_8298);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteOcclusionQueriesNV.xhtml
pub inline fn glDeleteOcclusionQueriesNV(arg_8299: GLsizei, arg_8300: [*c]const GLuint) void {
    return glad_glDeleteOcclusionQueriesNV.?(arg_8299, arg_8300);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsOcclusionQueryNV.xhtml
pub inline fn glIsOcclusionQueryNV(arg_8301: GLuint) GLboolean {
    return glad_glIsOcclusionQueryNV.?(arg_8301);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBeginOcclusionQueryNV.xhtml
pub inline fn glBeginOcclusionQueryNV(arg_8302: GLuint) void {
    return glad_glBeginOcclusionQueryNV.?(arg_8302);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEndOcclusionQueryNV.xhtml
pub inline fn glEndOcclusionQueryNV() void {
    return glad_glEndOcclusionQueryNV.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetOcclusionQueryivNV.xhtml
pub inline fn glGetOcclusionQueryivNV(arg_8303: GLuint, arg_8304: GLenum, arg_8305: [*c]GLint) void {
    return glad_glGetOcclusionQueryivNV.?(arg_8303, arg_8304, arg_8305);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetOcclusionQueryuivNV.xhtml
pub inline fn glGetOcclusionQueryuivNV(arg_8306: GLuint, arg_8307: GLenum, arg_8308: [*c]GLuint) void {
    return glad_glGetOcclusionQueryuivNV.?(arg_8306, arg_8307, arg_8308);
}
pub const GL_NV_packed_depth_stencil = 1;
pub const GL_NV_parameter_buffer_object = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramBufferParametersfvNV.xhtml
pub inline fn glProgramBufferParametersfvNV(arg_8309: GLenum, arg_8310: GLuint, arg_8311: GLuint, arg_8312: GLsizei, arg_8313: [*c]const GLfloat) void {
    return glad_glProgramBufferParametersfvNV.?(arg_8309, arg_8310, arg_8311, arg_8312, arg_8313);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramBufferParametersIivNV.xhtml
pub inline fn glProgramBufferParametersIivNV(arg_8314: GLenum, arg_8315: GLuint, arg_8316: GLuint, arg_8317: GLsizei, arg_8318: [*c]const GLint) void {
    return glad_glProgramBufferParametersIivNV.?(arg_8314, arg_8315, arg_8316, arg_8317, arg_8318);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramBufferParametersIuivNV.xhtml
pub inline fn glProgramBufferParametersIuivNV(arg_8319: GLenum, arg_8320: GLuint, arg_8321: GLuint, arg_8322: GLsizei, arg_8323: [*c]const GLuint) void {
    return glad_glProgramBufferParametersIuivNV.?(arg_8319, arg_8320, arg_8321, arg_8322, arg_8323);
}
pub const GL_NV_parameter_buffer_object2 = 1;
pub const GL_NV_path_rendering = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenPathsNV.xhtml
pub inline fn glGenPathsNV(arg_8324: GLsizei) GLuint {
    return glad_glGenPathsNV.?(arg_8324);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeletePathsNV.xhtml
pub inline fn glDeletePathsNV(arg_8325: GLuint, arg_8326: GLsizei) void {
    return glad_glDeletePathsNV.?(arg_8325, arg_8326);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsPathNV.xhtml
pub inline fn glIsPathNV(arg_8327: GLuint) GLboolean {
    return glad_glIsPathNV.?(arg_8327);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPathCommandsNV.xhtml
pub inline fn glPathCommandsNV(arg_8328: GLuint, arg_8329: GLsizei, arg_8330: [*c]const GLubyte, arg_8331: GLsizei, arg_8332: GLenum, arg_8333: ?*const anyopaque) void {
    return glad_glPathCommandsNV.?(arg_8328, arg_8329, arg_8330, arg_8331, arg_8332, arg_8333);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPathCoordsNV.xhtml
pub inline fn glPathCoordsNV(arg_8334: GLuint, arg_8335: GLsizei, arg_8336: GLenum, arg_8337: ?*const anyopaque) void {
    return glad_glPathCoordsNV.?(arg_8334, arg_8335, arg_8336, arg_8337);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPathSubCommandsNV.xhtml
pub inline fn glPathSubCommandsNV(arg_8338: GLuint, arg_8339: GLsizei, arg_8340: GLsizei, arg_8341: GLsizei, arg_8342: [*c]const GLubyte, arg_8343: GLsizei, arg_8344: GLenum, arg_8345: ?*const anyopaque) void {
    return glad_glPathSubCommandsNV.?(arg_8338, arg_8339, arg_8340, arg_8341, arg_8342, arg_8343, arg_8344, arg_8345);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPathSubCoordsNV.xhtml
pub inline fn glPathSubCoordsNV(arg_8346: GLuint, arg_8347: GLsizei, arg_8348: GLsizei, arg_8349: GLenum, arg_8350: ?*const anyopaque) void {
    return glad_glPathSubCoordsNV.?(arg_8346, arg_8347, arg_8348, arg_8349, arg_8350);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPathStringNV.xhtml
pub inline fn glPathStringNV(arg_8351: GLuint, arg_8352: GLenum, arg_8353: GLsizei, arg_8354: ?*const anyopaque) void {
    return glad_glPathStringNV.?(arg_8351, arg_8352, arg_8353, arg_8354);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPathGlyphsNV.xhtml
pub inline fn glPathGlyphsNV(arg_8355: GLuint, arg_8356: GLenum, arg_8357: ?*const anyopaque, arg_8358: GLbitfield, arg_8359: GLsizei, arg_8360: GLenum, arg_8361: ?*const anyopaque, arg_8362: GLenum, arg_8363: GLuint, arg_8364: GLfloat) void {
    return glad_glPathGlyphsNV.?(arg_8355, arg_8356, arg_8357, arg_8358, arg_8359, arg_8360, arg_8361, arg_8362, arg_8363, arg_8364);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPathGlyphRangeNV.xhtml
pub inline fn glPathGlyphRangeNV(arg_8365: GLuint, arg_8366: GLenum, arg_8367: ?*const anyopaque, arg_8368: GLbitfield, arg_8369: GLuint, arg_8370: GLsizei, arg_8371: GLenum, arg_8372: GLuint, arg_8373: GLfloat) void {
    return glad_glPathGlyphRangeNV.?(arg_8365, arg_8366, arg_8367, arg_8368, arg_8369, arg_8370, arg_8371, arg_8372, arg_8373);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWeightPathsNV.xhtml
pub inline fn glWeightPathsNV(arg_8374: GLuint, arg_8375: GLsizei, arg_8376: [*c]const GLuint, arg_8377: [*c]const GLfloat) void {
    return glad_glWeightPathsNV.?(arg_8374, arg_8375, arg_8376, arg_8377);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyPathNV.xhtml
pub inline fn glCopyPathNV(arg_8378: GLuint, arg_8379: GLuint) void {
    return glad_glCopyPathNV.?(arg_8378, arg_8379);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glInterpolatePathsNV.xhtml
pub inline fn glInterpolatePathsNV(arg_8380: GLuint, arg_8381: GLuint, arg_8382: GLuint, arg_8383: GLfloat) void {
    return glad_glInterpolatePathsNV.?(arg_8380, arg_8381, arg_8382, arg_8383);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTransformPathNV.xhtml
pub inline fn glTransformPathNV(arg_8384: GLuint, arg_8385: GLuint, arg_8386: GLenum, arg_8387: [*c]const GLfloat) void {
    return glad_glTransformPathNV.?(arg_8384, arg_8385, arg_8386, arg_8387);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPathParameterivNV.xhtml
pub inline fn glPathParameterivNV(arg_8388: GLuint, arg_8389: GLenum, arg_8390: [*c]const GLint) void {
    return glad_glPathParameterivNV.?(arg_8388, arg_8389, arg_8390);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPathParameteriNV.xhtml
pub inline fn glPathParameteriNV(arg_8391: GLuint, arg_8392: GLenum, arg_8393: GLint) void {
    return glad_glPathParameteriNV.?(arg_8391, arg_8392, arg_8393);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPathParameterfvNV.xhtml
pub inline fn glPathParameterfvNV(arg_8394: GLuint, arg_8395: GLenum, arg_8396: [*c]const GLfloat) void {
    return glad_glPathParameterfvNV.?(arg_8394, arg_8395, arg_8396);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPathParameterfNV.xhtml
pub inline fn glPathParameterfNV(arg_8397: GLuint, arg_8398: GLenum, arg_8399: GLfloat) void {
    return glad_glPathParameterfNV.?(arg_8397, arg_8398, arg_8399);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPathDashArrayNV.xhtml
pub inline fn glPathDashArrayNV(arg_8400: GLuint, arg_8401: GLsizei, arg_8402: [*c]const GLfloat) void {
    return glad_glPathDashArrayNV.?(arg_8400, arg_8401, arg_8402);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPathStencilFuncNV.xhtml
pub inline fn glPathStencilFuncNV(arg_8403: GLenum, arg_8404: GLint, arg_8405: GLuint) void {
    return glad_glPathStencilFuncNV.?(arg_8403, arg_8404, arg_8405);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPathStencilDepthOffsetNV.xhtml
pub inline fn glPathStencilDepthOffsetNV(arg_8406: GLfloat, arg_8407: GLfloat) void {
    return glad_glPathStencilDepthOffsetNV.?(arg_8406, arg_8407);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glStencilFillPathNV.xhtml
pub inline fn glStencilFillPathNV(arg_8408: GLuint, arg_8409: GLenum, arg_8410: GLuint) void {
    return glad_glStencilFillPathNV.?(arg_8408, arg_8409, arg_8410);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glStencilStrokePathNV.xhtml
pub inline fn glStencilStrokePathNV(arg_8411: GLuint, arg_8412: GLint, arg_8413: GLuint) void {
    return glad_glStencilStrokePathNV.?(arg_8411, arg_8412, arg_8413);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glStencilFillPathInstancedNV.xhtml
pub inline fn glStencilFillPathInstancedNV(arg_8414: GLsizei, arg_8415: GLenum, arg_8416: ?*const anyopaque, arg_8417: GLuint, arg_8418: GLenum, arg_8419: GLuint, arg_8420: GLenum, arg_8421: [*c]const GLfloat) void {
    return glad_glStencilFillPathInstancedNV.?(arg_8414, arg_8415, arg_8416, arg_8417, arg_8418, arg_8419, arg_8420, arg_8421);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glStencilStrokePathInstancedNV.xhtml
pub inline fn glStencilStrokePathInstancedNV(arg_8422: GLsizei, arg_8423: GLenum, arg_8424: ?*const anyopaque, arg_8425: GLuint, arg_8426: GLint, arg_8427: GLuint, arg_8428: GLenum, arg_8429: [*c]const GLfloat) void {
    return glad_glStencilStrokePathInstancedNV.?(arg_8422, arg_8423, arg_8424, arg_8425, arg_8426, arg_8427, arg_8428, arg_8429);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPathCoverDepthFuncNV.xhtml
pub inline fn glPathCoverDepthFuncNV(arg_8430: GLenum) void {
    return glad_glPathCoverDepthFuncNV.?(arg_8430);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCoverFillPathNV.xhtml
pub inline fn glCoverFillPathNV(arg_8431: GLuint, arg_8432: GLenum) void {
    return glad_glCoverFillPathNV.?(arg_8431, arg_8432);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCoverStrokePathNV.xhtml
pub inline fn glCoverStrokePathNV(arg_8433: GLuint, arg_8434: GLenum) void {
    return glad_glCoverStrokePathNV.?(arg_8433, arg_8434);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCoverFillPathInstancedNV.xhtml
pub inline fn glCoverFillPathInstancedNV(arg_8435: GLsizei, arg_8436: GLenum, arg_8437: ?*const anyopaque, arg_8438: GLuint, arg_8439: GLenum, arg_8440: GLenum, arg_8441: [*c]const GLfloat) void {
    return glad_glCoverFillPathInstancedNV.?(arg_8435, arg_8436, arg_8437, arg_8438, arg_8439, arg_8440, arg_8441);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCoverStrokePathInstancedNV.xhtml
pub inline fn glCoverStrokePathInstancedNV(arg_8442: GLsizei, arg_8443: GLenum, arg_8444: ?*const anyopaque, arg_8445: GLuint, arg_8446: GLenum, arg_8447: GLenum, arg_8448: [*c]const GLfloat) void {
    return glad_glCoverStrokePathInstancedNV.?(arg_8442, arg_8443, arg_8444, arg_8445, arg_8446, arg_8447, arg_8448);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPathParameterivNV.xhtml
pub inline fn glGetPathParameterivNV(arg_8449: GLuint, arg_8450: GLenum, arg_8451: [*c]GLint) void {
    return glad_glGetPathParameterivNV.?(arg_8449, arg_8450, arg_8451);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPathParameterfvNV.xhtml
pub inline fn glGetPathParameterfvNV(arg_8452: GLuint, arg_8453: GLenum, arg_8454: [*c]GLfloat) void {
    return glad_glGetPathParameterfvNV.?(arg_8452, arg_8453, arg_8454);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPathCommandsNV.xhtml
pub inline fn glGetPathCommandsNV(arg_8455: GLuint, arg_8456: [*c]GLubyte) void {
    return glad_glGetPathCommandsNV.?(arg_8455, arg_8456);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPathCoordsNV.xhtml
pub inline fn glGetPathCoordsNV(arg_8457: GLuint, arg_8458: [*c]GLfloat) void {
    return glad_glGetPathCoordsNV.?(arg_8457, arg_8458);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPathDashArrayNV.xhtml
pub inline fn glGetPathDashArrayNV(arg_8459: GLuint, arg_8460: [*c]GLfloat) void {
    return glad_glGetPathDashArrayNV.?(arg_8459, arg_8460);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPathMetricsNV.xhtml
pub inline fn glGetPathMetricsNV(arg_8461: GLbitfield, arg_8462: GLsizei, arg_8463: GLenum, arg_8464: ?*const anyopaque, arg_8465: GLuint, arg_8466: GLsizei, arg_8467: [*c]GLfloat) void {
    return glad_glGetPathMetricsNV.?(arg_8461, arg_8462, arg_8463, arg_8464, arg_8465, arg_8466, arg_8467);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPathMetricRangeNV.xhtml
pub inline fn glGetPathMetricRangeNV(arg_8468: GLbitfield, arg_8469: GLuint, arg_8470: GLsizei, arg_8471: GLsizei, arg_8472: [*c]GLfloat) void {
    return glad_glGetPathMetricRangeNV.?(arg_8468, arg_8469, arg_8470, arg_8471, arg_8472);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPathSpacingNV.xhtml
pub inline fn glGetPathSpacingNV(arg_8473: GLenum, arg_8474: GLsizei, arg_8475: GLenum, arg_8476: ?*const anyopaque, arg_8477: GLuint, arg_8478: GLfloat, arg_8479: GLfloat, arg_8480: GLenum, arg_8481: [*c]GLfloat) void {
    return glad_glGetPathSpacingNV.?(arg_8473, arg_8474, arg_8475, arg_8476, arg_8477, arg_8478, arg_8479, arg_8480, arg_8481);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsPointInFillPathNV.xhtml
pub inline fn glIsPointInFillPathNV(arg_8482: GLuint, arg_8483: GLuint, arg_8484: GLfloat, arg_8485: GLfloat) GLboolean {
    return glad_glIsPointInFillPathNV.?(arg_8482, arg_8483, arg_8484, arg_8485);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsPointInStrokePathNV.xhtml
pub inline fn glIsPointInStrokePathNV(arg_8486: GLuint, arg_8487: GLfloat, arg_8488: GLfloat) GLboolean {
    return glad_glIsPointInStrokePathNV.?(arg_8486, arg_8487, arg_8488);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPathLengthNV.xhtml
pub inline fn glGetPathLengthNV(arg_8489: GLuint, arg_8490: GLsizei, arg_8491: GLsizei) GLfloat {
    return glad_glGetPathLengthNV.?(arg_8489, arg_8490, arg_8491);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPointAlongPathNV.xhtml
pub inline fn glPointAlongPathNV(arg_8492: GLuint, arg_8493: GLsizei, arg_8494: GLsizei, arg_8495: GLfloat, arg_8496: [*c]GLfloat, arg_8497: [*c]GLfloat, arg_8498: [*c]GLfloat, arg_8499: [*c]GLfloat) GLboolean {
    return glad_glPointAlongPathNV.?(arg_8492, arg_8493, arg_8494, arg_8495, arg_8496, arg_8497, arg_8498, arg_8499);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixLoad3x2fNV.xhtml
pub inline fn glMatrixLoad3x2fNV(arg_8500: GLenum, arg_8501: [*c]const GLfloat) void {
    return glad_glMatrixLoad3x2fNV.?(arg_8500, arg_8501);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixLoad3x3fNV.xhtml
pub inline fn glMatrixLoad3x3fNV(arg_8502: GLenum, arg_8503: [*c]const GLfloat) void {
    return glad_glMatrixLoad3x3fNV.?(arg_8502, arg_8503);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixLoadTranspose3x3fNV.xhtml
pub inline fn glMatrixLoadTranspose3x3fNV(arg_8504: GLenum, arg_8505: [*c]const GLfloat) void {
    return glad_glMatrixLoadTranspose3x3fNV.?(arg_8504, arg_8505);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixMult3x2fNV.xhtml
pub inline fn glMatrixMult3x2fNV(arg_8506: GLenum, arg_8507: [*c]const GLfloat) void {
    return glad_glMatrixMult3x2fNV.?(arg_8506, arg_8507);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixMult3x3fNV.xhtml
pub inline fn glMatrixMult3x3fNV(arg_8508: GLenum, arg_8509: [*c]const GLfloat) void {
    return glad_glMatrixMult3x3fNV.?(arg_8508, arg_8509);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixMultTranspose3x3fNV.xhtml
pub inline fn glMatrixMultTranspose3x3fNV(arg_8510: GLenum, arg_8511: [*c]const GLfloat) void {
    return glad_glMatrixMultTranspose3x3fNV.?(arg_8510, arg_8511);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glStencilThenCoverFillPathNV.xhtml
pub inline fn glStencilThenCoverFillPathNV(arg_8512: GLuint, arg_8513: GLenum, arg_8514: GLuint, arg_8515: GLenum) void {
    return glad_glStencilThenCoverFillPathNV.?(arg_8512, arg_8513, arg_8514, arg_8515);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glStencilThenCoverStrokePathNV.xhtml
pub inline fn glStencilThenCoverStrokePathNV(arg_8516: GLuint, arg_8517: GLint, arg_8518: GLuint, arg_8519: GLenum) void {
    return glad_glStencilThenCoverStrokePathNV.?(arg_8516, arg_8517, arg_8518, arg_8519);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glStencilThenCoverFillPathInstancedNV.xhtml
pub inline fn glStencilThenCoverFillPathInstancedNV(arg_8520: GLsizei, arg_8521: GLenum, arg_8522: ?*const anyopaque, arg_8523: GLuint, arg_8524: GLenum, arg_8525: GLuint, arg_8526: GLenum, arg_8527: GLenum, arg_8528: [*c]const GLfloat) void {
    return glad_glStencilThenCoverFillPathInstancedNV.?(arg_8520, arg_8521, arg_8522, arg_8523, arg_8524, arg_8525, arg_8526, arg_8527, arg_8528);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glStencilThenCoverStrokePathInstancedNV.xhtml
pub inline fn glStencilThenCoverStrokePathInstancedNV(arg_8529: GLsizei, arg_8530: GLenum, arg_8531: ?*const anyopaque, arg_8532: GLuint, arg_8533: GLint, arg_8534: GLuint, arg_8535: GLenum, arg_8536: GLenum, arg_8537: [*c]const GLfloat) void {
    return glad_glStencilThenCoverStrokePathInstancedNV.?(arg_8529, arg_8530, arg_8531, arg_8532, arg_8533, arg_8534, arg_8535, arg_8536, arg_8537);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPathGlyphIndexRangeNV.xhtml
pub inline fn glPathGlyphIndexRangeNV(arg_8538: GLenum, arg_8539: ?*const anyopaque, arg_8540: GLbitfield, arg_8541: GLuint, arg_8542: GLfloat, arg_8543: [*c]GLuint) GLenum {
    return glad_glPathGlyphIndexRangeNV.?(arg_8538, arg_8539, arg_8540, arg_8541, arg_8542, arg_8543);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPathGlyphIndexArrayNV.xhtml
pub inline fn glPathGlyphIndexArrayNV(arg_8544: GLuint, arg_8545: GLenum, arg_8546: ?*const anyopaque, arg_8547: GLbitfield, arg_8548: GLuint, arg_8549: GLsizei, arg_8550: GLuint, arg_8551: GLfloat) GLenum {
    return glad_glPathGlyphIndexArrayNV.?(arg_8544, arg_8545, arg_8546, arg_8547, arg_8548, arg_8549, arg_8550, arg_8551);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPathMemoryGlyphIndexArrayNV.xhtml
pub inline fn glPathMemoryGlyphIndexArrayNV(arg_8552: GLuint, arg_8553: GLenum, arg_8554: GLsizeiptr, arg_8555: ?*const anyopaque, arg_8556: GLsizei, arg_8557: GLuint, arg_8558: GLsizei, arg_8559: GLuint, arg_8560: GLfloat) GLenum {
    return glad_glPathMemoryGlyphIndexArrayNV.?(arg_8552, arg_8553, arg_8554, arg_8555, arg_8556, arg_8557, arg_8558, arg_8559, arg_8560);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramPathFragmentInputGenNV.xhtml
pub inline fn glProgramPathFragmentInputGenNV(arg_8561: GLuint, arg_8562: GLint, arg_8563: GLenum, arg_8564: GLint, arg_8565: [*c]const GLfloat) void {
    return glad_glProgramPathFragmentInputGenNV.?(arg_8561, arg_8562, arg_8563, arg_8564, arg_8565);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramResourcefvNV.xhtml
pub inline fn glGetProgramResourcefvNV(arg_8566: GLuint, arg_8567: GLenum, arg_8568: GLuint, arg_8569: GLsizei, arg_8570: [*c]const GLenum, arg_8571: GLsizei, arg_8572: [*c]GLsizei, arg_8573: [*c]GLfloat) void {
    return glad_glGetProgramResourcefvNV.?(arg_8566, arg_8567, arg_8568, arg_8569, arg_8570, arg_8571, arg_8572, arg_8573);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPathColorGenNV.xhtml
pub inline fn glPathColorGenNV(arg_8574: GLenum, arg_8575: GLenum, arg_8576: GLenum, arg_8577: [*c]const GLfloat) void {
    return glad_glPathColorGenNV.?(arg_8574, arg_8575, arg_8576, arg_8577);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPathTexGenNV.xhtml
pub inline fn glPathTexGenNV(arg_8578: GLenum, arg_8579: GLenum, arg_8580: GLint, arg_8581: [*c]const GLfloat) void {
    return glad_glPathTexGenNV.?(arg_8578, arg_8579, arg_8580, arg_8581);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPathFogGenNV.xhtml
pub inline fn glPathFogGenNV(arg_8582: GLenum) void {
    return glad_glPathFogGenNV.?(arg_8582);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPathColorGenivNV.xhtml
pub inline fn glGetPathColorGenivNV(arg_8583: GLenum, arg_8584: GLenum, arg_8585: [*c]GLint) void {
    return glad_glGetPathColorGenivNV.?(arg_8583, arg_8584, arg_8585);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPathColorGenfvNV.xhtml
pub inline fn glGetPathColorGenfvNV(arg_8586: GLenum, arg_8587: GLenum, arg_8588: [*c]GLfloat) void {
    return glad_glGetPathColorGenfvNV.?(arg_8586, arg_8587, arg_8588);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPathTexGenivNV.xhtml
pub inline fn glGetPathTexGenivNV(arg_8589: GLenum, arg_8590: GLenum, arg_8591: [*c]GLint) void {
    return glad_glGetPathTexGenivNV.?(arg_8589, arg_8590, arg_8591);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPathTexGenfvNV.xhtml
pub inline fn glGetPathTexGenfvNV(arg_8592: GLenum, arg_8593: GLenum, arg_8594: [*c]GLfloat) void {
    return glad_glGetPathTexGenfvNV.?(arg_8592, arg_8593, arg_8594);
}
pub const GL_NV_path_rendering_shared_edge = 1;
pub const GL_NV_pixel_data_range = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPixelDataRangeNV.xhtml
pub inline fn glPixelDataRangeNV(arg_8595: GLenum, arg_8596: GLsizei, arg_8597: ?*const anyopaque) void {
    return glad_glPixelDataRangeNV.?(arg_8595, arg_8596, arg_8597);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFlushPixelDataRangeNV.xhtml
pub inline fn glFlushPixelDataRangeNV(arg_8598: GLenum) void {
    return glad_glFlushPixelDataRangeNV.?(arg_8598);
}
pub const GL_NV_point_sprite = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPointParameteriNV.xhtml
pub inline fn glPointParameteriNV(arg_8599: GLenum, arg_8600: GLint) void {
    return glad_glPointParameteriNV.?(arg_8599, arg_8600);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPointParameterivNV.xhtml
pub inline fn glPointParameterivNV(arg_8601: GLenum, arg_8602: [*c]const GLint) void {
    return glad_glPointParameterivNV.?(arg_8601, arg_8602);
}
pub const GL_NV_present_video = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPresentFrameKeyedNV.xhtml
pub inline fn glPresentFrameKeyedNV(arg_8603: GLuint, arg_8604: GLuint64EXT, arg_8605: GLuint, arg_8606: GLuint, arg_8607: GLenum, arg_8608: GLenum, arg_8609: GLuint, arg_8610: GLuint, arg_8611: GLenum, arg_8612: GLuint, arg_8613: GLuint) void {
    return glad_glPresentFrameKeyedNV.?(arg_8603, arg_8604, arg_8605, arg_8606, arg_8607, arg_8608, arg_8609, arg_8610, arg_8611, arg_8612, arg_8613);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPresentFrameDualFillNV.xhtml
pub inline fn glPresentFrameDualFillNV(arg_8614: GLuint, arg_8615: GLuint64EXT, arg_8616: GLuint, arg_8617: GLuint, arg_8618: GLenum, arg_8619: GLenum, arg_8620: GLuint, arg_8621: GLenum, arg_8622: GLuint, arg_8623: GLenum, arg_8624: GLuint, arg_8625: GLenum, arg_8626: GLuint) void {
    return glad_glPresentFrameDualFillNV.?(arg_8614, arg_8615, arg_8616, arg_8617, arg_8618, arg_8619, arg_8620, arg_8621, arg_8622, arg_8623, arg_8624, arg_8625, arg_8626);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVideoivNV.xhtml
pub inline fn glGetVideoivNV(arg_8627: GLuint, arg_8628: GLenum, arg_8629: [*c]GLint) void {
    return glad_glGetVideoivNV.?(arg_8627, arg_8628, arg_8629);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVideouivNV.xhtml
pub inline fn glGetVideouivNV(arg_8630: GLuint, arg_8631: GLenum, arg_8632: [*c]GLuint) void {
    return glad_glGetVideouivNV.?(arg_8630, arg_8631, arg_8632);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVideoi64vNV.xhtml
pub inline fn glGetVideoi64vNV(arg_8633: GLuint, arg_8634: GLenum, arg_8635: [*c]GLint64EXT) void {
    return glad_glGetVideoi64vNV.?(arg_8633, arg_8634, arg_8635);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVideoui64vNV.xhtml
pub inline fn glGetVideoui64vNV(arg_8636: GLuint, arg_8637: GLenum, arg_8638: [*c]GLuint64EXT) void {
    return glad_glGetVideoui64vNV.?(arg_8636, arg_8637, arg_8638);
}
pub const GL_NV_primitive_restart = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPrimitiveRestartNV.xhtml
pub inline fn glPrimitiveRestartNV() void {
    return glad_glPrimitiveRestartNV.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPrimitiveRestartIndexNV.xhtml
pub inline fn glPrimitiveRestartIndexNV(arg_8639: GLuint) void {
    return glad_glPrimitiveRestartIndexNV.?(arg_8639);
}
pub const GL_NV_primitive_shading_rate = 1;
pub const GL_NV_query_resource = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glQueryResourceNV.xhtml
pub inline fn glQueryResourceNV(arg_8640: GLenum, arg_8641: GLint, arg_8642: GLuint, arg_8643: [*c]GLint) GLint {
    return glad_glQueryResourceNV.?(arg_8640, arg_8641, arg_8642, arg_8643);
}
pub const GL_NV_query_resource_tag = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenQueryResourceTagNV.xhtml
pub inline fn glGenQueryResourceTagNV(arg_8644: GLsizei, arg_8645: [*c]GLint) void {
    return glad_glGenQueryResourceTagNV.?(arg_8644, arg_8645);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteQueryResourceTagNV.xhtml
pub inline fn glDeleteQueryResourceTagNV(arg_8646: GLsizei, arg_8647: [*c]const GLint) void {
    return glad_glDeleteQueryResourceTagNV.?(arg_8646, arg_8647);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glQueryResourceTagNV.xhtml
pub inline fn glQueryResourceTagNV(arg_8648: GLint, arg_8649: [*c]const GLchar) void {
    return glad_glQueryResourceTagNV.?(arg_8648, arg_8649);
}
pub const GL_NV_register_combiners = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCombinerParameterfvNV.xhtml
pub inline fn glCombinerParameterfvNV(arg_8650: GLenum, arg_8651: [*c]const GLfloat) void {
    return glad_glCombinerParameterfvNV.?(arg_8650, arg_8651);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCombinerParameterfNV.xhtml
pub inline fn glCombinerParameterfNV(arg_8652: GLenum, arg_8653: GLfloat) void {
    return glad_glCombinerParameterfNV.?(arg_8652, arg_8653);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCombinerParameterivNV.xhtml
pub inline fn glCombinerParameterivNV(arg_8654: GLenum, arg_8655: [*c]const GLint) void {
    return glad_glCombinerParameterivNV.?(arg_8654, arg_8655);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCombinerParameteriNV.xhtml
pub inline fn glCombinerParameteriNV(arg_8656: GLenum, arg_8657: GLint) void {
    return glad_glCombinerParameteriNV.?(arg_8656, arg_8657);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCombinerInputNV.xhtml
pub inline fn glCombinerInputNV(arg_8658: GLenum, arg_8659: GLenum, arg_8660: GLenum, arg_8661: GLenum, arg_8662: GLenum, arg_8663: GLenum) void {
    return glad_glCombinerInputNV.?(arg_8658, arg_8659, arg_8660, arg_8661, arg_8662, arg_8663);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCombinerOutputNV.xhtml
pub inline fn glCombinerOutputNV(arg_8664: GLenum, arg_8665: GLenum, arg_8666: GLenum, arg_8667: GLenum, arg_8668: GLenum, arg_8669: GLenum, arg_8670: GLenum, arg_8671: GLboolean, arg_8672: GLboolean, arg_8673: GLboolean) void {
    return glad_glCombinerOutputNV.?(arg_8664, arg_8665, arg_8666, arg_8667, arg_8668, arg_8669, arg_8670, arg_8671, arg_8672, arg_8673);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFinalCombinerInputNV.xhtml
pub inline fn glFinalCombinerInputNV(arg_8674: GLenum, arg_8675: GLenum, arg_8676: GLenum, arg_8677: GLenum) void {
    return glad_glFinalCombinerInputNV.?(arg_8674, arg_8675, arg_8676, arg_8677);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetCombinerInputParameterfvNV.xhtml
pub inline fn glGetCombinerInputParameterfvNV(arg_8678: GLenum, arg_8679: GLenum, arg_8680: GLenum, arg_8681: GLenum, arg_8682: [*c]GLfloat) void {
    return glad_glGetCombinerInputParameterfvNV.?(arg_8678, arg_8679, arg_8680, arg_8681, arg_8682);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetCombinerInputParameterivNV.xhtml
pub inline fn glGetCombinerInputParameterivNV(arg_8683: GLenum, arg_8684: GLenum, arg_8685: GLenum, arg_8686: GLenum, arg_8687: [*c]GLint) void {
    return glad_glGetCombinerInputParameterivNV.?(arg_8683, arg_8684, arg_8685, arg_8686, arg_8687);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetCombinerOutputParameterfvNV.xhtml
pub inline fn glGetCombinerOutputParameterfvNV(arg_8688: GLenum, arg_8689: GLenum, arg_8690: GLenum, arg_8691: [*c]GLfloat) void {
    return glad_glGetCombinerOutputParameterfvNV.?(arg_8688, arg_8689, arg_8690, arg_8691);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetCombinerOutputParameterivNV.xhtml
pub inline fn glGetCombinerOutputParameterivNV(arg_8692: GLenum, arg_8693: GLenum, arg_8694: GLenum, arg_8695: [*c]GLint) void {
    return glad_glGetCombinerOutputParameterivNV.?(arg_8692, arg_8693, arg_8694, arg_8695);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFinalCombinerInputParameterfvNV.xhtml
pub inline fn glGetFinalCombinerInputParameterfvNV(arg_8696: GLenum, arg_8697: GLenum, arg_8698: [*c]GLfloat) void {
    return glad_glGetFinalCombinerInputParameterfvNV.?(arg_8696, arg_8697, arg_8698);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFinalCombinerInputParameterivNV.xhtml
pub inline fn glGetFinalCombinerInputParameterivNV(arg_8699: GLenum, arg_8700: GLenum, arg_8701: [*c]GLint) void {
    return glad_glGetFinalCombinerInputParameterivNV.?(arg_8699, arg_8700, arg_8701);
}
pub const GL_NV_register_combiners2 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCombinerStageParameterfvNV.xhtml
pub inline fn glCombinerStageParameterfvNV(arg_8702: GLenum, arg_8703: GLenum, arg_8704: [*c]const GLfloat) void {
    return glad_glCombinerStageParameterfvNV.?(arg_8702, arg_8703, arg_8704);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetCombinerStageParameterfvNV.xhtml
pub inline fn glGetCombinerStageParameterfvNV(arg_8705: GLenum, arg_8706: GLenum, arg_8707: [*c]GLfloat) void {
    return glad_glGetCombinerStageParameterfvNV.?(arg_8705, arg_8706, arg_8707);
}
pub const GL_NV_representative_fragment_test = 1;
pub const GL_NV_robustness_video_memory_purge = 1;
pub const GL_NV_sample_locations = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferSampleLocationsfvNV.xhtml
pub inline fn glFramebufferSampleLocationsfvNV(arg_8708: GLenum, arg_8709: GLuint, arg_8710: GLsizei, arg_8711: [*c]const GLfloat) void {
    return glad_glFramebufferSampleLocationsfvNV.?(arg_8708, arg_8709, arg_8710, arg_8711);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNamedFramebufferSampleLocationsfvNV.xhtml
pub inline fn glNamedFramebufferSampleLocationsfvNV(arg_8712: GLuint, arg_8713: GLuint, arg_8714: GLsizei, arg_8715: [*c]const GLfloat) void {
    return glad_glNamedFramebufferSampleLocationsfvNV.?(arg_8712, arg_8713, arg_8714, arg_8715);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glResolveDepthValuesNV.xhtml
pub inline fn glResolveDepthValuesNV() void {
    return glad_glResolveDepthValuesNV.?();
}
pub const GL_NV_sample_mask_override_coverage = 1;
pub const GL_NV_scissor_exclusive = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glScissorExclusiveNV.xhtml
pub inline fn glScissorExclusiveNV(arg_8716: GLint, arg_8717: GLint, arg_8718: GLsizei, arg_8719: GLsizei) void {
    return glad_glScissorExclusiveNV.?(arg_8716, arg_8717, arg_8718, arg_8719);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glScissorExclusiveArrayvNV.xhtml
pub inline fn glScissorExclusiveArrayvNV(arg_8720: GLuint, arg_8721: GLsizei, arg_8722: [*c]const GLint) void {
    return glad_glScissorExclusiveArrayvNV.?(arg_8720, arg_8721, arg_8722);
}
pub const GL_NV_shader_atomic_counters = 1;
pub const GL_NV_shader_atomic_float = 1;
pub const GL_NV_shader_atomic_float64 = 1;
pub const GL_NV_shader_atomic_fp16_vector = 1;
pub const GL_NV_shader_atomic_int64 = 1;
pub const GL_NV_shader_buffer_load = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMakeBufferResidentNV.xhtml
pub inline fn glMakeBufferResidentNV(arg_8723: GLenum, arg_8724: GLenum) void {
    return glad_glMakeBufferResidentNV.?(arg_8723, arg_8724);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMakeBufferNonResidentNV.xhtml
pub inline fn glMakeBufferNonResidentNV(arg_8725: GLenum) void {
    return glad_glMakeBufferNonResidentNV.?(arg_8725);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsBufferResidentNV.xhtml
pub inline fn glIsBufferResidentNV(arg_8726: GLenum) GLboolean {
    return glad_glIsBufferResidentNV.?(arg_8726);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMakeNamedBufferResidentNV.xhtml
pub inline fn glMakeNamedBufferResidentNV(arg_8727: GLuint, arg_8728: GLenum) void {
    return glad_glMakeNamedBufferResidentNV.?(arg_8727, arg_8728);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMakeNamedBufferNonResidentNV.xhtml
pub inline fn glMakeNamedBufferNonResidentNV(arg_8729: GLuint) void {
    return glad_glMakeNamedBufferNonResidentNV.?(arg_8729);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsNamedBufferResidentNV.xhtml
pub inline fn glIsNamedBufferResidentNV(arg_8730: GLuint) GLboolean {
    return glad_glIsNamedBufferResidentNV.?(arg_8730);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetBufferParameterui64vNV.xhtml
pub inline fn glGetBufferParameterui64vNV(arg_8731: GLenum, arg_8732: GLenum, arg_8733: [*c]GLuint64EXT) void {
    return glad_glGetBufferParameterui64vNV.?(arg_8731, arg_8732, arg_8733);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetNamedBufferParameterui64vNV.xhtml
pub inline fn glGetNamedBufferParameterui64vNV(arg_8734: GLuint, arg_8735: GLenum, arg_8736: [*c]GLuint64EXT) void {
    return glad_glGetNamedBufferParameterui64vNV.?(arg_8734, arg_8735, arg_8736);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetIntegerui64vNV.xhtml
pub inline fn glGetIntegerui64vNV(arg_8737: GLenum, arg_8738: [*c]GLuint64EXT) void {
    return glad_glGetIntegerui64vNV.?(arg_8737, arg_8738);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformui64NV.xhtml
pub inline fn glUniformui64NV(arg_8739: GLint, arg_8740: GLuint64EXT) void {
    return glad_glUniformui64NV.?(arg_8739, arg_8740);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformui64vNV.xhtml
pub inline fn glUniformui64vNV(arg_8741: GLint, arg_8742: GLsizei, arg_8743: [*c]const GLuint64EXT) void {
    return glad_glUniformui64vNV.?(arg_8741, arg_8742, arg_8743);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformui64NV.xhtml
pub inline fn glProgramUniformui64NV(arg_8744: GLuint, arg_8745: GLint, arg_8746: GLuint64EXT) void {
    return glad_glProgramUniformui64NV.?(arg_8744, arg_8745, arg_8746);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformui64vNV.xhtml
pub inline fn glProgramUniformui64vNV(arg_8747: GLuint, arg_8748: GLint, arg_8749: GLsizei, arg_8750: [*c]const GLuint64EXT) void {
    return glad_glProgramUniformui64vNV.?(arg_8747, arg_8748, arg_8749, arg_8750);
}
pub const GL_NV_shader_buffer_store = 1;
pub const GL_NV_shader_storage_buffer_object = 1;
pub const GL_NV_shader_subgroup_partitioned = 1;
pub const GL_NV_shader_texture_footprint = 1;
pub const GL_NV_shader_thread_group = 1;
pub const GL_NV_shader_thread_shuffle = 1;
pub const GL_NV_shading_rate_image = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindShadingRateImageNV.xhtml
pub inline fn glBindShadingRateImageNV(arg_8751: GLuint) void {
    return glad_glBindShadingRateImageNV.?(arg_8751);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetShadingRateImagePaletteNV.xhtml
pub inline fn glGetShadingRateImagePaletteNV(arg_8752: GLuint, arg_8753: GLuint, arg_8754: [*c]GLenum) void {
    return glad_glGetShadingRateImagePaletteNV.?(arg_8752, arg_8753, arg_8754);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetShadingRateSampleLocationivNV.xhtml
pub inline fn glGetShadingRateSampleLocationivNV(arg_8755: GLenum, arg_8756: GLuint, arg_8757: GLuint, arg_8758: [*c]GLint) void {
    return glad_glGetShadingRateSampleLocationivNV.?(arg_8755, arg_8756, arg_8757, arg_8758);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glShadingRateImageBarrierNV.xhtml
pub inline fn glShadingRateImageBarrierNV(arg_8759: GLboolean) void {
    return glad_glShadingRateImageBarrierNV.?(arg_8759);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glShadingRateImagePaletteNV.xhtml
pub inline fn glShadingRateImagePaletteNV(arg_8760: GLuint, arg_8761: GLuint, arg_8762: GLsizei, arg_8763: [*c]const GLenum) void {
    return glad_glShadingRateImagePaletteNV.?(arg_8760, arg_8761, arg_8762, arg_8763);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glShadingRateSampleOrderNV.xhtml
pub inline fn glShadingRateSampleOrderNV(arg_8764: GLenum) void {
    return glad_glShadingRateSampleOrderNV.?(arg_8764);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glShadingRateSampleOrderCustomNV.xhtml
pub inline fn glShadingRateSampleOrderCustomNV(arg_8765: GLenum, arg_8766: GLuint, arg_8767: [*c]const GLint) void {
    return glad_glShadingRateSampleOrderCustomNV.?(arg_8765, arg_8766, arg_8767);
}
pub const GL_NV_stereo_view_rendering = 1;
pub const GL_NV_tessellation_program5 = 1;
pub const GL_NV_texgen_emboss = 1;
pub const GL_NV_texgen_reflection = 1;
pub const GL_NV_texture_barrier = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureBarrierNV.xhtml
pub inline fn glTextureBarrierNV() void {
    return glad_glTextureBarrierNV.?();
}
pub const GL_NV_texture_compression_vtc = 1;
pub const GL_NV_texture_env_combine4 = 1;
pub const GL_NV_texture_expand_normal = 1;
pub const GL_NV_texture_multisample = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexImage2DMultisampleCoverageNV.xhtml
pub inline fn glTexImage2DMultisampleCoverageNV(arg_8768: GLenum, arg_8769: GLsizei, arg_8770: GLsizei, arg_8771: GLint, arg_8772: GLsizei, arg_8773: GLsizei, arg_8774: GLboolean) void {
    return glad_glTexImage2DMultisampleCoverageNV.?(arg_8768, arg_8769, arg_8770, arg_8771, arg_8772, arg_8773, arg_8774);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexImage3DMultisampleCoverageNV.xhtml
pub inline fn glTexImage3DMultisampleCoverageNV(arg_8775: GLenum, arg_8776: GLsizei, arg_8777: GLsizei, arg_8778: GLint, arg_8779: GLsizei, arg_8780: GLsizei, arg_8781: GLsizei, arg_8782: GLboolean) void {
    return glad_glTexImage3DMultisampleCoverageNV.?(arg_8775, arg_8776, arg_8777, arg_8778, arg_8779, arg_8780, arg_8781, arg_8782);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureImage2DMultisampleNV.xhtml
pub inline fn glTextureImage2DMultisampleNV(arg_8783: GLuint, arg_8784: GLenum, arg_8785: GLsizei, arg_8786: GLint, arg_8787: GLsizei, arg_8788: GLsizei, arg_8789: GLboolean) void {
    return glad_glTextureImage2DMultisampleNV.?(arg_8783, arg_8784, arg_8785, arg_8786, arg_8787, arg_8788, arg_8789);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureImage3DMultisampleNV.xhtml
pub inline fn glTextureImage3DMultisampleNV(arg_8790: GLuint, arg_8791: GLenum, arg_8792: GLsizei, arg_8793: GLint, arg_8794: GLsizei, arg_8795: GLsizei, arg_8796: GLsizei, arg_8797: GLboolean) void {
    return glad_glTextureImage3DMultisampleNV.?(arg_8790, arg_8791, arg_8792, arg_8793, arg_8794, arg_8795, arg_8796, arg_8797);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureImage2DMultisampleCoverageNV.xhtml
pub inline fn glTextureImage2DMultisampleCoverageNV(arg_8798: GLuint, arg_8799: GLenum, arg_8800: GLsizei, arg_8801: GLsizei, arg_8802: GLint, arg_8803: GLsizei, arg_8804: GLsizei, arg_8805: GLboolean) void {
    return glad_glTextureImage2DMultisampleCoverageNV.?(arg_8798, arg_8799, arg_8800, arg_8801, arg_8802, arg_8803, arg_8804, arg_8805);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureImage3DMultisampleCoverageNV.xhtml
pub inline fn glTextureImage3DMultisampleCoverageNV(arg_8806: GLuint, arg_8807: GLenum, arg_8808: GLsizei, arg_8809: GLsizei, arg_8810: GLint, arg_8811: GLsizei, arg_8812: GLsizei, arg_8813: GLsizei, arg_8814: GLboolean) void {
    return glad_glTextureImage3DMultisampleCoverageNV.?(arg_8806, arg_8807, arg_8808, arg_8809, arg_8810, arg_8811, arg_8812, arg_8813, arg_8814);
}
pub const GL_NV_texture_rectangle = 1;
pub const GL_NV_texture_rectangle_compressed = 1;
pub const GL_NV_texture_shader = 1;
pub const GL_NV_texture_shader2 = 1;
pub const GL_NV_texture_shader3 = 1;
pub const GL_NV_timeline_semaphore = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCreateSemaphoresNV.xhtml
pub inline fn glCreateSemaphoresNV(arg_8815: GLsizei, arg_8816: [*c]GLuint) void {
    return glad_glCreateSemaphoresNV.?(arg_8815, arg_8816);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSemaphoreParameterivNV.xhtml
pub inline fn glSemaphoreParameterivNV(arg_8817: GLuint, arg_8818: GLenum, arg_8819: [*c]const GLint) void {
    return glad_glSemaphoreParameterivNV.?(arg_8817, arg_8818, arg_8819);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetSemaphoreParameterivNV.xhtml
pub inline fn glGetSemaphoreParameterivNV(arg_8820: GLuint, arg_8821: GLenum, arg_8822: [*c]GLint) void {
    return glad_glGetSemaphoreParameterivNV.?(arg_8820, arg_8821, arg_8822);
}
pub const GL_NV_transform_feedback = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBeginTransformFeedbackNV.xhtml
pub inline fn glBeginTransformFeedbackNV(arg_8823: GLenum) void {
    return glad_glBeginTransformFeedbackNV.?(arg_8823);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEndTransformFeedbackNV.xhtml
pub inline fn glEndTransformFeedbackNV() void {
    return glad_glEndTransformFeedbackNV.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTransformFeedbackAttribsNV.xhtml
pub inline fn glTransformFeedbackAttribsNV(arg_8824: GLsizei, arg_8825: [*c]const GLint, arg_8826: GLenum) void {
    return glad_glTransformFeedbackAttribsNV.?(arg_8824, arg_8825, arg_8826);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindBufferRangeNV.xhtml
pub inline fn glBindBufferRangeNV(arg_8827: GLenum, arg_8828: GLuint, arg_8829: GLuint, arg_8830: GLintptr, arg_8831: GLsizeiptr) void {
    return glad_glBindBufferRangeNV.?(arg_8827, arg_8828, arg_8829, arg_8830, arg_8831);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindBufferOffsetNV.xhtml
pub inline fn glBindBufferOffsetNV(arg_8832: GLenum, arg_8833: GLuint, arg_8834: GLuint, arg_8835: GLintptr) void {
    return glad_glBindBufferOffsetNV.?(arg_8832, arg_8833, arg_8834, arg_8835);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindBufferBaseNV.xhtml
pub inline fn glBindBufferBaseNV(arg_8836: GLenum, arg_8837: GLuint, arg_8838: GLuint) void {
    return glad_glBindBufferBaseNV.?(arg_8836, arg_8837, arg_8838);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTransformFeedbackVaryingsNV.xhtml
pub inline fn glTransformFeedbackVaryingsNV(arg_8839: GLuint, arg_8840: GLsizei, arg_8841: [*c]const GLint, arg_8842: GLenum) void {
    return glad_glTransformFeedbackVaryingsNV.?(arg_8839, arg_8840, arg_8841, arg_8842);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glActiveVaryingNV.xhtml
pub inline fn glActiveVaryingNV(arg_8843: GLuint, arg_8844: [*c]const GLchar) void {
    return glad_glActiveVaryingNV.?(arg_8843, arg_8844);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVaryingLocationNV.xhtml
pub inline fn glGetVaryingLocationNV(arg_8845: GLuint, arg_8846: [*c]const GLchar) GLint {
    return glad_glGetVaryingLocationNV.?(arg_8845, arg_8846);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetActiveVaryingNV.xhtml
pub inline fn glGetActiveVaryingNV(arg_8847: GLuint, arg_8848: GLuint, arg_8849: GLsizei, arg_8850: [*c]GLsizei, arg_8851: [*c]GLsizei, arg_8852: [*c]GLenum, arg_8853: [*c]GLchar) void {
    return glad_glGetActiveVaryingNV.?(arg_8847, arg_8848, arg_8849, arg_8850, arg_8851, arg_8852, arg_8853);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTransformFeedbackVaryingNV.xhtml
pub inline fn glGetTransformFeedbackVaryingNV(arg_8854: GLuint, arg_8855: GLuint, arg_8856: [*c]GLint) void {
    return glad_glGetTransformFeedbackVaryingNV.?(arg_8854, arg_8855, arg_8856);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTransformFeedbackStreamAttribsNV.xhtml
pub inline fn glTransformFeedbackStreamAttribsNV(arg_8857: GLsizei, arg_8858: [*c]const GLint, arg_8859: GLsizei, arg_8860: [*c]const GLint, arg_8861: GLenum) void {
    return glad_glTransformFeedbackStreamAttribsNV.?(arg_8857, arg_8858, arg_8859, arg_8860, arg_8861);
}
pub const GL_NV_transform_feedback2 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindTransformFeedbackNV.xhtml
pub inline fn glBindTransformFeedbackNV(arg_8862: GLenum, arg_8863: GLuint) void {
    return glad_glBindTransformFeedbackNV.?(arg_8862, arg_8863);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteTransformFeedbacksNV.xhtml
pub inline fn glDeleteTransformFeedbacksNV(arg_8864: GLsizei, arg_8865: [*c]const GLuint) void {
    return glad_glDeleteTransformFeedbacksNV.?(arg_8864, arg_8865);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenTransformFeedbacksNV.xhtml
pub inline fn glGenTransformFeedbacksNV(arg_8866: GLsizei, arg_8867: [*c]GLuint) void {
    return glad_glGenTransformFeedbacksNV.?(arg_8866, arg_8867);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsTransformFeedbackNV.xhtml
pub inline fn glIsTransformFeedbackNV(arg_8868: GLuint) GLboolean {
    return glad_glIsTransformFeedbackNV.?(arg_8868);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPauseTransformFeedbackNV.xhtml
pub inline fn glPauseTransformFeedbackNV() void {
    return glad_glPauseTransformFeedbackNV.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glResumeTransformFeedbackNV.xhtml
pub inline fn glResumeTransformFeedbackNV() void {
    return glad_glResumeTransformFeedbackNV.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawTransformFeedbackNV.xhtml
pub inline fn glDrawTransformFeedbackNV(arg_8869: GLenum, arg_8870: GLuint) void {
    return glad_glDrawTransformFeedbackNV.?(arg_8869, arg_8870);
}
pub const GL_NV_uniform_buffer_std430_layout = 1;
pub const GL_NV_uniform_buffer_unified_memory = 1;
pub const GL_NV_vdpau_interop = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVDPAUInitNV.xhtml
pub inline fn glVDPAUInitNV(arg_8871: ?*const anyopaque, arg_8872: ?*const anyopaque) void {
    return glad_glVDPAUInitNV.?(arg_8871, arg_8872);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVDPAUFiniNV.xhtml
pub inline fn glVDPAUFiniNV() void {
    return glad_glVDPAUFiniNV.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVDPAURegisterVideoSurfaceNV.xhtml
pub inline fn glVDPAURegisterVideoSurfaceNV(arg_8873: ?*const anyopaque, arg_8874: GLenum, arg_8875: GLsizei, arg_8876: [*c]const GLuint) GLvdpauSurfaceNV {
    return glad_glVDPAURegisterVideoSurfaceNV.?(arg_8873, arg_8874, arg_8875, arg_8876);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVDPAURegisterOutputSurfaceNV.xhtml
pub inline fn glVDPAURegisterOutputSurfaceNV(arg_8877: ?*const anyopaque, arg_8878: GLenum, arg_8879: GLsizei, arg_8880: [*c]const GLuint) GLvdpauSurfaceNV {
    return glad_glVDPAURegisterOutputSurfaceNV.?(arg_8877, arg_8878, arg_8879, arg_8880);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVDPAUIsSurfaceNV.xhtml
pub inline fn glVDPAUIsSurfaceNV(arg_8881: GLvdpauSurfaceNV) GLboolean {
    return glad_glVDPAUIsSurfaceNV.?(arg_8881);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVDPAUUnregisterSurfaceNV.xhtml
pub inline fn glVDPAUUnregisterSurfaceNV(arg_8882: GLvdpauSurfaceNV) void {
    return glad_glVDPAUUnregisterSurfaceNV.?(arg_8882);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVDPAUGetSurfaceivNV.xhtml
pub inline fn glVDPAUGetSurfaceivNV(arg_8883: GLvdpauSurfaceNV, arg_8884: GLenum, arg_8885: GLsizei, arg_8886: [*c]GLsizei, arg_8887: [*c]GLint) void {
    return glad_glVDPAUGetSurfaceivNV.?(arg_8883, arg_8884, arg_8885, arg_8886, arg_8887);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVDPAUSurfaceAccessNV.xhtml
pub inline fn glVDPAUSurfaceAccessNV(arg_8888: GLvdpauSurfaceNV, arg_8889: GLenum) void {
    return glad_glVDPAUSurfaceAccessNV.?(arg_8888, arg_8889);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVDPAUMapSurfacesNV.xhtml
pub inline fn glVDPAUMapSurfacesNV(arg_8890: GLsizei, arg_8891: [*c]const GLvdpauSurfaceNV) void {
    return glad_glVDPAUMapSurfacesNV.?(arg_8890, arg_8891);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVDPAUUnmapSurfacesNV.xhtml
pub inline fn glVDPAUUnmapSurfacesNV(arg_8892: GLsizei, arg_8893: [*c]const GLvdpauSurfaceNV) void {
    return glad_glVDPAUUnmapSurfacesNV.?(arg_8892, arg_8893);
}
pub const GL_NV_vdpau_interop2 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVDPAURegisterVideoSurfaceWithPictureStructureNV.xhtml
pub inline fn glVDPAURegisterVideoSurfaceWithPictureStructureNV(arg_8894: ?*const anyopaque, arg_8895: GLenum, arg_8896: GLsizei, arg_8897: [*c]const GLuint, arg_8898: GLboolean) GLvdpauSurfaceNV {
    return glad_glVDPAURegisterVideoSurfaceWithPictureStructureNV.?(arg_8894, arg_8895, arg_8896, arg_8897, arg_8898);
}
pub const GL_NV_vertex_array_range = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFlushVertexArrayRangeNV.xhtml
pub inline fn glFlushVertexArrayRangeNV() void {
    return glad_glFlushVertexArrayRangeNV.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexArrayRangeNV.xhtml
pub inline fn glVertexArrayRangeNV(arg_8899: GLsizei, arg_8900: ?*const anyopaque) void {
    return glad_glVertexArrayRangeNV.?(arg_8899, arg_8900);
}
pub const GL_NV_vertex_array_range2 = 1;
pub const GL_NV_vertex_attrib_integer_64bit = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL1i64NV.xhtml
pub inline fn glVertexAttribL1i64NV(arg_8901: GLuint, arg_8902: GLint64EXT) void {
    return glad_glVertexAttribL1i64NV.?(arg_8901, arg_8902);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL2i64NV.xhtml
pub inline fn glVertexAttribL2i64NV(arg_8903: GLuint, arg_8904: GLint64EXT, arg_8905: GLint64EXT) void {
    return glad_glVertexAttribL2i64NV.?(arg_8903, arg_8904, arg_8905);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL3i64NV.xhtml
pub inline fn glVertexAttribL3i64NV(arg_8906: GLuint, arg_8907: GLint64EXT, arg_8908: GLint64EXT, arg_8909: GLint64EXT) void {
    return glad_glVertexAttribL3i64NV.?(arg_8906, arg_8907, arg_8908, arg_8909);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL4i64NV.xhtml
pub inline fn glVertexAttribL4i64NV(arg_8910: GLuint, arg_8911: GLint64EXT, arg_8912: GLint64EXT, arg_8913: GLint64EXT, arg_8914: GLint64EXT) void {
    return glad_glVertexAttribL4i64NV.?(arg_8910, arg_8911, arg_8912, arg_8913, arg_8914);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL1i64vNV.xhtml
pub inline fn glVertexAttribL1i64vNV(arg_8915: GLuint, arg_8916: [*c]const GLint64EXT) void {
    return glad_glVertexAttribL1i64vNV.?(arg_8915, arg_8916);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL2i64vNV.xhtml
pub inline fn glVertexAttribL2i64vNV(arg_8917: GLuint, arg_8918: [*c]const GLint64EXT) void {
    return glad_glVertexAttribL2i64vNV.?(arg_8917, arg_8918);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL3i64vNV.xhtml
pub inline fn glVertexAttribL3i64vNV(arg_8919: GLuint, arg_8920: [*c]const GLint64EXT) void {
    return glad_glVertexAttribL3i64vNV.?(arg_8919, arg_8920);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL4i64vNV.xhtml
pub inline fn glVertexAttribL4i64vNV(arg_8921: GLuint, arg_8922: [*c]const GLint64EXT) void {
    return glad_glVertexAttribL4i64vNV.?(arg_8921, arg_8922);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL1ui64NV.xhtml
pub inline fn glVertexAttribL1ui64NV(arg_8923: GLuint, arg_8924: GLuint64EXT) void {
    return glad_glVertexAttribL1ui64NV.?(arg_8923, arg_8924);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL2ui64NV.xhtml
pub inline fn glVertexAttribL2ui64NV(arg_8925: GLuint, arg_8926: GLuint64EXT, arg_8927: GLuint64EXT) void {
    return glad_glVertexAttribL2ui64NV.?(arg_8925, arg_8926, arg_8927);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL3ui64NV.xhtml
pub inline fn glVertexAttribL3ui64NV(arg_8928: GLuint, arg_8929: GLuint64EXT, arg_8930: GLuint64EXT, arg_8931: GLuint64EXT) void {
    return glad_glVertexAttribL3ui64NV.?(arg_8928, arg_8929, arg_8930, arg_8931);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL4ui64NV.xhtml
pub inline fn glVertexAttribL4ui64NV(arg_8932: GLuint, arg_8933: GLuint64EXT, arg_8934: GLuint64EXT, arg_8935: GLuint64EXT, arg_8936: GLuint64EXT) void {
    return glad_glVertexAttribL4ui64NV.?(arg_8932, arg_8933, arg_8934, arg_8935, arg_8936);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL1ui64vNV.xhtml
pub inline fn glVertexAttribL1ui64vNV(arg_8937: GLuint, arg_8938: [*c]const GLuint64EXT) void {
    return glad_glVertexAttribL1ui64vNV.?(arg_8937, arg_8938);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL2ui64vNV.xhtml
pub inline fn glVertexAttribL2ui64vNV(arg_8939: GLuint, arg_8940: [*c]const GLuint64EXT) void {
    return glad_glVertexAttribL2ui64vNV.?(arg_8939, arg_8940);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL3ui64vNV.xhtml
pub inline fn glVertexAttribL3ui64vNV(arg_8941: GLuint, arg_8942: [*c]const GLuint64EXT) void {
    return glad_glVertexAttribL3ui64vNV.?(arg_8941, arg_8942);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribL4ui64vNV.xhtml
pub inline fn glVertexAttribL4ui64vNV(arg_8943: GLuint, arg_8944: [*c]const GLuint64EXT) void {
    return glad_glVertexAttribL4ui64vNV.?(arg_8943, arg_8944);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexAttribLi64vNV.xhtml
pub inline fn glGetVertexAttribLi64vNV(arg_8945: GLuint, arg_8946: GLenum, arg_8947: [*c]GLint64EXT) void {
    return glad_glGetVertexAttribLi64vNV.?(arg_8945, arg_8946, arg_8947);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexAttribLui64vNV.xhtml
pub inline fn glGetVertexAttribLui64vNV(arg_8948: GLuint, arg_8949: GLenum, arg_8950: [*c]GLuint64EXT) void {
    return glad_glGetVertexAttribLui64vNV.?(arg_8948, arg_8949, arg_8950);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribLFormatNV.xhtml
pub inline fn glVertexAttribLFormatNV(arg_8951: GLuint, arg_8952: GLint, arg_8953: GLenum, arg_8954: GLsizei) void {
    return glad_glVertexAttribLFormatNV.?(arg_8951, arg_8952, arg_8953, arg_8954);
}
pub const GL_NV_vertex_buffer_unified_memory = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBufferAddressRangeNV.xhtml
pub inline fn glBufferAddressRangeNV(arg_8955: GLenum, arg_8956: GLuint, arg_8957: GLuint64EXT, arg_8958: GLsizeiptr) void {
    return glad_glBufferAddressRangeNV.?(arg_8955, arg_8956, arg_8957, arg_8958);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexFormatNV.xhtml
pub inline fn glVertexFormatNV(arg_8959: GLint, arg_8960: GLenum, arg_8961: GLsizei) void {
    return glad_glVertexFormatNV.?(arg_8959, arg_8960, arg_8961);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNormalFormatNV.xhtml
pub inline fn glNormalFormatNV(arg_8962: GLenum, arg_8963: GLsizei) void {
    return glad_glNormalFormatNV.?(arg_8962, arg_8963);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorFormatNV.xhtml
pub inline fn glColorFormatNV(arg_8964: GLint, arg_8965: GLenum, arg_8966: GLsizei) void {
    return glad_glColorFormatNV.?(arg_8964, arg_8965, arg_8966);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIndexFormatNV.xhtml
pub inline fn glIndexFormatNV(arg_8967: GLenum, arg_8968: GLsizei) void {
    return glad_glIndexFormatNV.?(arg_8967, arg_8968);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoordFormatNV.xhtml
pub inline fn glTexCoordFormatNV(arg_8969: GLint, arg_8970: GLenum, arg_8971: GLsizei) void {
    return glad_glTexCoordFormatNV.?(arg_8969, arg_8970, arg_8971);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEdgeFlagFormatNV.xhtml
pub inline fn glEdgeFlagFormatNV(arg_8972: GLsizei) void {
    return glad_glEdgeFlagFormatNV.?(arg_8972);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSecondaryColorFormatNV.xhtml
pub inline fn glSecondaryColorFormatNV(arg_8973: GLint, arg_8974: GLenum, arg_8975: GLsizei) void {
    return glad_glSecondaryColorFormatNV.?(arg_8973, arg_8974, arg_8975);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFogCoordFormatNV.xhtml
pub inline fn glFogCoordFormatNV(arg_8976: GLenum, arg_8977: GLsizei) void {
    return glad_glFogCoordFormatNV.?(arg_8976, arg_8977);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribFormatNV.xhtml
pub inline fn glVertexAttribFormatNV(arg_8978: GLuint, arg_8979: GLint, arg_8980: GLenum, arg_8981: GLboolean, arg_8982: GLsizei) void {
    return glad_glVertexAttribFormatNV.?(arg_8978, arg_8979, arg_8980, arg_8981, arg_8982);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribIFormatNV.xhtml
pub inline fn glVertexAttribIFormatNV(arg_8983: GLuint, arg_8984: GLint, arg_8985: GLenum, arg_8986: GLsizei) void {
    return glad_glVertexAttribIFormatNV.?(arg_8983, arg_8984, arg_8985, arg_8986);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetIntegerui64i_vNV.xhtml
pub inline fn glGetIntegerui64i_vNV(arg_8987: GLenum, arg_8988: GLuint, arg_8989: [*c]GLuint64EXT) void {
    return glad_glGetIntegerui64i_vNV.?(arg_8987, arg_8988, arg_8989);
}
pub const GL_NV_vertex_program = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glAreProgramsResidentNV.xhtml
pub inline fn glAreProgramsResidentNV(arg_8990: GLsizei, arg_8991: [*c]const GLuint, arg_8992: [*c]GLboolean) GLboolean {
    return glad_glAreProgramsResidentNV.?(arg_8990, arg_8991, arg_8992);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindProgramNV.xhtml
pub inline fn glBindProgramNV(arg_8993: GLenum, arg_8994: GLuint) void {
    return glad_glBindProgramNV.?(arg_8993, arg_8994);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteProgramsNV.xhtml
pub inline fn glDeleteProgramsNV(arg_8995: GLsizei, arg_8996: [*c]const GLuint) void {
    return glad_glDeleteProgramsNV.?(arg_8995, arg_8996);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glExecuteProgramNV.xhtml
pub inline fn glExecuteProgramNV(arg_8997: GLenum, arg_8998: GLuint, arg_8999: [*c]const GLfloat) void {
    return glad_glExecuteProgramNV.?(arg_8997, arg_8998, arg_8999);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenProgramsNV.xhtml
pub inline fn glGenProgramsNV(arg_9000: GLsizei, arg_9001: [*c]GLuint) void {
    return glad_glGenProgramsNV.?(arg_9000, arg_9001);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramParameterdvNV.xhtml
pub inline fn glGetProgramParameterdvNV(arg_9002: GLenum, arg_9003: GLuint, arg_9004: GLenum, arg_9005: [*c]GLdouble) void {
    return glad_glGetProgramParameterdvNV.?(arg_9002, arg_9003, arg_9004, arg_9005);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramParameterfvNV.xhtml
pub inline fn glGetProgramParameterfvNV(arg_9006: GLenum, arg_9007: GLuint, arg_9008: GLenum, arg_9009: [*c]GLfloat) void {
    return glad_glGetProgramParameterfvNV.?(arg_9006, arg_9007, arg_9008, arg_9009);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramivNV.xhtml
pub inline fn glGetProgramivNV(arg_9010: GLuint, arg_9011: GLenum, arg_9012: [*c]GLint) void {
    return glad_glGetProgramivNV.?(arg_9010, arg_9011, arg_9012);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramStringNV.xhtml
pub inline fn glGetProgramStringNV(arg_9013: GLuint, arg_9014: GLenum, arg_9015: [*c]GLubyte) void {
    return glad_glGetProgramStringNV.?(arg_9013, arg_9014, arg_9015);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTrackMatrixivNV.xhtml
pub inline fn glGetTrackMatrixivNV(arg_9016: GLenum, arg_9017: GLuint, arg_9018: GLenum, arg_9019: [*c]GLint) void {
    return glad_glGetTrackMatrixivNV.?(arg_9016, arg_9017, arg_9018, arg_9019);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexAttribdvNV.xhtml
pub inline fn glGetVertexAttribdvNV(arg_9020: GLuint, arg_9021: GLenum, arg_9022: [*c]GLdouble) void {
    return glad_glGetVertexAttribdvNV.?(arg_9020, arg_9021, arg_9022);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexAttribfvNV.xhtml
pub inline fn glGetVertexAttribfvNV(arg_9023: GLuint, arg_9024: GLenum, arg_9025: [*c]GLfloat) void {
    return glad_glGetVertexAttribfvNV.?(arg_9023, arg_9024, arg_9025);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexAttribivNV.xhtml
pub inline fn glGetVertexAttribivNV(arg_9026: GLuint, arg_9027: GLenum, arg_9028: [*c]GLint) void {
    return glad_glGetVertexAttribivNV.?(arg_9026, arg_9027, arg_9028);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVertexAttribPointervNV.xhtml
pub inline fn glGetVertexAttribPointervNV(arg_9029: GLuint, arg_9030: GLenum, arg_9031: [*c]?*anyopaque) void {
    return glad_glGetVertexAttribPointervNV.?(arg_9029, arg_9030, arg_9031);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsProgramNV.xhtml
pub inline fn glIsProgramNV(arg_9032: GLuint) GLboolean {
    return glad_glIsProgramNV.?(arg_9032);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLoadProgramNV.xhtml
pub inline fn glLoadProgramNV(arg_9033: GLenum, arg_9034: GLuint, arg_9035: GLsizei, arg_9036: [*c]const GLubyte) void {
    return glad_glLoadProgramNV.?(arg_9033, arg_9034, arg_9035, arg_9036);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramParameter4dNV.xhtml
pub inline fn glProgramParameter4dNV(arg_9037: GLenum, arg_9038: GLuint, arg_9039: GLdouble, arg_9040: GLdouble, arg_9041: GLdouble, arg_9042: GLdouble) void {
    return glad_glProgramParameter4dNV.?(arg_9037, arg_9038, arg_9039, arg_9040, arg_9041, arg_9042);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramParameter4dvNV.xhtml
pub inline fn glProgramParameter4dvNV(arg_9043: GLenum, arg_9044: GLuint, arg_9045: [*c]const GLdouble) void {
    return glad_glProgramParameter4dvNV.?(arg_9043, arg_9044, arg_9045);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramParameter4fNV.xhtml
pub inline fn glProgramParameter4fNV(arg_9046: GLenum, arg_9047: GLuint, arg_9048: GLfloat, arg_9049: GLfloat, arg_9050: GLfloat, arg_9051: GLfloat) void {
    return glad_glProgramParameter4fNV.?(arg_9046, arg_9047, arg_9048, arg_9049, arg_9050, arg_9051);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramParameter4fvNV.xhtml
pub inline fn glProgramParameter4fvNV(arg_9052: GLenum, arg_9053: GLuint, arg_9054: [*c]const GLfloat) void {
    return glad_glProgramParameter4fvNV.?(arg_9052, arg_9053, arg_9054);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramParameters4dvNV.xhtml
pub inline fn glProgramParameters4dvNV(arg_9055: GLenum, arg_9056: GLuint, arg_9057: GLsizei, arg_9058: [*c]const GLdouble) void {
    return glad_glProgramParameters4dvNV.?(arg_9055, arg_9056, arg_9057, arg_9058);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramParameters4fvNV.xhtml
pub inline fn glProgramParameters4fvNV(arg_9059: GLenum, arg_9060: GLuint, arg_9061: GLsizei, arg_9062: [*c]const GLfloat) void {
    return glad_glProgramParameters4fvNV.?(arg_9059, arg_9060, arg_9061, arg_9062);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRequestResidentProgramsNV.xhtml
pub inline fn glRequestResidentProgramsNV(arg_9063: GLsizei, arg_9064: [*c]const GLuint) void {
    return glad_glRequestResidentProgramsNV.?(arg_9063, arg_9064);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTrackMatrixNV.xhtml
pub inline fn glTrackMatrixNV(arg_9065: GLenum, arg_9066: GLuint, arg_9067: GLenum, arg_9068: GLenum) void {
    return glad_glTrackMatrixNV.?(arg_9065, arg_9066, arg_9067, arg_9068);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribPointerNV.xhtml
pub inline fn glVertexAttribPointerNV(arg_9069: GLuint, arg_9070: GLint, arg_9071: GLenum, arg_9072: GLsizei, arg_9073: ?*const anyopaque) void {
    return glad_glVertexAttribPointerNV.?(arg_9069, arg_9070, arg_9071, arg_9072, arg_9073);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib1dNV.xhtml
pub inline fn glVertexAttrib1dNV(arg_9074: GLuint, arg_9075: GLdouble) void {
    return glad_glVertexAttrib1dNV.?(arg_9074, arg_9075);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib1dvNV.xhtml
pub inline fn glVertexAttrib1dvNV(arg_9076: GLuint, arg_9077: [*c]const GLdouble) void {
    return glad_glVertexAttrib1dvNV.?(arg_9076, arg_9077);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib1fNV.xhtml
pub inline fn glVertexAttrib1fNV(arg_9078: GLuint, arg_9079: GLfloat) void {
    return glad_glVertexAttrib1fNV.?(arg_9078, arg_9079);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib1fvNV.xhtml
pub inline fn glVertexAttrib1fvNV(arg_9080: GLuint, arg_9081: [*c]const GLfloat) void {
    return glad_glVertexAttrib1fvNV.?(arg_9080, arg_9081);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib1sNV.xhtml
pub inline fn glVertexAttrib1sNV(arg_9082: GLuint, arg_9083: GLshort) void {
    return glad_glVertexAttrib1sNV.?(arg_9082, arg_9083);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib1svNV.xhtml
pub inline fn glVertexAttrib1svNV(arg_9084: GLuint, arg_9085: [*c]const GLshort) void {
    return glad_glVertexAttrib1svNV.?(arg_9084, arg_9085);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib2dNV.xhtml
pub inline fn glVertexAttrib2dNV(arg_9086: GLuint, arg_9087: GLdouble, arg_9088: GLdouble) void {
    return glad_glVertexAttrib2dNV.?(arg_9086, arg_9087, arg_9088);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib2dvNV.xhtml
pub inline fn glVertexAttrib2dvNV(arg_9089: GLuint, arg_9090: [*c]const GLdouble) void {
    return glad_glVertexAttrib2dvNV.?(arg_9089, arg_9090);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib2fNV.xhtml
pub inline fn glVertexAttrib2fNV(arg_9091: GLuint, arg_9092: GLfloat, arg_9093: GLfloat) void {
    return glad_glVertexAttrib2fNV.?(arg_9091, arg_9092, arg_9093);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib2fvNV.xhtml
pub inline fn glVertexAttrib2fvNV(arg_9094: GLuint, arg_9095: [*c]const GLfloat) void {
    return glad_glVertexAttrib2fvNV.?(arg_9094, arg_9095);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib2sNV.xhtml
pub inline fn glVertexAttrib2sNV(arg_9096: GLuint, arg_9097: GLshort, arg_9098: GLshort) void {
    return glad_glVertexAttrib2sNV.?(arg_9096, arg_9097, arg_9098);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib2svNV.xhtml
pub inline fn glVertexAttrib2svNV(arg_9099: GLuint, arg_9100: [*c]const GLshort) void {
    return glad_glVertexAttrib2svNV.?(arg_9099, arg_9100);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib3dNV.xhtml
pub inline fn glVertexAttrib3dNV(arg_9101: GLuint, arg_9102: GLdouble, arg_9103: GLdouble, arg_9104: GLdouble) void {
    return glad_glVertexAttrib3dNV.?(arg_9101, arg_9102, arg_9103, arg_9104);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib3dvNV.xhtml
pub inline fn glVertexAttrib3dvNV(arg_9105: GLuint, arg_9106: [*c]const GLdouble) void {
    return glad_glVertexAttrib3dvNV.?(arg_9105, arg_9106);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib3fNV.xhtml
pub inline fn glVertexAttrib3fNV(arg_9107: GLuint, arg_9108: GLfloat, arg_9109: GLfloat, arg_9110: GLfloat) void {
    return glad_glVertexAttrib3fNV.?(arg_9107, arg_9108, arg_9109, arg_9110);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib3fvNV.xhtml
pub inline fn glVertexAttrib3fvNV(arg_9111: GLuint, arg_9112: [*c]const GLfloat) void {
    return glad_glVertexAttrib3fvNV.?(arg_9111, arg_9112);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib3sNV.xhtml
pub inline fn glVertexAttrib3sNV(arg_9113: GLuint, arg_9114: GLshort, arg_9115: GLshort, arg_9116: GLshort) void {
    return glad_glVertexAttrib3sNV.?(arg_9113, arg_9114, arg_9115, arg_9116);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib3svNV.xhtml
pub inline fn glVertexAttrib3svNV(arg_9117: GLuint, arg_9118: [*c]const GLshort) void {
    return glad_glVertexAttrib3svNV.?(arg_9117, arg_9118);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4dNV.xhtml
pub inline fn glVertexAttrib4dNV(arg_9119: GLuint, arg_9120: GLdouble, arg_9121: GLdouble, arg_9122: GLdouble, arg_9123: GLdouble) void {
    return glad_glVertexAttrib4dNV.?(arg_9119, arg_9120, arg_9121, arg_9122, arg_9123);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4dvNV.xhtml
pub inline fn glVertexAttrib4dvNV(arg_9124: GLuint, arg_9125: [*c]const GLdouble) void {
    return glad_glVertexAttrib4dvNV.?(arg_9124, arg_9125);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4fNV.xhtml
pub inline fn glVertexAttrib4fNV(arg_9126: GLuint, arg_9127: GLfloat, arg_9128: GLfloat, arg_9129: GLfloat, arg_9130: GLfloat) void {
    return glad_glVertexAttrib4fNV.?(arg_9126, arg_9127, arg_9128, arg_9129, arg_9130);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4fvNV.xhtml
pub inline fn glVertexAttrib4fvNV(arg_9131: GLuint, arg_9132: [*c]const GLfloat) void {
    return glad_glVertexAttrib4fvNV.?(arg_9131, arg_9132);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4sNV.xhtml
pub inline fn glVertexAttrib4sNV(arg_9133: GLuint, arg_9134: GLshort, arg_9135: GLshort, arg_9136: GLshort, arg_9137: GLshort) void {
    return glad_glVertexAttrib4sNV.?(arg_9133, arg_9134, arg_9135, arg_9136, arg_9137);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4svNV.xhtml
pub inline fn glVertexAttrib4svNV(arg_9138: GLuint, arg_9139: [*c]const GLshort) void {
    return glad_glVertexAttrib4svNV.?(arg_9138, arg_9139);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4ubNV.xhtml
pub inline fn glVertexAttrib4ubNV(arg_9140: GLuint, arg_9141: GLubyte, arg_9142: GLubyte, arg_9143: GLubyte, arg_9144: GLubyte) void {
    return glad_glVertexAttrib4ubNV.?(arg_9140, arg_9141, arg_9142, arg_9143, arg_9144);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttrib4ubvNV.xhtml
pub inline fn glVertexAttrib4ubvNV(arg_9145: GLuint, arg_9146: [*c]const GLubyte) void {
    return glad_glVertexAttrib4ubvNV.?(arg_9145, arg_9146);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribs1dvNV.xhtml
pub inline fn glVertexAttribs1dvNV(arg_9147: GLuint, arg_9148: GLsizei, arg_9149: [*c]const GLdouble) void {
    return glad_glVertexAttribs1dvNV.?(arg_9147, arg_9148, arg_9149);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribs1fvNV.xhtml
pub inline fn glVertexAttribs1fvNV(arg_9150: GLuint, arg_9151: GLsizei, arg_9152: [*c]const GLfloat) void {
    return glad_glVertexAttribs1fvNV.?(arg_9150, arg_9151, arg_9152);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribs1svNV.xhtml
pub inline fn glVertexAttribs1svNV(arg_9153: GLuint, arg_9154: GLsizei, arg_9155: [*c]const GLshort) void {
    return glad_glVertexAttribs1svNV.?(arg_9153, arg_9154, arg_9155);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribs2dvNV.xhtml
pub inline fn glVertexAttribs2dvNV(arg_9156: GLuint, arg_9157: GLsizei, arg_9158: [*c]const GLdouble) void {
    return glad_glVertexAttribs2dvNV.?(arg_9156, arg_9157, arg_9158);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribs2fvNV.xhtml
pub inline fn glVertexAttribs2fvNV(arg_9159: GLuint, arg_9160: GLsizei, arg_9161: [*c]const GLfloat) void {
    return glad_glVertexAttribs2fvNV.?(arg_9159, arg_9160, arg_9161);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribs2svNV.xhtml
pub inline fn glVertexAttribs2svNV(arg_9162: GLuint, arg_9163: GLsizei, arg_9164: [*c]const GLshort) void {
    return glad_glVertexAttribs2svNV.?(arg_9162, arg_9163, arg_9164);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribs3dvNV.xhtml
pub inline fn glVertexAttribs3dvNV(arg_9165: GLuint, arg_9166: GLsizei, arg_9167: [*c]const GLdouble) void {
    return glad_glVertexAttribs3dvNV.?(arg_9165, arg_9166, arg_9167);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribs3fvNV.xhtml
pub inline fn glVertexAttribs3fvNV(arg_9168: GLuint, arg_9169: GLsizei, arg_9170: [*c]const GLfloat) void {
    return glad_glVertexAttribs3fvNV.?(arg_9168, arg_9169, arg_9170);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribs3svNV.xhtml
pub inline fn glVertexAttribs3svNV(arg_9171: GLuint, arg_9172: GLsizei, arg_9173: [*c]const GLshort) void {
    return glad_glVertexAttribs3svNV.?(arg_9171, arg_9172, arg_9173);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribs4dvNV.xhtml
pub inline fn glVertexAttribs4dvNV(arg_9174: GLuint, arg_9175: GLsizei, arg_9176: [*c]const GLdouble) void {
    return glad_glVertexAttribs4dvNV.?(arg_9174, arg_9175, arg_9176);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribs4fvNV.xhtml
pub inline fn glVertexAttribs4fvNV(arg_9177: GLuint, arg_9178: GLsizei, arg_9179: [*c]const GLfloat) void {
    return glad_glVertexAttribs4fvNV.?(arg_9177, arg_9178, arg_9179);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribs4svNV.xhtml
pub inline fn glVertexAttribs4svNV(arg_9180: GLuint, arg_9181: GLsizei, arg_9182: [*c]const GLshort) void {
    return glad_glVertexAttribs4svNV.?(arg_9180, arg_9181, arg_9182);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribs4ubvNV.xhtml
pub inline fn glVertexAttribs4ubvNV(arg_9183: GLuint, arg_9184: GLsizei, arg_9185: [*c]const GLubyte) void {
    return glad_glVertexAttribs4ubvNV.?(arg_9183, arg_9184, arg_9185);
}
pub const GL_NV_vertex_program1_1 = 1;
pub const GL_NV_vertex_program2 = 1;
pub const GL_NV_vertex_program2_option = 1;
pub const GL_NV_vertex_program3 = 1;
pub const GL_NV_vertex_program4 = 1;
pub const GL_NV_video_capture = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBeginVideoCaptureNV.xhtml
pub inline fn glBeginVideoCaptureNV(arg_9186: GLuint) void {
    return glad_glBeginVideoCaptureNV.?(arg_9186);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindVideoCaptureStreamBufferNV.xhtml
pub inline fn glBindVideoCaptureStreamBufferNV(arg_9187: GLuint, arg_9188: GLuint, arg_9189: GLenum, arg_9190: GLintptrARB) void {
    return glad_glBindVideoCaptureStreamBufferNV.?(arg_9187, arg_9188, arg_9189, arg_9190);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindVideoCaptureStreamTextureNV.xhtml
pub inline fn glBindVideoCaptureStreamTextureNV(arg_9191: GLuint, arg_9192: GLuint, arg_9193: GLenum, arg_9194: GLenum, arg_9195: GLuint) void {
    return glad_glBindVideoCaptureStreamTextureNV.?(arg_9191, arg_9192, arg_9193, arg_9194, arg_9195);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEndVideoCaptureNV.xhtml
pub inline fn glEndVideoCaptureNV(arg_9196: GLuint) void {
    return glad_glEndVideoCaptureNV.?(arg_9196);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVideoCaptureivNV.xhtml
pub inline fn glGetVideoCaptureivNV(arg_9197: GLuint, arg_9198: GLenum, arg_9199: [*c]GLint) void {
    return glad_glGetVideoCaptureivNV.?(arg_9197, arg_9198, arg_9199);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVideoCaptureStreamivNV.xhtml
pub inline fn glGetVideoCaptureStreamivNV(arg_9200: GLuint, arg_9201: GLuint, arg_9202: GLenum, arg_9203: [*c]GLint) void {
    return glad_glGetVideoCaptureStreamivNV.?(arg_9200, arg_9201, arg_9202, arg_9203);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVideoCaptureStreamfvNV.xhtml
pub inline fn glGetVideoCaptureStreamfvNV(arg_9204: GLuint, arg_9205: GLuint, arg_9206: GLenum, arg_9207: [*c]GLfloat) void {
    return glad_glGetVideoCaptureStreamfvNV.?(arg_9204, arg_9205, arg_9206, arg_9207);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetVideoCaptureStreamdvNV.xhtml
pub inline fn glGetVideoCaptureStreamdvNV(arg_9208: GLuint, arg_9209: GLuint, arg_9210: GLenum, arg_9211: [*c]GLdouble) void {
    return glad_glGetVideoCaptureStreamdvNV.?(arg_9208, arg_9209, arg_9210, arg_9211);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVideoCaptureNV.xhtml
pub inline fn glVideoCaptureNV(arg_9212: GLuint, arg_9213: [*c]GLuint, arg_9214: [*c]GLuint64EXT) GLenum {
    return glad_glVideoCaptureNV.?(arg_9212, arg_9213, arg_9214);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVideoCaptureStreamParameterivNV.xhtml
pub inline fn glVideoCaptureStreamParameterivNV(arg_9215: GLuint, arg_9216: GLuint, arg_9217: GLenum, arg_9218: [*c]const GLint) void {
    return glad_glVideoCaptureStreamParameterivNV.?(arg_9215, arg_9216, arg_9217, arg_9218);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVideoCaptureStreamParameterfvNV.xhtml
pub inline fn glVideoCaptureStreamParameterfvNV(arg_9219: GLuint, arg_9220: GLuint, arg_9221: GLenum, arg_9222: [*c]const GLfloat) void {
    return glad_glVideoCaptureStreamParameterfvNV.?(arg_9219, arg_9220, arg_9221, arg_9222);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVideoCaptureStreamParameterdvNV.xhtml
pub inline fn glVideoCaptureStreamParameterdvNV(arg_9223: GLuint, arg_9224: GLuint, arg_9225: GLenum, arg_9226: [*c]const GLdouble) void {
    return glad_glVideoCaptureStreamParameterdvNV.?(arg_9223, arg_9224, arg_9225, arg_9226);
}
pub const GL_NV_viewport_array2 = 1;
pub const GL_NV_viewport_swizzle = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glViewportSwizzleNV.xhtml
pub inline fn glViewportSwizzleNV(arg_9227: GLuint, arg_9228: GLenum, arg_9229: GLenum, arg_9230: GLenum, arg_9231: GLenum) void {
    return glad_glViewportSwizzleNV.?(arg_9227, arg_9228, arg_9229, arg_9230, arg_9231);
}
pub const GL_OES_byte_coordinates = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord1bOES.xhtml
pub inline fn glMultiTexCoord1bOES(arg_9232: GLenum, arg_9233: GLbyte) void {
    return glad_glMultiTexCoord1bOES.?(arg_9232, arg_9233);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord1bvOES.xhtml
pub inline fn glMultiTexCoord1bvOES(arg_9234: GLenum, arg_9235: [*c]const GLbyte) void {
    return glad_glMultiTexCoord1bvOES.?(arg_9234, arg_9235);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord2bOES.xhtml
pub inline fn glMultiTexCoord2bOES(arg_9236: GLenum, arg_9237: GLbyte, arg_9238: GLbyte) void {
    return glad_glMultiTexCoord2bOES.?(arg_9236, arg_9237, arg_9238);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord2bvOES.xhtml
pub inline fn glMultiTexCoord2bvOES(arg_9239: GLenum, arg_9240: [*c]const GLbyte) void {
    return glad_glMultiTexCoord2bvOES.?(arg_9239, arg_9240);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord3bOES.xhtml
pub inline fn glMultiTexCoord3bOES(arg_9241: GLenum, arg_9242: GLbyte, arg_9243: GLbyte, arg_9244: GLbyte) void {
    return glad_glMultiTexCoord3bOES.?(arg_9241, arg_9242, arg_9243, arg_9244);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord3bvOES.xhtml
pub inline fn glMultiTexCoord3bvOES(arg_9245: GLenum, arg_9246: [*c]const GLbyte) void {
    return glad_glMultiTexCoord3bvOES.?(arg_9245, arg_9246);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord4bOES.xhtml
pub inline fn glMultiTexCoord4bOES(arg_9247: GLenum, arg_9248: GLbyte, arg_9249: GLbyte, arg_9250: GLbyte, arg_9251: GLbyte) void {
    return glad_glMultiTexCoord4bOES.?(arg_9247, arg_9248, arg_9249, arg_9250, arg_9251);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord4bvOES.xhtml
pub inline fn glMultiTexCoord4bvOES(arg_9252: GLenum, arg_9253: [*c]const GLbyte) void {
    return glad_glMultiTexCoord4bvOES.?(arg_9252, arg_9253);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord1bOES.xhtml
pub inline fn glTexCoord1bOES(arg_9254: GLbyte) void {
    return glad_glTexCoord1bOES.?(arg_9254);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord1bvOES.xhtml
pub inline fn glTexCoord1bvOES(arg_9255: [*c]const GLbyte) void {
    return glad_glTexCoord1bvOES.?(arg_9255);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord2bOES.xhtml
pub inline fn glTexCoord2bOES(arg_9256: GLbyte, arg_9257: GLbyte) void {
    return glad_glTexCoord2bOES.?(arg_9256, arg_9257);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord2bvOES.xhtml
pub inline fn glTexCoord2bvOES(arg_9258: [*c]const GLbyte) void {
    return glad_glTexCoord2bvOES.?(arg_9258);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord3bOES.xhtml
pub inline fn glTexCoord3bOES(arg_9259: GLbyte, arg_9260: GLbyte, arg_9261: GLbyte) void {
    return glad_glTexCoord3bOES.?(arg_9259, arg_9260, arg_9261);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord3bvOES.xhtml
pub inline fn glTexCoord3bvOES(arg_9262: [*c]const GLbyte) void {
    return glad_glTexCoord3bvOES.?(arg_9262);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord4bOES.xhtml
pub inline fn glTexCoord4bOES(arg_9263: GLbyte, arg_9264: GLbyte, arg_9265: GLbyte, arg_9266: GLbyte) void {
    return glad_glTexCoord4bOES.?(arg_9263, arg_9264, arg_9265, arg_9266);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord4bvOES.xhtml
pub inline fn glTexCoord4bvOES(arg_9267: [*c]const GLbyte) void {
    return glad_glTexCoord4bvOES.?(arg_9267);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex2bOES.xhtml
pub inline fn glVertex2bOES(arg_9268: GLbyte, arg_9269: GLbyte) void {
    return glad_glVertex2bOES.?(arg_9268, arg_9269);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex2bvOES.xhtml
pub inline fn glVertex2bvOES(arg_9270: [*c]const GLbyte) void {
    return glad_glVertex2bvOES.?(arg_9270);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex3bOES.xhtml
pub inline fn glVertex3bOES(arg_9271: GLbyte, arg_9272: GLbyte, arg_9273: GLbyte) void {
    return glad_glVertex3bOES.?(arg_9271, arg_9272, arg_9273);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex3bvOES.xhtml
pub inline fn glVertex3bvOES(arg_9274: [*c]const GLbyte) void {
    return glad_glVertex3bvOES.?(arg_9274);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex4bOES.xhtml
pub inline fn glVertex4bOES(arg_9275: GLbyte, arg_9276: GLbyte, arg_9277: GLbyte, arg_9278: GLbyte) void {
    return glad_glVertex4bOES.?(arg_9275, arg_9276, arg_9277, arg_9278);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex4bvOES.xhtml
pub inline fn glVertex4bvOES(arg_9279: [*c]const GLbyte) void {
    return glad_glVertex4bvOES.?(arg_9279);
}
pub const GL_OES_compressed_paletted_texture = 1;
pub const GL_OES_fixed_point = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glAlphaFuncxOES.xhtml
pub inline fn glAlphaFuncxOES(arg_9280: GLenum, arg_9281: GLfixed) void {
    return glad_glAlphaFuncxOES.?(arg_9280, arg_9281);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearColorxOES.xhtml
pub inline fn glClearColorxOES(arg_9282: GLfixed, arg_9283: GLfixed, arg_9284: GLfixed, arg_9285: GLfixed) void {
    return glad_glClearColorxOES.?(arg_9282, arg_9283, arg_9284, arg_9285);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearDepthxOES.xhtml
pub inline fn glClearDepthxOES(arg_9286: GLfixed) void {
    return glad_glClearDepthxOES.?(arg_9286);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClipPlanexOES.xhtml
pub inline fn glClipPlanexOES(arg_9287: GLenum, arg_9288: [*c]const GLfixed) void {
    return glad_glClipPlanexOES.?(arg_9287, arg_9288);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColor4xOES.xhtml
pub inline fn glColor4xOES(arg_9289: GLfixed, arg_9290: GLfixed, arg_9291: GLfixed, arg_9292: GLfixed) void {
    return glad_glColor4xOES.?(arg_9289, arg_9290, arg_9291, arg_9292);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDepthRangexOES.xhtml
pub inline fn glDepthRangexOES(arg_9293: GLfixed, arg_9294: GLfixed) void {
    return glad_glDepthRangexOES.?(arg_9293, arg_9294);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFogxOES.xhtml
pub inline fn glFogxOES(arg_9295: GLenum, arg_9296: GLfixed) void {
    return glad_glFogxOES.?(arg_9295, arg_9296);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFogxvOES.xhtml
pub inline fn glFogxvOES(arg_9297: GLenum, arg_9298: [*c]const GLfixed) void {
    return glad_glFogxvOES.?(arg_9297, arg_9298);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFrustumxOES.xhtml
pub inline fn glFrustumxOES(arg_9299: GLfixed, arg_9300: GLfixed, arg_9301: GLfixed, arg_9302: GLfixed, arg_9303: GLfixed, arg_9304: GLfixed) void {
    return glad_glFrustumxOES.?(arg_9299, arg_9300, arg_9301, arg_9302, arg_9303, arg_9304);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetClipPlanexOES.xhtml
pub inline fn glGetClipPlanexOES(arg_9305: GLenum, arg_9306: [*c]GLfixed) void {
    return glad_glGetClipPlanexOES.?(arg_9305, arg_9306);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFixedvOES.xhtml
pub inline fn glGetFixedvOES(arg_9307: GLenum, arg_9308: [*c]GLfixed) void {
    return glad_glGetFixedvOES.?(arg_9307, arg_9308);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexEnvxvOES.xhtml
pub inline fn glGetTexEnvxvOES(arg_9309: GLenum, arg_9310: GLenum, arg_9311: [*c]GLfixed) void {
    return glad_glGetTexEnvxvOES.?(arg_9309, arg_9310, arg_9311);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexParameterxvOES.xhtml
pub inline fn glGetTexParameterxvOES(arg_9312: GLenum, arg_9313: GLenum, arg_9314: [*c]GLfixed) void {
    return glad_glGetTexParameterxvOES.?(arg_9312, arg_9313, arg_9314);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLightModelxOES.xhtml
pub inline fn glLightModelxOES(arg_9315: GLenum, arg_9316: GLfixed) void {
    return glad_glLightModelxOES.?(arg_9315, arg_9316);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLightModelxvOES.xhtml
pub inline fn glLightModelxvOES(arg_9317: GLenum, arg_9318: [*c]const GLfixed) void {
    return glad_glLightModelxvOES.?(arg_9317, arg_9318);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLightxOES.xhtml
pub inline fn glLightxOES(arg_9319: GLenum, arg_9320: GLenum, arg_9321: GLfixed) void {
    return glad_glLightxOES.?(arg_9319, arg_9320, arg_9321);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLightxvOES.xhtml
pub inline fn glLightxvOES(arg_9322: GLenum, arg_9323: GLenum, arg_9324: [*c]const GLfixed) void {
    return glad_glLightxvOES.?(arg_9322, arg_9323, arg_9324);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLineWidthxOES.xhtml
pub inline fn glLineWidthxOES(arg_9325: GLfixed) void {
    return glad_glLineWidthxOES.?(arg_9325);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLoadMatrixxOES.xhtml
pub inline fn glLoadMatrixxOES(arg_9326: [*c]const GLfixed) void {
    return glad_glLoadMatrixxOES.?(arg_9326);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMaterialxOES.xhtml
pub inline fn glMaterialxOES(arg_9327: GLenum, arg_9328: GLenum, arg_9329: GLfixed) void {
    return glad_glMaterialxOES.?(arg_9327, arg_9328, arg_9329);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMaterialxvOES.xhtml
pub inline fn glMaterialxvOES(arg_9330: GLenum, arg_9331: GLenum, arg_9332: [*c]const GLfixed) void {
    return glad_glMaterialxvOES.?(arg_9330, arg_9331, arg_9332);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultMatrixxOES.xhtml
pub inline fn glMultMatrixxOES(arg_9333: [*c]const GLfixed) void {
    return glad_glMultMatrixxOES.?(arg_9333);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord4xOES.xhtml
pub inline fn glMultiTexCoord4xOES(arg_9334: GLenum, arg_9335: GLfixed, arg_9336: GLfixed, arg_9337: GLfixed, arg_9338: GLfixed) void {
    return glad_glMultiTexCoord4xOES.?(arg_9334, arg_9335, arg_9336, arg_9337, arg_9338);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNormal3xOES.xhtml
pub inline fn glNormal3xOES(arg_9339: GLfixed, arg_9340: GLfixed, arg_9341: GLfixed) void {
    return glad_glNormal3xOES.?(arg_9339, arg_9340, arg_9341);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glOrthoxOES.xhtml
pub inline fn glOrthoxOES(arg_9342: GLfixed, arg_9343: GLfixed, arg_9344: GLfixed, arg_9345: GLfixed, arg_9346: GLfixed, arg_9347: GLfixed) void {
    return glad_glOrthoxOES.?(arg_9342, arg_9343, arg_9344, arg_9345, arg_9346, arg_9347);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPointParameterxvOES.xhtml
pub inline fn glPointParameterxvOES(arg_9348: GLenum, arg_9349: [*c]const GLfixed) void {
    return glad_glPointParameterxvOES.?(arg_9348, arg_9349);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPointSizexOES.xhtml
pub inline fn glPointSizexOES(arg_9350: GLfixed) void {
    return glad_glPointSizexOES.?(arg_9350);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPolygonOffsetxOES.xhtml
pub inline fn glPolygonOffsetxOES(arg_9351: GLfixed, arg_9352: GLfixed) void {
    return glad_glPolygonOffsetxOES.?(arg_9351, arg_9352);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRotatexOES.xhtml
pub inline fn glRotatexOES(arg_9353: GLfixed, arg_9354: GLfixed, arg_9355: GLfixed, arg_9356: GLfixed) void {
    return glad_glRotatexOES.?(arg_9353, arg_9354, arg_9355, arg_9356);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glScalexOES.xhtml
pub inline fn glScalexOES(arg_9357: GLfixed, arg_9358: GLfixed, arg_9359: GLfixed) void {
    return glad_glScalexOES.?(arg_9357, arg_9358, arg_9359);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexEnvxOES.xhtml
pub inline fn glTexEnvxOES(arg_9360: GLenum, arg_9361: GLenum, arg_9362: GLfixed) void {
    return glad_glTexEnvxOES.?(arg_9360, arg_9361, arg_9362);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexEnvxvOES.xhtml
pub inline fn glTexEnvxvOES(arg_9363: GLenum, arg_9364: GLenum, arg_9365: [*c]const GLfixed) void {
    return glad_glTexEnvxvOES.?(arg_9363, arg_9364, arg_9365);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexParameterxOES.xhtml
pub inline fn glTexParameterxOES(arg_9366: GLenum, arg_9367: GLenum, arg_9368: GLfixed) void {
    return glad_glTexParameterxOES.?(arg_9366, arg_9367, arg_9368);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexParameterxvOES.xhtml
pub inline fn glTexParameterxvOES(arg_9369: GLenum, arg_9370: GLenum, arg_9371: [*c]const GLfixed) void {
    return glad_glTexParameterxvOES.?(arg_9369, arg_9370, arg_9371);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTranslatexOES.xhtml
pub inline fn glTranslatexOES(arg_9372: GLfixed, arg_9373: GLfixed, arg_9374: GLfixed) void {
    return glad_glTranslatexOES.?(arg_9372, arg_9373, arg_9374);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetLightxvOES.xhtml
pub inline fn glGetLightxvOES(arg_9375: GLenum, arg_9376: GLenum, arg_9377: [*c]GLfixed) void {
    return glad_glGetLightxvOES.?(arg_9375, arg_9376, arg_9377);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMaterialxvOES.xhtml
pub inline fn glGetMaterialxvOES(arg_9378: GLenum, arg_9379: GLenum, arg_9380: [*c]GLfixed) void {
    return glad_glGetMaterialxvOES.?(arg_9378, arg_9379, arg_9380);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPointParameterxOES.xhtml
pub inline fn glPointParameterxOES(arg_9381: GLenum, arg_9382: GLfixed) void {
    return glad_glPointParameterxOES.?(arg_9381, arg_9382);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSampleCoveragexOES.xhtml
pub inline fn glSampleCoveragexOES(arg_9383: GLclampx, arg_9384: GLboolean) void {
    return glad_glSampleCoveragexOES.?(arg_9383, arg_9384);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glAccumxOES.xhtml
pub inline fn glAccumxOES(arg_9385: GLenum, arg_9386: GLfixed) void {
    return glad_glAccumxOES.?(arg_9385, arg_9386);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBitmapxOES.xhtml
pub inline fn glBitmapxOES(arg_9387: GLsizei, arg_9388: GLsizei, arg_9389: GLfixed, arg_9390: GLfixed, arg_9391: GLfixed, arg_9392: GLfixed, arg_9393: [*c]const GLubyte) void {
    return glad_glBitmapxOES.?(arg_9387, arg_9388, arg_9389, arg_9390, arg_9391, arg_9392, arg_9393);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendColorxOES.xhtml
pub inline fn glBlendColorxOES(arg_9394: GLfixed, arg_9395: GLfixed, arg_9396: GLfixed, arg_9397: GLfixed) void {
    return glad_glBlendColorxOES.?(arg_9394, arg_9395, arg_9396, arg_9397);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearAccumxOES.xhtml
pub inline fn glClearAccumxOES(arg_9398: GLfixed, arg_9399: GLfixed, arg_9400: GLfixed, arg_9401: GLfixed) void {
    return glad_glClearAccumxOES.?(arg_9398, arg_9399, arg_9400, arg_9401);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColor3xOES.xhtml
pub inline fn glColor3xOES(arg_9402: GLfixed, arg_9403: GLfixed, arg_9404: GLfixed) void {
    return glad_glColor3xOES.?(arg_9402, arg_9403, arg_9404);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColor3xvOES.xhtml
pub inline fn glColor3xvOES(arg_9405: [*c]const GLfixed) void {
    return glad_glColor3xvOES.?(arg_9405);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColor4xvOES.xhtml
pub inline fn glColor4xvOES(arg_9406: [*c]const GLfixed) void {
    return glad_glColor4xvOES.?(arg_9406);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glConvolutionParameterxOES.xhtml
pub inline fn glConvolutionParameterxOES(arg_9407: GLenum, arg_9408: GLenum, arg_9409: GLfixed) void {
    return glad_glConvolutionParameterxOES.?(arg_9407, arg_9408, arg_9409);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glConvolutionParameterxvOES.xhtml
pub inline fn glConvolutionParameterxvOES(arg_9410: GLenum, arg_9411: GLenum, arg_9412: [*c]const GLfixed) void {
    return glad_glConvolutionParameterxvOES.?(arg_9410, arg_9411, arg_9412);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEvalCoord1xOES.xhtml
pub inline fn glEvalCoord1xOES(arg_9413: GLfixed) void {
    return glad_glEvalCoord1xOES.?(arg_9413);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEvalCoord1xvOES.xhtml
pub inline fn glEvalCoord1xvOES(arg_9414: [*c]const GLfixed) void {
    return glad_glEvalCoord1xvOES.?(arg_9414);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEvalCoord2xOES.xhtml
pub inline fn glEvalCoord2xOES(arg_9415: GLfixed, arg_9416: GLfixed) void {
    return glad_glEvalCoord2xOES.?(arg_9415, arg_9416);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEvalCoord2xvOES.xhtml
pub inline fn glEvalCoord2xvOES(arg_9417: [*c]const GLfixed) void {
    return glad_glEvalCoord2xvOES.?(arg_9417);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFeedbackBufferxOES.xhtml
pub inline fn glFeedbackBufferxOES(arg_9418: GLsizei, arg_9419: GLenum, arg_9420: [*c]const GLfixed) void {
    return glad_glFeedbackBufferxOES.?(arg_9418, arg_9419, arg_9420);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetConvolutionParameterxvOES.xhtml
pub inline fn glGetConvolutionParameterxvOES(arg_9421: GLenum, arg_9422: GLenum, arg_9423: [*c]GLfixed) void {
    return glad_glGetConvolutionParameterxvOES.?(arg_9421, arg_9422, arg_9423);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetHistogramParameterxvOES.xhtml
pub inline fn glGetHistogramParameterxvOES(arg_9424: GLenum, arg_9425: GLenum, arg_9426: [*c]GLfixed) void {
    return glad_glGetHistogramParameterxvOES.?(arg_9424, arg_9425, arg_9426);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetLightxOES.xhtml
pub inline fn glGetLightxOES(arg_9427: GLenum, arg_9428: GLenum, arg_9429: [*c]GLfixed) void {
    return glad_glGetLightxOES.?(arg_9427, arg_9428, arg_9429);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMapxvOES.xhtml
pub inline fn glGetMapxvOES(arg_9430: GLenum, arg_9431: GLenum, arg_9432: [*c]GLfixed) void {
    return glad_glGetMapxvOES.?(arg_9430, arg_9431, arg_9432);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetMaterialxOES.xhtml
pub inline fn glGetMaterialxOES(arg_9433: GLenum, arg_9434: GLenum, arg_9435: GLfixed) void {
    return glad_glGetMaterialxOES.?(arg_9433, arg_9434, arg_9435);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPixelMapxv.xhtml
pub inline fn glGetPixelMapxv(arg_9436: GLenum, arg_9437: GLint, arg_9438: [*c]GLfixed) void {
    return glad_glGetPixelMapxv.?(arg_9436, arg_9437, arg_9438);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexGenxvOES.xhtml
pub inline fn glGetTexGenxvOES(arg_9439: GLenum, arg_9440: GLenum, arg_9441: [*c]GLfixed) void {
    return glad_glGetTexGenxvOES.?(arg_9439, arg_9440, arg_9441);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexLevelParameterxvOES.xhtml
pub inline fn glGetTexLevelParameterxvOES(arg_9442: GLenum, arg_9443: GLint, arg_9444: GLenum, arg_9445: [*c]GLfixed) void {
    return glad_glGetTexLevelParameterxvOES.?(arg_9442, arg_9443, arg_9444, arg_9445);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIndexxOES.xhtml
pub inline fn glIndexxOES(arg_9446: GLfixed) void {
    return glad_glIndexxOES.?(arg_9446);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIndexxvOES.xhtml
pub inline fn glIndexxvOES(arg_9447: [*c]const GLfixed) void {
    return glad_glIndexxvOES.?(arg_9447);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLoadTransposeMatrixxOES.xhtml
pub inline fn glLoadTransposeMatrixxOES(arg_9448: [*c]const GLfixed) void {
    return glad_glLoadTransposeMatrixxOES.?(arg_9448);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMap1xOES.xhtml
pub inline fn glMap1xOES(arg_9449: GLenum, arg_9450: GLfixed, arg_9451: GLfixed, arg_9452: GLint, arg_9453: GLint, arg_9454: GLfixed) void {
    return glad_glMap1xOES.?(arg_9449, arg_9450, arg_9451, arg_9452, arg_9453, arg_9454);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMap2xOES.xhtml
pub inline fn glMap2xOES(arg_9455: GLenum, arg_9456: GLfixed, arg_9457: GLfixed, arg_9458: GLint, arg_9459: GLint, arg_9460: GLfixed, arg_9461: GLfixed, arg_9462: GLint, arg_9463: GLint, arg_9464: GLfixed) void {
    return glad_glMap2xOES.?(arg_9455, arg_9456, arg_9457, arg_9458, arg_9459, arg_9460, arg_9461, arg_9462, arg_9463, arg_9464);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMapGrid1xOES.xhtml
pub inline fn glMapGrid1xOES(arg_9465: GLint, arg_9466: GLfixed, arg_9467: GLfixed) void {
    return glad_glMapGrid1xOES.?(arg_9465, arg_9466, arg_9467);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMapGrid2xOES.xhtml
pub inline fn glMapGrid2xOES(arg_9468: GLint, arg_9469: GLfixed, arg_9470: GLfixed, arg_9471: GLfixed, arg_9472: GLfixed) void {
    return glad_glMapGrid2xOES.?(arg_9468, arg_9469, arg_9470, arg_9471, arg_9472);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultTransposeMatrixxOES.xhtml
pub inline fn glMultTransposeMatrixxOES(arg_9473: [*c]const GLfixed) void {
    return glad_glMultTransposeMatrixxOES.?(arg_9473);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord1xOES.xhtml
pub inline fn glMultiTexCoord1xOES(arg_9474: GLenum, arg_9475: GLfixed) void {
    return glad_glMultiTexCoord1xOES.?(arg_9474, arg_9475);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord1xvOES.xhtml
pub inline fn glMultiTexCoord1xvOES(arg_9476: GLenum, arg_9477: [*c]const GLfixed) void {
    return glad_glMultiTexCoord1xvOES.?(arg_9476, arg_9477);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord2xOES.xhtml
pub inline fn glMultiTexCoord2xOES(arg_9478: GLenum, arg_9479: GLfixed, arg_9480: GLfixed) void {
    return glad_glMultiTexCoord2xOES.?(arg_9478, arg_9479, arg_9480);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord2xvOES.xhtml
pub inline fn glMultiTexCoord2xvOES(arg_9481: GLenum, arg_9482: [*c]const GLfixed) void {
    return glad_glMultiTexCoord2xvOES.?(arg_9481, arg_9482);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord3xOES.xhtml
pub inline fn glMultiTexCoord3xOES(arg_9483: GLenum, arg_9484: GLfixed, arg_9485: GLfixed, arg_9486: GLfixed) void {
    return glad_glMultiTexCoord3xOES.?(arg_9483, arg_9484, arg_9485, arg_9486);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord3xvOES.xhtml
pub inline fn glMultiTexCoord3xvOES(arg_9487: GLenum, arg_9488: [*c]const GLfixed) void {
    return glad_glMultiTexCoord3xvOES.?(arg_9487, arg_9488);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiTexCoord4xvOES.xhtml
pub inline fn glMultiTexCoord4xvOES(arg_9489: GLenum, arg_9490: [*c]const GLfixed) void {
    return glad_glMultiTexCoord4xvOES.?(arg_9489, arg_9490);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNormal3xvOES.xhtml
pub inline fn glNormal3xvOES(arg_9491: [*c]const GLfixed) void {
    return glad_glNormal3xvOES.?(arg_9491);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPassThroughxOES.xhtml
pub inline fn glPassThroughxOES(arg_9492: GLfixed) void {
    return glad_glPassThroughxOES.?(arg_9492);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPixelMapx.xhtml
pub inline fn glPixelMapx(arg_9493: GLenum, arg_9494: GLint, arg_9495: [*c]const GLfixed) void {
    return glad_glPixelMapx.?(arg_9493, arg_9494, arg_9495);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPixelStorex.xhtml
pub inline fn glPixelStorex(arg_9496: GLenum, arg_9497: GLfixed) void {
    return glad_glPixelStorex.?(arg_9496, arg_9497);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPixelTransferxOES.xhtml
pub inline fn glPixelTransferxOES(arg_9498: GLenum, arg_9499: GLfixed) void {
    return glad_glPixelTransferxOES.?(arg_9498, arg_9499);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPixelZoomxOES.xhtml
pub inline fn glPixelZoomxOES(arg_9500: GLfixed, arg_9501: GLfixed) void {
    return glad_glPixelZoomxOES.?(arg_9500, arg_9501);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPrioritizeTexturesxOES.xhtml
pub inline fn glPrioritizeTexturesxOES(arg_9502: GLsizei, arg_9503: [*c]const GLuint, arg_9504: [*c]const GLfixed) void {
    return glad_glPrioritizeTexturesxOES.?(arg_9502, arg_9503, arg_9504);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRasterPos2xOES.xhtml
pub inline fn glRasterPos2xOES(arg_9505: GLfixed, arg_9506: GLfixed) void {
    return glad_glRasterPos2xOES.?(arg_9505, arg_9506);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRasterPos2xvOES.xhtml
pub inline fn glRasterPos2xvOES(arg_9507: [*c]const GLfixed) void {
    return glad_glRasterPos2xvOES.?(arg_9507);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRasterPos3xOES.xhtml
pub inline fn glRasterPos3xOES(arg_9508: GLfixed, arg_9509: GLfixed, arg_9510: GLfixed) void {
    return glad_glRasterPos3xOES.?(arg_9508, arg_9509, arg_9510);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRasterPos3xvOES.xhtml
pub inline fn glRasterPos3xvOES(arg_9511: [*c]const GLfixed) void {
    return glad_glRasterPos3xvOES.?(arg_9511);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRasterPos4xOES.xhtml
pub inline fn glRasterPos4xOES(arg_9512: GLfixed, arg_9513: GLfixed, arg_9514: GLfixed, arg_9515: GLfixed) void {
    return glad_glRasterPos4xOES.?(arg_9512, arg_9513, arg_9514, arg_9515);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRasterPos4xvOES.xhtml
pub inline fn glRasterPos4xvOES(arg_9516: [*c]const GLfixed) void {
    return glad_glRasterPos4xvOES.?(arg_9516);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRectxOES.xhtml
pub inline fn glRectxOES(arg_9517: GLfixed, arg_9518: GLfixed, arg_9519: GLfixed, arg_9520: GLfixed) void {
    return glad_glRectxOES.?(arg_9517, arg_9518, arg_9519, arg_9520);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRectxvOES.xhtml
pub inline fn glRectxvOES(arg_9521: [*c]const GLfixed, arg_9522: [*c]const GLfixed) void {
    return glad_glRectxvOES.?(arg_9521, arg_9522);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord1xOES.xhtml
pub inline fn glTexCoord1xOES(arg_9523: GLfixed) void {
    return glad_glTexCoord1xOES.?(arg_9523);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord1xvOES.xhtml
pub inline fn glTexCoord1xvOES(arg_9524: [*c]const GLfixed) void {
    return glad_glTexCoord1xvOES.?(arg_9524);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord2xOES.xhtml
pub inline fn glTexCoord2xOES(arg_9525: GLfixed, arg_9526: GLfixed) void {
    return glad_glTexCoord2xOES.?(arg_9525, arg_9526);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord2xvOES.xhtml
pub inline fn glTexCoord2xvOES(arg_9527: [*c]const GLfixed) void {
    return glad_glTexCoord2xvOES.?(arg_9527);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord3xOES.xhtml
pub inline fn glTexCoord3xOES(arg_9528: GLfixed, arg_9529: GLfixed, arg_9530: GLfixed) void {
    return glad_glTexCoord3xOES.?(arg_9528, arg_9529, arg_9530);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord3xvOES.xhtml
pub inline fn glTexCoord3xvOES(arg_9531: [*c]const GLfixed) void {
    return glad_glTexCoord3xvOES.?(arg_9531);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord4xOES.xhtml
pub inline fn glTexCoord4xOES(arg_9532: GLfixed, arg_9533: GLfixed, arg_9534: GLfixed, arg_9535: GLfixed) void {
    return glad_glTexCoord4xOES.?(arg_9532, arg_9533, arg_9534, arg_9535);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord4xvOES.xhtml
pub inline fn glTexCoord4xvOES(arg_9536: [*c]const GLfixed) void {
    return glad_glTexCoord4xvOES.?(arg_9536);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexGenxOES.xhtml
pub inline fn glTexGenxOES(arg_9537: GLenum, arg_9538: GLenum, arg_9539: GLfixed) void {
    return glad_glTexGenxOES.?(arg_9537, arg_9538, arg_9539);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexGenxvOES.xhtml
pub inline fn glTexGenxvOES(arg_9540: GLenum, arg_9541: GLenum, arg_9542: [*c]const GLfixed) void {
    return glad_glTexGenxvOES.?(arg_9540, arg_9541, arg_9542);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex2xOES.xhtml
pub inline fn glVertex2xOES(arg_9543: GLfixed) void {
    return glad_glVertex2xOES.?(arg_9543);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex2xvOES.xhtml
pub inline fn glVertex2xvOES(arg_9544: [*c]const GLfixed) void {
    return glad_glVertex2xvOES.?(arg_9544);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex3xOES.xhtml
pub inline fn glVertex3xOES(arg_9545: GLfixed, arg_9546: GLfixed) void {
    return glad_glVertex3xOES.?(arg_9545, arg_9546);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex3xvOES.xhtml
pub inline fn glVertex3xvOES(arg_9547: [*c]const GLfixed) void {
    return glad_glVertex3xvOES.?(arg_9547);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex4xOES.xhtml
pub inline fn glVertex4xOES(arg_9548: GLfixed, arg_9549: GLfixed, arg_9550: GLfixed) void {
    return glad_glVertex4xOES.?(arg_9548, arg_9549, arg_9550);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertex4xvOES.xhtml
pub inline fn glVertex4xvOES(arg_9551: [*c]const GLfixed) void {
    return glad_glVertex4xvOES.?(arg_9551);
}
pub const GL_OES_query_matrix = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glQueryMatrixxOES.xhtml
pub inline fn glQueryMatrixxOES(arg_9552: [*c]GLfixed, arg_9553: [*c]GLint) GLbitfield {
    return glad_glQueryMatrixxOES.?(arg_9552, arg_9553);
}
pub const GL_OES_read_format = 1;
pub const GL_OES_single_precision = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearDepthfOES.xhtml
pub inline fn glClearDepthfOES(arg_9554: GLclampf) void {
    return glad_glClearDepthfOES.?(arg_9554);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClipPlanefOES.xhtml
pub inline fn glClipPlanefOES(arg_9555: GLenum, arg_9556: [*c]const GLfloat) void {
    return glad_glClipPlanefOES.?(arg_9555, arg_9556);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDepthRangefOES.xhtml
pub inline fn glDepthRangefOES(arg_9557: GLclampf, arg_9558: GLclampf) void {
    return glad_glDepthRangefOES.?(arg_9557, arg_9558);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFrustumfOES.xhtml
pub inline fn glFrustumfOES(arg_9559: GLfloat, arg_9560: GLfloat, arg_9561: GLfloat, arg_9562: GLfloat, arg_9563: GLfloat, arg_9564: GLfloat) void {
    return glad_glFrustumfOES.?(arg_9559, arg_9560, arg_9561, arg_9562, arg_9563, arg_9564);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetClipPlanefOES.xhtml
pub inline fn glGetClipPlanefOES(arg_9565: GLenum, arg_9566: [*c]GLfloat) void {
    return glad_glGetClipPlanefOES.?(arg_9565, arg_9566);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glOrthofOES.xhtml
pub inline fn glOrthofOES(arg_9567: GLfloat, arg_9568: GLfloat, arg_9569: GLfloat, arg_9570: GLfloat, arg_9571: GLfloat, arg_9572: GLfloat) void {
    return glad_glOrthofOES.?(arg_9567, arg_9568, arg_9569, arg_9570, arg_9571, arg_9572);
}
pub const GL_OML_interlace = 1;
pub const GL_OML_resample = 1;
pub const GL_OML_subsample = 1;
pub const GL_OVR_multiview = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferTextureMultiviewOVR.xhtml
pub inline fn glFramebufferTextureMultiviewOVR(arg_9573: GLenum, arg_9574: GLenum, arg_9575: GLuint, arg_9576: GLint, arg_9577: GLint, arg_9578: GLsizei) void {
    return glad_glFramebufferTextureMultiviewOVR.?(arg_9573, arg_9574, arg_9575, arg_9576, arg_9577, arg_9578);
}
pub const GL_OVR_multiview2 = 1;
pub const GL_PGI_misc_hints = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glHintPGI.xhtml
pub inline fn glHintPGI(arg_9579: GLenum, arg_9580: GLint) void {
    return glad_glHintPGI.?(arg_9579, arg_9580);
}
pub const GL_PGI_vertex_hints = 1;
pub const GL_REND_screen_coordinates = 1;
pub const GL_S3_s3tc = 1;
pub const GL_SGIS_detail_texture = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDetailTexFuncSGIS.xhtml
pub inline fn glDetailTexFuncSGIS(arg_9581: GLenum, arg_9582: GLsizei, arg_9583: [*c]const GLfloat) void {
    return glad_glDetailTexFuncSGIS.?(arg_9581, arg_9582, arg_9583);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetDetailTexFuncSGIS.xhtml
pub inline fn glGetDetailTexFuncSGIS(arg_9584: GLenum, arg_9585: [*c]GLfloat) void {
    return glad_glGetDetailTexFuncSGIS.?(arg_9584, arg_9585);
}
pub const GL_SGIS_fog_function = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFogFuncSGIS.xhtml
pub inline fn glFogFuncSGIS(arg_9586: GLsizei, arg_9587: [*c]const GLfloat) void {
    return glad_glFogFuncSGIS.?(arg_9586, arg_9587);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFogFuncSGIS.xhtml
pub inline fn glGetFogFuncSGIS(arg_9588: [*c]GLfloat) void {
    return glad_glGetFogFuncSGIS.?(arg_9588);
}
pub const GL_SGIS_generate_mipmap = 1;
pub const GL_SGIS_multisample = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSampleMaskSGIS.xhtml
pub inline fn glSampleMaskSGIS(arg_9589: GLclampf, arg_9590: GLboolean) void {
    return glad_glSampleMaskSGIS.?(arg_9589, arg_9590);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSamplePatternSGIS.xhtml
pub inline fn glSamplePatternSGIS(arg_9591: GLenum) void {
    return glad_glSamplePatternSGIS.?(arg_9591);
}
pub const GL_SGIS_pixel_texture = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPixelTexGenParameteriSGIS.xhtml
pub inline fn glPixelTexGenParameteriSGIS(arg_9592: GLenum, arg_9593: GLint) void {
    return glad_glPixelTexGenParameteriSGIS.?(arg_9592, arg_9593);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPixelTexGenParameterivSGIS.xhtml
pub inline fn glPixelTexGenParameterivSGIS(arg_9594: GLenum, arg_9595: [*c]const GLint) void {
    return glad_glPixelTexGenParameterivSGIS.?(arg_9594, arg_9595);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPixelTexGenParameterfSGIS.xhtml
pub inline fn glPixelTexGenParameterfSGIS(arg_9596: GLenum, arg_9597: GLfloat) void {
    return glad_glPixelTexGenParameterfSGIS.?(arg_9596, arg_9597);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPixelTexGenParameterfvSGIS.xhtml
pub inline fn glPixelTexGenParameterfvSGIS(arg_9598: GLenum, arg_9599: [*c]const GLfloat) void {
    return glad_glPixelTexGenParameterfvSGIS.?(arg_9598, arg_9599);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPixelTexGenParameterivSGIS.xhtml
pub inline fn glGetPixelTexGenParameterivSGIS(arg_9600: GLenum, arg_9601: [*c]GLint) void {
    return glad_glGetPixelTexGenParameterivSGIS.?(arg_9600, arg_9601);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetPixelTexGenParameterfvSGIS.xhtml
pub inline fn glGetPixelTexGenParameterfvSGIS(arg_9602: GLenum, arg_9603: [*c]GLfloat) void {
    return glad_glGetPixelTexGenParameterfvSGIS.?(arg_9602, arg_9603);
}
pub const GL_SGIS_point_line_texgen = 1;
pub const GL_SGIS_point_parameters = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPointParameterfSGIS.xhtml
pub inline fn glPointParameterfSGIS(arg_9604: GLenum, arg_9605: GLfloat) void {
    return glad_glPointParameterfSGIS.?(arg_9604, arg_9605);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPointParameterfvSGIS.xhtml
pub inline fn glPointParameterfvSGIS(arg_9606: GLenum, arg_9607: [*c]const GLfloat) void {
    return glad_glPointParameterfvSGIS.?(arg_9606, arg_9607);
}
pub const GL_SGIS_sharpen_texture = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSharpenTexFuncSGIS.xhtml
pub inline fn glSharpenTexFuncSGIS(arg_9608: GLenum, arg_9609: GLsizei, arg_9610: [*c]const GLfloat) void {
    return glad_glSharpenTexFuncSGIS.?(arg_9608, arg_9609, arg_9610);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetSharpenTexFuncSGIS.xhtml
pub inline fn glGetSharpenTexFuncSGIS(arg_9611: GLenum, arg_9612: [*c]GLfloat) void {
    return glad_glGetSharpenTexFuncSGIS.?(arg_9611, arg_9612);
}
pub const GL_SGIS_texture4D = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexImage4DSGIS.xhtml
pub inline fn glTexImage4DSGIS(arg_9613: GLenum, arg_9614: GLint, arg_9615: GLenum, arg_9616: GLsizei, arg_9617: GLsizei, arg_9618: GLsizei, arg_9619: GLsizei, arg_9620: GLint, arg_9621: GLenum, arg_9622: GLenum, arg_9623: ?*const anyopaque) void {
    return glad_glTexImage4DSGIS.?(arg_9613, arg_9614, arg_9615, arg_9616, arg_9617, arg_9618, arg_9619, arg_9620, arg_9621, arg_9622, arg_9623);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexSubImage4DSGIS.xhtml
pub inline fn glTexSubImage4DSGIS(arg_9624: GLenum, arg_9625: GLint, arg_9626: GLint, arg_9627: GLint, arg_9628: GLint, arg_9629: GLint, arg_9630: GLsizei, arg_9631: GLsizei, arg_9632: GLsizei, arg_9633: GLsizei, arg_9634: GLenum, arg_9635: GLenum, arg_9636: ?*const anyopaque) void {
    return glad_glTexSubImage4DSGIS.?(arg_9624, arg_9625, arg_9626, arg_9627, arg_9628, arg_9629, arg_9630, arg_9631, arg_9632, arg_9633, arg_9634, arg_9635, arg_9636);
}
pub const GL_SGIS_texture_border_clamp = 1;
pub const GL_SGIS_texture_color_mask = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureColorMaskSGIS.xhtml
pub inline fn glTextureColorMaskSGIS(arg_9637: GLboolean, arg_9638: GLboolean, arg_9639: GLboolean, arg_9640: GLboolean) void {
    return glad_glTextureColorMaskSGIS.?(arg_9637, arg_9638, arg_9639, arg_9640);
}
pub const GL_SGIS_texture_edge_clamp = 1;
pub const GL_SGIS_texture_filter4 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexFilterFuncSGIS.xhtml
pub inline fn glGetTexFilterFuncSGIS(arg_9641: GLenum, arg_9642: GLenum, arg_9643: [*c]GLfloat) void {
    return glad_glGetTexFilterFuncSGIS.?(arg_9641, arg_9642, arg_9643);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexFilterFuncSGIS.xhtml
pub inline fn glTexFilterFuncSGIS(arg_9644: GLenum, arg_9645: GLenum, arg_9646: GLsizei, arg_9647: [*c]const GLfloat) void {
    return glad_glTexFilterFuncSGIS.?(arg_9644, arg_9645, arg_9646, arg_9647);
}
pub const GL_SGIS_texture_lod = 1;
pub const GL_SGIS_texture_select = 1;
pub const GL_SGIX_async = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glAsyncMarkerSGIX.xhtml
pub inline fn glAsyncMarkerSGIX(arg_9648: GLuint) void {
    return glad_glAsyncMarkerSGIX.?(arg_9648);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFinishAsyncSGIX.xhtml
pub inline fn glFinishAsyncSGIX(arg_9649: [*c]GLuint) GLint {
    return glad_glFinishAsyncSGIX.?(arg_9649);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPollAsyncSGIX.xhtml
pub inline fn glPollAsyncSGIX(arg_9650: [*c]GLuint) GLint {
    return glad_glPollAsyncSGIX.?(arg_9650);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenAsyncMarkersSGIX.xhtml
pub inline fn glGenAsyncMarkersSGIX(arg_9651: GLsizei) GLuint {
    return glad_glGenAsyncMarkersSGIX.?(arg_9651);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteAsyncMarkersSGIX.xhtml
pub inline fn glDeleteAsyncMarkersSGIX(arg_9652: GLuint, arg_9653: GLsizei) void {
    return glad_glDeleteAsyncMarkersSGIX.?(arg_9652, arg_9653);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsAsyncMarkerSGIX.xhtml
pub inline fn glIsAsyncMarkerSGIX(arg_9654: GLuint) GLboolean {
    return glad_glIsAsyncMarkerSGIX.?(arg_9654);
}
pub const GL_SGIX_async_histogram = 1;
pub const GL_SGIX_async_pixel = 1;
pub const GL_SGIX_blend_alpha_minmax = 1;
pub const GL_SGIX_calligraphic_fragment = 1;
pub const GL_SGIX_clipmap = 1;
pub const GL_SGIX_convolution_accuracy = 1;
pub const GL_SGIX_depth_pass_instrument = 1;
pub const GL_SGIX_depth_texture = 1;
pub const GL_SGIX_flush_raster = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFlushRasterSGIX.xhtml
pub inline fn glFlushRasterSGIX() void {
    return glad_glFlushRasterSGIX.?();
}
pub const GL_SGIX_fog_offset = 1;
pub const GL_SGIX_fragment_lighting = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFragmentColorMaterialSGIX.xhtml
pub inline fn glFragmentColorMaterialSGIX(arg_9655: GLenum, arg_9656: GLenum) void {
    return glad_glFragmentColorMaterialSGIX.?(arg_9655, arg_9656);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFragmentLightfSGIX.xhtml
pub inline fn glFragmentLightfSGIX(arg_9657: GLenum, arg_9658: GLenum, arg_9659: GLfloat) void {
    return glad_glFragmentLightfSGIX.?(arg_9657, arg_9658, arg_9659);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFragmentLightfvSGIX.xhtml
pub inline fn glFragmentLightfvSGIX(arg_9660: GLenum, arg_9661: GLenum, arg_9662: [*c]const GLfloat) void {
    return glad_glFragmentLightfvSGIX.?(arg_9660, arg_9661, arg_9662);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFragmentLightiSGIX.xhtml
pub inline fn glFragmentLightiSGIX(arg_9663: GLenum, arg_9664: GLenum, arg_9665: GLint) void {
    return glad_glFragmentLightiSGIX.?(arg_9663, arg_9664, arg_9665);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFragmentLightivSGIX.xhtml
pub inline fn glFragmentLightivSGIX(arg_9666: GLenum, arg_9667: GLenum, arg_9668: [*c]const GLint) void {
    return glad_glFragmentLightivSGIX.?(arg_9666, arg_9667, arg_9668);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFragmentLightModelfSGIX.xhtml
pub inline fn glFragmentLightModelfSGIX(arg_9669: GLenum, arg_9670: GLfloat) void {
    return glad_glFragmentLightModelfSGIX.?(arg_9669, arg_9670);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFragmentLightModelfvSGIX.xhtml
pub inline fn glFragmentLightModelfvSGIX(arg_9671: GLenum, arg_9672: [*c]const GLfloat) void {
    return glad_glFragmentLightModelfvSGIX.?(arg_9671, arg_9672);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFragmentLightModeliSGIX.xhtml
pub inline fn glFragmentLightModeliSGIX(arg_9673: GLenum, arg_9674: GLint) void {
    return glad_glFragmentLightModeliSGIX.?(arg_9673, arg_9674);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFragmentLightModelivSGIX.xhtml
pub inline fn glFragmentLightModelivSGIX(arg_9675: GLenum, arg_9676: [*c]const GLint) void {
    return glad_glFragmentLightModelivSGIX.?(arg_9675, arg_9676);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFragmentMaterialfSGIX.xhtml
pub inline fn glFragmentMaterialfSGIX(arg_9677: GLenum, arg_9678: GLenum, arg_9679: GLfloat) void {
    return glad_glFragmentMaterialfSGIX.?(arg_9677, arg_9678, arg_9679);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFragmentMaterialfvSGIX.xhtml
pub inline fn glFragmentMaterialfvSGIX(arg_9680: GLenum, arg_9681: GLenum, arg_9682: [*c]const GLfloat) void {
    return glad_glFragmentMaterialfvSGIX.?(arg_9680, arg_9681, arg_9682);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFragmentMaterialiSGIX.xhtml
pub inline fn glFragmentMaterialiSGIX(arg_9683: GLenum, arg_9684: GLenum, arg_9685: GLint) void {
    return glad_glFragmentMaterialiSGIX.?(arg_9683, arg_9684, arg_9685);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFragmentMaterialivSGIX.xhtml
pub inline fn glFragmentMaterialivSGIX(arg_9686: GLenum, arg_9687: GLenum, arg_9688: [*c]const GLint) void {
    return glad_glFragmentMaterialivSGIX.?(arg_9686, arg_9687, arg_9688);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFragmentLightfvSGIX.xhtml
pub inline fn glGetFragmentLightfvSGIX(arg_9689: GLenum, arg_9690: GLenum, arg_9691: [*c]GLfloat) void {
    return glad_glGetFragmentLightfvSGIX.?(arg_9689, arg_9690, arg_9691);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFragmentLightivSGIX.xhtml
pub inline fn glGetFragmentLightivSGIX(arg_9692: GLenum, arg_9693: GLenum, arg_9694: [*c]GLint) void {
    return glad_glGetFragmentLightivSGIX.?(arg_9692, arg_9693, arg_9694);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFragmentMaterialfvSGIX.xhtml
pub inline fn glGetFragmentMaterialfvSGIX(arg_9695: GLenum, arg_9696: GLenum, arg_9697: [*c]GLfloat) void {
    return glad_glGetFragmentMaterialfvSGIX.?(arg_9695, arg_9696, arg_9697);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFragmentMaterialivSGIX.xhtml
pub inline fn glGetFragmentMaterialivSGIX(arg_9698: GLenum, arg_9699: GLenum, arg_9700: [*c]GLint) void {
    return glad_glGetFragmentMaterialivSGIX.?(arg_9698, arg_9699, arg_9700);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLightEnviSGIX.xhtml
pub inline fn glLightEnviSGIX(arg_9701: GLenum, arg_9702: GLint) void {
    return glad_glLightEnviSGIX.?(arg_9701, arg_9702);
}
pub const GL_SGIX_framezoom = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFrameZoomSGIX.xhtml
pub inline fn glFrameZoomSGIX(arg_9703: GLint) void {
    return glad_glFrameZoomSGIX.?(arg_9703);
}
pub const GL_SGIX_igloo_interface = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIglooInterfaceSGIX.xhtml
pub inline fn glIglooInterfaceSGIX(arg_9704: GLenum, arg_9705: ?*const anyopaque) void {
    return glad_glIglooInterfaceSGIX.?(arg_9704, arg_9705);
}
pub const GL_SGIX_instruments = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetInstrumentsSGIX.xhtml
pub inline fn glGetInstrumentsSGIX() GLint {
    return glad_glGetInstrumentsSGIX.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glInstrumentsBufferSGIX.xhtml
pub inline fn glInstrumentsBufferSGIX(arg_9706: GLsizei, arg_9707: [*c]GLint) void {
    return glad_glInstrumentsBufferSGIX.?(arg_9706, arg_9707);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPollInstrumentsSGIX.xhtml
pub inline fn glPollInstrumentsSGIX(arg_9708: [*c]GLint) GLint {
    return glad_glPollInstrumentsSGIX.?(arg_9708);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReadInstrumentsSGIX.xhtml
pub inline fn glReadInstrumentsSGIX(arg_9709: GLint) void {
    return glad_glReadInstrumentsSGIX.?(arg_9709);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glStartInstrumentsSGIX.xhtml
pub inline fn glStartInstrumentsSGIX() void {
    return glad_glStartInstrumentsSGIX.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glStopInstrumentsSGIX.xhtml
pub inline fn glStopInstrumentsSGIX(arg_9710: GLint) void {
    return glad_glStopInstrumentsSGIX.?(arg_9710);
}
pub const GL_SGIX_interlace = 1;
pub const GL_SGIX_ir_instrument1 = 1;
pub const GL_SGIX_list_priority = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetListParameterfvSGIX.xhtml
pub inline fn glGetListParameterfvSGIX(arg_9711: GLuint, arg_9712: GLenum, arg_9713: [*c]GLfloat) void {
    return glad_glGetListParameterfvSGIX.?(arg_9711, arg_9712, arg_9713);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetListParameterivSGIX.xhtml
pub inline fn glGetListParameterivSGIX(arg_9714: GLuint, arg_9715: GLenum, arg_9716: [*c]GLint) void {
    return glad_glGetListParameterivSGIX.?(arg_9714, arg_9715, arg_9716);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glListParameterfSGIX.xhtml
pub inline fn glListParameterfSGIX(arg_9717: GLuint, arg_9718: GLenum, arg_9719: GLfloat) void {
    return glad_glListParameterfSGIX.?(arg_9717, arg_9718, arg_9719);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glListParameterfvSGIX.xhtml
pub inline fn glListParameterfvSGIX(arg_9720: GLuint, arg_9721: GLenum, arg_9722: [*c]const GLfloat) void {
    return glad_glListParameterfvSGIX.?(arg_9720, arg_9721, arg_9722);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glListParameteriSGIX.xhtml
pub inline fn glListParameteriSGIX(arg_9723: GLuint, arg_9724: GLenum, arg_9725: GLint) void {
    return glad_glListParameteriSGIX.?(arg_9723, arg_9724, arg_9725);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glListParameterivSGIX.xhtml
pub inline fn glListParameterivSGIX(arg_9726: GLuint, arg_9727: GLenum, arg_9728: [*c]const GLint) void {
    return glad_glListParameterivSGIX.?(arg_9726, arg_9727, arg_9728);
}
pub const GL_SGIX_pixel_texture = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPixelTexGenSGIX.xhtml
pub inline fn glPixelTexGenSGIX(arg_9729: GLenum) void {
    return glad_glPixelTexGenSGIX.?(arg_9729);
}
pub const GL_SGIX_pixel_tiles = 1;
pub const GL_SGIX_polynomial_ffd = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeformationMap3dSGIX.xhtml
pub inline fn glDeformationMap3dSGIX(arg_9730: GLenum, arg_9731: GLdouble, arg_9732: GLdouble, arg_9733: GLint, arg_9734: GLint, arg_9735: GLdouble, arg_9736: GLdouble, arg_9737: GLint, arg_9738: GLint, arg_9739: GLdouble, arg_9740: GLdouble, arg_9741: GLint, arg_9742: GLint, arg_9743: [*c]const GLdouble) void {
    return glad_glDeformationMap3dSGIX.?(arg_9730, arg_9731, arg_9732, arg_9733, arg_9734, arg_9735, arg_9736, arg_9737, arg_9738, arg_9739, arg_9740, arg_9741, arg_9742, arg_9743);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeformationMap3fSGIX.xhtml
pub inline fn glDeformationMap3fSGIX(arg_9744: GLenum, arg_9745: GLfloat, arg_9746: GLfloat, arg_9747: GLint, arg_9748: GLint, arg_9749: GLfloat, arg_9750: GLfloat, arg_9751: GLint, arg_9752: GLint, arg_9753: GLfloat, arg_9754: GLfloat, arg_9755: GLint, arg_9756: GLint, arg_9757: [*c]const GLfloat) void {
    return glad_glDeformationMap3fSGIX.?(arg_9744, arg_9745, arg_9746, arg_9747, arg_9748, arg_9749, arg_9750, arg_9751, arg_9752, arg_9753, arg_9754, arg_9755, arg_9756, arg_9757);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeformSGIX.xhtml
pub inline fn glDeformSGIX(arg_9758: GLbitfield) void {
    return glad_glDeformSGIX.?(arg_9758);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLoadIdentityDeformationMapSGIX.xhtml
pub inline fn glLoadIdentityDeformationMapSGIX(arg_9759: GLbitfield) void {
    return glad_glLoadIdentityDeformationMapSGIX.?(arg_9759);
}
pub const GL_SGIX_reference_plane = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReferencePlaneSGIX.xhtml
pub inline fn glReferencePlaneSGIX(arg_9760: [*c]const GLdouble) void {
    return glad_glReferencePlaneSGIX.?(arg_9760);
}
pub const GL_SGIX_resample = 1;
pub const GL_SGIX_scalebias_hint = 1;
pub const GL_SGIX_shadow = 1;
pub const GL_SGIX_shadow_ambient = 1;
pub const GL_SGIX_sprite = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSpriteParameterfSGIX.xhtml
pub inline fn glSpriteParameterfSGIX(arg_9761: GLenum, arg_9762: GLfloat) void {
    return glad_glSpriteParameterfSGIX.?(arg_9761, arg_9762);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSpriteParameterfvSGIX.xhtml
pub inline fn glSpriteParameterfvSGIX(arg_9763: GLenum, arg_9764: [*c]const GLfloat) void {
    return glad_glSpriteParameterfvSGIX.?(arg_9763, arg_9764);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSpriteParameteriSGIX.xhtml
pub inline fn glSpriteParameteriSGIX(arg_9765: GLenum, arg_9766: GLint) void {
    return glad_glSpriteParameteriSGIX.?(arg_9765, arg_9766);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSpriteParameterivSGIX.xhtml
pub inline fn glSpriteParameterivSGIX(arg_9767: GLenum, arg_9768: [*c]const GLint) void {
    return glad_glSpriteParameterivSGIX.?(arg_9767, arg_9768);
}
pub const GL_SGIX_subsample = 1;
pub const GL_SGIX_tag_sample_buffer = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTagSampleBufferSGIX.xhtml
pub inline fn glTagSampleBufferSGIX() void {
    return glad_glTagSampleBufferSGIX.?();
}
pub const GL_SGIX_texture_add_env = 1;
pub const GL_SGIX_texture_coordinate_clamp = 1;
pub const GL_SGIX_texture_lod_bias = 1;
pub const GL_SGIX_texture_multi_buffer = 1;
pub const GL_SGIX_texture_scale_bias = 1;
pub const GL_SGIX_vertex_preclip = 1;
pub const GL_SGIX_ycrcb = 1;
pub const GL_SGIX_ycrcb_subsample = 1;
pub const GL_SGIX_ycrcba = 1;
pub const GL_SGI_color_matrix = 1;
pub const GL_SGI_color_table = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorTableSGI.xhtml
pub inline fn glColorTableSGI(arg_9769: GLenum, arg_9770: GLenum, arg_9771: GLsizei, arg_9772: GLenum, arg_9773: GLenum, arg_9774: ?*const anyopaque) void {
    return glad_glColorTableSGI.?(arg_9769, arg_9770, arg_9771, arg_9772, arg_9773, arg_9774);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorTableParameterfvSGI.xhtml
pub inline fn glColorTableParameterfvSGI(arg_9775: GLenum, arg_9776: GLenum, arg_9777: [*c]const GLfloat) void {
    return glad_glColorTableParameterfvSGI.?(arg_9775, arg_9776, arg_9777);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorTableParameterivSGI.xhtml
pub inline fn glColorTableParameterivSGI(arg_9778: GLenum, arg_9779: GLenum, arg_9780: [*c]const GLint) void {
    return glad_glColorTableParameterivSGI.?(arg_9778, arg_9779, arg_9780);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyColorTableSGI.xhtml
pub inline fn glCopyColorTableSGI(arg_9781: GLenum, arg_9782: GLenum, arg_9783: GLint, arg_9784: GLint, arg_9785: GLsizei) void {
    return glad_glCopyColorTableSGI.?(arg_9781, arg_9782, arg_9783, arg_9784, arg_9785);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetColorTableSGI.xhtml
pub inline fn glGetColorTableSGI(arg_9786: GLenum, arg_9787: GLenum, arg_9788: GLenum, arg_9789: ?*anyopaque) void {
    return glad_glGetColorTableSGI.?(arg_9786, arg_9787, arg_9788, arg_9789);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetColorTableParameterfvSGI.xhtml
pub inline fn glGetColorTableParameterfvSGI(arg_9790: GLenum, arg_9791: GLenum, arg_9792: [*c]GLfloat) void {
    return glad_glGetColorTableParameterfvSGI.?(arg_9790, arg_9791, arg_9792);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetColorTableParameterivSGI.xhtml
pub inline fn glGetColorTableParameterivSGI(arg_9793: GLenum, arg_9794: GLenum, arg_9795: [*c]GLint) void {
    return glad_glGetColorTableParameterivSGI.?(arg_9793, arg_9794, arg_9795);
}
pub const GL_SGI_texture_color_table = 1;
pub const GL_SUNX_constant_data = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFinishTextureSUNX.xhtml
pub inline fn glFinishTextureSUNX() void {
    return glad_glFinishTextureSUNX.?();
}
pub const GL_SUN_convolution_border_modes = 1;
pub const GL_SUN_global_alpha = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGlobalAlphaFactorbSUN.xhtml
pub inline fn glGlobalAlphaFactorbSUN(arg_9796: GLbyte) void {
    return glad_glGlobalAlphaFactorbSUN.?(arg_9796);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGlobalAlphaFactorsSUN.xhtml
pub inline fn glGlobalAlphaFactorsSUN(arg_9797: GLshort) void {
    return glad_glGlobalAlphaFactorsSUN.?(arg_9797);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGlobalAlphaFactoriSUN.xhtml
pub inline fn glGlobalAlphaFactoriSUN(arg_9798: GLint) void {
    return glad_glGlobalAlphaFactoriSUN.?(arg_9798);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGlobalAlphaFactorfSUN.xhtml
pub inline fn glGlobalAlphaFactorfSUN(arg_9799: GLfloat) void {
    return glad_glGlobalAlphaFactorfSUN.?(arg_9799);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGlobalAlphaFactordSUN.xhtml
pub inline fn glGlobalAlphaFactordSUN(arg_9800: GLdouble) void {
    return glad_glGlobalAlphaFactordSUN.?(arg_9800);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGlobalAlphaFactorubSUN.xhtml
pub inline fn glGlobalAlphaFactorubSUN(arg_9801: GLubyte) void {
    return glad_glGlobalAlphaFactorubSUN.?(arg_9801);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGlobalAlphaFactorusSUN.xhtml
pub inline fn glGlobalAlphaFactorusSUN(arg_9802: GLushort) void {
    return glad_glGlobalAlphaFactorusSUN.?(arg_9802);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGlobalAlphaFactoruiSUN.xhtml
pub inline fn glGlobalAlphaFactoruiSUN(arg_9803: GLuint) void {
    return glad_glGlobalAlphaFactoruiSUN.?(arg_9803);
}
pub const GL_SUN_mesh_array = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawMeshArraysSUN.xhtml
pub inline fn glDrawMeshArraysSUN(arg_9804: GLenum, arg_9805: GLint, arg_9806: GLsizei, arg_9807: GLsizei) void {
    return glad_glDrawMeshArraysSUN.?(arg_9804, arg_9805, arg_9806, arg_9807);
}
pub const GL_SUN_slice_accum = 1;
pub const GL_SUN_triangle_list = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReplacementCodeuiSUN.xhtml
pub inline fn glReplacementCodeuiSUN(arg_9808: GLuint) void {
    return glad_glReplacementCodeuiSUN.?(arg_9808);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReplacementCodeusSUN.xhtml
pub inline fn glReplacementCodeusSUN(arg_9809: GLushort) void {
    return glad_glReplacementCodeusSUN.?(arg_9809);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReplacementCodeubSUN.xhtml
pub inline fn glReplacementCodeubSUN(arg_9810: GLubyte) void {
    return glad_glReplacementCodeubSUN.?(arg_9810);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReplacementCodeuivSUN.xhtml
pub inline fn glReplacementCodeuivSUN(arg_9811: [*c]const GLuint) void {
    return glad_glReplacementCodeuivSUN.?(arg_9811);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReplacementCodeusvSUN.xhtml
pub inline fn glReplacementCodeusvSUN(arg_9812: [*c]const GLushort) void {
    return glad_glReplacementCodeusvSUN.?(arg_9812);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReplacementCodeubvSUN.xhtml
pub inline fn glReplacementCodeubvSUN(arg_9813: [*c]const GLubyte) void {
    return glad_glReplacementCodeubvSUN.?(arg_9813);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReplacementCodePointerSUN.xhtml
pub inline fn glReplacementCodePointerSUN(arg_9814: GLenum, arg_9815: GLsizei, arg_9816: [*c]?*const anyopaque) void {
    return glad_glReplacementCodePointerSUN.?(arg_9814, arg_9815, arg_9816);
}
pub const GL_SUN_vertex = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColor4ubVertex2fSUN.xhtml
pub inline fn glColor4ubVertex2fSUN(arg_9817: GLubyte, arg_9818: GLubyte, arg_9819: GLubyte, arg_9820: GLubyte, arg_9821: GLfloat, arg_9822: GLfloat) void {
    return glad_glColor4ubVertex2fSUN.?(arg_9817, arg_9818, arg_9819, arg_9820, arg_9821, arg_9822);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColor4ubVertex2fvSUN.xhtml
pub inline fn glColor4ubVertex2fvSUN(arg_9823: [*c]const GLubyte, arg_9824: [*c]const GLfloat) void {
    return glad_glColor4ubVertex2fvSUN.?(arg_9823, arg_9824);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColor4ubVertex3fSUN.xhtml
pub inline fn glColor4ubVertex3fSUN(arg_9825: GLubyte, arg_9826: GLubyte, arg_9827: GLubyte, arg_9828: GLubyte, arg_9829: GLfloat, arg_9830: GLfloat, arg_9831: GLfloat) void {
    return glad_glColor4ubVertex3fSUN.?(arg_9825, arg_9826, arg_9827, arg_9828, arg_9829, arg_9830, arg_9831);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColor4ubVertex3fvSUN.xhtml
pub inline fn glColor4ubVertex3fvSUN(arg_9832: [*c]const GLubyte, arg_9833: [*c]const GLfloat) void {
    return glad_glColor4ubVertex3fvSUN.?(arg_9832, arg_9833);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColor3fVertex3fSUN.xhtml
pub inline fn glColor3fVertex3fSUN(arg_9834: GLfloat, arg_9835: GLfloat, arg_9836: GLfloat, arg_9837: GLfloat, arg_9838: GLfloat, arg_9839: GLfloat) void {
    return glad_glColor3fVertex3fSUN.?(arg_9834, arg_9835, arg_9836, arg_9837, arg_9838, arg_9839);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColor3fVertex3fvSUN.xhtml
pub inline fn glColor3fVertex3fvSUN(arg_9840: [*c]const GLfloat, arg_9841: [*c]const GLfloat) void {
    return glad_glColor3fVertex3fvSUN.?(arg_9840, arg_9841);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNormal3fVertex3fSUN.xhtml
pub inline fn glNormal3fVertex3fSUN(arg_9842: GLfloat, arg_9843: GLfloat, arg_9844: GLfloat, arg_9845: GLfloat, arg_9846: GLfloat, arg_9847: GLfloat) void {
    return glad_glNormal3fVertex3fSUN.?(arg_9842, arg_9843, arg_9844, arg_9845, arg_9846, arg_9847);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glNormal3fVertex3fvSUN.xhtml
pub inline fn glNormal3fVertex3fvSUN(arg_9848: [*c]const GLfloat, arg_9849: [*c]const GLfloat) void {
    return glad_glNormal3fVertex3fvSUN.?(arg_9848, arg_9849);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColor4fNormal3fVertex3fSUN.xhtml
pub inline fn glColor4fNormal3fVertex3fSUN(arg_9850: GLfloat, arg_9851: GLfloat, arg_9852: GLfloat, arg_9853: GLfloat, arg_9854: GLfloat, arg_9855: GLfloat, arg_9856: GLfloat, arg_9857: GLfloat, arg_9858: GLfloat, arg_9859: GLfloat) void {
    return glad_glColor4fNormal3fVertex3fSUN.?(arg_9850, arg_9851, arg_9852, arg_9853, arg_9854, arg_9855, arg_9856, arg_9857, arg_9858, arg_9859);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColor4fNormal3fVertex3fvSUN.xhtml
pub inline fn glColor4fNormal3fVertex3fvSUN(arg_9860: [*c]const GLfloat, arg_9861: [*c]const GLfloat, arg_9862: [*c]const GLfloat) void {
    return glad_glColor4fNormal3fVertex3fvSUN.?(arg_9860, arg_9861, arg_9862);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord2fVertex3fSUN.xhtml
pub inline fn glTexCoord2fVertex3fSUN(arg_9863: GLfloat, arg_9864: GLfloat, arg_9865: GLfloat, arg_9866: GLfloat, arg_9867: GLfloat) void {
    return glad_glTexCoord2fVertex3fSUN.?(arg_9863, arg_9864, arg_9865, arg_9866, arg_9867);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord2fVertex3fvSUN.xhtml
pub inline fn glTexCoord2fVertex3fvSUN(arg_9868: [*c]const GLfloat, arg_9869: [*c]const GLfloat) void {
    return glad_glTexCoord2fVertex3fvSUN.?(arg_9868, arg_9869);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord4fVertex4fSUN.xhtml
pub inline fn glTexCoord4fVertex4fSUN(arg_9870: GLfloat, arg_9871: GLfloat, arg_9872: GLfloat, arg_9873: GLfloat, arg_9874: GLfloat, arg_9875: GLfloat, arg_9876: GLfloat, arg_9877: GLfloat) void {
    return glad_glTexCoord4fVertex4fSUN.?(arg_9870, arg_9871, arg_9872, arg_9873, arg_9874, arg_9875, arg_9876, arg_9877);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord4fVertex4fvSUN.xhtml
pub inline fn glTexCoord4fVertex4fvSUN(arg_9878: [*c]const GLfloat, arg_9879: [*c]const GLfloat) void {
    return glad_glTexCoord4fVertex4fvSUN.?(arg_9878, arg_9879);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord2fColor4ubVertex3fSUN.xhtml
pub inline fn glTexCoord2fColor4ubVertex3fSUN(arg_9880: GLfloat, arg_9881: GLfloat, arg_9882: GLubyte, arg_9883: GLubyte, arg_9884: GLubyte, arg_9885: GLubyte, arg_9886: GLfloat, arg_9887: GLfloat, arg_9888: GLfloat) void {
    return glad_glTexCoord2fColor4ubVertex3fSUN.?(arg_9880, arg_9881, arg_9882, arg_9883, arg_9884, arg_9885, arg_9886, arg_9887, arg_9888);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord2fColor4ubVertex3fvSUN.xhtml
pub inline fn glTexCoord2fColor4ubVertex3fvSUN(arg_9889: [*c]const GLfloat, arg_9890: [*c]const GLubyte, arg_9891: [*c]const GLfloat) void {
    return glad_glTexCoord2fColor4ubVertex3fvSUN.?(arg_9889, arg_9890, arg_9891);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord2fColor3fVertex3fSUN.xhtml
pub inline fn glTexCoord2fColor3fVertex3fSUN(arg_9892: GLfloat, arg_9893: GLfloat, arg_9894: GLfloat, arg_9895: GLfloat, arg_9896: GLfloat, arg_9897: GLfloat, arg_9898: GLfloat, arg_9899: GLfloat) void {
    return glad_glTexCoord2fColor3fVertex3fSUN.?(arg_9892, arg_9893, arg_9894, arg_9895, arg_9896, arg_9897, arg_9898, arg_9899);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord2fColor3fVertex3fvSUN.xhtml
pub inline fn glTexCoord2fColor3fVertex3fvSUN(arg_9900: [*c]const GLfloat, arg_9901: [*c]const GLfloat, arg_9902: [*c]const GLfloat) void {
    return glad_glTexCoord2fColor3fVertex3fvSUN.?(arg_9900, arg_9901, arg_9902);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord2fNormal3fVertex3fSUN.xhtml
pub inline fn glTexCoord2fNormal3fVertex3fSUN(arg_9903: GLfloat, arg_9904: GLfloat, arg_9905: GLfloat, arg_9906: GLfloat, arg_9907: GLfloat, arg_9908: GLfloat, arg_9909: GLfloat, arg_9910: GLfloat) void {
    return glad_glTexCoord2fNormal3fVertex3fSUN.?(arg_9903, arg_9904, arg_9905, arg_9906, arg_9907, arg_9908, arg_9909, arg_9910);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord2fNormal3fVertex3fvSUN.xhtml
pub inline fn glTexCoord2fNormal3fVertex3fvSUN(arg_9911: [*c]const GLfloat, arg_9912: [*c]const GLfloat, arg_9913: [*c]const GLfloat) void {
    return glad_glTexCoord2fNormal3fVertex3fvSUN.?(arg_9911, arg_9912, arg_9913);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord2fColor4fNormal3fVertex3fSUN.xhtml
pub inline fn glTexCoord2fColor4fNormal3fVertex3fSUN(arg_9914: GLfloat, arg_9915: GLfloat, arg_9916: GLfloat, arg_9917: GLfloat, arg_9918: GLfloat, arg_9919: GLfloat, arg_9920: GLfloat, arg_9921: GLfloat, arg_9922: GLfloat, arg_9923: GLfloat, arg_9924: GLfloat, arg_9925: GLfloat) void {
    return glad_glTexCoord2fColor4fNormal3fVertex3fSUN.?(arg_9914, arg_9915, arg_9916, arg_9917, arg_9918, arg_9919, arg_9920, arg_9921, arg_9922, arg_9923, arg_9924, arg_9925);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord2fColor4fNormal3fVertex3fvSUN.xhtml
pub inline fn glTexCoord2fColor4fNormal3fVertex3fvSUN(arg_9926: [*c]const GLfloat, arg_9927: [*c]const GLfloat, arg_9928: [*c]const GLfloat, arg_9929: [*c]const GLfloat) void {
    return glad_glTexCoord2fColor4fNormal3fVertex3fvSUN.?(arg_9926, arg_9927, arg_9928, arg_9929);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord4fColor4fNormal3fVertex4fSUN.xhtml
pub inline fn glTexCoord4fColor4fNormal3fVertex4fSUN(arg_9930: GLfloat, arg_9931: GLfloat, arg_9932: GLfloat, arg_9933: GLfloat, arg_9934: GLfloat, arg_9935: GLfloat, arg_9936: GLfloat, arg_9937: GLfloat, arg_9938: GLfloat, arg_9939: GLfloat, arg_9940: GLfloat, arg_9941: GLfloat, arg_9942: GLfloat, arg_9943: GLfloat, arg_9944: GLfloat) void {
    return glad_glTexCoord4fColor4fNormal3fVertex4fSUN.?(arg_9930, arg_9931, arg_9932, arg_9933, arg_9934, arg_9935, arg_9936, arg_9937, arg_9938, arg_9939, arg_9940, arg_9941, arg_9942, arg_9943, arg_9944);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexCoord4fColor4fNormal3fVertex4fvSUN.xhtml
pub inline fn glTexCoord4fColor4fNormal3fVertex4fvSUN(arg_9945: [*c]const GLfloat, arg_9946: [*c]const GLfloat, arg_9947: [*c]const GLfloat, arg_9948: [*c]const GLfloat) void {
    return glad_glTexCoord4fColor4fNormal3fVertex4fvSUN.?(arg_9945, arg_9946, arg_9947, arg_9948);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReplacementCodeuiVertex3fSUN.xhtml
pub inline fn glReplacementCodeuiVertex3fSUN(arg_9949: GLuint, arg_9950: GLfloat, arg_9951: GLfloat, arg_9952: GLfloat) void {
    return glad_glReplacementCodeuiVertex3fSUN.?(arg_9949, arg_9950, arg_9951, arg_9952);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReplacementCodeuiVertex3fvSUN.xhtml
pub inline fn glReplacementCodeuiVertex3fvSUN(arg_9953: [*c]const GLuint, arg_9954: [*c]const GLfloat) void {
    return glad_glReplacementCodeuiVertex3fvSUN.?(arg_9953, arg_9954);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReplacementCodeuiColor4ubVertex3fSUN.xhtml
pub inline fn glReplacementCodeuiColor4ubVertex3fSUN(arg_9955: GLuint, arg_9956: GLubyte, arg_9957: GLubyte, arg_9958: GLubyte, arg_9959: GLubyte, arg_9960: GLfloat, arg_9961: GLfloat, arg_9962: GLfloat) void {
    return glad_glReplacementCodeuiColor4ubVertex3fSUN.?(arg_9955, arg_9956, arg_9957, arg_9958, arg_9959, arg_9960, arg_9961, arg_9962);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReplacementCodeuiColor4ubVertex3fvSUN.xhtml
pub inline fn glReplacementCodeuiColor4ubVertex3fvSUN(arg_9963: [*c]const GLuint, arg_9964: [*c]const GLubyte, arg_9965: [*c]const GLfloat) void {
    return glad_glReplacementCodeuiColor4ubVertex3fvSUN.?(arg_9963, arg_9964, arg_9965);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReplacementCodeuiColor3fVertex3fSUN.xhtml
pub inline fn glReplacementCodeuiColor3fVertex3fSUN(arg_9966: GLuint, arg_9967: GLfloat, arg_9968: GLfloat, arg_9969: GLfloat, arg_9970: GLfloat, arg_9971: GLfloat, arg_9972: GLfloat) void {
    return glad_glReplacementCodeuiColor3fVertex3fSUN.?(arg_9966, arg_9967, arg_9968, arg_9969, arg_9970, arg_9971, arg_9972);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReplacementCodeuiColor3fVertex3fvSUN.xhtml
pub inline fn glReplacementCodeuiColor3fVertex3fvSUN(arg_9973: [*c]const GLuint, arg_9974: [*c]const GLfloat, arg_9975: [*c]const GLfloat) void {
    return glad_glReplacementCodeuiColor3fVertex3fvSUN.?(arg_9973, arg_9974, arg_9975);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReplacementCodeuiNormal3fVertex3fSUN.xhtml
pub inline fn glReplacementCodeuiNormal3fVertex3fSUN(arg_9976: GLuint, arg_9977: GLfloat, arg_9978: GLfloat, arg_9979: GLfloat, arg_9980: GLfloat, arg_9981: GLfloat, arg_9982: GLfloat) void {
    return glad_glReplacementCodeuiNormal3fVertex3fSUN.?(arg_9976, arg_9977, arg_9978, arg_9979, arg_9980, arg_9981, arg_9982);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReplacementCodeuiNormal3fVertex3fvSUN.xhtml
pub inline fn glReplacementCodeuiNormal3fVertex3fvSUN(arg_9983: [*c]const GLuint, arg_9984: [*c]const GLfloat, arg_9985: [*c]const GLfloat) void {
    return glad_glReplacementCodeuiNormal3fVertex3fvSUN.?(arg_9983, arg_9984, arg_9985);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReplacementCodeuiColor4fNormal3fVertex3fSUN.xhtml
pub inline fn glReplacementCodeuiColor4fNormal3fVertex3fSUN(arg_9986: GLuint, arg_9987: GLfloat, arg_9988: GLfloat, arg_9989: GLfloat, arg_9990: GLfloat, arg_9991: GLfloat, arg_9992: GLfloat, arg_9993: GLfloat, arg_9994: GLfloat, arg_9995: GLfloat, arg_9996: GLfloat) void {
    return glad_glReplacementCodeuiColor4fNormal3fVertex3fSUN.?(arg_9986, arg_9987, arg_9988, arg_9989, arg_9990, arg_9991, arg_9992, arg_9993, arg_9994, arg_9995, arg_9996);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReplacementCodeuiColor4fNormal3fVertex3fvSUN.xhtml
pub inline fn glReplacementCodeuiColor4fNormal3fVertex3fvSUN(arg_9997: [*c]const GLuint, arg_9998: [*c]const GLfloat, arg_9999: [*c]const GLfloat, arg_10000: [*c]const GLfloat) void {
    return glad_glReplacementCodeuiColor4fNormal3fVertex3fvSUN.?(arg_9997, arg_9998, arg_9999, arg_10000);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReplacementCodeuiTexCoord2fVertex3fSUN.xhtml
pub inline fn glReplacementCodeuiTexCoord2fVertex3fSUN(arg_10001: GLuint, arg_10002: GLfloat, arg_10003: GLfloat, arg_10004: GLfloat, arg_10005: GLfloat, arg_10006: GLfloat) void {
    return glad_glReplacementCodeuiTexCoord2fVertex3fSUN.?(arg_10001, arg_10002, arg_10003, arg_10004, arg_10005, arg_10006);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReplacementCodeuiTexCoord2fVertex3fvSUN.xhtml
pub inline fn glReplacementCodeuiTexCoord2fVertex3fvSUN(arg_10007: [*c]const GLuint, arg_10008: [*c]const GLfloat, arg_10009: [*c]const GLfloat) void {
    return glad_glReplacementCodeuiTexCoord2fVertex3fvSUN.?(arg_10007, arg_10008, arg_10009);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN.xhtml
pub inline fn glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(arg_10010: GLuint, arg_10011: GLfloat, arg_10012: GLfloat, arg_10013: GLfloat, arg_10014: GLfloat, arg_10015: GLfloat, arg_10016: GLfloat, arg_10017: GLfloat, arg_10018: GLfloat) void {
    return glad_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN.?(arg_10010, arg_10011, arg_10012, arg_10013, arg_10014, arg_10015, arg_10016, arg_10017, arg_10018);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN.xhtml
pub inline fn glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(arg_10019: [*c]const GLuint, arg_10020: [*c]const GLfloat, arg_10021: [*c]const GLfloat, arg_10022: [*c]const GLfloat) void {
    return glad_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN.?(arg_10019, arg_10020, arg_10021, arg_10022);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN.xhtml
pub inline fn glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(arg_10023: GLuint, arg_10024: GLfloat, arg_10025: GLfloat, arg_10026: GLfloat, arg_10027: GLfloat, arg_10028: GLfloat, arg_10029: GLfloat, arg_10030: GLfloat, arg_10031: GLfloat, arg_10032: GLfloat, arg_10033: GLfloat, arg_10034: GLfloat, arg_10035: GLfloat) void {
    return glad_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN.?(arg_10023, arg_10024, arg_10025, arg_10026, arg_10027, arg_10028, arg_10029, arg_10030, arg_10031, arg_10032, arg_10033, arg_10034, arg_10035);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN.xhtml
pub inline fn glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(arg_10036: [*c]const GLuint, arg_10037: [*c]const GLfloat, arg_10038: [*c]const GLfloat, arg_10039: [*c]const GLfloat, arg_10040: [*c]const GLfloat) void {
    return glad_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN.?(arg_10036, arg_10037, arg_10038, arg_10039, arg_10040);
}
pub const GL_WIN_phong_shading = 1;
pub const GL_WIN_specular_fog = 1;
pub const GL_AMD_compressed_3DC_texture = 1;
pub const GL_AMD_compressed_ATC_texture = 1;
pub const GL_APPLE_copy_texture_levels = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyTextureLevelsAPPLE.xhtml
pub inline fn glCopyTextureLevelsAPPLE(arg_10041: GLuint, arg_10042: GLuint, arg_10043: GLint, arg_10044: GLsizei) void {
    return glad_glCopyTextureLevelsAPPLE.?(arg_10041, arg_10042, arg_10043, arg_10044);
}
pub const GL_APPLE_framebuffer_multisample = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRenderbufferStorageMultisampleAPPLE.xhtml
pub inline fn glRenderbufferStorageMultisampleAPPLE(arg_10045: GLenum, arg_10046: GLsizei, arg_10047: GLenum, arg_10048: GLsizei, arg_10049: GLsizei) void {
    return glad_glRenderbufferStorageMultisampleAPPLE.?(arg_10045, arg_10046, arg_10047, arg_10048, arg_10049);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glResolveMultisampleFramebufferAPPLE.xhtml
pub inline fn glResolveMultisampleFramebufferAPPLE() void {
    return glad_glResolveMultisampleFramebufferAPPLE.?();
}
pub const GL_APPLE_sync = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFenceSyncAPPLE.xhtml
pub inline fn glFenceSyncAPPLE(arg_10050: GLenum, arg_10051: GLbitfield) GLsync {
    return glad_glFenceSyncAPPLE.?(arg_10050, arg_10051);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsSyncAPPLE.xhtml
pub inline fn glIsSyncAPPLE(arg_10052: GLsync) GLboolean {
    return glad_glIsSyncAPPLE.?(arg_10052);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteSyncAPPLE.xhtml
pub inline fn glDeleteSyncAPPLE(arg_10053: GLsync) void {
    return glad_glDeleteSyncAPPLE.?(arg_10053);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClientWaitSyncAPPLE.xhtml
pub inline fn glClientWaitSyncAPPLE(arg_10054: GLsync, arg_10055: GLbitfield, arg_10056: GLuint64) GLenum {
    return glad_glClientWaitSyncAPPLE.?(arg_10054, arg_10055, arg_10056);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWaitSyncAPPLE.xhtml
pub inline fn glWaitSyncAPPLE(arg_10057: GLsync, arg_10058: GLbitfield, arg_10059: GLuint64) void {
    return glad_glWaitSyncAPPLE.?(arg_10057, arg_10058, arg_10059);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetInteger64vAPPLE.xhtml
pub inline fn glGetInteger64vAPPLE(arg_10060: GLenum, arg_10061: [*c]GLint64) void {
    return glad_glGetInteger64vAPPLE.?(arg_10060, arg_10061);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetSyncivAPPLE.xhtml
pub inline fn glGetSyncivAPPLE(arg_10062: GLsync, arg_10063: GLenum, arg_10064: GLsizei, arg_10065: [*c]GLsizei, arg_10066: [*c]GLint) void {
    return glad_glGetSyncivAPPLE.?(arg_10062, arg_10063, arg_10064, arg_10065, arg_10066);
}
pub const GL_APPLE_texture_2D_limited_npot = 1;
pub const GL_APPLE_texture_format_BGRA8888 = 1;
pub const GL_APPLE_texture_max_level = 1;
pub const GL_ARM_rgba8 = 1;
pub const GL_EXT_discard_framebuffer = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDiscardFramebufferEXT.xhtml
pub inline fn glDiscardFramebufferEXT(arg_10067: GLenum, arg_10068: GLsizei, arg_10069: [*c]const GLenum) void {
    return glad_glDiscardFramebufferEXT.?(arg_10067, arg_10068, arg_10069);
}
pub const GL_EXT_map_buffer_range = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMapBufferRangeEXT.xhtml
pub inline fn glMapBufferRangeEXT(arg_10070: GLenum, arg_10071: GLintptr, arg_10072: GLsizeiptr, arg_10073: GLbitfield) ?*anyopaque {
    return glad_glMapBufferRangeEXT.?(arg_10070, arg_10071, arg_10072, arg_10073);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFlushMappedBufferRangeEXT.xhtml
pub inline fn glFlushMappedBufferRangeEXT(arg_10074: GLenum, arg_10075: GLintptr, arg_10076: GLsizeiptr) void {
    return glad_glFlushMappedBufferRangeEXT.?(arg_10074, arg_10075, arg_10076);
}
pub const GL_EXT_multisampled_render_to_texture = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferTexture2DMultisampleEXT.xhtml
pub inline fn glFramebufferTexture2DMultisampleEXT(arg_10077: GLenum, arg_10078: GLenum, arg_10079: GLenum, arg_10080: GLuint, arg_10081: GLint, arg_10082: GLsizei) void {
    return glad_glFramebufferTexture2DMultisampleEXT.?(arg_10077, arg_10078, arg_10079, arg_10080, arg_10081, arg_10082);
}
pub const GL_EXT_read_format_bgra = 1;
pub const GL_EXT_robustness = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetGraphicsResetStatusEXT.xhtml
pub inline fn glGetGraphicsResetStatusEXT() GLenum {
    return glad_glGetGraphicsResetStatusEXT.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReadnPixelsEXT.xhtml
pub inline fn glReadnPixelsEXT(arg_10083: GLint, arg_10084: GLint, arg_10085: GLsizei, arg_10086: GLsizei, arg_10087: GLenum, arg_10088: GLenum, arg_10089: GLsizei, arg_10090: ?*anyopaque) void {
    return glad_glReadnPixelsEXT.?(arg_10083, arg_10084, arg_10085, arg_10086, arg_10087, arg_10088, arg_10089, arg_10090);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnUniformfvEXT.xhtml
pub inline fn glGetnUniformfvEXT(arg_10091: GLuint, arg_10092: GLint, arg_10093: GLsizei, arg_10094: [*c]GLfloat) void {
    return glad_glGetnUniformfvEXT.?(arg_10091, arg_10092, arg_10093, arg_10094);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetnUniformivEXT.xhtml
pub inline fn glGetnUniformivEXT(arg_10095: GLuint, arg_10096: GLint, arg_10097: GLsizei, arg_10098: [*c]GLint) void {
    return glad_glGetnUniformivEXT.?(arg_10095, arg_10096, arg_10097, arg_10098);
}
pub const GL_EXT_sRGB = 1;
pub const GL_EXT_texture_compression_dxt1 = 1;
pub const GL_EXT_texture_format_BGRA8888 = 1;
pub const GL_IMG_multisampled_render_to_texture = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRenderbufferStorageMultisampleIMG.xhtml
pub inline fn glRenderbufferStorageMultisampleIMG(arg_10099: GLenum, arg_10100: GLsizei, arg_10101: GLenum, arg_10102: GLsizei, arg_10103: GLsizei) void {
    return glad_glRenderbufferStorageMultisampleIMG.?(arg_10099, arg_10100, arg_10101, arg_10102, arg_10103);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferTexture2DMultisampleIMG.xhtml
pub inline fn glFramebufferTexture2DMultisampleIMG(arg_10104: GLenum, arg_10105: GLenum, arg_10106: GLenum, arg_10107: GLuint, arg_10108: GLint, arg_10109: GLsizei) void {
    return glad_glFramebufferTexture2DMultisampleIMG.?(arg_10104, arg_10105, arg_10106, arg_10107, arg_10108, arg_10109);
}
pub const GL_IMG_read_format = 1;
pub const GL_IMG_texture_compression_pvrtc = 1;
pub const GL_IMG_texture_env_enhanced_fixed_function = 1;
pub const GL_IMG_user_clip_plane = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClipPlanefIMG.xhtml
pub inline fn glClipPlanefIMG(arg_10110: GLenum, arg_10111: [*c]const GLfloat) void {
    return glad_glClipPlanefIMG.?(arg_10110, arg_10111);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClipPlanexIMG.xhtml
pub inline fn glClipPlanexIMG(arg_10112: GLenum, arg_10113: [*c]const GLfixed) void {
    return glad_glClipPlanexIMG.?(arg_10112, arg_10113);
}
pub const GL_OES_EGL_image = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEGLImageTargetTexture2DOES.xhtml
pub inline fn glEGLImageTargetTexture2DOES(arg_10114: GLenum, arg_10115: GLeglImageOES) void {
    return glad_glEGLImageTargetTexture2DOES.?(arg_10114, arg_10115);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEGLImageTargetRenderbufferStorageOES.xhtml
pub inline fn glEGLImageTargetRenderbufferStorageOES(arg_10116: GLenum, arg_10117: GLeglImageOES) void {
    return glad_glEGLImageTargetRenderbufferStorageOES.?(arg_10116, arg_10117);
}
pub const GL_OES_EGL_image_external = 1;
pub const GL_OES_blend_equation_separate = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendEquationSeparateOES.xhtml
pub inline fn glBlendEquationSeparateOES(arg_10118: GLenum, arg_10119: GLenum) void {
    return glad_glBlendEquationSeparateOES.?(arg_10118, arg_10119);
}
pub const GL_OES_blend_func_separate = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendFuncSeparateOES.xhtml
pub inline fn glBlendFuncSeparateOES(arg_10120: GLenum, arg_10121: GLenum, arg_10122: GLenum, arg_10123: GLenum) void {
    return glad_glBlendFuncSeparateOES.?(arg_10120, arg_10121, arg_10122, arg_10123);
}
pub const GL_OES_blend_subtract = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendEquationOES.xhtml
pub inline fn glBlendEquationOES(arg_10124: GLenum) void {
    return glad_glBlendEquationOES.?(arg_10124);
}
pub const GL_OES_compressed_ETC1_RGB8_sub_texture = 1;
pub const GL_OES_compressed_ETC1_RGB8_texture = 1;
pub const GL_OES_depth24 = 1;
pub const GL_OES_depth32 = 1;
pub const GL_OES_draw_texture = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawTexsOES.xhtml
pub inline fn glDrawTexsOES(arg_10125: GLshort, arg_10126: GLshort, arg_10127: GLshort, arg_10128: GLshort, arg_10129: GLshort) void {
    return glad_glDrawTexsOES.?(arg_10125, arg_10126, arg_10127, arg_10128, arg_10129);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawTexiOES.xhtml
pub inline fn glDrawTexiOES(arg_10130: GLint, arg_10131: GLint, arg_10132: GLint, arg_10133: GLint, arg_10134: GLint) void {
    return glad_glDrawTexiOES.?(arg_10130, arg_10131, arg_10132, arg_10133, arg_10134);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawTexxOES.xhtml
pub inline fn glDrawTexxOES(arg_10135: GLfixed, arg_10136: GLfixed, arg_10137: GLfixed, arg_10138: GLfixed, arg_10139: GLfixed) void {
    return glad_glDrawTexxOES.?(arg_10135, arg_10136, arg_10137, arg_10138, arg_10139);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawTexsvOES.xhtml
pub inline fn glDrawTexsvOES(arg_10140: [*c]const GLshort) void {
    return glad_glDrawTexsvOES.?(arg_10140);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawTexivOES.xhtml
pub inline fn glDrawTexivOES(arg_10141: [*c]const GLint) void {
    return glad_glDrawTexivOES.?(arg_10141);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawTexxvOES.xhtml
pub inline fn glDrawTexxvOES(arg_10142: [*c]const GLfixed) void {
    return glad_glDrawTexxvOES.?(arg_10142);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawTexfOES.xhtml
pub inline fn glDrawTexfOES(arg_10143: GLfloat, arg_10144: GLfloat, arg_10145: GLfloat, arg_10146: GLfloat, arg_10147: GLfloat) void {
    return glad_glDrawTexfOES.?(arg_10143, arg_10144, arg_10145, arg_10146, arg_10147);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawTexfvOES.xhtml
pub inline fn glDrawTexfvOES(arg_10148: [*c]const GLfloat) void {
    return glad_glDrawTexfvOES.?(arg_10148);
}
pub const GL_OES_element_index_uint = 1;
pub const GL_OES_extended_matrix_palette = 1;
pub const GL_OES_fbo_render_mipmap = 1;
pub const GL_OES_framebuffer_object = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsRenderbufferOES.xhtml
pub inline fn glIsRenderbufferOES(arg_10149: GLuint) GLboolean {
    return glad_glIsRenderbufferOES.?(arg_10149);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindRenderbufferOES.xhtml
pub inline fn glBindRenderbufferOES(arg_10150: GLenum, arg_10151: GLuint) void {
    return glad_glBindRenderbufferOES.?(arg_10150, arg_10151);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteRenderbuffersOES.xhtml
pub inline fn glDeleteRenderbuffersOES(arg_10152: GLsizei, arg_10153: [*c]const GLuint) void {
    return glad_glDeleteRenderbuffersOES.?(arg_10152, arg_10153);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenRenderbuffersOES.xhtml
pub inline fn glGenRenderbuffersOES(arg_10154: GLsizei, arg_10155: [*c]GLuint) void {
    return glad_glGenRenderbuffersOES.?(arg_10154, arg_10155);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRenderbufferStorageOES.xhtml
pub inline fn glRenderbufferStorageOES(arg_10156: GLenum, arg_10157: GLenum, arg_10158: GLsizei, arg_10159: GLsizei) void {
    return glad_glRenderbufferStorageOES.?(arg_10156, arg_10157, arg_10158, arg_10159);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetRenderbufferParameterivOES.xhtml
pub inline fn glGetRenderbufferParameterivOES(arg_10160: GLenum, arg_10161: GLenum, arg_10162: [*c]GLint) void {
    return glad_glGetRenderbufferParameterivOES.?(arg_10160, arg_10161, arg_10162);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsFramebufferOES.xhtml
pub inline fn glIsFramebufferOES(arg_10163: GLuint) GLboolean {
    return glad_glIsFramebufferOES.?(arg_10163);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindFramebufferOES.xhtml
pub inline fn glBindFramebufferOES(arg_10164: GLenum, arg_10165: GLuint) void {
    return glad_glBindFramebufferOES.?(arg_10164, arg_10165);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteFramebuffersOES.xhtml
pub inline fn glDeleteFramebuffersOES(arg_10166: GLsizei, arg_10167: [*c]const GLuint) void {
    return glad_glDeleteFramebuffersOES.?(arg_10166, arg_10167);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenFramebuffersOES.xhtml
pub inline fn glGenFramebuffersOES(arg_10168: GLsizei, arg_10169: [*c]GLuint) void {
    return glad_glGenFramebuffersOES.?(arg_10168, arg_10169);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCheckFramebufferStatusOES.xhtml
pub inline fn glCheckFramebufferStatusOES(arg_10170: GLenum) GLenum {
    return glad_glCheckFramebufferStatusOES.?(arg_10170);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferRenderbufferOES.xhtml
pub inline fn glFramebufferRenderbufferOES(arg_10171: GLenum, arg_10172: GLenum, arg_10173: GLenum, arg_10174: GLuint) void {
    return glad_glFramebufferRenderbufferOES.?(arg_10171, arg_10172, arg_10173, arg_10174);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferTexture2DOES.xhtml
pub inline fn glFramebufferTexture2DOES(arg_10175: GLenum, arg_10176: GLenum, arg_10177: GLenum, arg_10178: GLuint, arg_10179: GLint) void {
    return glad_glFramebufferTexture2DOES.?(arg_10175, arg_10176, arg_10177, arg_10178, arg_10179);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFramebufferAttachmentParameterivOES.xhtml
pub inline fn glGetFramebufferAttachmentParameterivOES(arg_10180: GLenum, arg_10181: GLenum, arg_10182: GLenum, arg_10183: [*c]GLint) void {
    return glad_glGetFramebufferAttachmentParameterivOES.?(arg_10180, arg_10181, arg_10182, arg_10183);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenerateMipmapOES.xhtml
pub inline fn glGenerateMipmapOES(arg_10184: GLenum) void {
    return glad_glGenerateMipmapOES.?(arg_10184);
}
pub const GL_OES_mapbuffer = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMapBufferOES.xhtml
pub inline fn glMapBufferOES(arg_10185: GLenum, arg_10186: GLenum) ?*anyopaque {
    return glad_glMapBufferOES.?(arg_10185, arg_10186);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUnmapBufferOES.xhtml
pub inline fn glUnmapBufferOES(arg_10187: GLenum) GLboolean {
    return glad_glUnmapBufferOES.?(arg_10187);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetBufferPointervOES.xhtml
pub inline fn glGetBufferPointervOES(arg_10188: GLenum, arg_10189: GLenum, arg_10190: [*c]?*anyopaque) void {
    return glad_glGetBufferPointervOES.?(arg_10188, arg_10189, arg_10190);
}
pub const GL_OES_matrix_get = 1;
pub const GL_OES_matrix_palette = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCurrentPaletteMatrixOES.xhtml
pub inline fn glCurrentPaletteMatrixOES(arg_10191: GLuint) void {
    return glad_glCurrentPaletteMatrixOES.?(arg_10191);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glLoadPaletteFromModelViewMatrixOES.xhtml
pub inline fn glLoadPaletteFromModelViewMatrixOES() void {
    return glad_glLoadPaletteFromModelViewMatrixOES.?();
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMatrixIndexPointerOES.xhtml
pub inline fn glMatrixIndexPointerOES(arg_10192: GLint, arg_10193: GLenum, arg_10194: GLsizei, arg_10195: ?*const anyopaque) void {
    return glad_glMatrixIndexPointerOES.?(arg_10192, arg_10193, arg_10194, arg_10195);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glWeightPointerOES.xhtml
pub inline fn glWeightPointerOES(arg_10196: GLint, arg_10197: GLenum, arg_10198: GLsizei, arg_10199: ?*const anyopaque) void {
    return glad_glWeightPointerOES.?(arg_10196, arg_10197, arg_10198, arg_10199);
}
pub const GL_OES_packed_depth_stencil = 1;
pub const GL_OES_point_size_array = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPointSizePointerOES.xhtml
pub inline fn glPointSizePointerOES(arg_10200: GLenum, arg_10201: GLsizei, arg_10202: ?*const anyopaque) void {
    return glad_glPointSizePointerOES.?(arg_10200, arg_10201, arg_10202);
}
pub const GL_OES_point_sprite = 1;
pub const GL_OES_required_internalformat = 1;
pub const GL_OES_rgb8_rgba8 = 1;
pub const GL_OES_stencil1 = 1;
pub const GL_OES_stencil4 = 1;
pub const GL_OES_stencil8 = 1;
pub const GL_OES_stencil_wrap = 1;
pub const GL_OES_surfaceless_context = 1;
pub const GL_OES_texture_cube_map = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexGenfOES.xhtml
pub inline fn glTexGenfOES(arg_10203: GLenum, arg_10204: GLenum, arg_10205: GLfloat) void {
    return glad_glTexGenfOES.?(arg_10203, arg_10204, arg_10205);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexGenfvOES.xhtml
pub inline fn glTexGenfvOES(arg_10206: GLenum, arg_10207: GLenum, arg_10208: [*c]const GLfloat) void {
    return glad_glTexGenfvOES.?(arg_10206, arg_10207, arg_10208);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexGeniOES.xhtml
pub inline fn glTexGeniOES(arg_10209: GLenum, arg_10210: GLenum, arg_10211: GLint) void {
    return glad_glTexGeniOES.?(arg_10209, arg_10210, arg_10211);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexGenivOES.xhtml
pub inline fn glTexGenivOES(arg_10212: GLenum, arg_10213: GLenum, arg_10214: [*c]const GLint) void {
    return glad_glTexGenivOES.?(arg_10212, arg_10213, arg_10214);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexGenfvOES.xhtml
pub inline fn glGetTexGenfvOES(arg_10215: GLenum, arg_10216: GLenum, arg_10217: [*c]GLfloat) void {
    return glad_glGetTexGenfvOES.?(arg_10215, arg_10216, arg_10217);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexGenivOES.xhtml
pub inline fn glGetTexGenivOES(arg_10218: GLenum, arg_10219: GLenum, arg_10220: [*c]GLint) void {
    return glad_glGetTexGenivOES.?(arg_10218, arg_10219, arg_10220);
}
pub const GL_OES_texture_env_crossbar = 1;
pub const GL_OES_texture_mirrored_repeat = 1;
pub const GL_OES_texture_npot = 1;
pub const GL_OES_vertex_array_object = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindVertexArrayOES.xhtml
pub inline fn glBindVertexArrayOES(arg_10221: GLuint) void {
    return glad_glBindVertexArrayOES.?(arg_10221);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteVertexArraysOES.xhtml
pub inline fn glDeleteVertexArraysOES(arg_10222: GLsizei, arg_10223: [*c]const GLuint) void {
    return glad_glDeleteVertexArraysOES.?(arg_10222, arg_10223);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenVertexArraysOES.xhtml
pub inline fn glGenVertexArraysOES(arg_10224: GLsizei, arg_10225: [*c]GLuint) void {
    return glad_glGenVertexArraysOES.?(arg_10224, arg_10225);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsVertexArrayOES.xhtml
pub inline fn glIsVertexArrayOES(arg_10226: GLuint) GLboolean {
    return glad_glIsVertexArrayOES.?(arg_10226);
}
pub const GL_QCOM_driver_control = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetDriverControlsQCOM.xhtml
pub inline fn glGetDriverControlsQCOM(arg_10227: [*c]GLint, arg_10228: GLsizei, arg_10229: [*c]GLuint) void {
    return glad_glGetDriverControlsQCOM.?(arg_10227, arg_10228, arg_10229);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetDriverControlStringQCOM.xhtml
pub inline fn glGetDriverControlStringQCOM(arg_10230: GLuint, arg_10231: GLsizei, arg_10232: [*c]GLsizei, arg_10233: [*c]GLchar) void {
    return glad_glGetDriverControlStringQCOM.?(arg_10230, arg_10231, arg_10232, arg_10233);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEnableDriverControlQCOM.xhtml
pub inline fn glEnableDriverControlQCOM(arg_10234: GLuint) void {
    return glad_glEnableDriverControlQCOM.?(arg_10234);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDisableDriverControlQCOM.xhtml
pub inline fn glDisableDriverControlQCOM(arg_10235: GLuint) void {
    return glad_glDisableDriverControlQCOM.?(arg_10235);
}
pub const GL_QCOM_extended_get = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glExtGetTexturesQCOM.xhtml
pub inline fn glExtGetTexturesQCOM(arg_10236: [*c]GLuint, arg_10237: GLint, arg_10238: [*c]GLint) void {
    return glad_glExtGetTexturesQCOM.?(arg_10236, arg_10237, arg_10238);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glExtGetBuffersQCOM.xhtml
pub inline fn glExtGetBuffersQCOM(arg_10239: [*c]GLuint, arg_10240: GLint, arg_10241: [*c]GLint) void {
    return glad_glExtGetBuffersQCOM.?(arg_10239, arg_10240, arg_10241);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glExtGetRenderbuffersQCOM.xhtml
pub inline fn glExtGetRenderbuffersQCOM(arg_10242: [*c]GLuint, arg_10243: GLint, arg_10244: [*c]GLint) void {
    return glad_glExtGetRenderbuffersQCOM.?(arg_10242, arg_10243, arg_10244);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glExtGetFramebuffersQCOM.xhtml
pub inline fn glExtGetFramebuffersQCOM(arg_10245: [*c]GLuint, arg_10246: GLint, arg_10247: [*c]GLint) void {
    return glad_glExtGetFramebuffersQCOM.?(arg_10245, arg_10246, arg_10247);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glExtGetTexLevelParameterivQCOM.xhtml
pub inline fn glExtGetTexLevelParameterivQCOM(arg_10248: GLuint, arg_10249: GLenum, arg_10250: GLint, arg_10251: GLenum, arg_10252: [*c]GLint) void {
    return glad_glExtGetTexLevelParameterivQCOM.?(arg_10248, arg_10249, arg_10250, arg_10251, arg_10252);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glExtTexObjectStateOverrideiQCOM.xhtml
pub inline fn glExtTexObjectStateOverrideiQCOM(arg_10253: GLenum, arg_10254: GLenum, arg_10255: GLint) void {
    return glad_glExtTexObjectStateOverrideiQCOM.?(arg_10253, arg_10254, arg_10255);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glExtGetTexSubImageQCOM.xhtml
pub inline fn glExtGetTexSubImageQCOM(arg_10256: GLenum, arg_10257: GLint, arg_10258: GLint, arg_10259: GLint, arg_10260: GLint, arg_10261: GLsizei, arg_10262: GLsizei, arg_10263: GLsizei, arg_10264: GLenum, arg_10265: GLenum, arg_10266: ?*anyopaque) void {
    return glad_glExtGetTexSubImageQCOM.?(arg_10256, arg_10257, arg_10258, arg_10259, arg_10260, arg_10261, arg_10262, arg_10263, arg_10264, arg_10265, arg_10266);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glExtGetBufferPointervQCOM.xhtml
pub inline fn glExtGetBufferPointervQCOM(arg_10267: GLenum, arg_10268: [*c]?*anyopaque) void {
    return glad_glExtGetBufferPointervQCOM.?(arg_10267, arg_10268);
}
pub const GL_QCOM_extended_get2 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glExtGetShadersQCOM.xhtml
pub inline fn glExtGetShadersQCOM(arg_10269: [*c]GLuint, arg_10270: GLint, arg_10271: [*c]GLint) void {
    return glad_glExtGetShadersQCOM.?(arg_10269, arg_10270, arg_10271);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glExtGetProgramsQCOM.xhtml
pub inline fn glExtGetProgramsQCOM(arg_10272: [*c]GLuint, arg_10273: GLint, arg_10274: [*c]GLint) void {
    return glad_glExtGetProgramsQCOM.?(arg_10272, arg_10273, arg_10274);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glExtIsProgramBinaryQCOM.xhtml
pub inline fn glExtIsProgramBinaryQCOM(arg_10275: GLuint) GLboolean {
    return glad_glExtIsProgramBinaryQCOM.?(arg_10275);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glExtGetProgramBinarySourceQCOM.xhtml
pub inline fn glExtGetProgramBinarySourceQCOM(arg_10276: GLuint, arg_10277: GLenum, arg_10278: [*c]GLchar, arg_10279: [*c]GLint) void {
    return glad_glExtGetProgramBinarySourceQCOM.?(arg_10276, arg_10277, arg_10278, arg_10279);
}
pub const GL_QCOM_perfmon_global_mode = 1;
pub const GL_QCOM_tiled_rendering = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glStartTilingQCOM.xhtml
pub inline fn glStartTilingQCOM(arg_10280: GLuint, arg_10281: GLuint, arg_10282: GLuint, arg_10283: GLuint, arg_10284: GLbitfield) void {
    return glad_glStartTilingQCOM.?(arg_10280, arg_10281, arg_10282, arg_10283, arg_10284);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEndTilingQCOM.xhtml
pub inline fn glEndTilingQCOM(arg_10285: GLbitfield) void {
    return glad_glEndTilingQCOM.?(arg_10285);
}
pub const GL_QCOM_writeonly_rendering = 1;
pub const GL_AMD_program_binary_Z400 = 1;
pub const GL_ANDROID_extension_pack_es31a = 1;
pub const GL_ANGLE_depth_texture = 1;
pub const GL_ANGLE_framebuffer_blit = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlitFramebufferANGLE.xhtml
pub inline fn glBlitFramebufferANGLE(arg_10286: GLint, arg_10287: GLint, arg_10288: GLint, arg_10289: GLint, arg_10290: GLint, arg_10291: GLint, arg_10292: GLint, arg_10293: GLint, arg_10294: GLbitfield, arg_10295: GLenum) void {
    return glad_glBlitFramebufferANGLE.?(arg_10286, arg_10287, arg_10288, arg_10289, arg_10290, arg_10291, arg_10292, arg_10293, arg_10294, arg_10295);
}
pub const GL_ANGLE_framebuffer_multisample = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRenderbufferStorageMultisampleANGLE.xhtml
pub inline fn glRenderbufferStorageMultisampleANGLE(arg_10296: GLenum, arg_10297: GLsizei, arg_10298: GLenum, arg_10299: GLsizei, arg_10300: GLsizei) void {
    return glad_glRenderbufferStorageMultisampleANGLE.?(arg_10296, arg_10297, arg_10298, arg_10299, arg_10300);
}
pub const GL_ANGLE_instanced_arrays = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawArraysInstancedANGLE.xhtml
pub inline fn glDrawArraysInstancedANGLE(arg_10301: GLenum, arg_10302: GLint, arg_10303: GLsizei, arg_10304: GLsizei) void {
    return glad_glDrawArraysInstancedANGLE.?(arg_10301, arg_10302, arg_10303, arg_10304);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawElementsInstancedANGLE.xhtml
pub inline fn glDrawElementsInstancedANGLE(arg_10305: GLenum, arg_10306: GLsizei, arg_10307: GLenum, arg_10308: ?*const anyopaque, arg_10309: GLsizei) void {
    return glad_glDrawElementsInstancedANGLE.?(arg_10305, arg_10306, arg_10307, arg_10308, arg_10309);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribDivisorANGLE.xhtml
pub inline fn glVertexAttribDivisorANGLE(arg_10310: GLuint, arg_10311: GLuint) void {
    return glad_glVertexAttribDivisorANGLE.?(arg_10310, arg_10311);
}
pub const GL_ANGLE_pack_reverse_row_order = 1;
pub const GL_ANGLE_program_binary = 1;
pub const GL_ANGLE_texture_compression_dxt3 = 1;
pub const GL_ANGLE_texture_compression_dxt5 = 1;
pub const GL_ANGLE_texture_usage = 1;
pub const GL_ANGLE_translated_shader_source = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTranslatedShaderSourceANGLE.xhtml
pub inline fn glGetTranslatedShaderSourceANGLE(arg_10312: GLuint, arg_10313: GLsizei, arg_10314: [*c]GLsizei, arg_10315: [*c]GLchar) void {
    return glad_glGetTranslatedShaderSourceANGLE.?(arg_10312, arg_10313, arg_10314, arg_10315);
}
pub const GL_APPLE_clip_distance = 1;
pub const GL_APPLE_color_buffer_packed_float = 1;
pub const GL_APPLE_texture_packed_float = 1;
pub const GL_ARM_mali_program_binary = 1;
pub const GL_ARM_mali_shader_binary = 1;
pub const GL_ARM_shader_core_properties = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMaxActiveShaderCoresARM.xhtml
pub inline fn glMaxActiveShaderCoresARM(arg_10316: GLuint) void {
    return glad_glMaxActiveShaderCoresARM.?(arg_10316);
}
pub const GL_ARM_shader_framebuffer_fetch = 1;
pub const GL_ARM_shader_framebuffer_fetch_depth_stencil = 1;
pub const GL_ARM_texture_unnormalized_coordinates = 1;
pub const GL_DMP_program_binary = 1;
pub const GL_DMP_shader_binary = 1;
pub const GL_EXT_EGL_image_array = 1;
pub const GL_EXT_EGL_image_storage_compression = 1;
pub const GL_EXT_YUV_target = 1;
pub const GL_EXT_base_instance = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawArraysInstancedBaseInstanceEXT.xhtml
pub inline fn glDrawArraysInstancedBaseInstanceEXT(arg_10317: GLenum, arg_10318: GLint, arg_10319: GLsizei, arg_10320: GLsizei, arg_10321: GLuint) void {
    return glad_glDrawArraysInstancedBaseInstanceEXT.?(arg_10317, arg_10318, arg_10319, arg_10320, arg_10321);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawElementsInstancedBaseInstanceEXT.xhtml
pub inline fn glDrawElementsInstancedBaseInstanceEXT(arg_10322: GLenum, arg_10323: GLsizei, arg_10324: GLenum, arg_10325: ?*const anyopaque, arg_10326: GLsizei, arg_10327: GLuint) void {
    return glad_glDrawElementsInstancedBaseInstanceEXT.?(arg_10322, arg_10323, arg_10324, arg_10325, arg_10326, arg_10327);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawElementsInstancedBaseVertexBaseInstanceEXT.xhtml
pub inline fn glDrawElementsInstancedBaseVertexBaseInstanceEXT(arg_10328: GLenum, arg_10329: GLsizei, arg_10330: GLenum, arg_10331: ?*const anyopaque, arg_10332: GLsizei, arg_10333: GLint, arg_10334: GLuint) void {
    return glad_glDrawElementsInstancedBaseVertexBaseInstanceEXT.?(arg_10328, arg_10329, arg_10330, arg_10331, arg_10332, arg_10333, arg_10334);
}
pub const GL_EXT_blend_func_extended = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBindFragDataLocationIndexedEXT.xhtml
pub inline fn glBindFragDataLocationIndexedEXT(arg_10335: GLuint, arg_10336: GLuint, arg_10337: GLuint, arg_10338: [*c]const GLchar) void {
    return glad_glBindFragDataLocationIndexedEXT.?(arg_10335, arg_10336, arg_10337, arg_10338);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramResourceLocationIndexEXT.xhtml
pub inline fn glGetProgramResourceLocationIndexEXT(arg_10339: GLuint, arg_10340: GLenum, arg_10341: [*c]const GLchar) GLint {
    return glad_glGetProgramResourceLocationIndexEXT.?(arg_10339, arg_10340, arg_10341);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFragDataIndexEXT.xhtml
pub inline fn glGetFragDataIndexEXT(arg_10342: GLuint, arg_10343: [*c]const GLchar) GLint {
    return glad_glGetFragDataIndexEXT.?(arg_10342, arg_10343);
}
pub const GL_EXT_buffer_storage = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBufferStorageEXT.xhtml
pub inline fn glBufferStorageEXT(arg_10344: GLenum, arg_10345: GLsizeiptr, arg_10346: ?*const anyopaque, arg_10347: GLbitfield) void {
    return glad_glBufferStorageEXT.?(arg_10344, arg_10345, arg_10346, arg_10347);
}
pub const GL_EXT_clear_texture = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearTexImageEXT.xhtml
pub inline fn glClearTexImageEXT(arg_10348: GLuint, arg_10349: GLint, arg_10350: GLenum, arg_10351: GLenum, arg_10352: ?*const anyopaque) void {
    return glad_glClearTexImageEXT.?(arg_10348, arg_10349, arg_10350, arg_10351, arg_10352);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearTexSubImageEXT.xhtml
pub inline fn glClearTexSubImageEXT(arg_10353: GLuint, arg_10354: GLint, arg_10355: GLint, arg_10356: GLint, arg_10357: GLint, arg_10358: GLsizei, arg_10359: GLsizei, arg_10360: GLsizei, arg_10361: GLenum, arg_10362: GLenum, arg_10363: ?*const anyopaque) void {
    return glad_glClearTexSubImageEXT.?(arg_10353, arg_10354, arg_10355, arg_10356, arg_10357, arg_10358, arg_10359, arg_10360, arg_10361, arg_10362, arg_10363);
}
pub const GL_EXT_clip_control = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClipControlEXT.xhtml
pub inline fn glClipControlEXT(arg_10364: GLenum, arg_10365: GLenum) void {
    return glad_glClipControlEXT.?(arg_10364, arg_10365);
}
pub const GL_EXT_clip_cull_distance = 1;
pub const GL_EXT_color_buffer_float = 1;
pub const GL_EXT_color_buffer_half_float = 1;
pub const GL_EXT_conservative_depth = 1;
pub const GL_EXT_copy_image = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyImageSubDataEXT.xhtml
pub inline fn glCopyImageSubDataEXT(arg_10366: GLuint, arg_10367: GLenum, arg_10368: GLint, arg_10369: GLint, arg_10370: GLint, arg_10371: GLint, arg_10372: GLuint, arg_10373: GLenum, arg_10374: GLint, arg_10375: GLint, arg_10376: GLint, arg_10377: GLint, arg_10378: GLsizei, arg_10379: GLsizei, arg_10380: GLsizei) void {
    return glad_glCopyImageSubDataEXT.?(arg_10366, arg_10367, arg_10368, arg_10369, arg_10370, arg_10371, arg_10372, arg_10373, arg_10374, arg_10375, arg_10376, arg_10377, arg_10378, arg_10379, arg_10380);
}
pub const GL_EXT_depth_clamp = 1;
pub const GL_EXT_disjoint_timer_query = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGenQueriesEXT.xhtml
pub inline fn glGenQueriesEXT(arg_10381: GLsizei, arg_10382: [*c]GLuint) void {
    return glad_glGenQueriesEXT.?(arg_10381, arg_10382);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDeleteQueriesEXT.xhtml
pub inline fn glDeleteQueriesEXT(arg_10383: GLsizei, arg_10384: [*c]const GLuint) void {
    return glad_glDeleteQueriesEXT.?(arg_10383, arg_10384);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsQueryEXT.xhtml
pub inline fn glIsQueryEXT(arg_10385: GLuint) GLboolean {
    return glad_glIsQueryEXT.?(arg_10385);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBeginQueryEXT.xhtml
pub inline fn glBeginQueryEXT(arg_10386: GLenum, arg_10387: GLuint) void {
    return glad_glBeginQueryEXT.?(arg_10386, arg_10387);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEndQueryEXT.xhtml
pub inline fn glEndQueryEXT(arg_10388: GLenum) void {
    return glad_glEndQueryEXT.?(arg_10388);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glQueryCounterEXT.xhtml
pub inline fn glQueryCounterEXT(arg_10389: GLuint, arg_10390: GLenum) void {
    return glad_glQueryCounterEXT.?(arg_10389, arg_10390);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetQueryivEXT.xhtml
pub inline fn glGetQueryivEXT(arg_10391: GLenum, arg_10392: GLenum, arg_10393: [*c]GLint) void {
    return glad_glGetQueryivEXT.?(arg_10391, arg_10392, arg_10393);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetQueryObjectivEXT.xhtml
pub inline fn glGetQueryObjectivEXT(arg_10394: GLuint, arg_10395: GLenum, arg_10396: [*c]GLint) void {
    return glad_glGetQueryObjectivEXT.?(arg_10394, arg_10395, arg_10396);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetQueryObjectuivEXT.xhtml
pub inline fn glGetQueryObjectuivEXT(arg_10397: GLuint, arg_10398: GLenum, arg_10399: [*c]GLuint) void {
    return glad_glGetQueryObjectuivEXT.?(arg_10397, arg_10398, arg_10399);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetInteger64vEXT.xhtml
pub inline fn glGetInteger64vEXT(arg_10400: GLenum, arg_10401: [*c]GLint64) void {
    return glad_glGetInteger64vEXT.?(arg_10400, arg_10401);
}
pub const GL_EXT_draw_buffers = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawBuffersEXT.xhtml
pub inline fn glDrawBuffersEXT(arg_10402: GLsizei, arg_10403: [*c]const GLenum) void {
    return glad_glDrawBuffersEXT.?(arg_10402, arg_10403);
}
pub const GL_EXT_draw_buffers_indexed = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEnableiEXT.xhtml
pub inline fn glEnableiEXT(arg_10404: GLenum, arg_10405: GLuint) void {
    return glad_glEnableiEXT.?(arg_10404, arg_10405);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDisableiEXT.xhtml
pub inline fn glDisableiEXT(arg_10406: GLenum, arg_10407: GLuint) void {
    return glad_glDisableiEXT.?(arg_10406, arg_10407);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendEquationiEXT.xhtml
pub inline fn glBlendEquationiEXT(arg_10408: GLuint, arg_10409: GLenum) void {
    return glad_glBlendEquationiEXT.?(arg_10408, arg_10409);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendEquationSeparateiEXT.xhtml
pub inline fn glBlendEquationSeparateiEXT(arg_10410: GLuint, arg_10411: GLenum, arg_10412: GLenum) void {
    return glad_glBlendEquationSeparateiEXT.?(arg_10410, arg_10411, arg_10412);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendFunciEXT.xhtml
pub inline fn glBlendFunciEXT(arg_10413: GLuint, arg_10414: GLenum, arg_10415: GLenum) void {
    return glad_glBlendFunciEXT.?(arg_10413, arg_10414, arg_10415);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendFuncSeparateiEXT.xhtml
pub inline fn glBlendFuncSeparateiEXT(arg_10416: GLuint, arg_10417: GLenum, arg_10418: GLenum, arg_10419: GLenum, arg_10420: GLenum) void {
    return glad_glBlendFuncSeparateiEXT.?(arg_10416, arg_10417, arg_10418, arg_10419, arg_10420);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorMaskiEXT.xhtml
pub inline fn glColorMaskiEXT(arg_10421: GLuint, arg_10422: GLboolean, arg_10423: GLboolean, arg_10424: GLboolean, arg_10425: GLboolean) void {
    return glad_glColorMaskiEXT.?(arg_10421, arg_10422, arg_10423, arg_10424, arg_10425);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsEnablediEXT.xhtml
pub inline fn glIsEnablediEXT(arg_10426: GLenum, arg_10427: GLuint) GLboolean {
    return glad_glIsEnablediEXT.?(arg_10426, arg_10427);
}
pub const GL_EXT_draw_elements_base_vertex = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawElementsBaseVertexEXT.xhtml
pub inline fn glDrawElementsBaseVertexEXT(arg_10428: GLenum, arg_10429: GLsizei, arg_10430: GLenum, arg_10431: ?*const anyopaque, arg_10432: GLint) void {
    return glad_glDrawElementsBaseVertexEXT.?(arg_10428, arg_10429, arg_10430, arg_10431, arg_10432);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawRangeElementsBaseVertexEXT.xhtml
pub inline fn glDrawRangeElementsBaseVertexEXT(arg_10433: GLenum, arg_10434: GLuint, arg_10435: GLuint, arg_10436: GLsizei, arg_10437: GLenum, arg_10438: ?*const anyopaque, arg_10439: GLint) void {
    return glad_glDrawRangeElementsBaseVertexEXT.?(arg_10433, arg_10434, arg_10435, arg_10436, arg_10437, arg_10438, arg_10439);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawElementsInstancedBaseVertexEXT.xhtml
pub inline fn glDrawElementsInstancedBaseVertexEXT(arg_10440: GLenum, arg_10441: GLsizei, arg_10442: GLenum, arg_10443: ?*const anyopaque, arg_10444: GLsizei, arg_10445: GLint) void {
    return glad_glDrawElementsInstancedBaseVertexEXT.?(arg_10440, arg_10441, arg_10442, arg_10443, arg_10444, arg_10445);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiDrawElementsBaseVertexEXT.xhtml
pub inline fn glMultiDrawElementsBaseVertexEXT(arg_10446: GLenum, arg_10447: [*c]const GLsizei, arg_10448: GLenum, arg_10449: [*c]const ?*const anyopaque, arg_10450: GLsizei, arg_10451: [*c]const GLint) void {
    return glad_glMultiDrawElementsBaseVertexEXT.?(arg_10446, arg_10447, arg_10448, arg_10449, arg_10450, arg_10451);
}
pub const GL_EXT_draw_transform_feedback = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawTransformFeedbackEXT.xhtml
pub inline fn glDrawTransformFeedbackEXT(arg_10452: GLenum, arg_10453: GLuint) void {
    return glad_glDrawTransformFeedbackEXT.?(arg_10452, arg_10453);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawTransformFeedbackInstancedEXT.xhtml
pub inline fn glDrawTransformFeedbackInstancedEXT(arg_10454: GLenum, arg_10455: GLuint, arg_10456: GLsizei) void {
    return glad_glDrawTransformFeedbackInstancedEXT.?(arg_10454, arg_10455, arg_10456);
}
pub const GL_EXT_float_blend = 1;
pub const GL_EXT_fragment_shading_rate = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFragmentShadingRatesEXT.xhtml
pub inline fn glGetFragmentShadingRatesEXT(arg_10457: GLsizei, arg_10458: GLsizei, arg_10459: [*c]GLsizei, arg_10460: [*c]GLenum) void {
    return glad_glGetFragmentShadingRatesEXT.?(arg_10457, arg_10458, arg_10459, arg_10460);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glShadingRateEXT.xhtml
pub inline fn glShadingRateEXT(arg_10461: GLenum) void {
    return glad_glShadingRateEXT.?(arg_10461);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glShadingRateCombinerOpsEXT.xhtml
pub inline fn glShadingRateCombinerOpsEXT(arg_10462: GLenum, arg_10463: GLenum) void {
    return glad_glShadingRateCombinerOpsEXT.?(arg_10462, arg_10463);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferShadingRateEXT.xhtml
pub inline fn glFramebufferShadingRateEXT(arg_10464: GLenum, arg_10465: GLenum, arg_10466: GLuint, arg_10467: GLint, arg_10468: GLsizei, arg_10469: GLsizei, arg_10470: GLsizei) void {
    return glad_glFramebufferShadingRateEXT.?(arg_10464, arg_10465, arg_10466, arg_10467, arg_10468, arg_10469, arg_10470);
}
pub const GL_EXT_geometry_point_size = 1;
pub const GL_EXT_geometry_shader = 1;
pub const GL_EXT_gpu_shader5 = 1;
pub const GL_EXT_instanced_arrays = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribDivisorEXT.xhtml
pub inline fn glVertexAttribDivisorEXT(arg_10471: GLuint, arg_10472: GLuint) void {
    return glad_glVertexAttribDivisorEXT.?(arg_10471, arg_10472);
}
pub const GL_EXT_multi_draw_indirect = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiDrawArraysIndirectEXT.xhtml
pub inline fn glMultiDrawArraysIndirectEXT(arg_10473: GLenum, arg_10474: ?*const anyopaque, arg_10475: GLsizei, arg_10476: GLsizei) void {
    return glad_glMultiDrawArraysIndirectEXT.?(arg_10473, arg_10474, arg_10475, arg_10476);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMultiDrawElementsIndirectEXT.xhtml
pub inline fn glMultiDrawElementsIndirectEXT(arg_10477: GLenum, arg_10478: GLenum, arg_10479: ?*const anyopaque, arg_10480: GLsizei, arg_10481: GLsizei) void {
    return glad_glMultiDrawElementsIndirectEXT.?(arg_10477, arg_10478, arg_10479, arg_10480, arg_10481);
}
pub const GL_EXT_multisampled_compatibility = 1;
pub const GL_EXT_multisampled_render_to_texture2 = 1;
pub const GL_EXT_multiview_draw_buffers = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReadBufferIndexedEXT.xhtml
pub inline fn glReadBufferIndexedEXT(arg_10482: GLenum, arg_10483: GLint) void {
    return glad_glReadBufferIndexedEXT.?(arg_10482, arg_10483);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawBuffersIndexedEXT.xhtml
pub inline fn glDrawBuffersIndexedEXT(arg_10484: GLint, arg_10485: [*c]const GLenum, arg_10486: [*c]const GLint) void {
    return glad_glDrawBuffersIndexedEXT.?(arg_10484, arg_10485, arg_10486);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetIntegeri_vEXT.xhtml
pub inline fn glGetIntegeri_vEXT(arg_10487: GLenum, arg_10488: GLuint, arg_10489: [*c]GLint) void {
    return glad_glGetIntegeri_vEXT.?(arg_10487, arg_10488, arg_10489);
}
pub const GL_EXT_occlusion_query_boolean = 1;
pub const GL_EXT_primitive_bounding_box = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPrimitiveBoundingBoxEXT.xhtml
pub inline fn glPrimitiveBoundingBoxEXT(arg_10490: GLfloat, arg_10491: GLfloat, arg_10492: GLfloat, arg_10493: GLfloat, arg_10494: GLfloat, arg_10495: GLfloat, arg_10496: GLfloat, arg_10497: GLfloat) void {
    return glad_glPrimitiveBoundingBoxEXT.?(arg_10490, arg_10491, arg_10492, arg_10493, arg_10494, arg_10495, arg_10496, arg_10497);
}
pub const GL_EXT_protected_textures = 1;
pub const GL_EXT_pvrtc_sRGB = 1;
pub const GL_EXT_render_snorm = 1;
pub const GL_EXT_sRGB_write_control = 1;
pub const GL_EXT_separate_depth_stencil = 1;
pub const GL_EXT_shader_group_vote = 1;
pub const GL_EXT_shader_implicit_conversions = 1;
pub const GL_EXT_shader_io_blocks = 1;
pub const GL_EXT_shader_non_constant_global_initializers = 1;
pub const GL_EXT_shader_pixel_local_storage = 1;
pub const GL_EXT_shader_pixel_local_storage2 = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferPixelLocalStorageSizeEXT.xhtml
pub inline fn glFramebufferPixelLocalStorageSizeEXT(arg_10498: GLuint, arg_10499: GLsizei) void {
    return glad_glFramebufferPixelLocalStorageSizeEXT.?(arg_10498, arg_10499);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFramebufferPixelLocalStorageSizeEXT.xhtml
pub inline fn glGetFramebufferPixelLocalStorageSizeEXT(arg_10500: GLuint) GLsizei {
    return glad_glGetFramebufferPixelLocalStorageSizeEXT.?(arg_10500);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glClearPixelLocalStorageuiEXT.xhtml
pub inline fn glClearPixelLocalStorageuiEXT(arg_10501: GLsizei, arg_10502: GLsizei, arg_10503: [*c]const GLuint) void {
    return glad_glClearPixelLocalStorageuiEXT.?(arg_10501, arg_10502, arg_10503);
}
pub const GL_EXT_shader_texture_lod = 1;
pub const GL_EXT_shadow_samplers = 1;
pub const GL_EXT_sparse_texture = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexPageCommitmentEXT.xhtml
pub inline fn glTexPageCommitmentEXT(arg_10504: GLenum, arg_10505: GLint, arg_10506: GLint, arg_10507: GLint, arg_10508: GLint, arg_10509: GLsizei, arg_10510: GLsizei, arg_10511: GLsizei, arg_10512: GLboolean) void {
    return glad_glTexPageCommitmentEXT.?(arg_10504, arg_10505, arg_10506, arg_10507, arg_10508, arg_10509, arg_10510, arg_10511, arg_10512);
}
pub const GL_EXT_tessellation_point_size = 1;
pub const GL_EXT_tessellation_shader = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPatchParameteriEXT.xhtml
pub inline fn glPatchParameteriEXT(arg_10513: GLenum, arg_10514: GLint) void {
    return glad_glPatchParameteriEXT.?(arg_10513, arg_10514);
}
pub const GL_EXT_texture_border_clamp = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSamplerParameterIivEXT.xhtml
pub inline fn glSamplerParameterIivEXT(arg_10515: GLuint, arg_10516: GLenum, arg_10517: [*c]const GLint) void {
    return glad_glSamplerParameterIivEXT.?(arg_10515, arg_10516, arg_10517);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSamplerParameterIuivEXT.xhtml
pub inline fn glSamplerParameterIuivEXT(arg_10518: GLuint, arg_10519: GLenum, arg_10520: [*c]const GLuint) void {
    return glad_glSamplerParameterIuivEXT.?(arg_10518, arg_10519, arg_10520);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetSamplerParameterIivEXT.xhtml
pub inline fn glGetSamplerParameterIivEXT(arg_10521: GLuint, arg_10522: GLenum, arg_10523: [*c]GLint) void {
    return glad_glGetSamplerParameterIivEXT.?(arg_10521, arg_10522, arg_10523);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetSamplerParameterIuivEXT.xhtml
pub inline fn glGetSamplerParameterIuivEXT(arg_10524: GLuint, arg_10525: GLenum, arg_10526: [*c]GLuint) void {
    return glad_glGetSamplerParameterIuivEXT.?(arg_10524, arg_10525, arg_10526);
}
pub const GL_EXT_texture_buffer = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexBufferRangeEXT.xhtml
pub inline fn glTexBufferRangeEXT(arg_10527: GLenum, arg_10528: GLenum, arg_10529: GLuint, arg_10530: GLintptr, arg_10531: GLsizeiptr) void {
    return glad_glTexBufferRangeEXT.?(arg_10527, arg_10528, arg_10529, arg_10530, arg_10531);
}
pub const GL_EXT_texture_compression_astc_decode_mode = 1;
pub const GL_EXT_texture_compression_bptc = 1;
pub const GL_EXT_texture_compression_s3tc_srgb = 1;
pub const GL_EXT_texture_cube_map_array = 1;
pub const GL_EXT_texture_format_sRGB_override = 1;
pub const GL_EXT_texture_mirror_clamp_to_edge = 1;
pub const GL_EXT_texture_norm16 = 1;
pub const GL_EXT_texture_query_lod = 1;
pub const GL_EXT_texture_rg = 1;
pub const GL_EXT_texture_storage_compression = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexStorageAttribs2DEXT.xhtml
pub inline fn glTexStorageAttribs2DEXT(arg_10532: GLenum, arg_10533: GLsizei, arg_10534: GLenum, arg_10535: GLsizei, arg_10536: GLsizei, arg_10537: [*c]const GLint) void {
    return glad_glTexStorageAttribs2DEXT.?(arg_10532, arg_10533, arg_10534, arg_10535, arg_10536, arg_10537);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexStorageAttribs3DEXT.xhtml
pub inline fn glTexStorageAttribs3DEXT(arg_10538: GLenum, arg_10539: GLsizei, arg_10540: GLenum, arg_10541: GLsizei, arg_10542: GLsizei, arg_10543: GLsizei, arg_10544: [*c]const GLint) void {
    return glad_glTexStorageAttribs3DEXT.?(arg_10538, arg_10539, arg_10540, arg_10541, arg_10542, arg_10543, arg_10544);
}
pub const GL_EXT_texture_type_2_10_10_10_REV = 1;
pub const GL_EXT_texture_view = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureViewEXT.xhtml
pub inline fn glTextureViewEXT(arg_10545: GLuint, arg_10546: GLenum, arg_10547: GLuint, arg_10548: GLenum, arg_10549: GLuint, arg_10550: GLuint, arg_10551: GLuint, arg_10552: GLuint) void {
    return glad_glTextureViewEXT.?(arg_10545, arg_10546, arg_10547, arg_10548, arg_10549, arg_10550, arg_10551, arg_10552);
}
pub const GL_EXT_unpack_subimage = 1;
pub const GL_FJ_shader_binary_GCCSO = 1;
pub const GL_IMG_bindless_texture = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTextureHandleIMG.xhtml
pub inline fn glGetTextureHandleIMG(arg_10553: GLuint) GLuint64 {
    return glad_glGetTextureHandleIMG.?(arg_10553);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTextureSamplerHandleIMG.xhtml
pub inline fn glGetTextureSamplerHandleIMG(arg_10554: GLuint, arg_10555: GLuint) GLuint64 {
    return glad_glGetTextureSamplerHandleIMG.?(arg_10554, arg_10555);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformHandleui64IMG.xhtml
pub inline fn glUniformHandleui64IMG(arg_10556: GLint, arg_10557: GLuint64) void {
    return glad_glUniformHandleui64IMG.?(arg_10556, arg_10557);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformHandleui64vIMG.xhtml
pub inline fn glUniformHandleui64vIMG(arg_10558: GLint, arg_10559: GLsizei, arg_10560: [*c]const GLuint64) void {
    return glad_glUniformHandleui64vIMG.?(arg_10558, arg_10559, arg_10560);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformHandleui64IMG.xhtml
pub inline fn glProgramUniformHandleui64IMG(arg_10561: GLuint, arg_10562: GLint, arg_10563: GLuint64) void {
    return glad_glProgramUniformHandleui64IMG.?(arg_10561, arg_10562, arg_10563);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramUniformHandleui64vIMG.xhtml
pub inline fn glProgramUniformHandleui64vIMG(arg_10564: GLuint, arg_10565: GLint, arg_10566: GLsizei, arg_10567: [*c]const GLuint64) void {
    return glad_glProgramUniformHandleui64vIMG.?(arg_10564, arg_10565, arg_10566, arg_10567);
}
pub const GL_IMG_framebuffer_downsample = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferTexture2DDownsampleIMG.xhtml
pub inline fn glFramebufferTexture2DDownsampleIMG(arg_10568: GLenum, arg_10569: GLenum, arg_10570: GLenum, arg_10571: GLuint, arg_10572: GLint, arg_10573: GLint, arg_10574: GLint) void {
    return glad_glFramebufferTexture2DDownsampleIMG.?(arg_10568, arg_10569, arg_10570, arg_10571, arg_10572, arg_10573, arg_10574);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferTextureLayerDownsampleIMG.xhtml
pub inline fn glFramebufferTextureLayerDownsampleIMG(arg_10575: GLenum, arg_10576: GLenum, arg_10577: GLuint, arg_10578: GLint, arg_10579: GLint, arg_10580: GLint, arg_10581: GLint) void {
    return glad_glFramebufferTextureLayerDownsampleIMG.?(arg_10575, arg_10576, arg_10577, arg_10578, arg_10579, arg_10580, arg_10581);
}
pub const GL_IMG_program_binary = 1;
pub const GL_IMG_shader_binary = 1;
pub const GL_IMG_texture_compression_pvrtc2 = 1;
pub const GL_IMG_texture_filter_cubic = 1;
pub const GL_MESA_bgra = 1;
pub const GL_MESA_sampler_objects = 1;
pub const GL_NV_copy_buffer = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyBufferSubDataNV.xhtml
pub inline fn glCopyBufferSubDataNV(arg_10582: GLenum, arg_10583: GLenum, arg_10584: GLintptr, arg_10585: GLintptr, arg_10586: GLsizeiptr) void {
    return glad_glCopyBufferSubDataNV.?(arg_10582, arg_10583, arg_10584, arg_10585, arg_10586);
}
pub const GL_NV_coverage_sample = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCoverageMaskNV.xhtml
pub inline fn glCoverageMaskNV(arg_10587: GLboolean) void {
    return glad_glCoverageMaskNV.?(arg_10587);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCoverageOperationNV.xhtml
pub inline fn glCoverageOperationNV(arg_10588: GLenum) void {
    return glad_glCoverageOperationNV.?(arg_10588);
}
pub const GL_NV_depth_nonlinear = 1;
pub const GL_NV_draw_buffers = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawBuffersNV.xhtml
pub inline fn glDrawBuffersNV(arg_10589: GLsizei, arg_10590: [*c]const GLenum) void {
    return glad_glDrawBuffersNV.?(arg_10589, arg_10590);
}
pub const GL_NV_draw_instanced = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawArraysInstancedNV.xhtml
pub inline fn glDrawArraysInstancedNV(arg_10591: GLenum, arg_10592: GLint, arg_10593: GLsizei, arg_10594: GLsizei) void {
    return glad_glDrawArraysInstancedNV.?(arg_10591, arg_10592, arg_10593, arg_10594);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawElementsInstancedNV.xhtml
pub inline fn glDrawElementsInstancedNV(arg_10595: GLenum, arg_10596: GLsizei, arg_10597: GLenum, arg_10598: ?*const anyopaque, arg_10599: GLsizei) void {
    return glad_glDrawElementsInstancedNV.?(arg_10595, arg_10596, arg_10597, arg_10598, arg_10599);
}
pub const GL_NV_explicit_attrib_location = 1;
pub const GL_NV_fbo_color_attachments = 1;
pub const GL_NV_framebuffer_blit = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlitFramebufferNV.xhtml
pub inline fn glBlitFramebufferNV(arg_10600: GLint, arg_10601: GLint, arg_10602: GLint, arg_10603: GLint, arg_10604: GLint, arg_10605: GLint, arg_10606: GLint, arg_10607: GLint, arg_10608: GLbitfield, arg_10609: GLenum) void {
    return glad_glBlitFramebufferNV.?(arg_10600, arg_10601, arg_10602, arg_10603, arg_10604, arg_10605, arg_10606, arg_10607, arg_10608, arg_10609);
}
pub const GL_NV_framebuffer_multisample = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glRenderbufferStorageMultisampleNV.xhtml
pub inline fn glRenderbufferStorageMultisampleNV(arg_10610: GLenum, arg_10611: GLsizei, arg_10612: GLenum, arg_10613: GLsizei, arg_10614: GLsizei) void {
    return glad_glRenderbufferStorageMultisampleNV.?(arg_10610, arg_10611, arg_10612, arg_10613, arg_10614);
}
pub const GL_NV_generate_mipmap_sRGB = 1;
pub const GL_NV_image_formats = 1;
pub const GL_NV_instanced_arrays = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glVertexAttribDivisorNV.xhtml
pub inline fn glVertexAttribDivisorNV(arg_10615: GLuint, arg_10616: GLuint) void {
    return glad_glVertexAttribDivisorNV.?(arg_10615, arg_10616);
}
pub const GL_NV_non_square_matrices = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix2x3fvNV.xhtml
pub inline fn glUniformMatrix2x3fvNV(arg_10617: GLint, arg_10618: GLsizei, arg_10619: GLboolean, arg_10620: [*c]const GLfloat) void {
    return glad_glUniformMatrix2x3fvNV.?(arg_10617, arg_10618, arg_10619, arg_10620);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix3x2fvNV.xhtml
pub inline fn glUniformMatrix3x2fvNV(arg_10621: GLint, arg_10622: GLsizei, arg_10623: GLboolean, arg_10624: [*c]const GLfloat) void {
    return glad_glUniformMatrix3x2fvNV.?(arg_10621, arg_10622, arg_10623, arg_10624);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix2x4fvNV.xhtml
pub inline fn glUniformMatrix2x4fvNV(arg_10625: GLint, arg_10626: GLsizei, arg_10627: GLboolean, arg_10628: [*c]const GLfloat) void {
    return glad_glUniformMatrix2x4fvNV.?(arg_10625, arg_10626, arg_10627, arg_10628);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix4x2fvNV.xhtml
pub inline fn glUniformMatrix4x2fvNV(arg_10629: GLint, arg_10630: GLsizei, arg_10631: GLboolean, arg_10632: [*c]const GLfloat) void {
    return glad_glUniformMatrix4x2fvNV.?(arg_10629, arg_10630, arg_10631, arg_10632);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix3x4fvNV.xhtml
pub inline fn glUniformMatrix3x4fvNV(arg_10633: GLint, arg_10634: GLsizei, arg_10635: GLboolean, arg_10636: [*c]const GLfloat) void {
    return glad_glUniformMatrix3x4fvNV.?(arg_10633, arg_10634, arg_10635, arg_10636);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniformMatrix4x3fvNV.xhtml
pub inline fn glUniformMatrix4x3fvNV(arg_10637: GLint, arg_10638: GLsizei, arg_10639: GLboolean, arg_10640: [*c]const GLfloat) void {
    return glad_glUniformMatrix4x3fvNV.?(arg_10637, arg_10638, arg_10639, arg_10640);
}
pub const GL_NV_pack_subimage = 1;
pub const GL_NV_pixel_buffer_object = 1;
pub const GL_NV_polygon_mode = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPolygonModeNV.xhtml
pub inline fn glPolygonModeNV(arg_10641: GLenum, arg_10642: GLenum) void {
    return glad_glPolygonModeNV.?(arg_10641, arg_10642);
}
pub const GL_NV_read_buffer = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glReadBufferNV.xhtml
pub inline fn glReadBufferNV(arg_10643: GLenum) void {
    return glad_glReadBufferNV.?(arg_10643);
}
pub const GL_NV_read_buffer_front = 1;
pub const GL_NV_read_depth = 1;
pub const GL_NV_read_depth_stencil = 1;
pub const GL_NV_read_stencil = 1;
pub const GL_NV_sRGB_formats = 1;
pub const GL_NV_shader_noperspective_interpolation = 1;
pub const GL_NV_shadow_samplers_array = 1;
pub const GL_NV_shadow_samplers_cube = 1;
pub const GL_NV_texture_border_clamp = 1;
pub const GL_NV_texture_compression_s3tc_update = 1;
pub const GL_NV_texture_npot_2D_mipmap = 1;
pub const GL_NV_viewport_array = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glViewportArrayvNV.xhtml
pub inline fn glViewportArrayvNV(arg_10644: GLuint, arg_10645: GLsizei, arg_10646: [*c]const GLfloat) void {
    return glad_glViewportArrayvNV.?(arg_10644, arg_10645, arg_10646);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glViewportIndexedfNV.xhtml
pub inline fn glViewportIndexedfNV(arg_10647: GLuint, arg_10648: GLfloat, arg_10649: GLfloat, arg_10650: GLfloat, arg_10651: GLfloat) void {
    return glad_glViewportIndexedfNV.?(arg_10647, arg_10648, arg_10649, arg_10650, arg_10651);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glViewportIndexedfvNV.xhtml
pub inline fn glViewportIndexedfvNV(arg_10652: GLuint, arg_10653: [*c]const GLfloat) void {
    return glad_glViewportIndexedfvNV.?(arg_10652, arg_10653);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glScissorArrayvNV.xhtml
pub inline fn glScissorArrayvNV(arg_10654: GLuint, arg_10655: GLsizei, arg_10656: [*c]const GLint) void {
    return glad_glScissorArrayvNV.?(arg_10654, arg_10655, arg_10656);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glScissorIndexedNV.xhtml
pub inline fn glScissorIndexedNV(arg_10657: GLuint, arg_10658: GLint, arg_10659: GLint, arg_10660: GLsizei, arg_10661: GLsizei) void {
    return glad_glScissorIndexedNV.?(arg_10657, arg_10658, arg_10659, arg_10660, arg_10661);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glScissorIndexedvNV.xhtml
pub inline fn glScissorIndexedvNV(arg_10662: GLuint, arg_10663: [*c]const GLint) void {
    return glad_glScissorIndexedvNV.?(arg_10662, arg_10663);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDepthRangeArrayfvNV.xhtml
pub inline fn glDepthRangeArrayfvNV(arg_10664: GLuint, arg_10665: GLsizei, arg_10666: [*c]const GLfloat) void {
    return glad_glDepthRangeArrayfvNV.?(arg_10664, arg_10665, arg_10666);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDepthRangeIndexedfNV.xhtml
pub inline fn glDepthRangeIndexedfNV(arg_10667: GLuint, arg_10668: GLfloat, arg_10669: GLfloat) void {
    return glad_glDepthRangeIndexedfNV.?(arg_10667, arg_10668, arg_10669);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFloati_vNV.xhtml
pub inline fn glGetFloati_vNV(arg_10670: GLenum, arg_10671: GLuint, arg_10672: [*c]GLfloat) void {
    return glad_glGetFloati_vNV.?(arg_10670, arg_10671, arg_10672);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEnableiNV.xhtml
pub inline fn glEnableiNV(arg_10673: GLenum, arg_10674: GLuint) void {
    return glad_glEnableiNV.?(arg_10673, arg_10674);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDisableiNV.xhtml
pub inline fn glDisableiNV(arg_10675: GLenum, arg_10676: GLuint) void {
    return glad_glDisableiNV.?(arg_10675, arg_10676);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsEnablediNV.xhtml
pub inline fn glIsEnablediNV(arg_10677: GLenum, arg_10678: GLuint) GLboolean {
    return glad_glIsEnablediNV.?(arg_10677, arg_10678);
}
pub const GL_OES_EGL_image_external_essl3 = 1;
pub const GL_OES_copy_image = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyImageSubDataOES.xhtml
pub inline fn glCopyImageSubDataOES(arg_10679: GLuint, arg_10680: GLenum, arg_10681: GLint, arg_10682: GLint, arg_10683: GLint, arg_10684: GLint, arg_10685: GLuint, arg_10686: GLenum, arg_10687: GLint, arg_10688: GLint, arg_10689: GLint, arg_10690: GLint, arg_10691: GLsizei, arg_10692: GLsizei, arg_10693: GLsizei) void {
    return glad_glCopyImageSubDataOES.?(arg_10679, arg_10680, arg_10681, arg_10682, arg_10683, arg_10684, arg_10685, arg_10686, arg_10687, arg_10688, arg_10689, arg_10690, arg_10691, arg_10692, arg_10693);
}
pub const GL_OES_depth_texture = 1;
pub const GL_OES_draw_buffers_indexed = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glEnableiOES.xhtml
pub inline fn glEnableiOES(arg_10694: GLenum, arg_10695: GLuint) void {
    return glad_glEnableiOES.?(arg_10694, arg_10695);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDisableiOES.xhtml
pub inline fn glDisableiOES(arg_10696: GLenum, arg_10697: GLuint) void {
    return glad_glDisableiOES.?(arg_10696, arg_10697);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendEquationiOES.xhtml
pub inline fn glBlendEquationiOES(arg_10698: GLuint, arg_10699: GLenum) void {
    return glad_glBlendEquationiOES.?(arg_10698, arg_10699);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendEquationSeparateiOES.xhtml
pub inline fn glBlendEquationSeparateiOES(arg_10700: GLuint, arg_10701: GLenum, arg_10702: GLenum) void {
    return glad_glBlendEquationSeparateiOES.?(arg_10700, arg_10701, arg_10702);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendFunciOES.xhtml
pub inline fn glBlendFunciOES(arg_10703: GLuint, arg_10704: GLenum, arg_10705: GLenum) void {
    return glad_glBlendFunciOES.?(arg_10703, arg_10704, arg_10705);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBlendFuncSeparateiOES.xhtml
pub inline fn glBlendFuncSeparateiOES(arg_10706: GLuint, arg_10707: GLenum, arg_10708: GLenum, arg_10709: GLenum, arg_10710: GLenum) void {
    return glad_glBlendFuncSeparateiOES.?(arg_10706, arg_10707, arg_10708, arg_10709, arg_10710);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glColorMaskiOES.xhtml
pub inline fn glColorMaskiOES(arg_10711: GLuint, arg_10712: GLboolean, arg_10713: GLboolean, arg_10714: GLboolean, arg_10715: GLboolean) void {
    return glad_glColorMaskiOES.?(arg_10711, arg_10712, arg_10713, arg_10714, arg_10715);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glIsEnablediOES.xhtml
pub inline fn glIsEnablediOES(arg_10716: GLenum, arg_10717: GLuint) GLboolean {
    return glad_glIsEnablediOES.?(arg_10716, arg_10717);
}
pub const GL_OES_draw_elements_base_vertex = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawElementsBaseVertexOES.xhtml
pub inline fn glDrawElementsBaseVertexOES(arg_10718: GLenum, arg_10719: GLsizei, arg_10720: GLenum, arg_10721: ?*const anyopaque, arg_10722: GLint) void {
    return glad_glDrawElementsBaseVertexOES.?(arg_10718, arg_10719, arg_10720, arg_10721, arg_10722);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawRangeElementsBaseVertexOES.xhtml
pub inline fn glDrawRangeElementsBaseVertexOES(arg_10723: GLenum, arg_10724: GLuint, arg_10725: GLuint, arg_10726: GLsizei, arg_10727: GLenum, arg_10728: ?*const anyopaque, arg_10729: GLint) void {
    return glad_glDrawRangeElementsBaseVertexOES.?(arg_10723, arg_10724, arg_10725, arg_10726, arg_10727, arg_10728, arg_10729);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDrawElementsInstancedBaseVertexOES.xhtml
pub inline fn glDrawElementsInstancedBaseVertexOES(arg_10730: GLenum, arg_10731: GLsizei, arg_10732: GLenum, arg_10733: ?*const anyopaque, arg_10734: GLsizei, arg_10735: GLint) void {
    return glad_glDrawElementsInstancedBaseVertexOES.?(arg_10730, arg_10731, arg_10732, arg_10733, arg_10734, arg_10735);
}
pub const GL_OES_fragment_precision_high = 1;
pub const GL_OES_geometry_point_size = 1;
pub const GL_OES_geometry_shader = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferTextureOES.xhtml
pub inline fn glFramebufferTextureOES(arg_10736: GLenum, arg_10737: GLenum, arg_10738: GLuint, arg_10739: GLint) void {
    return glad_glFramebufferTextureOES.?(arg_10736, arg_10737, arg_10738, arg_10739);
}
pub const GL_OES_get_program_binary = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetProgramBinaryOES.xhtml
pub inline fn glGetProgramBinaryOES(arg_10740: GLuint, arg_10741: GLsizei, arg_10742: [*c]GLsizei, arg_10743: [*c]GLenum, arg_10744: ?*anyopaque) void {
    return glad_glGetProgramBinaryOES.?(arg_10740, arg_10741, arg_10742, arg_10743, arg_10744);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glProgramBinaryOES.xhtml
pub inline fn glProgramBinaryOES(arg_10745: GLuint, arg_10746: GLenum, arg_10747: ?*const anyopaque, arg_10748: GLint) void {
    return glad_glProgramBinaryOES.?(arg_10745, arg_10746, arg_10747, arg_10748);
}
pub const GL_OES_gpu_shader5 = 1;
pub const GL_OES_primitive_bounding_box = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPrimitiveBoundingBoxOES.xhtml
pub inline fn glPrimitiveBoundingBoxOES(arg_10749: GLfloat, arg_10750: GLfloat, arg_10751: GLfloat, arg_10752: GLfloat, arg_10753: GLfloat, arg_10754: GLfloat, arg_10755: GLfloat, arg_10756: GLfloat) void {
    return glad_glPrimitiveBoundingBoxOES.?(arg_10749, arg_10750, arg_10751, arg_10752, arg_10753, arg_10754, arg_10755, arg_10756);
}
pub const GL_OES_sample_shading = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glMinSampleShadingOES.xhtml
pub inline fn glMinSampleShadingOES(arg_10757: GLfloat) void {
    return glad_glMinSampleShadingOES.?(arg_10757);
}
pub const GL_OES_sample_variables = 1;
pub const GL_OES_shader_image_atomic = 1;
pub const GL_OES_shader_io_blocks = 1;
pub const GL_OES_shader_multisample_interpolation = 1;
pub const GL_OES_standard_derivatives = 1;
pub const GL_OES_tessellation_point_size = 1;
pub const GL_OES_tessellation_shader = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glPatchParameteriOES.xhtml
pub inline fn glPatchParameteriOES(arg_10758: GLenum, arg_10759: GLint) void {
    return glad_glPatchParameteriOES.?(arg_10758, arg_10759);
}
pub const GL_OES_texture_3D = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexImage3DOES.xhtml
pub inline fn glTexImage3DOES(arg_10760: GLenum, arg_10761: GLint, arg_10762: GLenum, arg_10763: GLsizei, arg_10764: GLsizei, arg_10765: GLsizei, arg_10766: GLint, arg_10767: GLenum, arg_10768: GLenum, arg_10769: ?*const anyopaque) void {
    return glad_glTexImage3DOES.?(arg_10760, arg_10761, arg_10762, arg_10763, arg_10764, arg_10765, arg_10766, arg_10767, arg_10768, arg_10769);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexSubImage3DOES.xhtml
pub inline fn glTexSubImage3DOES(arg_10770: GLenum, arg_10771: GLint, arg_10772: GLint, arg_10773: GLint, arg_10774: GLint, arg_10775: GLsizei, arg_10776: GLsizei, arg_10777: GLsizei, arg_10778: GLenum, arg_10779: GLenum, arg_10780: ?*const anyopaque) void {
    return glad_glTexSubImage3DOES.?(arg_10770, arg_10771, arg_10772, arg_10773, arg_10774, arg_10775, arg_10776, arg_10777, arg_10778, arg_10779, arg_10780);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCopyTexSubImage3DOES.xhtml
pub inline fn glCopyTexSubImage3DOES(arg_10781: GLenum, arg_10782: GLint, arg_10783: GLint, arg_10784: GLint, arg_10785: GLint, arg_10786: GLint, arg_10787: GLint, arg_10788: GLsizei, arg_10789: GLsizei) void {
    return glad_glCopyTexSubImage3DOES.?(arg_10781, arg_10782, arg_10783, arg_10784, arg_10785, arg_10786, arg_10787, arg_10788, arg_10789);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedTexImage3DOES.xhtml
pub inline fn glCompressedTexImage3DOES(arg_10790: GLenum, arg_10791: GLint, arg_10792: GLenum, arg_10793: GLsizei, arg_10794: GLsizei, arg_10795: GLsizei, arg_10796: GLint, arg_10797: GLsizei, arg_10798: ?*const anyopaque) void {
    return glad_glCompressedTexImage3DOES.?(arg_10790, arg_10791, arg_10792, arg_10793, arg_10794, arg_10795, arg_10796, arg_10797, arg_10798);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glCompressedTexSubImage3DOES.xhtml
pub inline fn glCompressedTexSubImage3DOES(arg_10799: GLenum, arg_10800: GLint, arg_10801: GLint, arg_10802: GLint, arg_10803: GLint, arg_10804: GLsizei, arg_10805: GLsizei, arg_10806: GLsizei, arg_10807: GLenum, arg_10808: GLsizei, arg_10809: ?*const anyopaque) void {
    return glad_glCompressedTexSubImage3DOES.?(arg_10799, arg_10800, arg_10801, arg_10802, arg_10803, arg_10804, arg_10805, arg_10806, arg_10807, arg_10808, arg_10809);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferTexture3DOES.xhtml
pub inline fn glFramebufferTexture3DOES(arg_10810: GLenum, arg_10811: GLenum, arg_10812: GLenum, arg_10813: GLuint, arg_10814: GLint, arg_10815: GLint) void {
    return glad_glFramebufferTexture3DOES.?(arg_10810, arg_10811, arg_10812, arg_10813, arg_10814, arg_10815);
}
pub const GL_OES_texture_border_clamp = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexParameterIivOES.xhtml
pub inline fn glTexParameterIivOES(arg_10816: GLenum, arg_10817: GLenum, arg_10818: [*c]const GLint) void {
    return glad_glTexParameterIivOES.?(arg_10816, arg_10817, arg_10818);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexParameterIuivOES.xhtml
pub inline fn glTexParameterIuivOES(arg_10819: GLenum, arg_10820: GLenum, arg_10821: [*c]const GLuint) void {
    return glad_glTexParameterIuivOES.?(arg_10819, arg_10820, arg_10821);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexParameterIivOES.xhtml
pub inline fn glGetTexParameterIivOES(arg_10822: GLenum, arg_10823: GLenum, arg_10824: [*c]GLint) void {
    return glad_glGetTexParameterIivOES.?(arg_10822, arg_10823, arg_10824);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetTexParameterIuivOES.xhtml
pub inline fn glGetTexParameterIuivOES(arg_10825: GLenum, arg_10826: GLenum, arg_10827: [*c]GLuint) void {
    return glad_glGetTexParameterIuivOES.?(arg_10825, arg_10826, arg_10827);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSamplerParameterIivOES.xhtml
pub inline fn glSamplerParameterIivOES(arg_10828: GLuint, arg_10829: GLenum, arg_10830: [*c]const GLint) void {
    return glad_glSamplerParameterIivOES.?(arg_10828, arg_10829, arg_10830);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glSamplerParameterIuivOES.xhtml
pub inline fn glSamplerParameterIuivOES(arg_10831: GLuint, arg_10832: GLenum, arg_10833: [*c]const GLuint) void {
    return glad_glSamplerParameterIuivOES.?(arg_10831, arg_10832, arg_10833);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetSamplerParameterIivOES.xhtml
pub inline fn glGetSamplerParameterIivOES(arg_10834: GLuint, arg_10835: GLenum, arg_10836: [*c]GLint) void {
    return glad_glGetSamplerParameterIivOES.?(arg_10834, arg_10835, arg_10836);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetSamplerParameterIuivOES.xhtml
pub inline fn glGetSamplerParameterIuivOES(arg_10837: GLuint, arg_10838: GLenum, arg_10839: [*c]GLuint) void {
    return glad_glGetSamplerParameterIuivOES.?(arg_10837, arg_10838, arg_10839);
}
pub const GL_OES_texture_buffer = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexBufferOES.xhtml
pub inline fn glTexBufferOES(arg_10840: GLenum, arg_10841: GLenum, arg_10842: GLuint) void {
    return glad_glTexBufferOES.?(arg_10840, arg_10841, arg_10842);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexBufferRangeOES.xhtml
pub inline fn glTexBufferRangeOES(arg_10843: GLenum, arg_10844: GLenum, arg_10845: GLuint, arg_10846: GLintptr, arg_10847: GLsizeiptr) void {
    return glad_glTexBufferRangeOES.?(arg_10843, arg_10844, arg_10845, arg_10846, arg_10847);
}
pub const GL_OES_texture_compression_astc = 1;
pub const GL_OES_texture_cube_map_array = 1;
pub const GL_OES_texture_float = 1;
pub const GL_OES_texture_float_linear = 1;
pub const GL_OES_texture_half_float = 1;
pub const GL_OES_texture_half_float_linear = 1;
pub const GL_OES_texture_stencil8 = 1;
pub const GL_OES_texture_storage_multisample_2d_array = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexStorage3DMultisampleOES.xhtml
pub inline fn glTexStorage3DMultisampleOES(arg_10848: GLenum, arg_10849: GLsizei, arg_10850: GLenum, arg_10851: GLsizei, arg_10852: GLsizei, arg_10853: GLsizei, arg_10854: GLboolean) void {
    return glad_glTexStorage3DMultisampleOES.?(arg_10848, arg_10849, arg_10850, arg_10851, arg_10852, arg_10853, arg_10854);
}
pub const GL_OES_texture_view = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTextureViewOES.xhtml
pub inline fn glTextureViewOES(arg_10855: GLuint, arg_10856: GLenum, arg_10857: GLuint, arg_10858: GLenum, arg_10859: GLuint, arg_10860: GLuint, arg_10861: GLuint, arg_10862: GLuint) void {
    return glad_glTextureViewOES.?(arg_10855, arg_10856, arg_10857, arg_10858, arg_10859, arg_10860, arg_10861, arg_10862);
}
pub const GL_OES_vertex_half_float = 1;
pub const GL_OES_vertex_type_10_10_10_2 = 1;
pub const GL_OES_viewport_array = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glViewportArrayvOES.xhtml
pub inline fn glViewportArrayvOES(arg_10863: GLuint, arg_10864: GLsizei, arg_10865: [*c]const GLfloat) void {
    return glad_glViewportArrayvOES.?(arg_10863, arg_10864, arg_10865);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glViewportIndexedfOES.xhtml
pub inline fn glViewportIndexedfOES(arg_10866: GLuint, arg_10867: GLfloat, arg_10868: GLfloat, arg_10869: GLfloat, arg_10870: GLfloat) void {
    return glad_glViewportIndexedfOES.?(arg_10866, arg_10867, arg_10868, arg_10869, arg_10870);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glViewportIndexedfvOES.xhtml
pub inline fn glViewportIndexedfvOES(arg_10871: GLuint, arg_10872: [*c]const GLfloat) void {
    return glad_glViewportIndexedfvOES.?(arg_10871, arg_10872);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glScissorArrayvOES.xhtml
pub inline fn glScissorArrayvOES(arg_10873: GLuint, arg_10874: GLsizei, arg_10875: [*c]const GLint) void {
    return glad_glScissorArrayvOES.?(arg_10873, arg_10874, arg_10875);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glScissorIndexedOES.xhtml
pub inline fn glScissorIndexedOES(arg_10876: GLuint, arg_10877: GLint, arg_10878: GLint, arg_10879: GLsizei, arg_10880: GLsizei) void {
    return glad_glScissorIndexedOES.?(arg_10876, arg_10877, arg_10878, arg_10879, arg_10880);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glScissorIndexedvOES.xhtml
pub inline fn glScissorIndexedvOES(arg_10881: GLuint, arg_10882: [*c]const GLint) void {
    return glad_glScissorIndexedvOES.?(arg_10881, arg_10882);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDepthRangeArrayfvOES.xhtml
pub inline fn glDepthRangeArrayfvOES(arg_10883: GLuint, arg_10884: GLsizei, arg_10885: [*c]const GLfloat) void {
    return glad_glDepthRangeArrayfvOES.?(arg_10883, arg_10884, arg_10885);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glDepthRangeIndexedfOES.xhtml
pub inline fn glDepthRangeIndexedfOES(arg_10886: GLuint, arg_10887: GLfloat, arg_10888: GLfloat) void {
    return glad_glDepthRangeIndexedfOES.?(arg_10886, arg_10887, arg_10888);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glGetFloati_vOES.xhtml
pub inline fn glGetFloati_vOES(arg_10889: GLenum, arg_10890: GLuint, arg_10891: [*c]GLfloat) void {
    return glad_glGetFloati_vOES.?(arg_10889, arg_10890, arg_10891);
}
pub const GL_OVR_multiview_multisampled_render_to_texture = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferTextureMultisampleMultiviewOVR.xhtml
pub inline fn glFramebufferTextureMultisampleMultiviewOVR(arg_10892: GLenum, arg_10893: GLenum, arg_10894: GLuint, arg_10895: GLint, arg_10896: GLsizei, arg_10897: GLint, arg_10898: GLsizei) void {
    return glad_glFramebufferTextureMultisampleMultiviewOVR.?(arg_10892, arg_10893, arg_10894, arg_10895, arg_10896, arg_10897, arg_10898);
}
pub const GL_QCOM_YUV_texture_gather = 1;
pub const GL_QCOM_alpha_test = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glAlphaFuncQCOM.xhtml
pub inline fn glAlphaFuncQCOM(arg_10899: GLenum, arg_10900: GLclampf) void {
    return glad_glAlphaFuncQCOM.?(arg_10899, arg_10900);
}
pub const GL_QCOM_binning_control = 1;
pub const GL_QCOM_frame_extrapolation = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glExtrapolateTex2DQCOM.xhtml
pub inline fn glExtrapolateTex2DQCOM(arg_10901: GLuint, arg_10902: GLuint, arg_10903: GLuint, arg_10904: GLfloat) void {
    return glad_glExtrapolateTex2DQCOM.?(arg_10901, arg_10902, arg_10903, arg_10904);
}
pub const GL_QCOM_framebuffer_foveated = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferFoveationConfigQCOM.xhtml
pub inline fn glFramebufferFoveationConfigQCOM(arg_10905: GLuint, arg_10906: GLuint, arg_10907: GLuint, arg_10908: GLuint, arg_10909: [*c]GLuint) void {
    return glad_glFramebufferFoveationConfigQCOM.?(arg_10905, arg_10906, arg_10907, arg_10908, arg_10909);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferFoveationParametersQCOM.xhtml
pub inline fn glFramebufferFoveationParametersQCOM(arg_10910: GLuint, arg_10911: GLuint, arg_10912: GLuint, arg_10913: GLfloat, arg_10914: GLfloat, arg_10915: GLfloat, arg_10916: GLfloat, arg_10917: GLfloat) void {
    return glad_glFramebufferFoveationParametersQCOM.?(arg_10910, arg_10911, arg_10912, arg_10913, arg_10914, arg_10915, arg_10916, arg_10917);
}
pub const GL_QCOM_motion_estimation = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexEstimateMotionQCOM.xhtml
pub inline fn glTexEstimateMotionQCOM(arg_10918: GLuint, arg_10919: GLuint, arg_10920: GLuint) void {
    return glad_glTexEstimateMotionQCOM.?(arg_10918, arg_10919, arg_10920);
}
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glTexEstimateMotionRegionsQCOM.xhtml
pub inline fn glTexEstimateMotionRegionsQCOM(arg_10921: GLuint, arg_10922: GLuint, arg_10923: GLuint, arg_10924: GLuint) void {
    return glad_glTexEstimateMotionRegionsQCOM.?(arg_10921, arg_10922, arg_10923, arg_10924);
}
pub const GL_QCOM_render_sRGB_R8_RG8 = 1;
pub const GL_QCOM_render_shared_exponent = 1;
pub const GL_QCOM_shader_framebuffer_fetch_noncoherent = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glFramebufferFetchBarrierQCOM.xhtml
pub inline fn glFramebufferFetchBarrierQCOM() void {
    return glad_glFramebufferFetchBarrierQCOM.?();
}
pub const GL_QCOM_shader_framebuffer_fetch_rate = 1;
pub const GL_QCOM_shading_rate = 1;
/// https://registry.khronos.org/OpenGL-Refpages/gl4/html/glShadingRateQCOM.xhtml
pub inline fn glShadingRateQCOM(arg_10925: GLenum) void {
    return glad_glShadingRateQCOM.?(arg_10925);
}
pub const GL_QCOM_texture_foveated = 1;
/// https://registry.khronos.org/OpenGL/extensions/QCOM/QCOM_texture_foveated.txt
pub inline fn glTextureFoveationParametersQCOM(arg_10926: GLuint, arg_10927: GLuint, arg_10928: GLuint, arg_10929: GLfloat, arg_10930: GLfloat, arg_10931: GLfloat, arg_10932: GLfloat, arg_10933: GLfloat) void {
    return glad_glTextureFoveationParametersQCOM.?(arg_10926, arg_10927, arg_10928, arg_10929, arg_10930, arg_10931, arg_10932, arg_10933);
}
pub const GL_QCOM_texture_foveated2 = 1;
pub const GL_QCOM_texture_foveated_subsampled_layout = 1;
pub const GL_QCOM_texture_lod_bias = 1;
pub const GL_VIV_shader_binary = 1;
pub const GL_IMG_pvric_end_to_end_signature = 1;
pub const GL_IMG_tile_region_protection = 1;

comptime {
    @import("std").testing.refAllDecls(@This());
}